{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap 8bcdd317b0b69fa9a856","webpack:///./src/atom/main.js","webpack:///external \"atom\"","webpack:///external \"atom-package-deps\"","webpack:///./src/atom/console/index.js","webpack:///./src/atom/popular-apis/popular-apis.js","webpack:///./src/atom/editor-tools/editor-tools.js","webpack:///./src/atom/quick-commands/quick-commands.js","webpack:///./src/atom/suggestion/provider.js","webpack:///./src/atom/quick-outline/quick-outline.js","webpack:///./src/atom/dialogs/assist-utils.js","webpack:///./src/atom/core/linter-ui.js","webpack:///./src/atom/quick-commands/command-manager.js","webpack:///./src/atom/context-menu/contextMenu.js","webpack:///./src/atom/context-menu/commonContextActions.js","webpack:///./src/atom/context-menu/quickFix.js","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"atom-ui-lib\"","webpack:///external \"child_process\"","webpack:///external \"xmlhttprequest\"","webpack:///external \"mkdirp\"","webpack:///external \"url\"","webpack:///external \"raml-1-parser\"","webpack:///external \"underscore\"","webpack:///external \"raml-suggestions\"","webpack:///external \"atom-space-pen-views\"","webpack:///external \"raml-1-parser/dist/index\"","webpack:///external \"basarat-text-buffer\"","webpack:///./src/atom/util/ScrollViewUI.js","webpack:///./src/atom/core/atomWrapper.js","webpack:///./src/atom/quick-commands/quick-commands-ui.js","webpack:///./src/atom/context-menu/contextActions.js","webpack:///./src/atom/quick-commands/code-commands.js","webpack:///./src/atom/editor-tools/outline-view.js","webpack:///./src/atom/core/tooltip-manager.js","webpack:///./src/atom/dialogs/moveElementsDialog.js","webpack:///./src/atom/core/editorManager.js","webpack:///./src/atom/editor-tools/details-view.js","webpack:///./src/atom/console/console-view.js","webpack:///./src/util/xmlutil.js","webpack:///./src/atom/dialogs/extractElementsDialog.js","webpack:///./src/util/schemaGenerator.js","webpack:///external \"emissary\"","webpack:///./src/atom/dialogs/dialogs.js","webpack:///external \"react\"","webpack:///external \"xtend\"","webpack:///external \"popsicle\"","webpack:///external \"yaml-ast-parser\"","webpack:///external \"xmldom\"","webpack:///./src/util/config/apiList.json","webpack:///./src/atom/editor-tools/details.js","webpack:///./src/atom/editor-tools/schemaUI.js","webpack:///./src/util/pathwatcherProxy.js","webpack:///./src/atom/util/atom.js","webpack:///./src/atom/console/render.js","webpack:///./src/util/index.js","webpack:///external \"know-your-http-well\"","webpack:///external \"remote\"","webpack:///external \"jsonix\"","webpack:///external \"w3c-schemas\"","webpack:///external \"mime\"","webpack:///./src/atom/editor-tools/details2.js","webpack:///./src/util/pair.js","webpack:///./src/Opt.js","webpack:///external \"marked\"","webpack:///external \"classnames\"","webpack:///external \"react-pure-render/component\"","webpack:///external \"pretty-data\"","webpack:///external \"invariant\"","webpack:///./src/atom/editor-tools/suggestions-panel.js","webpack:///./src/atom/editor-tools/typeDisplay.js","webpack:///./src/atom/editor-tools/default-values.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","package_entry_point","Console","apiList","editorTools","quickCommands","provider","quickOutline","decl","linterUI","CompositeDisposable","commandManager","contextMenu","commonContextActions","quickFixActions","activate","state","install","then","subscriptions","add","atom","commands","api-workbench:popular-apis","showPopularApis","api-workbench:editor-tools","initEditorTools","api-workbench:console","toggle","api-workbench:go-to-definition","gotoDeclaration","api-workbench:find-usages","findUsages","api-workbench:quick-outline","show","api-workbench:quick-commands","showCommands","api-workbench:rename","renameRAMLElement","api-workbench:new-project","newProject","api-workbench:select-node","select","workspace","addOpener","opener","initialize","registerCommands","getProvider","provideLinter","consumeLinter","linterApi","initEditorObservers","deactivate","dispose","config","grammars","type","default","openConsoleInSplitPane","require","createConsoleView","opts","ConsoleView","RAMLConsoleView","isConsoleView","obj","getActivePaneItem","destroyActivePaneItem","editor","getActiveTextEditor","notifications","addInfo","get","indexOf","getGrammar","scopeName","removeConsoleForEditor","addConsoleForEditor","uri","getUriForEditor","previewPane","paneForURI","destroyItem","itemForURI","open","addConsoleForFile","filename","getUriForFilename","result","url","parse","protocol","host","pathname","err","decodeURI","substr","editorId","shouldSplit","getWorkspaceOptions","activatePane","searchAllPanes","split","undefined","openView","raml","pane","getActivePane","item","findOrCreateRightmostSibling","itemOpened","activateItem","Promise","resolve","workspaceOptions","view","setState","deserializers","name","deserialize","buildXHR","x","XMLHttpRequestConstructor","execProcess","logEnabled","console","log","messageBefore","logObj","childProcess","execSync","callPath","cwd","wrkDir","encoding","stdio","messageAfter","toString","trim","length","maxLogLength","substring","Math","min","onError","errLogEnabled","messageError","message","gitInstalled","errorOccured","ExecConfig","fileDialogUtils","getHome","info","callBack","section","UI","Icon","BOOK","buttonBar","hc","setPercentWidth","setStyle","addChild","label","okButton","button","ButtonSizes","NORMAL","ButtonHighlights","SUCCESS","NONE","destroy","addModalPanel","renderUI","cloneRepo","repo","dir","branch","defaultBranch","extractRepoName","mkdirp","sync","ok","error","repoPath","lastIndexOf","doSplit","RamlOutline","SplitDirections","RIGHT","__extends","this","d","b","__","constructor","hasOwnProperty","prototype","Object","create","path","fs","SC","fdUtils","XMLHttpRequest","_super","apply","arguments","disposables","getTitle","load","reposLink","sec","xhr","html","outer","home","apiListData","secHC","sett","a","openFolderDialog","newVal","setText","SETTINGS","TextClasses","HighLightClasses","HIGHLIGHT","branchLink","prompt","y","GIT_BRANCH","margin","l","list","uiLabel","REPO","pad","buttonCallback","existsSync","mkdirSync","git_url","output","pathsToOpen","uiButton","EXTRA_SMALL","attached","_isAttached","Scrollable","display","manager","EditorManager","editorToolsStatus","opened","aquireManager","updateAndSelect","node","_view","refresh","updateText","selectNode","value","newPane","BOTTOM","splitDown","TOP","splitUp","LEFT","splitLeft","splitRight","addItem","rp","project","detailsView","outlineView","_this","_initialized","updateCount","outlineCount","fire","_cleanOutline","performanceDebug","placeholder","window","onDidChangeActivePaneItem","e","updateEverything","addAutoCloseListener","getPath","currentEditor","getCurrentEditor","internalScheduleUpdateViews","count","setTimeout","updateViews","scheduleViewsUpdate","internalScheduleOutlineUpdate","updateOutline","scheduleOutlineUpdate","onDidDestroyPane","evt","edcount","getPaneItems","filter","ast","unit","_currentNode","global","cleanCache","paneForItem","_details","getOrCreateView","setUnit","getDetails","RamlDetails","updateDetails","update","reparseAST","_path","prj","getBuffer","createProject","dirname","setCachedUnitContent","basename","getText","addTextChangeListener","delta","cm","offset","end","replacementLength","text","buffer","start","positionForCharacterIndex","endPosition","setTextInRange","highLevel","isETPane","items","getItems","aw","fpane","pos","contents","setCursorBufferPosition","hnode","lowLevel","pth","extname","patched","addListenersToEditor","characterIndexForPosition","getCursorBufferPosition","positionUpdated","cedit","onDidChange","t0","Date","getMilliseconds","t1","getLastCursor","onDidChangePosition","addListenersOnMove","movingPane","onDidAddPaneItem","event","moveItemToPane","setActiveItem","patchCurrentNode","n","getCurrentNode","setSelectedNode","unitPath","absolutePath","parent","anode","findById","posStart","getSelectedNode","cNode","ds","setSelection","d1","newPosition","currentPosition","findElementAtOffset","CommandManager","cc","registerQuickCommands","et","qcui","contextActions","QuickCommand","title","command","priority","when","registerAsAtomCommand","target","atomCommand","disposed","unregister","panel","SelectListView","register","cmd","qcmd","atomTarget","predicate","joinedCommands","commandId","getDynamicCommands","forEach","currentCommand","keys","map","key","sort","currentActions","calculateCurrentActions","TARGET_RAML_EDITOR_NODE","action","convertedQuickCommand","onClick","push","onDidInsertSuggestion","triggerPosition","suggestion","annotation","txt","i","charAt","newPos","insert","replacementPrefix","extra","getSuggestions","request","atomContent","AtomEditorContent","atomPosition","AtomPosition","suggestionsProvider","suggestions","CompletionProvider","ContentProvider","suggest","CompletionRequest","getAstNode","clearLastChar","allowNull","bufferPosition","kind","search","determineCompletionKind","LocationKind","KEY_COMPLETION","ilevel","oldOfffset","pm","astNode","attr","_","find","attrs","at","property","isKey","saveUnit","unitText","openedEditor","getTextEditors","editorPath","writeFileSync","selector","disableForSelector","filterSuggestions","inclusionPriority","excludeLowerPriority","contentDirName","content","contentPath","dirName","childPath","exists","checkPath","contextPath","relativePath","isDirectory","dirPath","stat","statSync","readDir","readdirSync","textEditor","getBaseName","getOffset","showQuickOutline","QuickOutlineDialog","ed","filePath","ext","tooltipManager","isAllowedExtension","outline","_editor","extraContent","s","zz","nodeToSelect","vc","createTree","root","selection","elements","setDisabled","model","setCursorScreenPosition","addClass","cancel","buttonSimple","PRIMARY","tabIndex","onkeypress","keyCode","focus","createGlobalSchema","r","t","range","universe","sc","stubs","createStubNode","attrOrCreate","setValue","sdir","shFile","createGlobalSchemaFromNameAndContent","schp","index_1","universeHelpers","isRAML10Node","createGlobalSchemaFromNameAndContent10","isRAML08Node","createGlobalSchemaFromNameAndContent08","createSchemaFile","schemaPath","getActiveEditor","definition","universes","Universe10","TypeDeclaration","Api","properties","types","Universe08","GlobalSchema","schemas","saveExample","createRAMLFile","version","baseUri","sample","raml1","apiLines","typesLines","resourceLines","concat","join","NewProjectDialog","moveResource","h","move","MoveElementsDialog","splitOnLines","lines","match","cleanEmptyLines","rs","stripIndent","indent","line","activeEditor","moveOut","MoveToNewFileDialog","VALUE_COMPLETION","hlnode","getAdapter","services","RAMLPropertyService","targets","referenceTargets","findUsagesImpl","reverse","ua","asAttr","RAMLService","getKeyProp","nameId","SEQUENCE_KEY_COPLETION","oldValue","attrValue","renameInProperty","contentToReplace","replaceWith","oldPropertyValue","structuredValue","oldPropertyStringValue","valueName","convertedHighLevel","toHighLevel","found","isAnnotationType","prop","getKey","attribute","newValue","replace","newPropertyStringValue","setKey","up","def","UserDefinedProp","withRange","StringType","withFromParentKey","getDeclaringNode","createASTPropImpl","setSelectedBufferRange","f","updateContent","results","query","sv","setInput","SearchResultView","addBottomPanel","findDeclaration","toLowerCase","openLowLevelNode","SpacePenViews","apititle","_raml1","_defStructure","_createSampleResource","sourceValue","generateDefaultProjectParentFolder","validateProjectLocation","toValidate","errorStatus","parentDirectory","okStatus","validateTitle","h3","Panel","LayoutType","BLOCK","statusLabel","ERROR","slf","CustomField","setDisplay","code","StatusCode","projectLocationInput","texfField","getBinding","addValidator","addListener","st","setIcon","BUG","titleStatusLabel","titleStatusMessage","titleTextField","status","r1","checkBox","getValue","r2","r3","NO_HIGHLIGHT","onOk","createIfNotExist","ps","GIST_NEW","errorLabel","destination","isError","dump","ci","li","keyEnd","endPart","startPart","vl","_result","isAttached","div","class","tabindex","SEARCH","p1","getLowLevelStart","res","openPropertyNode","SUBTLE","row","SMALL","ScrollView","p2","getLowLevelEnd","column","linterApiProxy","rr","addLoadCallback","relint","observeTextEditors","lintersToDestroy","linter","destroyLinter","deleteMessages","deleteLinter","setupLinterCallback","callback","linterCallback","removeLinterCallback","execLinterCallback","lint","actualLint","hasAsyncRequests","isRAMLUnit","getTime","editorManager","Acceptor","tab","trace","gatherValidationErrors","l1","original","JSON","stringify","newKey","tr","mes","ms","errors","validate","utils","TextBuffer","grammarScopes","scope","lintOnFly","extName","lowerCase","getEditorLinter","setMessages","onDidDestroy","buffers","begin","accept","issue","isWarning","extras","buf","acceptUnique","addCommand","tag","listCommands","disposable","commandInfo","commandIdToCommandInfo","tagCommands","tagToCommands","deleteUnmanagedCommand","registeredCommands","selectorBasedListenersByCommandName","deleteManagedCommand","infoIndex","currentInfo","index","splice","deleteCommandsByTag","commandName","initialized","packages","activatePackage","listener","prePanelDisplay","listenersArray","sequenceNumber","Error","registerContributor","contributor","contributors","DYNAMIC_COMMAND_TAG","contributorId","calculationStarted","calculateItems","calculationFinished","originalShowForEvent","showForEvent","preMenuDisplay","postMenuDisplay","addMenuItem","categories","shouldDisplay","deleteMenuItems","deleteMenuItem","treeRoots","calculateMenuItemsTree","nodeSets","cleanExistingSets","itemSet","findOrCreateItemSet","menuItem","constructAtomMenuItem","children","submenu","child","childMenuItem","existingSet","itemSets","currentSet","DYNAMIC_SET_TAG","specificity","usedSelectors","existingSets","addItemsTreeNode","roots","currentList","catIndex","currentSegment","existingNode","ContextMenuItemNode","leafNode","nameOverride","registerCommonActions","initializeActionSupport","editorContextMenuContributor","actions","category","editorCommandContributor","NullCalculator","calculate","GeneralASTStateCalculator","contextCalculationStarted","calculateState","contextCalculationFinished","gotEditorFromOutline","lastPosition","getEndPosition","completionKind","generalASTStateCalculator","CommonASTStateCalculator","getGeneralState","getEditor","CreateGlobalSchemaDialog","assistUtils","findLowLevelNodeByOffset","keyStart","valueEnd","includedFrom","lastChild","addAction","stateCalculator","CreateGlobalSchemaStateCalculator","MoveResourceStateCalculator","FillBodyDialog","CompleteBodyStateCalculator","extract","ExtractTypesAndTraitsDialog","ExtractResourceTypeStateCalculator","ExtractTraitStateCalculator","MoveContentStateCalculator","ExtractJSONSchemaToTypeDialog","ConvertJsonSchemaToTypeStateCalculator","api","elementsOfKind","typeNode","su","createModelToSchemaGenerator","generateSchema","ConvertTypeToJsonSchemaStateCalculator","typenode","schema","schemaStub","createStubNoParentPatch","ConvertTypeToJsonSchemaAtTypeStateCalculator","ExtractLibraryDialog","ExtractLibraryStateCalculator","ExtractOverlayDialog","ExtractOverlayStateCalculator","ModifyOverlayDialog","ModifyOverlayStateCalculator","PullUpDialog","PullUpStateCalculator","ExtractSupertypeDialog","ExtractSupertypeCalculator","highLevelNode","lowLevelNode","startOffset","endOffset","startPosition","startLine","endLine","lineNumber","oldRange","rangeForRow","oldText","getTextInRange","newText","CommentNodeCalculator","apiModifier","parser","modify","xmlutil","shemagen","AbstractDialogWithValidation","parentNode","performOk","createBody","getParentNode","printDetails","mainSection","createValidationIndicator","createButtonBar","rootAtomPanel","performValidation","validationMessage","parentPanel","getNodeId","parentId","sameName","directChildren","ind","nodesEqualById","node1","node2","isParentOf","potentialParent","potentialChild","current","generalState","isResourceType","isSchemaProperty","typeNameTextField","schemaName","createSchemaModelGenerator","generateTo","schemaNameTextField","getDefaultSchemaName","schemaContent","schemaFilePath","getSchemaFilePath","globalSchemaType","schemaNode","getSchemaRelativePath","schemaDir","schemaExtension","determineSchemaExtension","fileName","getKeyValue","ExpandSignatureStateCalculator","isResponseType","isMethodType","isBodyLikeType","body","needXML","needJSON","jsexample","xmlexample","xmlschema","jsschema","updateButtons","createButton","em","getJSONSchema","getXMLSchema","tf","TabFolder","createTextSection","setOnSelected","selectedComponent","te","caption","lang","hs","setCaption","setId","ts","AtomEditorElement","setMini","setGrammar","setSelectedIndex","bodyType","isBodyProperty","createAttr","xmlSchemaContents","response","responseWrapper","wrapperNode","bodies","typeName","bodyWrapper","createTypeDeclaration","setTypeDeclarationSchema","setTypeDeclarationExample","foundWrapper","remove","isTypeProperty","isTypesProperty","errorMessage","canWrite","accessSync","W_OK","exception","ramlComment","isOverlayType","AbstractMoveTypePropertiesCalculator","isTypeNode","isTypeDeclarationType","superTypes","findUserDefinedSupertypes","GenerateExampleCalculator","isExampleProperty","typeAttr","_children","v","style","scroll","top","left","element","scrollTop","scrollLeft","size","bottom","clientHeight","right","clientWidth","changed","ui","setParent","_parent","removeChild","doRender","innerRenderUI","selfRender","document","createElement","el","appendChild","Workspace","arg","addRightPanel","args","aspv","_confirmed","filterKey","getFilterKey","viewForItem","hide","confirmed","getSelectedItemView","storeFocusedElement","setItems","focusFilterEditor","currentAction","addSimpleAction","newAction","filteredActions","ExecutableAction","getCategorizedActionLabel","cat","TARGET_RAML_TREE_VIEWER_NODE","targetAction","originalAction","deleteNode","forEachViewer","getResourceParent","isResourcesProperty","isResourceTypesProperty","isResourceTypeType","getMethodParent","isTraitType","isUserDefined","getParent","isAssignableFrom","toResource","dialogs","newResource","AddNewResourceStateCalculator","DeleteCurrentNodeStateCalculator","newApi","CreateNewAPIStateCalculator","newMethod","newNode","isApiType","treeSection","input","icon","filterFunc","treeViewerSection","getChildren","HLRenderer","viewer","setBasicLabelFunction","setKeyProvider","addSelectionListener","getNodeType","isResource","HLNodeType","Resource","isOther","Trait","isResourceTypeOrTrait","Type","isSchemaOrType","Schema","Unknown","nm","prohibit","pc","ResourceType","LibraryBase","isAttr","isUnknown","ch","keyProvider","fullPath","simpleTree","selectionListener","treeViewer","set","selectionChanged","other","folder","selectedTab","getSelection","SelectionChangedEvent","customizePanel","_rs","sender","_viewers","getNodePType","_selectedNode","force","attach","$this","$","outerHTML","resources","resourceTypes","traits","render","ARROW_SMALL_LEFT","DASH","highLight","PRIMITIVE_SQUARE","Method","PRIMITIVE_DOT","WARNING","AbstractSecurityScheme","LOCK","FILE_SUBMODULE","isAnnotationTypesProperty","TAG","Parameter","ObjectTypeDeclaration","FILE_BINARY","DocumentationItem","tp","getFromShadowDom","rootElement","querySelectorAll","sp","editorView","pixelPositionFromMouseEvent","clientX","clientY","linesClientRect","getBoundingClientRect","screenPositionFromMouseEvent","getModel","screenPositionForPixelPosition","screenPositionFromMouse","views","getView","displayBuffer","getScrollTop","getScrollLeft","clientRect","emissary","Subscriber","View","options","init","defineProperty","enumerable","configurable","TooltipView","rect","append","updatePosition","outlet","inner","fadeTo","offsetWidth","width","css","white-space","offsetHeight","height","hl","assist","_resourceType","createSmallSelectionPanel","ev","isEmpty","man","isSchema","isGlobalSchemaType","details","schemaUI","allowStructureChanges","innerHTML","container","setSchema","wasSchema","schemaView","ssto","clear","errLabel","applyStyling","setInterval","schemaText","_updatePreview","treeView","textView","smallEditor","includePath","sm","relative","includeReference","_updateEditor","_schemaPreview","schemaTab","GIT_MERGE","FILE_TEXT","oldItem","detach","setResource","displayEmpty","updateDetailsPanel","Button","LARGE","REPO_CLONE","_node","template","str","defaults","Atom","React","pathwatcher","extend","popsicle","AtomUtil","Render","isParsing","pageState","paths","editors","resolver","ConsoleResolver","readFileSync","parameters","headers","uriParameters","baseUriParameters","queryParameters","expander","expandTraitsAndResourceTypes","cloneWithResolver","resolveEditor","resolveFilename","watchEditor","stopWatchingPath","getEditorById","trigger","loadRAML","parents","onDidActivateInitialPackages","file","File","getEditorByPath","watchForFile","watchFile","onDidStopChanging","updateUnit","cb","stopWatchingEditor","onDidChangePath","watcher","close","watch","deleteUnit","watchForPath","newFilename","stopWatching","navigate","getElementById","abortRequest","props","setParameter","group","execRequest","setPageState","requestError","securityScheme","securitySchemes","defaultBaseUriParameters","toDefaultParameters","allBaseUriParameters","defaultUriParameters","allUriParameters","methodHeaders","methodQuery","completeRelativeUri","describedBy","method","User-Agent","usedParameters","use","plugins","unzip","concatStream","progress","requestProgress","completed","requestResponse","toJSON","params","parameter","param","abort","updateRAML","baseUnit","getUnit","getFilename","originalRoot","asElement","serialize","deserializer","unmountComponentAtNode","groupState","getURI","FSResolverImpl","contentAsync","reject","readFile","data","listAsync","readdir","files","xmlToJson","xml","nodeType","attributes","j","nodeName","nodeValue","hasChildNodes","childNodes","old","cleanupText","k","cleanupJson","parseXML","DomParser","DOMParser","parsed","parseFromString","float","createVIewer","setTagName","localType","addUserDefinedSupertypes","typesToAddTo","superType","isWebPath","util","stringStartsWith","yaml","universeModule","filters","NodeFilters","isErr","stub","removals","createNodeStub","v1","moveRight","z","moveLeft","allRight","allLeft","nodesToMove","unregisteredNode","nodeToMove","registeredNode","movedNode","newTypeName","stub2","typeOrTraitValueToReplace","replacements","superAttributeName","is","superAttributes","superAttrProperty","superAttribute","superAttributeLL","valueStart","typeOrTraitValueToReplaceWith","stubAttributeValue","stubSuperAttribute","resetChildren","cl","totalRepalcement","isMultiValue","totalReplacement","rtypes","copy","AbstractlMoveElementsDialog","movedNodes","checkNode","nodeToFilter","visitChildren","canBeMoved","createHeader","stubTreeRoot","extractSection","stubRoot","createStub","createPanels","createMovedNodesTree","currentParent","currentStubPointer","stubAnalogueOfParent","currentStubElement","createMovedNode","originalNode","createStubRoot","createMap","createASTNodeImpl","leftDisplayFilter","nodeToCheck","leftPanel","rightDisplayFilter","rightPanel","mergeTrees","sourceTreeRoot","targetTreeRoot","mergeProperties","mergeNode","sourceNode","targetParent","isElement","targetChildren","analogueChild","sourceChild","currentNode","prrr","blah","isTp","isSecuritySchemaType","getUniverse","nodeClass","Library","libraryPath","libraryNamespace","getLibraryQualifier","originalValue","trimmed","getDefaultLibraryNamespace","generateDefaultLibraryPath","libraryUnit","createLibraryUnit","libraries","globalDeclarations","libraryClass","librariesToExport","library","findReferences","reference","currentPath","isAbsolute","currentDirectory","createMapping","stubLibrary","addToProp","FragmentDeclaration","uses","updateLibraryUnit","modifiedUnits","libraryQualifier","movedNodeReferences","oldStringValue","textToReplace","textToReplanceWith","newStringValue","modifiedPropertyUnit","modifiedUnit","addUsesNode","getLibraryPath","currentFilePath","getLibraryName","targetLibraryPath","targetLibraryAst","getKind","existingFirstUsesNode","childAny","isLibraryType","isUsesProperty","usesMapping","sequenceFound","Kind","MAPPING","SEQ","positionToInsert","insertTextToActiveEditor","titleNode","isStringTypeType","isTitleProperty","createUsesNode","usesProperty","usesNode","Overlay","overlayPath","generateDefaultOverlayPath","overlayUnit","createOverlayUnit","updateOverlayUnit","getOverlayPath","originalUnitPath","addMasterReference","targetOverlayPath","targetOverlayAst","masterRefAttribute","overlayASTRoot","masterASTRoot","createMasterAST","overlayASTLeafNodes","calculateLeafNodes","getOverlayUnit","masterAbsolutePath","findMasterAbsolutePath","masterUnit","toReportTo","overlayAbsolutePath","targetPath","AbstractMoveTypePropertiesDialog","sourceType","getTargetType","sourceUnit","targetType","targetUnit","postMerge","superTypeNames","findSuperTypeNames","Select","selectedSuperType","setOptions","foundSuperType","superTypeName","generateDefaultSupertypeName","astRoot","typeWrapper","createObjectTypeDeclaration","typeStub","superValidate","mediaType","generator","JsonSchemaGenerator","schemaObject","schemaString","sch","pass","valueType","detectType","Array","isArray","passArray","passObject","registerProperty","propName","array","showError","dialog","showMessageBox","remote","getCurrentWindow","buttons","detail","getMethodDescriptions","_methodDescriptions","methodsProperty","ResourceBase","methods","enumOptions","khttp","desc","description","getStatusCodeDescriptions","_statusCodeDescriptions","statusCodes","tfTitle","TextField","tfVersion","tfBaseURI","setTabIndex","cbSample","CheckBox","cbRaml1","DASHBOARD","_dialog","getActualField","mdesc","cdesc","NO_RESPONCE","NO_RESPONCE_BT","mdescLabel","LabelField","cdescLabel","methodSelect","SelectField","responseSelect","responseTypeSelect","typeOfValue","realBodyType","bodyTypeSelect","bodyTypeOfValue","actualType","bodyTypeString","__ret","typeValues","responseSection","CODE","oldNode","methodNode","createMethodStub","bodyNode","createBodyStub","codeNode","createResponseStub","getStringValue","typeEditDialog","onDone","typePanel","typeProperty","toPropagate","svMap","typeList","EMPTY_VALUE","genStructuredValue","propagateValues","allProperties","CIRCUIT_BOARD","pair","Map","values","val","pairs","enumEditDialog","_cp","renderer","GIT_COMMIT","TRASHCAN","ListView","addKeyPressListener","LIST_UNORDERED","calculatesParentURIPath","resource","segment","uriLable","resourceParent","parentsPath","uriTF","methodsPanel","hcp","createResourceStub","resourceTypeProp","qName","makeLabelNextToField","hideLabel","details2","buildItem","setTitle","showDescription","_unit","traitsEditDialog","tabs","sel","traitProperty","returnv","trait","traitName","traitValue","traitNode","returnee","enabled","tcb","traitPanel","nameOrValue","schemaEditDialog","NEW_SCHEMA","refValue","_schemaText","sname","timeout","preview","intervalId","MICROSCOPE","NoSchema","InvalidSchema","_dialog2","highlight","INFO","isChanged","validateSchema","saveSchema","clearInterval","createSchema","schemaType","getType","filterJSON","extensions","filterXML","projectFolder","showSaveDialog","defaultPath","fname","ename","rpath","markdown","exampleEditorDialog","projectPath","refPath","openFileDialogModal","reui","onclick","blur","nextSibling","_closeDialog","_dialogPanels","pop","mdp","filterAll","saveFileDialogModal","toFocus","stretch","isPrimary","addStatusListener","eventListener","parentElement","getComputedStyle","parseFloat","overflowY","addEventListener","removeEventListener","msg","onChange","defs","BodyLike","sh","enumValues","full_name","owner","login","avatar_url","gravatar_id","html_url","followers_url","following_url","gists_url","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","site_admin","private","fork","forks_url","keys_url","collaborators_url","teams_url","hooks_url","issue_events_url","assignees_url","branches_url","tags_url","blobs_url","git_tags_url","git_refs_url","trees_url","statuses_url","languages_url","stargazers_url","contributors_url","subscribers_url","subscription_url","commits_url","git_commits_url","comments_url","issue_comment_url","contents_url","compare_url","merges_url","archive_url","downloads_url","issues_url","pulls_url","milestones_url","notifications_url","labels_url","releases_url","created_at","updated_at","pushed_at","ssh_url","clone_url","svn_url","homepage","stargazers_count","watchers_count","language","has_issues","has_downloads","has_wiki","has_pages","forks_count","mirror_url","open_issues_count","forks","open_issues","watchers","default_branch","permissions","admin","pull","updateTextOnDone","cfg","styles","emitter","handlersByEventName","sadd","sremove","schange","cfgCh","addGrammar","updateGrammar","emptyGrammarListeners","nullGrammar","empty","rend","field","focusedPosition","focusedPropertyName","getSchemaType","schemautil","propertyInfo","isValueProperty","ipath","isMulti","required","isRequired","rangeName","ret","include","stringView","nodes","DataElement","Response","filterOut","SchemaRenderer","setComparator","getSchemaTree","typeString","schemaModel","rootElements","schemaTree","getXMLSchemaTree","parseSchema","XSD_1_0","context","jsonix","Jsonix","Context","unmarshaller","createUnmarshaller","unmarshalString","schemaObj","getRootElements","extractName","typeObj","prefix","localPart","objValue","groups","elementGroups","attributeGroups","simpleTypes","complexTypes","ElementDescription","getTSType","xmltype","XSD_2_TS_TYPE_MAP","getSType","isSimple","Opt","elem","tc","QUESTION","TypeDescription","_name","_isSimple","_object","object","isChoice","elementObjects","collectElements","complexContent","objects","groupRef","groupDef","AttributeDescription","base","baseObj","restriction","resExt","typeObject","sType","cType","typeOpt","isDefined","getOrThrow","containers","gr","PropertyDescription","optional","isAttribute","otherAttributes","maxOccurs","mo","parseInt","minOccurs","ENTITIES","ENTITY","ID","IDREF","IDREFS","Name","NCName","NMTOKEN","NMTOKENS","normalizedString","QName","string","token","date","dateTime","duration","gDay","gMonth","gMonthDay","gYear","gYearMonth","time","anyURI","base64Binary","hexBinary","NOTATION","boolean","double","byte","decimal","int","integer","long","negativeInteger","nonNegativeInteger","nonPositiveInteger","positiveInteger","short","unsignedLong","unsignedInt","unsignedShort","unsignedByte","String","getGrammerFromMime","mimeType","grammarsByScopeName","extension","mime","getGrammars","grammar","fileTypes","codeToEditorElement","editorElement","setAttributeNode","createAttribute","removeAttribute","getDecorations","define","text/xml","isRAML10","RAMLVersion","isRAML08","plural","singular","getCaseless","getNodeLabel","highLevelAst","NodeKind","ATTRIBUTE","NODE","wrapper","RamlWrapper1","isDocumentationItem","RamlWrapper08","isApi","isExtension","isOverlay","marked","classnames","PureComponent","pretty","api10","api08","atomUtil","BULLET_TEXT","METHOD_CLASS_MAP","get?","post","post?","delete","delete?","put","put?","patch","patch?","isSupportedNode","isObjectTypeDeclaration","isResponse","isTypeDeclaration","isLibrary","isSecuritySchemePart","isOAuth1SecurityScheme","isOAuth2SecurityScheme","renderNode","isTrait","isAbstractSecurityScheme","SecurityScheme","Documentation","isMethod","Root","Block","TitleText","href","wrapperClassName","renderBreadcrumb","renderedNode","parts","unshift","lastNode","className","flex","idNode","wrapBody","overflow","wrapContent","breadcrumb","flexDirection","Loading","Errors","referencedNode","findReferencedValue","MissingReference","ResourceTypesAndTraits","documentation","InsetPanel","marginTop","ResourceChildren","MethodButton","verb","toUpperCase","references","SimpleText","usage","AbstractMethod","References","OpenInEditor","formatNode","AbstractResource","MarkdownBlock","ParametersBlock","displayName","relativeUri","ParameterInfo","marginRight","TypeInfo","hasNamedSuperTypes","namedTypeFound","renderDefinition","renderNameId","hasUnionInHierarchy","unionInHierarchy","leftType","rightType","hasArrayInHierarchy","arrayInHierarchy","componentType","runtimeDefinition","hasGenuineUserDefinedTypeInHierarchy","isGenuineUserDefinedType","genuineUserDefinedTypeInHierarchy","summary","isFileTypeDeclaration","minLength","maxLength","isIntegerTypeDeclaration","minimum","maximum","repeat","renderBody","schemaPart","createSchemaPart","createExampleParts","exampleToString","example","exampleValue","examples","exampleName","MarkupBlock","singleExampleNode","singleExampleContent","isBodyLike","exampleNode","exampleContent","bodyAsType","runtimeType","hasExternalInHierarchy","externalType","externalInHierarchy","methodBodies","responses","demo","canDemo","MethodDemo","contentType","allSecuredBy","currentSecurityScheme","EditParameters","change","ownerApi","TextEditor","mini","marginLeft","max","isNaN","statusText","rawHeaders","Markup","componentDidMount","updateModel","refs","getDOMNode","cleanup","setPlaceholderText","readonly","setAttribute","gutter","componentWillUnmount","componentDidUpdate","ref","visible","isXml","isJson","isCss","canPrettify","pd","json","checked","NavigateLabel","getName","cursor","securedBy","openInEditor","position","panes","getPanes","activePane","hasUnit","dangerouslySetInnerHTML","__html","flattenArrayOfObjects","xs","toTuples","fromTuples","tuples","tap","kv","iter","indexed","delKey","shallowCopy","stringEndsWith","dif","lazypropkeyfilter","lazyprop","func","ready","lazyprops","keyfilter","ifInstanceOf","Function","vf","iff","isRAMLUrl","getAllRequiredExternalModulesFromCode","mods","RegExp","exec","unique","isEssential","firstToUpper","q","updateObject","source","addNewFields","keySet","replaceMap","prev","defined","isInstance","C","collectInstancesOf","collectInstancesOfInMap","asArray","flatMap","flatten","xss","takeWhile","serial","escapeValue","domain","universehelpers","isDocumentationProperty","isUsageProperty","isDescriptionProperty","isDisplayNameProperty","isAnnotationsProperty","isIsProperty","isSecuredByProperty","isTypeExpr","isProtocolsProperty","addExampleControl","exampleElement","isYAML","addItemToCategory","LowLevelTreeField","isJSONString","ExampleField","asString","isXMLString","XMLExampleField","updateType","propertiesAllowedToUse","TopLevelNode","setDescription","isFragment","fragmentName","getFragmentDefenitionName","allSuperTypes","isNameProperty","isBooleanTypeType","isMarkdownStringType","StructuredField","JSONSchemaField","XMLSchemaField","vls","valueOptions","TypeSelectBox","SelectBox","SimpleMultiEditor","PropertyEditorInfo","CheckBoxField","MarkdownField","isTypeDeclarationSibling","isExamplesProperty","exampleElements","exampleElementName","ExampleSpec","currentExample","ActionsItem","visibleActions","cats","groupBy","ContextActionsItem","TypeDisplayItem","typeDisplay","defaultValues","resourceRegistry","Item","_title","listeners","needsSeparateLabel","removeListener","setError","clearErrors","lastSelectedCaption","Category","plainChildren","it","createSection","descriptionLabel","contributeTop","wrappedChild","createWrappedChild","subCategories","remap","newCats","showHeader","Section","pnl","firstLabel","inRender","ep","subCategoryByNameOrCreate","_options","_panel","tabsCount","header","INBOX","prInfo","isDescriminator","newExtras","kp","keyItem","fld","setStatus","notFound","CheckBox2","setLabelWidth","rendered","fromEditorToModel","getDefaultValue","hasDefault","toLocalValue","av","toUIValue","actualUnit","apath","inputValue","fromModelToEditor","WrapPanel","createField","np","valueDocProvider","ac","lbl","newDoc","ww","setValues","generateSuggestionsPanel","CHECKLIST","MarkdownFieldUI","onchange","setLabelHeight","setRequired","XMLField","JSONField","oldNames","savedAttrs","isAllowedTypeToReplaceFacets","addTypeFacets","names","facetName","currentTypeDef","StringTypeDeclaration","BooleanTypeDeclaration","NumberTypeDeclaration","IntegerTypeDeclaration","TreeField","inputV","pr","stvalue","tm","sug","suggester","getOftenKeys","KeyValuePair","mappings","volume","callbackfn","globalEmptyOpt","invariant","_value","_isDefined","_isEmpty","_arr","toArray","getOrElse","getOrElseF","equals","fn","isMerged","includesContents","inserter","Inserter","enums","rn","MethodBase","findBuiltInValueType","isValueType","isBuiltIn","getValueTypeDisplayName","builtinValueType","getTypeDisplayName","asUnion","wn","renderType","rf","getRepresentationOf","facets","getFixedFacets","propertyName","LINK","universesInfo"],"mappings":"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","file":"main.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar Console = __webpack_require__(3);\n\tvar apiList = __webpack_require__(4);\n\tvar editorTools = __webpack_require__(5);\n\tvar quickCommands = __webpack_require__(6);\n\tvar provider = __webpack_require__(7);\n\tvar quickOutline = __webpack_require__(8);\n\tvar decl = __webpack_require__(9);\n\tvar linterUI = __webpack_require__(10);\n\tvar CompositeDisposable = __webpack_require__(1).CompositeDisposable;\n\tvar commandManager = __webpack_require__(11);\n\tvar contextMenu = __webpack_require__(12);\n\tvar commonContextActions = __webpack_require__(13);\n\tvar quickFixActions = __webpack_require__(14);\n\tvar package_entry_point;\n\t(function (package_entry_point) {\n\t    var subscriptions = new CompositeDisposable();\n\t    function activate(state) {\n\t        __webpack_require__(2).install('api-workbench', true)\n\t            .then(function () {\n\t            subscriptions.add(atom.commands.add('atom-workspace', {\n\t                'api-workbench:popular-apis': apiList.showPopularApis,\n\t                'api-workbench:editor-tools': editorTools.initEditorTools,\n\t                'api-workbench:console': Console.toggle,\n\t                'api-workbench:go-to-definition': decl.gotoDeclaration,\n\t                'api-workbench:find-usages': decl.findUsages,\n\t                'api-workbench:quick-outline': quickOutline.show,\n\t                'api-workbench:quick-commands': quickCommands.showCommands,\n\t                'api-workbench:rename': decl.renameRAMLElement,\n\t                'api-workbench:new-project': decl.newProject,\n\t                'api-workbench:select-node': decl.select\n\t            }));\n\t            subscriptions.add(atom.workspace.addOpener(Console.opener));\n\t            //subscriptions.add(atom.workspace.addOpener(RamlScriptReport.opener))\n\t            commandManager.initialize();\n\t            contextMenu.initialize();\n\t            commonContextActions.initialize();\n\t            quickCommands.registerCommands();\n\t            quickFixActions.initialize();\n\t            editorTools.initEditorTools();\n\t        });\n\t    }\n\t    package_entry_point.activate = activate;\n\t    function getProvider() {\n\t        return provider;\n\t    }\n\t    package_entry_point.getProvider = getProvider;\n\t    function provideLinter() {\n\t        return linterUI;\n\t    }\n\t    package_entry_point.provideLinter = provideLinter;\n\t    function consumeLinter(linterApi) {\n\t        subscriptions.add(linterUI.initEditorObservers(linterApi));\n\t    }\n\t    package_entry_point.consumeLinter = consumeLinter;\n\t    function deactivate() {\n\t        subscriptions.dispose();\n\t    }\n\t    package_entry_point.deactivate = deactivate;\n\t    package_entry_point.config = {\n\t        grammars: {\n\t            type: 'array',\n\t            default: [\n\t                'source.raml'\n\t            ]\n\t        },\n\t        openConsoleInSplitPane: {\n\t            type: 'boolean',\n\t            default: true\n\t        }\n\t    };\n\t})(package_entry_point || (package_entry_point = {}));\n\tmodule.exports = package_entry_point;\n\t\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom-package-deps\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar url = __webpack_require__(21);\n\tvar ConsoleView = __webpack_require__(38);\n\tatom.deserializers.add({\n\t    name: 'RAMLConsoleView',\n\t    deserialize: function (state) {\n\t        if (state) {\n\t            return createConsoleView(state);\n\t        }\n\t    }\n\t});\n\tfunction createConsoleView(opts) {\n\t    return new ConsoleView.RAMLConsoleView(opts);\n\t}\n\texports.createConsoleView = createConsoleView;\n\tfunction isConsoleView(obj) {\n\t    return obj instanceof ConsoleView.RAMLConsoleView;\n\t}\n\texports.isConsoleView = isConsoleView;\n\tfunction toggle() {\n\t    if (isConsoleView(atom.workspace.getActivePaneItem())) {\n\t        atom.workspace.destroyActivePaneItem();\n\t        return;\n\t    }\n\t    var editor = atom.workspace.getActiveTextEditor();\n\t    if (!editor) {\n\t        atom.notifications.addInfo('The API Console can only be opened when focused on a RAML file editor.');\n\t        return;\n\t    }\n\t    var grammars = atom.config.get('api-workbench.grammars') || [];\n\t    if (grammars.indexOf(editor.getGrammar().scopeName) === -1) {\n\t        atom.notifications.addInfo('The API Console can only be opened with focus on a RAML file.');\n\t        return;\n\t    }\n\t    if (!removeConsoleForEditor(editor)) {\n\t        addConsoleForEditor(editor);\n\t        return;\n\t    }\n\t}\n\texports.toggle = toggle;\n\tfunction removeConsoleForEditor(editor) {\n\t    var uri = ConsoleView.RAMLConsoleView.getUriForEditor(editor);\n\t    var previewPane = atom.workspace.paneForURI(uri);\n\t    if (previewPane) {\n\t        previewPane.destroyItem(previewPane.itemForURI(uri));\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\texports.removeConsoleForEditor = removeConsoleForEditor;\n\tfunction addConsoleForEditor(editor, state) {\n\t    return open(ConsoleView.RAMLConsoleView.getUriForEditor(editor), state);\n\t}\n\texports.addConsoleForEditor = addConsoleForEditor;\n\tfunction addConsoleForFile(filename, state) {\n\t    return open(ConsoleView.RAMLConsoleView.getUriForFilename(filename), state);\n\t}\n\texports.addConsoleForFile = addConsoleForFile;\n\tfunction opener(uri) {\n\t    try {\n\t        var result = url.parse(uri);\n\t        var protocol = result.protocol;\n\t        var host = result.host;\n\t        var pathname = result.pathname;\n\t    }\n\t    catch (err) {\n\t        return;\n\t    }\n\t    if (protocol !== 'raml-console:') {\n\t        return;\n\t    }\n\t    try {\n\t        pathname = decodeURI(pathname || '').substr(1);\n\t    }\n\t    catch (err) {\n\t        return;\n\t    }\n\t    if (host === 'editor') {\n\t        return createConsoleView({ editorId: pathname });\n\t    }\n\t    return createConsoleView({ filename: pathname });\n\t}\n\texports.opener = opener;\n\tfunction shouldSplit() {\n\t    return atom.config.get('api-workbench.openConsoleInSplitPane');\n\t}\n\tfunction getWorkspaceOptions() {\n\t    return {\n\t        activatePane: false,\n\t        searchAllPanes: true,\n\t        split: shouldSplit() ? 'right' : undefined\n\t    };\n\t}\n\tfunction openView(raml, state) {\n\t    var pane = atom.workspace.getActivePane();\n\t    var item = createConsoleView({ raml: raml, state: state });\n\t    // TODO(blakeembrey): Fix RAML instance passed in, RAML 0.8 interface is dead.\n\t    if (shouldSplit()) {\n\t        pane = pane.findOrCreateRightmostSibling();\n\t    }\n\t    atom.workspace.itemOpened(item);\n\t    pane.activateItem(item);\n\t    return Promise.resolve(item);\n\t}\n\texports.openView = openView;\n\tfunction open(uri, state) {\n\t    var workspaceOptions = getWorkspaceOptions();\n\t    var previousActivePane = atom.workspace.getActivePane();\n\t    return atom.workspace.open(uri, workspaceOptions)\n\t        .then(function (view) {\n\t        view.setState(state);\n\t        return view;\n\t    });\n\t}\n\t\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar path = __webpack_require__(15);\n\tvar fs = __webpack_require__(16);\n\tvar UI = __webpack_require__(17);\n\tvar SC = __webpack_require__(28);\n\tvar editorTools = __webpack_require__(5);\n\tvar childProcess = __webpack_require__(18);\n\tvar atom = __webpack_require__(29);\n\tvar fileDialogUtils = UI.fdUtils;\n\tvar XMLHttpRequestConstructor = __webpack_require__(19).XMLHttpRequest;\n\tvar mkdirp = __webpack_require__(20);\n\tvar defaultBranch = \"production\";\n\tfunction buildXHR() {\n\t    var x = new XMLHttpRequestConstructor;\n\t    return x;\n\t}\n\tvar ExecConfig = (function () {\n\t    function ExecConfig() {\n\t        this.callPath = null;\n\t        this.wrkDir = null;\n\t        this.logEnabled = false;\n\t        this.errLogEnabled = true;\n\t        this.messageBefore = '';\n\t        this.messageAfter = '';\n\t        this.messageError = '';\n\t        this.maxLogLength = -1;\n\t        this.onError = null;\n\t    }\n\t    return ExecConfig;\n\t})();\n\tfunction execProcess(config) {\n\t    try {\n\t        if (config.logEnabled) {\n\t            console.log(config.messageBefore);\n\t        }\n\t        var logObj = childProcess.execSync(config.callPath, {\n\t            cwd: config.wrkDir,\n\t            encoding: 'utf8',\n\t            stdio: [0, 1, 2]\n\t        });\n\t        if (config.logEnabled) {\n\t            console.log(config.messageAfter);\n\t            if (logObj) {\n\t                var log = logObj.toString();\n\t                if (log.trim().length > 0) {\n\t                    if (config.maxLogLength < 0) {\n\t                        console.log(log);\n\t                    }\n\t                    else if (config.maxLogLength > 0) {\n\t                        console.log(log.substring(0, Math.min(config.maxLogLength, log.length)));\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    catch (err) {\n\t        if (config.onError) {\n\t            config.onError(err);\n\t        }\n\t        if (config.errLogEnabled) {\n\t            console.log(config.messageError);\n\t            console.log(err.message);\n\t        }\n\t    }\n\t}\n\tfunction branches(repoName, cb) {\n\t    var xhr = buildXHR();\n\t    var reposLink = 'https://api.github.com/repos/raml-apis/' + repoName + '/branches';\n\t    xhr.open(\"GET\", reposLink);\n\t    xhr.onload = function () {\n\t        var data = JSON.parse(xhr.responseText);\n\t        cb(data);\n\t    };\n\t    xhr.send();\n\t}\n\tfunction gitInstalled() {\n\t    var errorOccured = false;\n\t    var config = new ExecConfig();\n\t    config.callPath = 'git version';\n\t    config.wrkDir = fileDialogUtils.getHome();\n\t    config.logEnabled = true;\n\t    config.messageError = 'Git launch failed';\n\t    config.onError = function () {\n\t        errorOccured = true;\n\t    };\n\t    execProcess(config);\n\t    return !errorOccured;\n\t}\n\texports.gitInstalled = gitInstalled;\n\tvar RamlOutline = (function (_super) {\n\t    __extends(RamlOutline, _super);\n\t    function RamlOutline() {\n\t        _super.apply(this, arguments);\n\t        this.disposables = new UI.CompositeDisposable();\n\t    }\n\t    RamlOutline.prototype.getTitle = function () {\n\t        return \"RAML Apis\";\n\t    };\n\t    RamlOutline.prototype.load = function () {\n\t        var reposLink = 'https://api.github.com/orgs/raml-apis/repos?per_page=200';\n\t        var sec = UI.section(\"RAML Apis\");\n\t        var xhr = buildXHR();\n\t        sec.addChild(UI.label(\"loading...\"));\n\t        this.html(sec.renderUI());\n\t        xhr.open(\"GET\", reposLink);\n\t        var outer = this;\n\t        var home = fileDialogUtils.getHome();\n\t        var dir = path.resolve(home, \"apis\");\n\t        var apiListData = __webpack_require__(49);\n\t        var secHC = UI.hc();\n\t        var sett = UI.a(\"Cloning to: \" + dir + \"(click to change)\", function (x) {\n\t            fileDialogUtils.openFolderDialog(\"Please enter new path to clone\", function (newVal) {\n\t                dir = newVal;\n\t                sett.setText(\"Cloning to: \" + dir + \"(click to change)\");\n\t            }, true, dir);\n\t        }, UI.Icon.SETTINGS, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n\t        secHC.addChild(sett);\n\t        var branchLink = UI.a(\"\" + defaultBranch, function (x) {\n\t            UI.prompt(\"Please enter name of the branch\", function (y) {\n\t                defaultBranch = y;\n\t                branchLink.setText(y);\n\t            }, defaultBranch);\n\t        }, UI.Icon.GIT_BRANCH, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n\t        branchLink.margin(10, 0);\n\t        var l = UI.list(apiListData, function (x) {\n\t            var uiLabel = UI.label(x.name, UI.Icon.REPO, UI.TextClasses.HIGHLIGHT, UI.HighLightClasses.NONE).pad(10, 10);\n\t            var buttonCallback = function () {\n\t                if (!fs.existsSync(dir)) {\n\t                    fs.mkdirSync(dir);\n\t                }\n\t                var ok = cloneRepo(x.git_url, dir);\n\t                if (ok) {\n\t                    var output = path.resolve(dir, x.name);\n\t                    if (!fs.existsSync(dir)) {\n\t                        fs.mkdirSync(dir);\n\t                    }\n\t                    var a = path.resolve(output, \"api.raml\");\n\t                    if (!fs.existsSync(a)) {\n\t                        a = path.resolve(output, x.name + \".raml\");\n\t                    }\n\t                    if (fs.existsSync(a)) {\n\t                        atom.open({ pathsToOpen: [output, a] });\n\t                    }\n\t                    else {\n\t                        atom.open({ pathsToOpen: [output] });\n\t                    }\n\t                }\n\t            };\n\t            var uiButton = UI.button(\"clone\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, buttonCallback);\n\t            return UI.hc(uiLabel, uiButton);\n\t        });\n\t        secHC.addChild(l);\n\t        outer.html(secHC.renderUI());\n\t    };\n\t    RamlOutline.prototype.attached = function () {\n\t        if (this._isAttached) {\n\t            return;\n\t        }\n\t        this.load();\n\t        this._isAttached = true;\n\t    };\n\t    RamlOutline.prototype.destroy = function () {\n\t        this.disposables.dispose();\n\t    };\n\t    return RamlOutline;\n\t})(SC.Scrollable);\n\tfunction info(name, callBack) {\n\t    var pane = null;\n\t    var section = UI.section(name, UI.Icon.BOOK, false, false);\n\t    var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t    buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t    var okButton = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t        pane.destroy();\n\t    });\n\t    buttonBar.addChild(okButton);\n\t    section.addChild(buttonBar);\n\t    pane = atom.workspace.addModalPanel({\n\t        item: section.renderUI()\n\t    });\n\t}\n\texports.info = info;\n\tfunction cloneRepo(repo, dir, branch) {\n\t    if (branch === void 0) { branch = null; }\n\t    if (!branch) {\n\t        branch = defaultBranch;\n\t    }\n\t    var repoName = extractRepoName(repo);\n\t    mkdirp.sync(dir);\n\t    var ok = true;\n\t    var config = new ExecConfig();\n\t    config.callPath = 'git clone --branch ' + branch + ' \"' + repo + '\"';\n\t    config.wrkDir = dir;\n\t    config.logEnabled = true;\n\t    config.messageBefore = 'Cloning GIT repository: ' + repo;\n\t    config.messageAfter = 'Cloning complete: ' + repo;\n\t    config.messageError = 'Cloning failed: ' + repo;\n\t    config.onError = function (error) {\n\t        ok = false;\n\t        info(error.message, function () { return null; });\n\t    };\n\t    execProcess(config);\n\t    return ok;\n\t}\n\tfunction extractRepoName(repoPath) {\n\t    return repoPath.substring(repoPath.lastIndexOf('/') + 1, repoPath.lastIndexOf('.'));\n\t}\n\tfunction showPopularApis() {\n\t    if (!gitInstalled()) {\n\t        info(\"GIT is required to clone APIs. Please install GIT.\", function (x) { });\n\t        return;\n\t    }\n\t    editorTools.doSplit(new RamlOutline(), editorTools.SplitDirections.RIGHT);\n\t}\n\texports.showPopularApis = showPopularApis;\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar path = __webpack_require__(15);\n\tvar atom = __webpack_require__(29);\n\tvar rp = __webpack_require__(22);\n\tvar project = rp.project;\n\tvar detailsView = __webpack_require__(37);\n\tvar outlineView = __webpack_require__(33);\n\tvar _bmc = 0;\n\tfunction benchmark(func) {\n\t    var t0 = new Date().getTime();\n\t    if (_bmc != 0 && func)\n\t        console.log(func + \" took \" + (t0 - _bmc) + \" miliseconds.\");\n\t    _bmc = t0;\n\t}\n\tvar EditorManager = (function () {\n\t    function EditorManager(display) {\n\t        var _this = this;\n\t        if (display === void 0) { display = true; }\n\t        this._initialized = false;\n\t        this.updateCount = 0;\n\t        this.outlineCount = 0;\n\t        this.fire = true;\n\t        this.opened = false;\n\t        this._cleanOutline = false;\n\t        this.performanceDebug = true;\n\t        this.placeholder = false;\n\t        manager = window[\"manager\"] = this;\n\t        atom.workspace.onDidChangeActivePaneItem(function (e) { return _this.updateEverything(display); });\n\t        this.updateEverything(display);\n\t        this.addAutoCloseListener();\n\t    }\n\t    EditorManager.prototype.getPath = function () {\n\t        console.log(\"ETM::GetPath\");\n\t        return this.currentEditor ? this.currentEditor.getPath() : null;\n\t    };\n\t    EditorManager.prototype.getCurrentEditor = function () { return this.currentEditor; };\n\t    EditorManager.prototype.internalScheduleUpdateViews = function (count) {\n\t        var _this = this;\n\t        this.updateCount = count;\n\t        setTimeout(function () {\n\t            if (_this.updateCount == count) {\n\t                _this.updateViews();\n\t            }\n\t        }, 500);\n\t    };\n\t    EditorManager.prototype.scheduleViewsUpdate = function () {\n\t        if (this.fire) {\n\t            this.internalScheduleUpdateViews(this.updateCount + 1);\n\t        }\n\t    };\n\t    EditorManager.prototype.internalScheduleOutlineUpdate = function (count) {\n\t        var _this = this;\n\t        this.outlineCount = count;\n\t        setTimeout(function () {\n\t            if (_this.outlineCount == count) {\n\t                _this.updateOutline();\n\t            }\n\t        }, 500);\n\t    };\n\t    EditorManager.prototype.scheduleOutlineUpdate = function () {\n\t        this.internalScheduleOutlineUpdate(this.outlineCount + 1);\n\t    };\n\t    EditorManager.prototype.addAutoCloseListener = function () {\n\t        var _this = this;\n\t        atom.workspace.onDidDestroyPane(function (evt) {\n\t            try {\n\t                var edcount = atom.workspace.getPaneItems().filter(function (e) {\n\t                    return e['softTabs'] != undefined;\n\t                }).length;\n\t                if (edcount == 0) {\n\t                    _this.ast = null;\n\t                    _this.unit = null;\n\t                    _this._currentNode = null;\n\t                    _this.currentEditor = null;\n\t                    global.cleanCache();\n\t                    if (atom.workspace.paneForItem(_this._view))\n\t                        atom.workspace.paneForItem(_this._view).destroy();\n\t                    if (atom.workspace.paneForItem(_this._details))\n\t                        atom.workspace.paneForItem(_this._details).destroy();\n\t                    _this.opened = false;\n\t                }\n\t            }\n\t            catch (e) {\n\t                //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n\t                console.log(e);\n\t            }\n\t        });\n\t    };\n\t    EditorManager.prototype.getOrCreateView = function () {\n\t        if (!this._view) {\n\t            this._view = new outlineView.RamlOutline();\n\t            if (this.ast) {\n\t                this._view.setUnit(this.ast);\n\t            }\n\t        }\n\t        return this._view;\n\t    };\n\t    EditorManager.prototype.getDetails = function () {\n\t        if (!this._details)\n\t            this._details = new detailsView.RamlDetails();\n\t        return this._details;\n\t    };\n\t    EditorManager.prototype.updateDetails = function () {\n\t        this.getDetails().update();\n\t    };\n\t    EditorManager.prototype.reparseAST = function () {\n\t        var _this = this;\n\t        if (this.currentEditor) {\n\t            var _path = this.currentEditor.getPath();\n\t            var bf = this.currentEditor.getBuffer();\n\t            var prj = project.createProject(path.dirname(_path));\n\t            var unit = prj.setCachedUnitContent(path.basename(_path), this.currentEditor.getBuffer().getText());\n\t            unit.project().addTextChangeListener(function (delta) {\n\t                if (delta.unit != unit) {\n\t                    return;\n\t                }\n\t                var cm = delta.offset;\n\t                var end = delta.replacementLength;\n\t                var text = delta.text;\n\t                var buffer = _this.currentEditor.getBuffer();\n\t                var start = buffer.positionForCharacterIndex(cm);\n\t                var endPosition = buffer.positionForCharacterIndex(cm + end);\n\t                try {\n\t                    _this.fire = false;\n\t                    buffer.setTextInRange({ start: start, end: endPosition }, text);\n\t                    _this.scheduleOutlineUpdate();\n\t                }\n\t                finally {\n\t                    _this.fire = true;\n\t                }\n\t            });\n\t            this.ast = unit.highLevel();\n\t            this.unit = unit;\n\t        }\n\t    };\n\t    EditorManager.prototype.isETPane = function (pane) {\n\t        if (!this._view) {\n\t            return;\n\t        }\n\t        var items = pane.getItems();\n\t        return (items.indexOf(this.getDetails()) >= 0 || items.indexOf(this._view) >= 0);\n\t    };\n\t    EditorManager.prototype.display = function () {\n\t        console.log(\"ETM::Display\");\n\t        var aw = atom.workspace;\n\t        var fpane = atom.workspace.paneForItem(this.getCurrentEditor());\n\t        if (!fpane)\n\t            return;\n\t        if (!aw.paneForItem(this.getOrCreateView()))\n\t            doSplit(this.getOrCreateView());\n\t        if (!aw.paneForItem(manager.getDetails()))\n\t            doSplit(this.getDetails(), SplitDirections.BOTTOM);\n\t        this.opened = true;\n\t    };\n\t    EditorManager.prototype.updateText = function (node) {\n\t        this.fire = false;\n\t        var editor = this.currentEditor;\n\t        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n\t        editor.setText(this.unit.contents());\n\t        this.fire = true;\n\t        if (pos)\n\t            editor.setCursorBufferPosition(pos);\n\t    };\n\t    EditorManager.prototype.selectNode = function (hnode) {\n\t        var node = hnode.lowLevel();\n\t        if (!node)\n\t            return;\n\t        var editor = this.currentEditor;\n\t        if (!editor)\n\t            return;\n\t        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n\t        if (pos)\n\t            editor.setCursorBufferPosition(pos);\n\t    };\n\t    EditorManager.prototype.updateEverything = function (display) {\n\t        if (display === void 0) { display = true; }\n\t        var editor = atom.workspace.getActiveTextEditor();\n\t        if (!editor || this.currentEditor == editor)\n\t            return;\n\t        var pth = editor.getPath();\n\t        if (!pth || path.extname(pth) != \".raml\")\n\t            return;\n\t        this.currentEditor = editor;\n\t        if (this.opened == false && display)\n\t            this.display();\n\t        if (!editor.patched) {\n\t            this.addListenersToEditor(editor);\n\t        }\n\t        this.reparseAST();\n\t        var pos = editor.getBuffer().characterIndexForPosition(editor.getCursorBufferPosition());\n\t        this.positionUpdated(pos);\n\t        this.scheduleViewsUpdate();\n\t    };\n\t    EditorManager.prototype.addListenersToEditor = function (cedit) {\n\t        var _this = this;\n\t        var buffer = cedit.getBuffer();\n\t        buffer.onDidChange(function (x) {\n\t            try {\n\t                var t0 = new Date().getMilliseconds();\n\t                _this.reparseAST();\n\t                var pos = buffer.characterIndexForPosition(cedit.getCursorBufferPosition());\n\t                _this.positionUpdated(pos);\n\t                _this.scheduleViewsUpdate();\n\t                var t1 = new Date().getMilliseconds();\n\t                if (_this.performanceDebug) {\n\t                    console.log(\"Change take:\" + (t1 - t0));\n\t                }\n\t            }\n\t            catch (e) {\n\t                console.log(e);\n\t            }\n\t        });\n\t        //updating ast node on position change\n\t        cedit.getLastCursor().onDidChangePosition(function (x) {\n\t            if (!_this.fire)\n\t                return;\n\t            _this.positionUpdated(buffer.characterIndexForPosition(cedit.getCursorBufferPosition()));\n\t            _this.scheduleViewsUpdate();\n\t        });\n\t        this.addListenersOnMove(cedit);\n\t        this.currentEditor.patched = true;\n\t    };\n\t    EditorManager.prototype.addListenersOnMove = function (cedit) {\n\t        var _this = this;\n\t        var movingPane = false;\n\t        atom.workspace.onDidAddPaneItem(function (event) {\n\t            if (movingPane || _this.isETPane(event.pane) == false || event.item == _this.getOrCreateView() || event.item == _this.getDetails())\n\t                return event;\n\t            setTimeout(function () {\n\t                try {\n\t                    var fpane = atom.workspace.paneForItem(cedit);\n\t                    if (fpane) {\n\t                        movingPane = true;\n\t                        event.pane.moveItemToPane(event.item, fpane, null);\n\t                        movingPane = false;\n\t                        fpane.setActiveItem(event.item);\n\t                        fpane.activate();\n\t                    }\n\t                }\n\t                catch (e) {\n\t                    //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n\t                    console.log(e);\n\t                }\n\t            }, 18);\n\t        });\n\t    };\n\t    //_selectedNode: hl.IHighLevelNode;\n\t    EditorManager.prototype.patchCurrentNode = function (n) {\n\t        this._currentNode = n;\n\t    };\n\t    EditorManager.prototype.getCurrentNode = function () {\n\t        if (this._currentNode == null)\n\t            return this._currentNode = this.ast;\n\t        else\n\t            return this._currentNode;\n\t    };\n\t    EditorManager.prototype.setSelectedNode = function (node) {\n\t        //this._selectedNode = node;\n\t        if (this.unit) {\n\t            var unitPath = this.unit.absolutePath();\n\t            while (node.lowLevel().unit().absolutePath() != unitPath) {\n\t                if (!node.parent()) {\n\t                    break;\n\t                }\n\t                else {\n\t                    node = node.parent();\n\t                }\n\t            }\n\t        }\n\t        var id = node.id();\n\t        var anode = this.ast.findById(id);\n\t        if (anode) {\n\t            node = anode;\n\t        }\n\t        if (this._details) {\n\t            this._details.show(node);\n\t        }\n\t        var editor = this.getCurrentEditor();\n\t        if (editor) {\n\t            this.fire = false;\n\t            try {\n\t                var buffer = editor.getBuffer();\n\t                var posStart = buffer.positionForCharacterIndex(node.lowLevel().start());\n\t                var posEnd = buffer.positionForCharacterIndex(node.lowLevel().end());\n\t                editor.setCursorBufferPosition(posStart);\n\t                this.positionUpdated(buffer.characterIndexForPosition(editor.getCursorBufferPosition()));\n\t            }\n\t            finally {\n\t                this.fire = true;\n\t            }\n\t        }\n\t    };\n\t    EditorManager.prototype.getSelectedNode = function () {\n\t        return this.getCurrentNode();\n\t        //else return this._selectedNode;\n\t    };\n\t    EditorManager.prototype.setText = function (text) {\n\t        console.log(\"ETM::SetText\");\n\t        var editor = this.currentEditor;\n\t        if (editor == null)\n\t            return;\n\t        editor.setText(text);\n\t    };\n\t    EditorManager.prototype.updateViews = function () {\n\t        var cNode = this.getCurrentNode();\n\t        var ds = new Date().getMilliseconds();\n\t        if (this._details) {\n\t            this.getDetails().show(cNode);\n\t        }\n\t        if (this._view) {\n\t            this.getOrCreateView().setUnit(manager.ast);\n\t            this.getOrCreateView().setSelection(cNode);\n\t        }\n\t        var d1 = new Date().getMilliseconds();\n\t        if (this.performanceDebug) {\n\t            console.log(\"Views update:\" + (d1 - ds));\n\t        }\n\t    };\n\t    EditorManager.prototype.updateOutline = function () {\n\t        var cNode = this.getCurrentNode();\n\t        var ds = new Date().getMilliseconds();\n\t        if (this._view) {\n\t            this.getOrCreateView().setUnit(manager.ast);\n\t            this.getOrCreateView().setSelection(cNode);\n\t        }\n\t        var d1 = new Date().getMilliseconds();\n\t        if (this.performanceDebug) {\n\t            console.log(\"Outline update:\" + (d1 - ds));\n\t        }\n\t    };\n\t    EditorManager.prototype.positionUpdated = function (newPosition) {\n\t        this.currentPosition = newPosition;\n\t        if (this.ast) {\n\t            this._currentNode = this.ast.findElementAtOffset(this.currentPosition);\n\t        }\n\t    };\n\t    return EditorManager;\n\t})();\n\tvar manager = null;\n\tfunction initEditorTools(display) {\n\t    if (display === void 0) { display = true; }\n\t    if (manager == null)\n\t        manager = new EditorManager(display);\n\t    else if (display)\n\t        manager.display();\n\t}\n\texports.initEditorTools = initEditorTools;\n\tfunction editorToolsStatus() {\n\t    return manager != null && manager.opened;\n\t}\n\texports.editorToolsStatus = editorToolsStatus;\n\tfunction aquireManager() {\n\t    if (!manager) {\n\t        manager = new EditorManager(true);\n\t    }\n\t    return manager;\n\t}\n\texports.aquireManager = aquireManager;\n\tfunction updateAndSelect(node) {\n\t    if (aquireManager()._view) {\n\t        aquireManager()._view.refresh();\n\t    }\n\t    aquireManager().updateText();\n\t    aquireManager().selectNode(node);\n\t}\n\texports.updateAndSelect = updateAndSelect;\n\t(function (SplitDirections) {\n\t    SplitDirections[SplitDirections[\"RIGHT\"] = 0] = \"RIGHT\";\n\t    SplitDirections[SplitDirections[\"LEFT\"] = 1] = \"LEFT\";\n\t    SplitDirections[SplitDirections[\"TOP\"] = 2] = \"TOP\";\n\t    SplitDirections[SplitDirections[\"BOTTOM\"] = 3] = \"BOTTOM\";\n\t})(exports.SplitDirections || (exports.SplitDirections = {}));\n\tvar SplitDirections = exports.SplitDirections;\n\tfunction doSplit(value, dir) {\n\t    if (dir === void 0) { dir = SplitDirections.RIGHT; }\n\t    var newPane = null;\n\t    switch (dir) {\n\t        case SplitDirections.BOTTOM:\n\t            newPane = atom.workspace.getActivePane().splitDown({});\n\t            break;\n\t        case SplitDirections.TOP:\n\t            newPane = atom.workspace.getActivePane().splitUp({});\n\t            break;\n\t        case SplitDirections.LEFT:\n\t            newPane = atom.workspace.getActivePane().splitLeft({});\n\t            break;\n\t        case SplitDirections.RIGHT:\n\t            newPane = atom.workspace.getActivePane().splitRight({});\n\t            break;\n\t    }\n\t    newPane.addItem(value, 0);\n\t    return newPane;\n\t}\n\texports.doSplit = doSplit;\n\t\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar qcui = __webpack_require__(30);\n\tvar atom = __webpack_require__(29);\n\tvar contextActions = __webpack_require__(31);\n\tvar cc = __webpack_require__(32);\n\tvar et = __webpack_require__(5);\n\t/*\n\t * Quick command is a command object that stores command info, body and filtering function\n\t */\n\tvar QuickCommand = (function () {\n\t    function QuickCommand(id, title, command, priority, when) {\n\t        this.id = id;\n\t        this.title = title;\n\t        this.command = command;\n\t        this.priority = priority;\n\t        this.when = when;\n\t    }\n\t    QuickCommand.prototype.registerAsAtomCommand = function (target) {\n\t        if (this.atomCommand && this.atomCommand.disposed == false)\n\t            this.atomCommand.dispose();\n\t        this.atomCommand = atom.commands.add(target, this.id, this.command);\n\t    };\n\t    QuickCommand.prototype.dispose = function () {\n\t        if (this.atomCommand && this.atomCommand.disposed == false)\n\t            this.atomCommand.dispose();\n\t        cm.unregister(this);\n\t    };\n\t    return QuickCommand;\n\t})();\n\texports.QuickCommand = QuickCommand;\n\t/*\n\t * Command manager manages quick commands.\n\t * All quick commands should be registered here.\n\t * For usage example, see registerCommands\n\t */\n\tvar CommandManager = (function () {\n\t    function CommandManager() {\n\t        this.commands = {};\n\t        this.panel = new qcui.SelectListView(function (command) { return command.command(); }, function (command) { return command.title; }, 'title');\n\t    }\n\t    CommandManager.prototype.register = function (cmd) {\n\t        if (this.commands[cmd.id] != null)\n\t            this.unregister(cmd.id);\n\t        this.commands[cmd.id] = cmd;\n\t        return cmd;\n\t    };\n\t    CommandManager.prototype.unregister = function (cmd) {\n\t        if (typeof (cmd) == \"string\")\n\t            this.unregister(this.commands[cmd]);\n\t        var qcmd = cmd;\n\t        if (qcmd == null)\n\t            return null;\n\t        delete this.commands[qcmd.id];\n\t        return qcmd;\n\t    };\n\t    CommandManager.prototype.add = function (id, title, command, when, priority, atomTarget) {\n\t        var cmd = new QuickCommand(id, title, command, priority ? priority : 0, when ? when : function () { return true; });\n\t        if (atomTarget)\n\t            cmd.registerAsAtomCommand(atomTarget);\n\t        this.register(cmd);\n\t        return cmd;\n\t    };\n\t    CommandManager.prototype.show = function (predicate) {\n\t        var joinedCommands = {};\n\t        for (var commandId in this.commands) {\n\t            joinedCommands[commandId] = this.commands[commandId];\n\t        }\n\t        this.getDynamicCommands().forEach(function (currentCommand) {\n\t            joinedCommands[currentCommand.id] = currentCommand;\n\t        });\n\t        var list = Object.keys(joinedCommands)\n\t            .map(function (key) { return joinedCommands[key]; })\n\t            .sort(function (a, b) { return b.priority - a.priority; })\n\t            .filter(function (cmd) { return cmd.when(); });\n\t        if (predicate)\n\t            list = list.filter(predicate);\n\t        this.panel.show(list);\n\t    };\n\t    CommandManager.prototype.getDynamicCommands = function () {\n\t        var result = [];\n\t        var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t        currentActions.forEach(function (action) {\n\t            var convertedQuickCommand = new QuickCommand(action.name, action.label ? action.label : action.name, action.onClick, 1, function () { return true; });\n\t            var cmd = convertedQuickCommand;\n\t            cmd['__module__'] = 'editorTools';\n\t            result.push(convertedQuickCommand);\n\t        });\n\t        return result;\n\t    };\n\t    return CommandManager;\n\t})();\n\texports.CommandManager = CommandManager;\n\tvar cm;\n\t/*\n\t * Always return working copy of manager.\n\t */\n\tfunction manager() {\n\t    if (!cm)\n\t        cm = new CommandManager();\n\t    return cm;\n\t}\n\texports.manager = manager;\n\t/*\n\t * function for RAML -> Show Quick Commands (^Q)\n\t */\n\tfunction showCommands() {\n\t    manager().show();\n\t}\n\texports.showCommands = showCommands;\n\t/*\n\t * registerCommands is called at the plugin initialization for registering global commands\n\t */\n\tfunction registerCommands() {\n\t    cc.registerQuickCommands(manager());\n\t    cm.add('api-workbench:editor-tools', 'Show Editor Tools', function () { return et.initEditorTools(); }, function () { return et.editorToolsStatus() == false; });\n\t}\n\texports.registerCommands = registerCommands;\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar fs = __webpack_require__(16);\n\tvar path = __webpack_require__(15);\n\tvar rp = __webpack_require__(22);\n\tvar search = rp.search;\n\tvar _ = __webpack_require__(23);\n\tvar suggestions = __webpack_require__(24);\n\texports.selector = '.source.raml';\n\texports.disableForSelector = '.text.html .comment';\n\texports.filterSuggestions = true;\n\texports.inclusionPriority = 1;\n\texports.excludeLowerPriority = true;\n\tvar editorTools = __webpack_require__(5);\n\tfunction onDidInsertSuggestion(event) {\n\t    var offset = event.editor.getBuffer().characterIndexForPosition(event.triggerPosition);\n\t    if (event.suggestion.annotation) {\n\t        var txt = event.editor.getBuffer().getText();\n\t        for (var i = offset; i < txt.length; i++) {\n\t            var c = txt.charAt(i);\n\t            if (c == ')') {\n\t                offset = i + 1;\n\t                break;\n\t            }\n\t            if (c == '\\r' || c == '\\n') {\n\t                return;\n\t            }\n\t        }\n\t        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t        event.editor.getBuffer().insert(newPos, ':');\n\t        return;\n\t    }\n\t    if ((event.suggestion.replacementPrefix && event.suggestion.extra) || event.suggestion.extra == \"%\") {\n\t        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset - event.suggestion.replacementPrefix.length);\n\t        event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t    }\n\t    else {\n\t        //This actually looks exactly like a previous case but typing it as a separate case for now TODO\n\t        if (event.suggestion.extra == \" \") {\n\t            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t        }\n\t        //FIXME\n\t        if (event.suggestion.extra == \" { \") {\n\t            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t        }\n\t        if (event.suggestion.extra && event.suggestion.extra.indexOf(\"!include\") != -1) {\n\t            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t        }\n\t    }\n\t}\n\texports.onDidInsertSuggestion = onDidInsertSuggestion;\n\tvar ContentProvider = (function () {\n\t    function ContentProvider() {\n\t    }\n\t    ContentProvider.prototype.contentDirName = function (content) {\n\t        var contentPath = content.getPath();\n\t        return path.dirname(contentPath);\n\t    };\n\t    ContentProvider.prototype.dirName = function (childPath) {\n\t        return path.dirname(childPath);\n\t    };\n\t    ContentProvider.prototype.exists = function (checkPath) {\n\t        return fs.existsSync(checkPath);\n\t    };\n\t    ContentProvider.prototype.resolve = function (contextPath, relativePath) {\n\t        return path.resolve(contextPath, relativePath);\n\t    };\n\t    ContentProvider.prototype.isDirectory = function (dirPath) {\n\t        var stat = fs.statSync(dirPath);\n\t        return stat && stat.isDirectory();\n\t    };\n\t    ContentProvider.prototype.readDir = function (dirPath) {\n\t        return fs.readdirSync(dirPath);\n\t    };\n\t    return ContentProvider;\n\t})();\n\tvar AtomEditorContent = (function () {\n\t    function AtomEditorContent(textEditor) {\n\t        this.textEditor = textEditor;\n\t    }\n\t    AtomEditorContent.prototype.getText = function () {\n\t        return this.textEditor.getBuffer().getText();\n\t    };\n\t    AtomEditorContent.prototype.getPath = function () {\n\t        return this.textEditor.getPath();\n\t    };\n\t    AtomEditorContent.prototype.getBaseName = function () {\n\t        return path.basename(this.getPath());\n\t    };\n\t    return AtomEditorContent;\n\t})();\n\tvar AtomPosition = (function () {\n\t    function AtomPosition(request) {\n\t        this.request = request;\n\t    }\n\t    AtomPosition.prototype.getOffset = function () {\n\t        return this.request.editor.getBuffer().characterIndexForPosition(this.request.bufferPosition);\n\t    };\n\t    return AtomPosition;\n\t})();\n\tfunction getSuggestions(request) {\n\t    var t0 = new Date().getMilliseconds();\n\t    try {\n\t        var atomContent = new AtomEditorContent(request.editor);\n\t        var atomPosition = new AtomPosition(request);\n\t        var suggestionsProvider = new suggestions.CompletionProvider(new ContentProvider());\n\t        return suggestionsProvider.suggest(new suggestions.CompletionRequest(atomContent, atomPosition));\n\t    }\n\t    finally {\n\t        if (editorTools.aquireManager()) {\n\t            var m = editorTools.aquireManager();\n\t            if (m.performanceDebug) {\n\t                var t1 = new Date().getMilliseconds();\n\t                console.log(\"Completion calc:\" + (t1 - t0));\n\t            }\n\t        }\n\t    }\n\t}\n\texports.getSuggestions = getSuggestions;\n\tfunction getAstNode(request, clearLastChar, allowNull) {\n\t    if (clearLastChar === void 0) { clearLastChar = true; }\n\t    if (allowNull === void 0) { allowNull = true; }\n\t    var p = request.editor.getPath();\n\t    var prj = rp.project.createProject(path.dirname(p));\n\t    var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t    var text = request.editor.getBuffer().getText();\n\t    var kind = search.determineCompletionKind(text, offset);\n\t    if (kind == search.LocationKind.KEY_COMPLETION && clearLastChar) {\n\t        var pos = offset > 0 ? offset - 1 : offset;\n\t        for (var i = pos; i > 0; i--) {\n\t            var c = text[i];\n\t            if (c == '\\r' || c == '\\n') {\n\t                break;\n\t            }\n\t            else {\n\t                if (c == ' ' || c == '\\t') {\n\t                    ilevel++;\n\t                }\n\t            }\n\t        }\n\t        var oldOfffset = offset;\n\t        text = text.substring(0, oldOfffset) + \"k:\" + text.substring(oldOfffset);\n\t    }\n\t    var ilevel = 0;\n\t    var unit = prj.setCachedUnitContent(path.basename(p), text);\n\t    var ast = unit.highLevel();\n\t    var cm = offset;\n\t    for (var pm = offset - 1; pm >= 0; pm--) {\n\t        var c = text[pm];\n\t        //if (c==' '||c=='\\t'||c=='\\r'||c=='\\n'){\n\t        //    cm=pm-1;\n\t        //    continue;\n\t        //}\n\t        if (c == ' ' || c == '\\t') {\n\t            cm = pm - 1;\n\t            continue;\n\t        }\n\t        break;\n\t    }\n\t    var astNode = ast.findElementAtOffset(cm);\n\t    if (astNode && astNode.parent() == null) {\n\t        if (ilevel > 0 && kind == search.LocationKind.KEY_COMPLETION) {\n\t            var attr = _.find(astNode.attrs(), function (attr) {\n\t                var at = attr;\n\t                return at.lowLevel().start() < offset && at.lowLevel().end() >= offset && !at.property().isKey();\n\t            });\n\t            if (!attr) {\n\t                if (allowNull) {\n\t                    return null;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if (!allowNull && !astNode) {\n\t        return ast;\n\t    }\n\t    return astNode;\n\t}\n\texports.getAstNode = getAstNode;\n\tfunction saveUnit(unit) {\n\t    var unitPath = unit.absolutePath();\n\t    var unitText = unit.contents();\n\t    //first trying to find an opened text editor\n\t    var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n\t        var editorPath = editor.getPath();\n\t        return editorPath == unitPath;\n\t    });\n\t    if (openedEditor) {\n\t        openedEditor.setText(unitText);\n\t    }\n\t    else {\n\t        fs.writeFileSync(unitPath, unitText);\n\t    }\n\t}\n\texports.saveUnit = saveUnit;\n\t\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar path = __webpack_require__(15);\n\tvar fs = __webpack_require__(16);\n\tvar atom_space_pen_views_1 = __webpack_require__(25);\n\tvar provider = __webpack_require__(7);\n\tvar tooltipManager = __webpack_require__(34);\n\tvar UI = __webpack_require__(17);\n\tvar outline = __webpack_require__(33);\n\tvar editorTools = __webpack_require__(5);\n\tvar QuickOutlineDialog = (function () {\n\t    function QuickOutlineDialog(_editor) {\n\t        this._editor = _editor;\n\t    }\n\t    QuickOutlineDialog.prototype.extraContent = function (s) {\n\t    };\n\t    QuickOutlineDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var nodeToSelect = null;\n\t        var node = provider.getAstNode({ bufferPosition: this._editor.getCursorBufferPosition(), editor: this._editor }, false, false);\n\t        var vc = UI.section(\"Quick outline:\");\n\t        var section = outline.createTree(node.root(), function (x) {\n\t            if (x.selection) {\n\t                if (x.selection.elements.length > 0) {\n\t                    nodeToSelect = x.selection.elements[0];\n\t                    ok.setDisabled(false);\n\t                    return;\n\t                }\n\t            }\n\t            ok.setDisabled(true);\n\t        }, function (model) {\n\t            var editor = _this._editor;\n\t            var buffer = editor.getBuffer();\n\t            var posStart = buffer.positionForCharacterIndex(model.lowLevel().start());\n\t            editor.setCursorScreenPosition(posStart);\n\t            zz.destroy();\n\t        });\n\t        section.setStyle(\"max-height\", \"800px\");\n\t        section.addClass(\"tree-view-scroller\");\n\t        vc.addChild(section);\n\t        var cancel = UI.buttonSimple(\"Cancel\", function (x) { zz.destroy(); }, UI.Icon.NONE);\n\t        cancel.setStyle(\"float\", \"right\")\n\t            .margin(4, 10);\n\t        var ok = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) {\n\t            if (nodeToSelect) {\n\t                editorTools.aquireManager().setSelectedNode(nodeToSelect);\n\t            }\n\t            zz.destroy();\n\t        });\n\t        ok.setStyle(\"float\", \"right\")\n\t            .margin(4, 10);\n\t        ok.setDisabled(true);\n\t        vc.addChild(ok);\n\t        vc.addChild(cancel);\n\t        var html = vc.renderUI();\n\t        html.tabIndex = 0;\n\t        html.onkeypress = function (x) {\n\t            if (x.keyCode == 27) {\n\t                zz.destroy();\n\t            }\n\t        };\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return QuickOutlineDialog;\n\t})();\n\tfunction showQuickOutline(editor) {\n\t    new QuickOutlineDialog(editor).show();\n\t}\n\tfunction pixelPositionFromMouseEvent(editorView) {\n\t    var clientX = 0, clientY = 0;\n\t    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n\t    var top = clientY - linesClientRect.top;\n\t    var left = clientX - linesClientRect.left;\n\t    return { top: top, left: left };\n\t}\n\tfunction getFromShadowDom(element, selector) {\n\t    var el = element[0];\n\t    var found = el.rootElement.querySelectorAll(selector);\n\t    return atom_space_pen_views_1.$(found[0]);\n\t}\n\tfunction show() {\n\t    var ed = atom.workspace.getActiveTextEditor();\n\t    if (!ed) {\n\t        return;\n\t    }\n\t    var filePath = ed.getPath();\n\t    var filename = path.basename(filePath);\n\t    var ext = path.extname(filename);\n\t    if (!tooltipManager.isAllowedExtension(ext))\n\t        return;\n\t    if (!fs.existsSync(filePath)) {\n\t        return;\n\t    }\n\t    showQuickOutline(ed);\n\t}\n\texports.show = show;\n\t\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(16);\n\tvar path = __webpack_require__(15);\n\tvar rp = __webpack_require__(22);\n\tvar stubs = rp.stubs;\n\tvar universes = rp.universes;\n\tvar search = rp.search;\n\tvar _ = __webpack_require__(23);\n\tvar provider = __webpack_require__(7);\n\tvar UI = __webpack_require__(17);\n\tvar SpacePenViews = __webpack_require__(25);\n\tvar def = rp.ds;\n\tvar services = def;\n\tvar move = __webpack_require__(35);\n\tvar editorTools = __webpack_require__(5);\n\tvar index_1 = __webpack_require__(26);\n\tfunction createGlobalSchema(attr) {\n\t    var r = attr.parent().root();\n\t    var t = attr.property().range().universe().type(\"GlobalSchema\");\n\t    var sc = stubs.createStubNode(t, t.universe().type(\"Api\").property(\"schemas\"), \"\" + attr.value());\n\t    sc.attrOrCreate(\"value\").setValue(\"!include \" + \"schemas/\" + attr.value() + \".json\");\n\t    r.add(sc);\n\t    var ed = atom.workspace.getActiveTextEditor();\n\t    ed.getBuffer().setText(r.lowLevel().unit().contents());\n\t    var sdir = path.resolve(path.dirname(ed.getPath()), \"schemas\");\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = path.resolve(sdir, attr.value() + \".json\");\n\t    fs.writeFileSync(shFile, \"\\n{\\n  \\\"$schema\\\" : \\\"http://json-schema.org/draft-04/schema\\\" ,\\n  \\\"type\\\" : \\\"object\\\" ,\\n  \\\"properties\\\" : {\\n   }\\n}\\n\");\n\t    atom.workspace.open(shFile, {});\n\t}\n\texports.createGlobalSchema = createGlobalSchema;\n\tfunction createGlobalSchemaFromNameAndContent(root, name, schp, content, absolutePath) {\n\t    if (index_1.universeHelpers.isRAML10Node(root)) {\n\t        createGlobalSchemaFromNameAndContent10(root, name, schp, content, absolutePath);\n\t    }\n\t    else if (index_1.universeHelpers.isRAML08Node(root)) {\n\t        createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath);\n\t    }\n\t}\n\texports.createGlobalSchemaFromNameAndContent = createGlobalSchemaFromNameAndContent;\n\tfunction createSchemaFile(content, schemaPath, absolutePath) {\n\t    var ed = getActiveEditor();\n\t    var sdir = absolutePath ? path.dirname(absolutePath) : path.resolve(path.dirname(ed.getPath()), path.dirname(schemaPath));\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = absolutePath ? absolutePath : path.resolve(path.dirname(ed.getPath()), schemaPath);\n\t    fs.writeFileSync(shFile, content);\n\t}\n\tfunction createGlobalSchemaFromNameAndContent10(root, name, schemaPath, content, absolutePath) {\n\t    var t = root.definition().universe().type(universes.Universe10.TypeDeclaration.name);\n\t    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe10.Api.name).property(universes.Universe10.Api.properties.types.name), \"\" + name);\n\t    sc.attrOrCreate(universes.Universe10.TypeDeclaration.properties.type.name).setValue(\"!include \" + schemaPath);\n\t    root.add(sc);\n\t    createSchemaFile(content, schemaPath, absolutePath);\n\t}\n\texports.createGlobalSchemaFromNameAndContent10 = createGlobalSchemaFromNameAndContent10;\n\tfunction createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath) {\n\t    var t = root.definition().universe().type(universes.Universe08.GlobalSchema.name);\n\t    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe08.Api.name).property(universes.Universe08.Api.properties.schemas.name), \"\" + name);\n\t    sc.attrOrCreate(universes.Universe08.GlobalSchema.properties.value.name).setValue(\"!include \" + schp);\n\t    root.add(sc);\n\t    createSchemaFile(content, schp, absolutePath);\n\t}\n\texports.createGlobalSchemaFromNameAndContent08 = createGlobalSchemaFromNameAndContent08;\n\tfunction saveExample(r, schp, content) {\n\t    var ed = getActiveEditor();\n\t    var sdir = path.resolve(path.dirname(ed.getPath()), path.dirname(schp));\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = path.resolve(path.dirname(ed.getPath()), schp);\n\t    fs.writeFileSync(shFile, content);\n\t}\n\texports.saveExample = saveExample;\n\tvar NewProjectDialog = (function () {\n\t    function NewProjectDialog(title) {\n\t        if (title === void 0) { title = \"Create RAML Project\"; }\n\t        this.title = title;\n\t        this.apititle = \"New API\";\n\t        this.version = \"v1\";\n\t        this.baseUri = \"http://api.samplehost.com\";\n\t        this._raml1 = true;\n\t        this._defStructure = true;\n\t        this._createSampleResource = true;\n\t        this.sourceValue = path.resolve(this.generateDefaultProjectParentFolder(), \"newRamlProject\");\n\t    }\n\t    NewProjectDialog.prototype.generateDefaultProjectParentFolder = function () {\n\t        return UI.fdUtils.getHome();\n\t    };\n\t    NewProjectDialog.prototype.extraContent = function (s) {\n\t    };\n\t    NewProjectDialog.prototype.validateProjectLocation = function (value) {\n\t        var toValidate = value ? value.trim() : \"\";\n\t        if (!toValidate) {\n\t            return UI.errorStatus(\"Path should't be empty\");\n\t        }\n\t        var parentDirectory = path.dirname(toValidate);\n\t        if (!parentDirectory || parentDirectory == \".\")\n\t            return UI.errorStatus(\"Can not find path parent\");\n\t        if (!fs.existsSync(parentDirectory))\n\t            return UI.errorStatus(\"Parent directory does not exist\");\n\t        return UI.okStatus();\n\t    };\n\t    NewProjectDialog.prototype.validateTitle = function (value) {\n\t        var toValidate = value ? value.trim() : \"\";\n\t        if (!toValidate || toValidate.length < 1) {\n\t            return UI.errorStatus(\"Title field is required\");\n\t        }\n\t        return UI.okStatus();\n\t    };\n\t    NewProjectDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var section = UI.section(this.title, UI.Icon.BOOK, false, false, UI.h3(\"Please select location to place your project:\")).pad(10, 10);\n\t        var panel = new UI.Panel(UI.LayoutType.BLOCK);\n\t        var statusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n\t        var slf = new UI.CustomField(\"\", statusLabel, function (x) { return x; });\n\t        slf.setDisplay(this.validateProjectLocation(this.sourceValue).code == UI.StatusCode.ERROR);\n\t        panel.addChild(slf);\n\t        var projectLocationInput = UI.texfField(\"\", this.sourceValue, function (x) { return _this.sourceValue = x.getBinding().get(); });\n\t        projectLocationInput.getBinding().addValidator(function () { return _this.validateProjectLocation(_this.sourceValue); });\n\t        projectLocationInput.setStyle(\"width\", \"400px\");\n\t        projectLocationInput.getBinding().addListener(function (value) {\n\t            //var st = projectLocationInput.getBinding().status()\n\t            var st = _this.validateProjectLocation(value);\n\t            if (st.code != UI.StatusCode.ERROR) {\n\t                //this.updateUI(q, x)\n\t                statusLabel.setText(\"\");\n\t                statusLabel.setIcon(UI.Icon.NONE);\n\t                slf.setDisplay(false);\n\t            }\n\t            else {\n\t                statusLabel.setText(st.message);\n\t                statusLabel.setIcon(UI.Icon.BUG);\n\t                slf.setDisplay(true);\n\t            }\n\t        });\n\t        panel.addChild(\n\t        //UI.hc(\n\t        projectLocationInput);\n\t        panel.addChild(UI.h3(\"Title of your API:\"));\n\t        var titleStatusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n\t        var titleStatusMessage = new UI.CustomField(\"\", titleStatusLabel, function (x) { return x; });\n\t        titleStatusMessage.setDisplay(false);\n\t        panel.addChild(titleStatusMessage);\n\t        var titleTextField = UI.texfField(\"\", this.apititle, function (x) { return _this.apititle = x.getBinding().get(); });\n\t        titleTextField.getBinding().addValidator(function () { return _this.validateTitle(_this.apititle); });\n\t        titleTextField.getBinding().addListener(function (value) {\n\t            var status = _this.validateTitle(value);\n\t            if (status.code !== UI.StatusCode.ERROR) {\n\t                titleStatusLabel.setText(\"\");\n\t                titleStatusLabel.setIcon(UI.Icon.NONE);\n\t                titleStatusMessage.setDisplay(false);\n\t            }\n\t            else {\n\t                titleStatusLabel.setText(status.message);\n\t                titleStatusLabel.setIcon(UI.Icon.BUG);\n\t                titleStatusMessage.setDisplay(true);\n\t            }\n\t        });\n\t        panel.addChild(titleTextField);\n\t        panel.addChild(UI.h3(\"Version of your API\"));\n\t        panel.addChild(UI.texfField(\"\", this.version, function (x) { return _this.version = x.getBinding().get(); }));\n\t        panel.addChild(UI.h3(\"Base URI of your API\"));\n\t        panel.addChild(UI.texfField(\"\", this.baseUri, function (x) { return _this.baseUri = x.getBinding().get(); }));\n\t        section.addChild(panel);\n\t        var r1 = UI.checkBox(\"Use RAML 1.0\");\n\t        r1.setValue(this._raml1);\n\t        r1.getBinding().addListener(function (x) { return _this._raml1 = r1.getValue(); });\n\t        section.addChild(r1);\n\t        var r2 = UI.checkBox(\"Create default directory structure\");\n\t        r2.setValue(this._defStructure);\n\t        r2.getBinding().addListener(function (x) { return _this._defStructure = r2.getValue(); });\n\t        section.addChild(r2);\n\t        var r3 = UI.checkBox(\"Create sample resource and method\");\n\t        r3.setValue(this._createSampleResource);\n\t        r3.getBinding().addListener(function (x) { return _this._createSampleResource = r3.getValue(); });\n\t        section.addChild(r3);\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        buttonBar.addChild(UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            if (_this.validateTitle(_this.apititle).code === UI.StatusCode.ERROR) {\n\t                return;\n\t            }\n\t            if (_this.validateProjectLocation(_this.sourceValue).code === UI.StatusCode.ERROR) {\n\t                return;\n\t            }\n\t            _this.onOk(zz);\n\t            zz.destroy();\n\t        }));\n\t        section.addChild(buttonBar);\n\t        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n\t    };\n\t    NewProjectDialog.prototype.createIfNotExist = function (p) {\n\t        var ps = path.resolve(this.sourceValue, p);\n\t        if (!fs.existsSync(ps)) {\n\t            fs.mkdirSync(ps);\n\t        }\n\t    };\n\t    NewProjectDialog.prototype.onOk = function (zz) {\n\t        if (!fs.existsSync(this.sourceValue)) {\n\t            fs.mkdirSync(this.sourceValue);\n\t        }\n\t        if (this._defStructure) {\n\t            this.createIfNotExist(\"schemas\");\n\t            this.createIfNotExist(\"examples\");\n\t            this.createIfNotExist(\"traits\");\n\t            this.createIfNotExist(\"resourceTypes\");\n\t            this.createIfNotExist(\"securitySchemes\");\n\t            this.createIfNotExist(\"documentation\");\n\t            if (this._raml1) {\n\t                this.createIfNotExist(\"notebooks\");\n\t                this.createIfNotExist(\"scripts\");\n\t            }\n\t        }\n\t        var content = createRAMLFile(this.apititle, this.version, this.baseUri, this._createSampleResource, this._raml1);\n\t        var ps = path.resolve(this.sourceValue, \"api.raml\");\n\t        fs.writeFileSync(ps, content);\n\t        atom.open({ pathsToOpen: [this.sourceValue, ps] });\n\t    };\n\t    return NewProjectDialog;\n\t})();\n\tfunction createRAMLFile(title, version, baseUri, sample, raml1) {\n\t    if (sample === void 0) { sample = true; }\n\t    if (raml1 === void 0) { raml1 = true; }\n\t    var apiLines = [(raml1 ? \"#%RAML 1.0\" : \"#%RAML 0.8\"), (\"title: \" + title)];\n\t    if (version)\n\t        apiLines.push(\"version: \" + version);\n\t    if (baseUri)\n\t        apiLines.push(\"baseUri: \" + baseUri);\n\t    var typesLines = [\n\t        'types:',\n\t        '  TestType:',\n\t        '    type: object',\n\t        '    properties:',\n\t        '      id: number',\n\t        '      optional?: string',\n\t        '      expanded:',\n\t        '        type: object',\n\t        '        properties:',\n\t        '          count: number'\n\t    ], resourceLines = [\n\t        '/helloWorld:',\n\t        '  get:',\n\t        '    responses:',\n\t        '      200:',\n\t        '        body:',\n\t        '          application/json:',\n\t        '            example: |',\n\t        '              {',\n\t        '                \"message\" : \"Hello World\"',\n\t        '              }'\n\t    ];\n\t    var result = apiLines;\n\t    if (sample) {\n\t        if (raml1)\n\t            result = result.concat(typesLines);\n\t        result = result.concat(resourceLines);\n\t    }\n\t    return result.join('\\n') + '\\n';\n\t}\n\texports.createRAMLFile = createRAMLFile;\n\tfunction newProject() {\n\t    new NewProjectDialog().show();\n\t}\n\texports.newProject = newProject;\n\tfunction moveResource(h) {\n\t    new move.MoveElementsDialog(h, \"Resource Type\", true).show();\n\t}\n\texports.moveResource = moveResource;\n\tfunction splitOnLines(text) {\n\t    var lines = text.match(/^.*((\\r\\n|\\n|\\r)|$)/gm);\n\t    return lines;\n\t}\n\texports.splitOnLines = splitOnLines;\n\tfunction cleanEmptyLines(text) {\n\t    var lines = splitOnLines(text);\n\t    var rs = [];\n\t    for (var i = 0; i < lines.length; i++) {\n\t        if (lines[i].trim().length > 0) {\n\t            rs.push(lines[i]);\n\t        }\n\t    }\n\t    return rs.join(\"\");\n\t}\n\texports.cleanEmptyLines = cleanEmptyLines;\n\t//FIXME remove it from here duplication with jsyaml2lowLevel.ts\n\tfunction stripIndent(text, indent) {\n\t    var lines = splitOnLines(text);\n\t    var rs = [];\n\t    for (var i = 0; i < lines.length; i++) {\n\t        if (i == 0) {\n\t            rs.push(lines[0]);\n\t        }\n\t        else {\n\t            rs.push(lines[i].substring(indent.length));\n\t        }\n\t    }\n\t    return rs.join(\"\");\n\t}\n\tvar leadingIndent = function (node, text) {\n\t    var leading = \"\";\n\t    var pos = node.start() - 1;\n\t    while (pos > 0) {\n\t        var ch = text[pos];\n\t        if (ch == '\\r' || ch == '\\n')\n\t            break;\n\t        leading = ch + leading;\n\t        pos--;\n\t    }\n\t    return leading;\n\t};\n\tfunction indent(line) {\n\t    var rs = \"\";\n\t    for (var i = 0; i < line.length; i++) {\n\t        var c = line[i];\n\t        if (c == '\\r' || c == '\\n') {\n\t            continue;\n\t        }\n\t        if (c == ' ' || c == '\\t') {\n\t            rs += c;\n\t            continue;\n\t        }\n\t        break;\n\t    }\n\t    return rs;\n\t}\n\tfunction getActiveEditor() {\n\t    var activeEditor = atom.workspace.getActiveTextEditor();\n\t    if (activeEditor) {\n\t        return activeEditor;\n\t    }\n\t    if (editorTools.aquireManager())\n\t        return editorTools.aquireManager().getCurrentEditor();\n\t    return null;\n\t}\n\texports.getActiveEditor = getActiveEditor;\n\tvar MoveToNewFileDialog = (function () {\n\t    function MoveToNewFileDialog(node) {\n\t        this.node = node;\n\t    }\n\t    MoveToNewFileDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n\t        var errorLabel = UI.label(\"please enter correct destination path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        vc.addChild(UI.label(\"Please enter destination path\"));\n\t        var txt = UI.texfField(\"\", \"\", function (x) {\n\t            if (!txt) {\n\t                return;\n\t            }\n\t            _this.destination = txt.getBinding().get();\n\t            var isError = _this.destination.trim().length == 0;\n\t            if (!isError) {\n\t                if (path.extname(_this.destination) != '.raml') {\n\t                    isError = true;\n\t                }\n\t            }\n\t            if (!isError) {\n\t                var dir = path.resolve(path.dirname(getActiveEditor().getPath()), path.dirname(_this.destination));\n\t                if (!fs.existsSync(dir)) {\n\t                    isError = true;\n\t                }\n\t                else {\n\t                    var st = fs.statSync(dir);\n\t                    if (!st.isDirectory()) {\n\t                        isError = true;\n\t                    }\n\t                }\n\t            }\n\t            errorLabel.setDisplay(isError);\n\t            okButton.setDisabled(isError);\n\t        });\n\t        vc.addChild(UI.vc(txt));\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            var d = path.resolve(path.dirname(getActiveEditor().getPath()), _this.destination);\n\t            var dump = _this.node.lowLevel().dump();\n\t            var ci = splitOnLines(dump);\n\t            var li = ci.length > 1 ? indent(ci[1]) : indent(ci[0]);\n\t            dump = dump.substring(_this.node.lowLevel().keyEnd() - _this.node.lowLevel().start() + 1).trim();\n\t            dump = stripIndent(dump, li);\n\t            dump = \"#%RAML 0.8 \" + _this.node.definition().nameId() + \"\\n\" + dump;\n\t            fs.writeFileSync(d, dump);\n\t            //no we need to replace content of the node with text;\n\t            var txt = node.lowLevel().unit().contents();\n\t            var endPart = txt.substring(node.lowLevel().end());\n\t            var startPart = txt.substring(0, node.lowLevel().keyEnd() + 1);\n\t            var vl = startPart + \" !include \" + _this.destination + endPart;\n\t            getActiveEditor().setText(vl);\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return MoveToNewFileDialog;\n\t})();\n\texports.MoveToNewFileDialog = MoveToNewFileDialog;\n\tfunction moveOut(h) {\n\t    new MoveToNewFileDialog(h).show();\n\t}\n\texports.moveOut = moveOut;\n\tfunction renameRAMLElement() {\n\t    var ed = getActiveEditor();\n\t    var quickFixes = [];\n\t    if (ed) {\n\t        if (path.extname(ed.getPath()) == '.raml') {\n\t            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t            var node = provider.getAstNode(request, false);\n\t            if (!node) {\n\t                return;\n\t            }\n\t            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t            var kind = search.determineCompletionKind(ed.getBuffer().getText(), offset);\n\t            if (kind == search.LocationKind.VALUE_COMPLETION) {\n\t                var hlnode = node;\n\t                var attr = _.find(hlnode.attrs(), function (x) { return x.lowLevel().start() < offset && x.lowLevel().end() >= offset && !x.property().getAdapter(services.RAMLPropertyService).isKey(); });\n\t                if (attr) {\n\t                    if (attr.value()) {\n\t                        var p = attr.property();\n\t                        //FIXME INFRASTRUCTURE NEEDED\n\t                        var v = attr.value();\n\t                        var targets = search.referenceTargets(p, hlnode);\n\t                        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n\t                        if (t) {\n\t                            UI.prompt(\"New name for \" + attr.value(), function (newVal) {\n\t                                findUsagesImpl(function (n, r) {\n\t                                    //todo update nodes\n\t                                    r.reverse().forEach(function (x) {\n\t                                        var ua = x;\n\t                                        ua.asAttr().setValue(newVal);\n\t                                    });\n\t                                    n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n\t                                    var ed = getActiveEditor();\n\t                                    ed.getBuffer().setText(n.lowLevel().unit().contents());\n\t                                });\n\t                            }, attr.value());\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (kind == search.LocationKind.KEY_COMPLETION || kind == search.LocationKind.SEQUENCE_KEY_COPLETION) {\n\t                var hlnode = node;\n\t                UI.prompt(\"New name for \" + hlnode.name(), function (newVal) {\n\t                    findUsagesImpl(function (n, r) {\n\t                        var oldValue = n.attrValue(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId());\n\t                        //todo update nodes\n\t                        r.reverse().forEach(function (x) {\n\t                            var ua = x;\n\t                            renameInProperty(ua.asAttr(), oldValue, newVal);\n\t                        });\n\t                        n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n\t                        var ed = getActiveEditor();\n\t                        ed.getBuffer().setText(n.lowLevel().unit().contents());\n\t                    });\n\t                }, hlnode.name());\n\t            }\n\t        }\n\t    }\n\t}\n\texports.renameRAMLElement = renameRAMLElement;\n\tfunction renameInProperty(property, contentToReplace, replaceWith) {\n\t    var oldPropertyValue = property.value();\n\t    if (typeof oldPropertyValue == 'string') {\n\t        var oldPropertyStringValue = oldPropertyValue;\n\t        var newPropertyStringValue = oldPropertyStringValue.replace(contentToReplace, replaceWith);\n\t        property.setValue(newPropertyStringValue);\n\t        if (oldPropertyStringValue.indexOf(contentToReplace) == -1) {\n\t            if (property.name().indexOf(contentToReplace) != -1) {\n\t                var newValue = property.name().replace(contentToReplace, replaceWith);\n\t                property.setKey(newValue);\n\t            }\n\t        }\n\t        return;\n\t    }\n\t    else if (typeof oldPropertyValue === \"object\") {\n\t        var structuredValue = oldPropertyValue;\n\t        var oldPropertyStringValue = structuredValue.valueName();\n\t        if (oldPropertyStringValue.indexOf(contentToReplace) != -1) {\n\t            var convertedHighLevel = structuredValue.toHighLevel();\n\t            if (convertedHighLevel) {\n\t                var found = false;\n\t                if (convertedHighLevel.definition().isAnnotationType()) {\n\t                    var prop = getKey(convertedHighLevel.definition(), structuredValue.lowLevel());\n\t                    prop.setValue(\"(\" + replaceWith + \")\");\n\t                    return;\n\t                }\n\t                convertedHighLevel.attrs().forEach(function (attribute) {\n\t                    if (attribute.property().getAdapter(services.RAMLPropertyService).isKey()) {\n\t                        var oldValue = attribute.value();\n\t                        if (typeof oldValue == 'string') {\n\t                            found = true;\n\t                            var newValue = oldValue.replace(contentToReplace, replaceWith);\n\t                            attribute.setValue(newValue);\n\t                        }\n\t                    }\n\t                });\n\t                return;\n\t            }\n\t        }\n\t    }\n\t    //default case\n\t    property.setValue(replaceWith);\n\t}\n\tfunction getKey(t, n) {\n\t    var up = new def.UserDefinedProp(\"name\", null);\n\t    //up.withDomain(this);\n\t    up.withRange(this.universe().type(universes.Universe10.StringType.name));\n\t    up.withFromParentKey(true);\n\t    var node = t.getAdapter(services.RAMLService).getDeclaringNode();\n\t    //node:ll.ILowLevelASTNode, parent:hl.IHighLevelNode, private _def:hl.IValueTypeDefinition, private _prop:hl.IProperty, private fromKey:boolean = false\n\t    return stubs.createASTPropImpl(n, node, up.range(), up, true);\n\t    //rs.push(up);\n\t}\n\tvar getKeyValue = function (offset, txt) {\n\t    var m = offset;\n\t    for (var i = offset; i >= 0; i--) {\n\t        var c = txt.charAt(i);\n\t        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t') {\n\t            m = i + 1;\n\t            break;\n\t        }\n\t    }\n\t    var res = \"\";\n\t    for (var i = m; m < txt.length; i++) {\n\t        var c = txt.charAt(i);\n\t        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t' || c == ':') {\n\t            break;\n\t        }\n\t        res += c;\n\t    }\n\t    return res;\n\t};\n\tfunction select() {\n\t    var ed = getActiveEditor();\n\t    var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t    var node = provider.getAstNode(request, false);\n\t    if (!node) {\n\t        return;\n\t    }\n\t    var start = ed.getBuffer().positionForCharacterIndex(node.lowLevel().start());\n\t    var end = ed.getBuffer().positionForCharacterIndex(node.lowLevel().end());\n\t    ed.setSelectedBufferRange({ start: start, end: end }, {});\n\t}\n\texports.select = select;\n\t//export function expandSignature(attr:hl.IAttribute){\n\t//    var tr=signature.convertToTrait(signature.parse(attr));\n\t//    //console.log('trait:\\n' + tr.highLevel().lowLevel().dump());\n\t//    var res = attr.parent();\n\t//    //pr.remove(attr); // incorrect usage!!! remove attributes as below\n\t//    attr.remove();\n\t//    tr.highLevel().elements().forEach(x=>{\n\t//        res.add(<any>x)\n\t//    });\n\t//    var ed=getActiveEditor();\n\t//    ed.setText(attr.root().lowLevel().unit().contents());\n\t//}\n\tfunction findUsagesImpl(f) {\n\t    if (f === void 0) { f = display; }\n\t    var ed = getActiveEditor();\n\t    if (ed) {\n\t        if (path.extname(ed.getPath()) == '.raml') {\n\t            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t            var p = request.editor.getPath();\n\t            var prj = rp.project.createProject(path.dirname(p));\n\t            var unit = prj.unit(path.basename(p));\n\t            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t            var text = request.editor.getBuffer().getText();\n\t            unit.updateContent(text);\n\t            var decl = search.findUsages(unit, offset);\n\t            if (decl.node) {\n\t                f(decl.node, decl.results);\n\t            }\n\t        }\n\t    }\n\t}\n\texports.findUsagesImpl = findUsagesImpl;\n\tfunction findUsages() {\n\t    findUsagesImpl(display);\n\t}\n\texports.findUsages = findUsages;\n\tvar SearchResultView = (function (_super) {\n\t    __extends(SearchResultView, _super);\n\t    function SearchResultView(query, _result) {\n\t        _super.call(this);\n\t        this.query = query;\n\t        this._result = _result;\n\t        this.isAttached = false;\n\t    }\n\t    SearchResultView.prototype.initialize = function () {\n\t        _super.prototype.initialize.apply(this, arguments);\n\t        return true;\n\t    };\n\t    SearchResultView.content = function () {\n\t        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n\t    };\n\t    SearchResultView.prototype.attached = function () {\n\t        if (this.isAttached) {\n\t            return;\n\t        }\n\t        this.load();\n\t        this.isAttached = true;\n\t    };\n\t    SearchResultView.prototype.setInput = function (query, _result) {\n\t        this.query = query;\n\t        this._result = _result;\n\t        this.load();\n\t    };\n\t    SearchResultView.prototype.load = function () {\n\t        var _this = this;\n\t        var section = UI.section(\"Find usages for \" + this.query, UI.Icon.SEARCH);\n\t        var view = UI.list(this._result, function (x) {\n\t            var p1 = getActiveEditor().getBuffer().positionForCharacterIndex(x.getLowLevelStart());\n\t            var res = UI.hc(UI.a(x.id(), function (y) {\n\t                openPropertyNode(getActiveEditor(), x);\n\t            }), UI.label(x.lowLevel().unit().path() + \" line:\", UI.Icon.NONE, UI.TextClasses.SUBTLE).pad(5, 5), UI.label(\"\" + p1.row, UI.Icon.NONE, UI.TextClasses.SUCCESS));\n\t            return res;\n\t        });\n\t        view.setStyle(\"max-height\", \"400px\");\n\t        section.addChild(view);\n\t        section.addChild(UI.button(\"Close\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) { _this.panel.destroy(); sv = null; }));\n\t        this.html(section.renderUI());\n\t    };\n\t    return SearchResultView;\n\t})(SpacePenViews.ScrollView);\n\tvar sv;\n\tfunction display(query, n) {\n\t    if (sv) {\n\t        sv.setInput(query.name(), n);\n\t    }\n\t    else {\n\t        sv = new SearchResultView(query.name() + \":\" + query.definition().nameId(), n);\n\t        sv.panel = atom.workspace.addBottomPanel({ item: sv });\n\t    }\n\t}\n\t//TODO REFACTOR COMMON LOGIC TO COFE\n\tvar openPropertyNode = function (ed, t) {\n\t    var p1 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelStart());\n\t    var p2 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelEnd());\n\t    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n\t};\n\t//TODO REFACTOR COMMON LOGIC TO COFE\n\tvar openNode = function (ed, t) {\n\t    openLowLevelNode(ed, t.lowLevel());\n\t};\n\t//TODO REFACTOR COMMON LOGIC TO COFE\n\tvar openLowLevelNode = function (ed, t) {\n\t    if (t.unit().absolutePath() != ed.getPath()) {\n\t        atom.workspace.open(t.unit().absolutePath(), {}).then(function (x) {\n\t            ed = getActiveEditor();\n\t            openLowLevelNode(ed, t);\n\t        });\n\t        return;\n\t    }\n\t    var p1 = ed.getBuffer().positionForCharacterIndex(t.start());\n\t    var p2 = ed.getBuffer().positionForCharacterIndex(t.end());\n\t    p2.column = p1.column + t.key() ? t.key().length : 0;\n\t    p2.row = p1.row;\n\t    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n\t};\n\tfunction gotoDeclaration() {\n\t    var ed = getActiveEditor();\n\t    if (ed) {\n\t        if (path.extname(ed.getPath()) == '.raml') {\n\t            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t            var p = request.editor.getPath();\n\t            var prj = rp.project.createProject(path.dirname(p));\n\t            var unit = prj.unit(path.basename(p));\n\t            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t            var text = request.editor.getBuffer().getText();\n\t            unit.updateContent(text);\n\t            var decl = search.findDeclaration(unit, offset);\n\t            if (decl) {\n\t                if (!decl.absolutePath) {\n\t                    openLowLevelNode(ed, decl.lowLevel());\n\t                }\n\t                else {\n\t                    var absolutePath = decl.absolutePath();\n\t                    if (absolutePath && absolutePath.toLowerCase().indexOf('http') === 0) {\n\t                        return;\n\t                    }\n\t                    atom.workspace.open(absolutePath, {});\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\texports.gotoDeclaration = gotoDeclaration;\n\t\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar path = __webpack_require__(15);\n\tvar rp = __webpack_require__(22);\n\tvar rr = rp.utils;\n\tvar TextBuffer = __webpack_require__(27);\n\tvar editorManager = __webpack_require__(36);\n\tvar editorTools = __webpack_require__(5);\n\texports.grammarScopes = ['source.raml'];\n\texports.scope = 'file';\n\texports.lintOnFly = true;\n\tvar lintersToDestroy = [];\n\tvar linterApiProxy = {};\n\tvar relint = function (editor) {\n\t    var editorPath = editor.getPath && editor.getPath();\n\t    var extName = editorPath && path.extname(editorPath);\n\t    var lowerCase = extName && extName.toLowerCase();\n\t    var linter = linterApiProxy.getEditorLinter(editor);\n\t    lintersToDestroy.push(linter);\n\t    if (lowerCase === '.raml' || lowerCase === '.yaml') {\n\t        var res = lint(editor);\n\t        if (!rr.hasAsyncRequests()) {\n\t            linterApiProxy.setMessages(linter, res);\n\t            console.log(\"Messages: \" + res.length);\n\t        }\n\t        setupLinterCallback(editor, function () { return linterApiProxy.deleteMessages(linter); });\n\t        linter.onDidDestroy(function () {\n\t            removeLinterCallback(editor);\n\t        });\n\t        editor.onDidDestroy(function () {\n\t            destroyLinter(linterApiProxy, linter);\n\t        });\n\t    }\n\t};\n\tfunction initEditorObservers(linterApi) {\n\t    linterApiProxy = linterApi;\n\t    rr.addLoadCallback(function (x) {\n\t        atom.workspace.getTextEditors().forEach(function (x) { return relint(x); });\n\t        var manager = editorTools.aquireManager();\n\t        if (manager) {\n\t            manager.updateDetails();\n\t        }\n\t    });\n\t    atom.workspace.observeTextEditors(relint);\n\t    return {\n\t        dispose: function () {\n\t            lintersToDestroy.forEach(function (linter) {\n\t                destroyLinter(linterApi, linter);\n\t            });\n\t        }\n\t    };\n\t}\n\texports.initEditorObservers = initEditorObservers;\n\tfunction destroyLinter(linterApi, linter) {\n\t    linterApi.deleteMessages(linter);\n\t    linterApi.deleteLinter(linter);\n\t}\n\t;\n\tfunction setupLinterCallback(editor, callback) {\n\t    editor.linterCallback = callback;\n\t}\n\tfunction removeLinterCallback(editor) {\n\t    editor.linterCallback = null;\n\t}\n\tfunction execLinterCallback(editor) {\n\t    if (editor.linterCallback) {\n\t        editor.linterCallback();\n\t        removeLinterCallback(editor);\n\t    }\n\t}\n\tfunction lint(textEditor) {\n\t    var result = actualLint(textEditor);\n\t    if (rr.hasAsyncRequests()) {\n\t        return [];\n\t    }\n\t    return result;\n\t}\n\texports.lint = lint;\n\tfunction isRAMLUnit(editor) {\n\t    var contents = editor.getBuffer().getText();\n\t    return contents.match(/^\\s*#%RAML\\s+(\\d\\.\\d)\\s*(\\w*)\\s*$/m);\n\t}\n\tfunction actualLint(textEditor) {\n\t    execLinterCallback(textEditor);\n\t    if (rr.hasAsyncRequests()) {\n\t        return [];\n\t    }\n\t    if (!isRAMLUnit(textEditor))\n\t        return [];\n\t    var l = new Date().getTime();\n\t    var astNode = editorManager.ast(textEditor);\n\t    if (astNode == null) {\n\t        return [];\n\t    }\n\t    var result = [];\n\t    var acceptor = new Acceptor(textEditor, result);\n\t    var c = astNode.lowLevel() ? astNode.lowLevel().unit().contents() : \"\";\n\t    var tab = 0;\n\t    while (true) {\n\t        var tab = c.indexOf('\\t', tab);\n\t        if (tab != -1) {\n\t            var p1 = textEditor.getBuffer().positionForCharacterIndex(tab);\n\t            var p2 = textEditor.getBuffer().positionForCharacterIndex(tab + 1);\n\t            var t = \"Using tabs  can lead to unpredictable results\";\n\t            var message = {\n\t                type: (\"Warning\"),\n\t                filePath: textEditor.getPath(),\n\t                text: t,\n\t                trace: [],\n\t                range: [[p1.row, p1.column], [p2.row, p2.column]]\n\t            };\n\t            result.push(message);\n\t            tab++;\n\t        }\n\t        else {\n\t            break;\n\t        }\n\t    }\n\t    if (!astNode.lowLevel()) {\n\t        return [];\n\t    }\n\t    gatherValidationErrors(astNode, result, textEditor);\n\t    var l1 = new Date().getTime();\n\t    var map = {};\n\t    result.forEach(function (x) {\n\t        var original = JSON.parse(JSON.stringify(x));\n\t        original.trace = null;\n\t        var newKey = JSON.stringify(original);\n\t        var tr = map[newKey];\n\t        if (tr) {\n\t            tr.push(x);\n\t        }\n\t        else {\n\t            map[newKey] = [x];\n\t        }\n\t    });\n\t    var rs = [];\n\t    for (var i in map) {\n\t        var mes = JSON.parse(i);\n\t        mes.trace = [];\n\t        var ms = map[i];\n\t        ms.forEach(function (x) {\n\t            if (x.trace) {\n\t                mes.trace = mes.trace.concat(x.trace);\n\t            }\n\t        });\n\t        rs.push(mes);\n\t    }\n\t    if (editorTools.aquireManager()) {\n\t        if (editorTools.aquireManager().performanceDebug) {\n\t            console.log(\"Linting took:\" + (l1 - l));\n\t        }\n\t    }\n\t    return rs.filter(function (x) { return x; });\n\t}\n\tvar Acceptor = (function () {\n\t    function Acceptor(editor, errors) {\n\t        this.editor = editor;\n\t        this.errors = errors;\n\t        this.buffers = {};\n\t    }\n\t    Acceptor.prototype.begin = function () {\n\t    };\n\t    Acceptor.prototype.accept = function (issue) {\n\t        var _this = this;\n\t        if (!issue) {\n\t            return;\n\t        }\n\t        var p1 = this.editor.getBuffer().positionForCharacterIndex(issue.start);\n\t        var p2 = this.editor.getBuffer().positionForCharacterIndex(issue.end);\n\t        var t = issue.message;\n\t        var pos = t.lastIndexOf(\" at line \");\n\t        if (pos != -1) {\n\t            t = t.substring(0, pos); //it is message from yaml lets cut line info\n\t        }\n\t        var message = { type: (issue.isWarning ? \"Warning\" : 'Error'),\n\t            filePath: issue.path ? issue.path : this.editor.getPath(),\n\t            text: t,\n\t            trace: [],\n\t            range: [[p1.row, p1.column], [p2.row, p2.column]] };\n\t        this.errors.push(message);\n\t        if (issue.extras) {\n\t            issue.extras.forEach(function (x) {\n\t                var t = x.message;\n\t                var buf = _this.editor.getBuffer();\n\t                var ps = x.path;\n\t                if (x.unit) {\n\t                    ps = x.unit.absolutePath();\n\t                }\n\t                if (ps) {\n\t                    if (_this.buffers[ps]) {\n\t                        buf = _this.buffers[ps];\n\t                    }\n\t                    else {\n\t                        buf = new TextBuffer(x.unit.contents());\n\t                        _this.buffers[ps] = buf;\n\t                    }\n\t                }\n\t                var p1 = buf.positionForCharacterIndex(x.start);\n\t                var p2 = buf.positionForCharacterIndex(x.end);\n\t                var trace = {\n\t                    type: \"Trace\",\n\t                    filePath: x.path ? ps : _this.editor.getPath(),\n\t                    text: t,\n\t                    range: [[p1.row, p1.column], [p2.row, p2.column]]\n\t                };\n\t                message.trace.push(trace);\n\t            });\n\t        }\n\t    };\n\t    Acceptor.prototype.acceptUnique = function (issue) {\n\t        this.accept(issue);\n\t    };\n\t    Acceptor.prototype.end = function () {\n\t    };\n\t    return Acceptor;\n\t})();\n\tfunction gatherValidationErrors(astNode, errors, editor) {\n\t    if (astNode) {\n\t        astNode.validate(new Acceptor(editor, errors));\n\t    }\n\t}\n\t\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar _ = __webpack_require__(23);\n\texports.DYNAMIC_COMMAND_TAG = \"DYNAMIC_COMMAND_TAG\";\n\tvar commandIdToCommandInfo = {};\n\tvar tagToCommands = {};\n\t/**\n\t * Adds new managed command\n\t * @param selector - command CSS selector\n\t * @param id - command id. Must be unique across the managed commands.\n\t * @param callBack - called on command invocation\n\t * @param tag - optional action tag allowing to perform batch operations\n\t */\n\tfunction addCommand(selector, id, callBack, tag) {\n\t    if (_.find(listCommands(), function (commandId) {\n\t        if (commandId == id) {\n\t            return true;\n\t        }\n\t        return false;\n\t    })) {\n\t        return;\n\t    }\n\t    var disposable = atom.commands.add(selector, id, callBack);\n\t    var commandInfo = {\n\t        commandId: id,\n\t        tag: tag,\n\t        disposable: disposable\n\t    };\n\t    commandIdToCommandInfo[id] = commandInfo;\n\t    if (tag) {\n\t        var tagCommands = tagToCommands[tag];\n\t        if (!tagCommands) {\n\t            tagCommands = [];\n\t            tagToCommands[tag] = tagCommands;\n\t        }\n\t        tagCommands.push(commandInfo);\n\t    }\n\t}\n\texports.addCommand = addCommand;\n\t/**\n\t * Deletes unmanaged command.\n\t * Generally, should not be called for managed actions, use the managed\n\t * version instead.\n\t * @param id - command id\n\t */\n\tfunction deleteUnmanagedCommand(id) {\n\t    atom.commands.registeredCommands[id] = null;\n\t    atom.commands.selectorBasedListenersByCommandName[id] = null;\n\t}\n\texports.deleteUnmanagedCommand = deleteUnmanagedCommand;\n\t/**\n\t * Deletes managed action by id\n\t * @param id\n\t */\n\tfunction deleteManagedCommand(id) {\n\t    var commandInfo = commandIdToCommandInfo[id];\n\t    if (!commandInfo)\n\t        return;\n\t    commandInfo.disposable.dispose();\n\t    delete commandIdToCommandInfo[id];\n\t    if (commandInfo.tag) {\n\t        var tagCommands = tagToCommands[commandInfo.tag];\n\t        if (!tagCommands)\n\t            return;\n\t        var infoIndex = -1;\n\t        _.find(tagCommands, function (currentInfo, index) {\n\t            if (currentInfo.commandId == id) {\n\t                infoIndex = index;\n\t                return true;\n\t            }\n\t            return false;\n\t        });\n\t        if (infoIndex != -1)\n\t            tagCommands.splice(infoIndex, 1);\n\t    }\n\t}\n\texports.deleteManagedCommand = deleteManagedCommand;\n\t/**\n\t * Deletes all managed commands tagged the the specific tag\n\t * @param tag\n\t */\n\tfunction deleteCommandsByTag(tag) {\n\t    var tagCommands = tagToCommands[tag];\n\t    if (!tagCommands)\n\t        return;\n\t    for (var index in tagCommands) {\n\t        var currentInfo = tagCommands[index];\n\t        currentInfo.disposable.dispose();\n\t        delete commandIdToCommandInfo[currentInfo.commandId];\n\t    }\n\t    delete tagToCommands[tag];\n\t}\n\texports.deleteCommandsByTag = deleteCommandsByTag;\n\t/**\n\t * Lists all commands, both managed and unmanaged.\n\t * @returns {string[]}\n\t */\n\tfunction listCommands() {\n\t    var result = [];\n\t    for (var commandName in atom.commands.selectorBasedListenersByCommandName) {\n\t        result.push(commandName);\n\t    }\n\t    return result;\n\t}\n\texports.listCommands = listCommands;\n\tvar initialized = false;\n\tfunction initialize() {\n\t    if (initialized)\n\t        return;\n\t    initialized = true;\n\t    try {\n\t        //forcing command palette to register itself\n\t        atom.packages.activatePackage('command-palette');\n\t        //registering our own listener to command palette's command\n\t        var listener = function () {\n\t            prePanelDisplay();\n\t        };\n\t        listener.commandManager = true;\n\t        atom.commands.add('atom-workspace', 'command-palette:toggle', listener);\n\t        ////and now swapping those listeners, so our one is called first\n\t        //var listenersArray = (<any>atom.commands.selectorBasedListenersByCommandName)\n\t        //    [\"command-palette:toggle\"]\n\t        //listenersArray.splice(0,0,listenersArray[1])\n\t        //listenersArray.splice(1, 1)\n\t        var listenersArray = atom.commands.selectorBasedListenersByCommandName[\"command-palette:toggle\"];\n\t        listenersArray.forEach(function (listener) {\n\t            if (listener.callback.commandManager) {\n\t                listener.sequenceNumber = 100500000;\n\t            }\n\t        });\n\t    }\n\t    catch (Error) {\n\t        console.error(Error.message);\n\t    }\n\t}\n\texports.initialize = initialize;\n\tvar contributors = {};\n\tfunction registerContributor(contributor) {\n\t    contributors[contributor.id] = contributor;\n\t}\n\texports.registerContributor = registerContributor;\n\tfunction prePanelDisplay() {\n\t    deleteCommandsByTag(exports.DYNAMIC_COMMAND_TAG);\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        if (contributor.calculationStarted) {\n\t            contributor.calculationStarted();\n\t        }\n\t    }\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        contributor.calculateItems().forEach(function (item) {\n\t            addCommand(item.selector, \"api-workbench:\" + item.id, item.callBack, exports.DYNAMIC_COMMAND_TAG);\n\t        });\n\t    }\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        if (contributor.calculationFinished) {\n\t            contributor.calculationFinished();\n\t        }\n\t    }\n\t}\n\t\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar _ = __webpack_require__(23);\n\tvar commandManager = __webpack_require__(11);\n\tvar originalShowForEvent;\n\t/**\n\t * Must be called first, at startup, before the module is used.\n\t */\n\tfunction initialize() {\n\t    if (initialized) {\n\t        return;\n\t    }\n\t    initialized = true;\n\t    originalShowForEvent = atom.contextMenu.constructor.prototype.showForEvent;\n\t    atom.contextMenu.constructor.prototype.showForEvent = function (event) {\n\t        preMenuDisplay();\n\t        originalShowForEvent.apply(atom.contextMenu, [event]);\n\t        postMenuDisplay();\n\t    };\n\t}\n\texports.initialize = initialize;\n\t/**\n\t * Adds new contributor to the list. All contributors are asked for the menu items\n\t * before the menu is displayed.\n\t * @param contributor\n\t */\n\tfunction registerContributor(contributor) {\n\t    contributors[contributor.id] = contributor;\n\t}\n\texports.registerContributor = registerContributor;\n\t/**\n\t * Generally it is recommended to use contributor-based architecture instead.\n\t * This method allows adding a single menu item manually, if needed.\n\t * @param name\n\t * @param onClick\n\t * @param categories\n\t * @param shouldDisplay\n\t */\n\tfunction addMenuItem(name, onClick, categories, shouldDisplay) {\n\t}\n\texports.addMenuItem = addMenuItem;\n\t/**\n\t * Generally it is recommended to use contributor-based architecture instead.\n\t * Deletes all menu items with a given selector. Should almost never be called.\n\t * Can not delete contributor-based menu items.\n\t * @param selector\n\t */\n\tfunction deleteMenuItems(selector) {\n\t    //TODO implement\n\t}\n\texports.deleteMenuItems = deleteMenuItems;\n\t/**\n\t * Generally it is recommended to use contributor-based architecture instead.\n\t * Deletes menu item by its selector, name, and optionally categories.\n\t * Can not delete contributor-based menu items.\n\t * @param selector\n\t * @param name\n\t * @param categories\n\t */\n\tfunction deleteMenuItem(selector, name, categories) {\n\t    //TODO implement\n\t}\n\texports.deleteMenuItem = deleteMenuItem;\n\tvar contributors = {};\n\tvar initialized = false;\n\tvar ContextMenuItemNode = (function () {\n\t    function ContextMenuItemNode(menuItem, nameOverride) {\n\t        this.selector = menuItem.selector;\n\t        if (nameOverride) {\n\t            this.name = nameOverride;\n\t        }\n\t        else {\n\t            this.name = menuItem.name;\n\t        }\n\t        this.categories = menuItem.categories;\n\t        this.onClick = menuItem.onClick;\n\t        this.children = [];\n\t    }\n\t    return ContextMenuItemNode;\n\t})();\n\t/**\n\t * Selector that were used at least once in the context menu\n\t * @type {Array}\n\t */\n\tvar usedSelectors = [];\n\tfunction preMenuDisplay() {\n\t    try {\n\t        var treeRoots = calculateMenuItemsTree();\n\t        var nodeSets = {};\n\t        cleanExistingSets();\n\t        commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG);\n\t        treeRoots.forEach(function (node) {\n\t            var itemSet = nodeSets[node.selector];\n\t            if (!itemSet) {\n\t                itemSet = findOrCreateItemSet(node.selector);\n\t                nodeSets[node.selector] = itemSet;\n\t            }\n\t            var menuItem = constructAtomMenuItem(node);\n\t            itemSet.items.push(menuItem);\n\t        });\n\t    }\n\t    catch (Error) {\n\t        console.log(Error.message);\n\t    }\n\t}\n\tfunction constructAtomMenuItem(node) {\n\t    var result = {\n\t        label: node.name,\n\t    };\n\t    if (node.children.length > 0) {\n\t        result.submenu = [];\n\t    }\n\t    else {\n\t        var commandName = \"api-workbench:\" + node.name;\n\t        var existingCommands = commandManager.listCommands();\n\t        commandManager.addCommand(node.selector, commandName, node.onClick, commandManager.DYNAMIC_COMMAND_TAG);\n\t        result.command = commandName;\n\t    }\n\t    node.children.forEach(function (child) {\n\t        var childMenuItem = constructAtomMenuItem(child);\n\t        result.submenu.push(childMenuItem);\n\t    });\n\t    return result;\n\t}\n\tvar DYNAMIC_SET_TAG = \"DYNAMIC_SET_TAG\";\n\tfunction findOrCreateItemSet(selector) {\n\t    var existingSet = _.find(atom.contextMenu.itemSets, function (currentSet) {\n\t        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n\t    });\n\t    if (!existingSet) {\n\t        existingSet = {\n\t            items: [],\n\t            selector: selector,\n\t            specificity: 11,\n\t            tag: DYNAMIC_SET_TAG\n\t        };\n\t        atom.contextMenu.itemSets.push(existingSet);\n\t        //saving used selector name\n\t        if (!_.find(usedSelectors, function (name) { return name == selector; })) {\n\t            usedSelectors.push(selector);\n\t        }\n\t    }\n\t    return existingSet;\n\t}\n\tfunction cleanExistingSets() {\n\t    var existingSets = _.filter(atom.contextMenu.itemSets, function (currentSet) {\n\t        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n\t    });\n\t    existingSets.forEach(function (existingSet) {\n\t        existingSet.items = [];\n\t    });\n\t}\n\tfunction postMenuDisplay() {\n\t    //commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG)\n\t}\n\tfunction calculateMenuItemsTree() {\n\t    var result = [];\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        if (contributor.calculationStarted) {\n\t            contributor.calculationStarted();\n\t        }\n\t    }\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        contributor.calculateItems().forEach(function (item) {\n\t            addItemsTreeNode(result, item);\n\t        });\n\t    }\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        if (contributor.calculationFinished) {\n\t            contributor.calculationFinished();\n\t        }\n\t    }\n\t    return result;\n\t}\n\tfunction addItemsTreeNode(roots, item) {\n\t    var currentList = roots;\n\t    if (item.categories) {\n\t        for (var catIndex in item.categories) {\n\t            var currentSegment = item.categories[catIndex];\n\t            var existingNode = _.find(currentList, function (node) {\n\t                return node.name == currentSegment;\n\t            });\n\t            if (!existingNode) {\n\t                existingNode = new ContextMenuItemNode(item, currentSegment);\n\t                currentList.push(existingNode);\n\t            }\n\t            if (!existingNode.children) {\n\t                currentList = [];\n\t                existingNode.children = currentList;\n\t            }\n\t            else {\n\t                currentList = existingNode.children;\n\t            }\n\t        }\n\t    }\n\t    var leafNode = _.find(currentList, function (node) {\n\t        return node.name == item.name;\n\t    });\n\t    if (leafNode) {\n\t        var index = currentList.indexOf(leafNode, 0);\n\t        if (index != undefined) {\n\t            currentList.splice(index, 1);\n\t        }\n\t    }\n\t    leafNode = new ContextMenuItemNode(item);\n\t    currentList.push(leafNode);\n\t    //var existingRoot = _.find(roots, currentItem => {\n\t    //    return item.name == currentItem.name\n\t    //})\n\t    //\n\t    //if (!existingRoot) {\n\t    //    existingRoot = new ContextMenuItemNode(item);\n\t    //    roots.push(existingRoot)\n\t    //}\n\t    //\n\t    //if (!item.categories) {\n\t    //\n\t    //    return\n\t    //}\n\t    //\n\t    //var currentParent = existingRoot;\n\t    //\n\t    //item.categories.forEach(category=>{\n\t    //\n\t    //    var existingNode = _.find(currentParent.children, currentItem => {\n\t    //        return category == currentItem.name\n\t    //    })\n\t    //\n\t    //    if (!existingNode) {\n\t    //        existingNode = new ContextMenuItemNode(item)\n\t    //        currentParent.children.push(existingNode)\n\t    //        return\n\t    //    }\n\t    //\n\t    //    currentParent = existingNode\n\t    //})\n\t}\n\t\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar contextMenu = __webpack_require__(12);\n\tvar commandManager = __webpack_require__(11);\n\tvar contextActions = __webpack_require__(31);\n\tvar path = __webpack_require__(15);\n\tvar provider = __webpack_require__(7);\n\tvar rp = __webpack_require__(22);\n\tvar search = rp.search;\n\tvar editorTools = __webpack_require__(5);\n\tfunction registerCommonActions() {\n\t    //TODO here the common actions should be registered\n\t}\n\t/**\n\t * Must be called once on module initialization\n\t */\n\tfunction initialize() {\n\t    initializeActionSupport();\n\t    registerCommonActions();\n\t}\n\texports.initialize = initialize;\n\t/**\n\t * For those who ignore state calculators approach. Is not recommended to use.\n\t */\n\tvar NullCalculator = (function () {\n\t    function NullCalculator() {\n\t    }\n\t    NullCalculator.prototype.calculate = function () {\n\t    };\n\t    return NullCalculator;\n\t})();\n\texports.NullCalculator = NullCalculator;\n\t/**\n\t * This class calculates current open editor AST state, including the selected node.\n\t *\n\t * The state is actually calculated on the global calculation start, and calling \"calculate\"\n\t * just returns the state. This allows to reuse a single instance in many actions\n\t * and only perform the actual state calculation once.\n\t *\n\t * On reuse please call contextCalculationStarted and contextCalculationFinished methods\n\t * from respective methods of the state calculator that reuses current one.\n\t *\n\t * It is not recommended to inherit the class, instead, reuse the exported instance of the class\n\t * so that AST parsing is performed once.\n\t */\n\tvar GeneralASTStateCalculator = (function () {\n\t    function GeneralASTStateCalculator() {\n\t        var _this = this;\n\t        this.state = null;\n\t        /**\n\t         * If present is called before any context calculations are started\n\t         */\n\t        this.contextCalculationStarted = function () {\n\t            if (_this.state == null) {\n\t                _this.state = _this.calculateState();\n\t            }\n\t        };\n\t        /**\n\t         * If present is called after all context calculations are finished\n\t         */\n\t        this.contextCalculationFinished = function () {\n\t            //deleting current state\n\t            _this.state = null;\n\t        };\n\t    }\n\t    /**\n\t     * Is called to calculate context\n\t     */\n\t    GeneralASTStateCalculator.prototype.calculate = function () {\n\t        //should actually never happened if this class is reused properly\n\t        if (this.state == null) {\n\t            this.state = this.calculateState();\n\t        }\n\t        return this.state;\n\t    };\n\t    GeneralASTStateCalculator.prototype.calculateState = function () {\n\t        var gotEditorFromOutline = false;\n\t        var editor = null;\n\t        if (atom.workspace.getActiveTextEditor()) {\n\t            editor = atom.workspace.getActiveTextEditor();\n\t        }\n\t        else if (editorTools.aquireManager()) {\n\t            editor = editorTools.aquireManager().getCurrentEditor();\n\t            gotEditorFromOutline = true;\n\t        }\n\t        if (!editor)\n\t            return null;\n\t        if (path.extname(editor.getPath()) != '.raml')\n\t            return null;\n\t        var request = {\n\t            editor: editor,\n\t            bufferPosition: editor.getCursorBufferPosition()\n\t        };\n\t        var node = null;\n\t        if (gotEditorFromOutline) {\n\t            node = editorTools.aquireManager().getSelectedNode();\n\t        }\n\t        else {\n\t            if (editor.getBuffer()) {\n\t                var lastPosition = editor.getBuffer().getEndPosition();\n\t                if (lastPosition.column == request.bufferPosition.column\n\t                    && lastPosition.row == request.bufferPosition.row) {\n\t                    return null;\n\t                }\n\t                if (request.bufferPosition.row == 0 && request.bufferPosition.column == 0) {\n\t                    return null;\n\t                }\n\t            }\n\t            node = provider.getAstNode(request, false);\n\t        }\n\t        if (!node) {\n\t            return null;\n\t        }\n\t        var offset = request.editor.getBuffer().\n\t            characterIndexForPosition(request.bufferPosition);\n\t        var completionKind = search.determineCompletionKind(editor.getBuffer().getText(), offset);\n\t        return {\n\t            editor: editor,\n\t            offset: offset,\n\t            node: node,\n\t            completionKind: completionKind\n\t        };\n\t    };\n\t    return GeneralASTStateCalculator;\n\t})();\n\texports.GeneralASTStateCalculator = GeneralASTStateCalculator;\n\texports.generalASTStateCalculator = new GeneralASTStateCalculator();\n\t/**\n\t * Intended for subclassing version of GeneralASTStateCalculator\n\t * Override calculate() method, use getGeneralState() to obtain current general AST state\n\t */\n\tvar CommonASTStateCalculator = (function () {\n\t    function CommonASTStateCalculator() {\n\t        this.contextCalculationStarted = function () {\n\t            exports.generalASTStateCalculator.contextCalculationStarted();\n\t        };\n\t        this.contextCalculationFinished = function () {\n\t            exports.generalASTStateCalculator.contextCalculationFinished();\n\t        };\n\t    }\n\t    CommonASTStateCalculator.prototype.calculate = function () {\n\t        return null;\n\t    };\n\t    CommonASTStateCalculator.prototype.getGeneralState = function () {\n\t        return exports.generalASTStateCalculator.calculate();\n\t    };\n\t    CommonASTStateCalculator.prototype.getEditor = function () {\n\t        return editorTools.aquireManager() ? editorTools.aquireManager().getCurrentEditor() : atom.workspace.getActiveTextEditor();\n\t    };\n\t    return CommonASTStateCalculator;\n\t})();\n\texports.CommonASTStateCalculator = CommonASTStateCalculator;\n\tfunction initializeActionSupport() {\n\t    var editorContextMenuContributor = {\n\t        id: \"editorContextActionContributor\",\n\t        calculateItems: function () {\n\t            var actions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t            if (!actions)\n\t                return [];\n\t            var result = [];\n\t            actions.forEach(function (action) {\n\t                result.push({\n\t                    selector: 'atom-text-editor[data-grammar=\"source raml\"],.raml-outline',\n\t                    name: action.label ? action.label : action.name,\n\t                    categories: action.category,\n\t                    onClick: action.onClick\n\t                });\n\t            });\n\t            return result;\n\t        }\n\t    };\n\t    contextMenu.registerContributor(editorContextMenuContributor);\n\t    var editorCommandContributor = {\n\t        id: \"editorContextActionContributor\",\n\t        calculateItems: function () {\n\t            var actions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t            if (!actions)\n\t                return [];\n\t            var result = [];\n\t            actions.forEach(function (action) {\n\t                result.push({\n\t                    selector: 'atom-text-editor[data-grammar=\"source raml\"],.raml-outline',\n\t                    id: action.label ? action.label : action.name,\n\t                    callBack: action.onClick\n\t                });\n\t            });\n\t            return result;\n\t        }\n\t    };\n\t    commandManager.registerContributor(editorCommandContributor);\n\t}\n\t\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(16);\n\tvar path = __webpack_require__(15);\n\tvar rp = __webpack_require__(22);\n\tvar search = rp.search;\n\tvar stubs = rp.stubs;\n\tvar universeHelpers = rp.universeHelpers;\n\tvar su = rp.schema;\n\tvar apiModifier = rp.parser.modify;\n\tvar _ = __webpack_require__(23);\n\tvar UI = __webpack_require__(17);\n\tvar xmlutil = __webpack_require__(39);\n\tvar extract = __webpack_require__(40);\n\tvar shemagen = __webpack_require__(41);\n\tvar def = rp.ds;\n\tvar move = __webpack_require__(35);\n\tvar contextActions = __webpack_require__(31);\n\tvar commonContextActions = __webpack_require__(13);\n\tvar assistUtils = __webpack_require__(9);\n\tvar AbstractDialogWithValidation = (function () {\n\t    function AbstractDialogWithValidation(parentNode, name) {\n\t        this.parentNode = parentNode;\n\t        this.name = name;\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    AbstractDialogWithValidation.prototype.validate = function () {\n\t        return null;\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     */\n\t    AbstractDialogWithValidation.prototype.performOk = function () {\n\t    };\n\t    /**\n\t     * Indended for subclassing\n\t     * @param vc - parent section\n\t     */\n\t    AbstractDialogWithValidation.prototype.createBody = function (section) {\n\t    };\n\t    /**\n\t     * Call this to display the dialog.\n\t     */\n\t    AbstractDialogWithValidation.prototype.show = function () {\n\t        console.log(\"Original node tree:\");\n\t        if (this.getParentNode())\n\t            console.log(this.getParentNode().printDetails());\n\t        if (!this.getParentNode()) {\n\t            return;\n\t        }\n\t        var mainSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n\t        this.createValidationIndicator(mainSection);\n\t        this.createBody(mainSection);\n\t        this.createButtonBar(mainSection);\n\t        mainSection.setPercentWidth(100);\n\t        var html = mainSection.renderUI();\n\t        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t        this.performValidation();\n\t    };\n\t    AbstractDialogWithValidation.prototype.performValidation = function () {\n\t        var validationMessage = this.validate();\n\t        if (this.okButton) {\n\t            if (validationMessage)\n\t                this.okButton.setDisabled(true);\n\t            else\n\t                this.okButton.setDisabled(false);\n\t        }\n\t        if (this.errorLabel) {\n\t            if (validationMessage) {\n\t                this.errorLabel.setDisplay(true);\n\t                this.errorLabel.setText(validationMessage);\n\t            }\n\t            else {\n\t                this.errorLabel.setDisplay(false);\n\t                this.errorLabel.setText(\"\");\n\t            }\n\t        }\n\t    };\n\t    AbstractDialogWithValidation.prototype.createValidationIndicator = function (vc) {\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(this.errorLabel));\n\t    };\n\t    AbstractDialogWithValidation.prototype.saveUnit = function (unit) {\n\t        var unitPath = unit.absolutePath();\n\t        var unitText = unit.contents();\n\t        //first trying to find an opened text editor\n\t        var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n\t            var editorPath = editor.getPath();\n\t            return editorPath == unitPath;\n\t        });\n\t        if (openedEditor) {\n\t            openedEditor.setText(unitText);\n\t        }\n\t        else {\n\t            fs.writeFileSync(unitPath, unitText);\n\t        }\n\t    };\n\t    AbstractDialogWithValidation.prototype.createButtonBar = function (parentPanel) {\n\t        var _this = this;\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            _this.rootAtomPanel.destroy();\n\t        }).margin(10, 10));\n\t        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.performOk();\n\t            _this.rootAtomPanel.destroy();\n\t        });\n\t        this.okButton.setDisabled(true);\n\t        buttonBar.addChild(this.okButton);\n\t        parentPanel.addChild(buttonBar);\n\t    };\n\t    AbstractDialogWithValidation.prototype.getParentNode = function () {\n\t        return this.parentNode;\n\t    };\n\t    AbstractDialogWithValidation.prototype.getActiveEditor = function () {\n\t        return assistUtils.getActiveEditor();\n\t    };\n\t    AbstractDialogWithValidation.prototype.getNodeId = function (node) {\n\t        if (node.parent()) {\n\t            var parentId = this.getNodeId(node.parent());\n\t            parentId += \".\" + node.name();\n\t            var sameName = node.parent().directChildren().filter(function (x) { return x.name() == node.name(); });\n\t            if (sameName.length > 1) {\n\t                var ind = sameName.indexOf(node);\n\t                parentId += \"[\" + ind + \"]\";\n\t            }\n\t            return parentId;\n\t        }\n\t        else if (node.name()) {\n\t            if (node.definition && node.definition() && node.definition().name() == \"Api\") {\n\t                //no other way to get rid of a fake Api \"key\"\n\t                return \"\";\n\t            }\n\t            return \".\" + node.name();\n\t        }\n\t        return \"\";\n\t    };\n\t    AbstractDialogWithValidation.prototype.nodesEqualById = function (node1, node2) {\n\t        return this.getNodeId(node1) == this.getNodeId(node2);\n\t    };\n\t    AbstractDialogWithValidation.prototype.isParentOf = function (potentialParent, potentialChild) {\n\t        var current = potentialChild.parent();\n\t        while (current != null) {\n\t            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n\t                return true;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return false;\n\t    };\n\t    return AbstractDialogWithValidation;\n\t})();\n\texports.AbstractDialogWithValidation = AbstractDialogWithValidation;\n\tvar MoveResourceStateCalculator = (function (_super) {\n\t    __extends(MoveResourceStateCalculator, _super);\n\t    function MoveResourceStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MoveResourceStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return MoveResourceStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar CreateGlobalSchemaStateCalculator = (function (_super) {\n\t    __extends(CreateGlobalSchemaStateCalculator, _super);\n\t    function CreateGlobalSchemaStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CreateGlobalSchemaStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        //FIXME INFRASTRUCTURE NEEDED\n\t        if (!universeHelpers.isSchemaProperty(p))\n\t            return null;\n\t        var v = attr.value();\n\t        var targets = search.referenceTargets(p, highLevelNode);\n\t        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n\t        if (t)\n\t            return null;\n\t        return attr;\n\t    };\n\t    return CreateGlobalSchemaStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar ExtractJSONSchemaToTypeDialog = (function (_super) {\n\t    __extends(ExtractJSONSchemaToTypeDialog, _super);\n\t    function ExtractJSONSchemaToTypeDialog() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    /**\n\t     * Indended for subclassing\n\t     * @param vc - parent section\n\t     */\n\t    ExtractJSONSchemaToTypeDialog.prototype.createBody = function (section) {\n\t        var _this = this;\n\t        section.addChild(UI.label(\"Type name:\").pad(5, 0));\n\t        this.typeNameTextField = UI.texfField(\"\", \"NewType\", function (x) {\n\t            _this.performValidation();\n\t        });\n\t        section.addChild(this.typeNameTextField);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ExtractJSONSchemaToTypeDialog.prototype.validate = function () {\n\t        if (!this.typeNameTextField || !this.typeNameTextField.getBinding()) {\n\t            return null;\n\t        }\n\t        var schemaName = this.typeNameTextField.getBinding().get();\n\t        if (schemaName.trim().length == 0) {\n\t            return \"Enter type name\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     */\n\t    ExtractJSONSchemaToTypeDialog.prototype.performOk = function () {\n\t        var node = this.getParentNode();\n\t        var api = node.root();\n\t        var schema = node.attrValue('schema');\n\t        node.attr('schema').setValue('');\n\t        var schemaName = this.typeNameTextField.getBinding().get();\n\t        var types = su.createSchemaModelGenerator().generateTo(api, schema, schemaName);\n\t        if (types.length > 0) {\n\t            node.attrOrCreate('type').setValue(types[0]);\n\t        }\n\t        this.saveUnit(api.lowLevel().unit());\n\t    };\n\t    return ExtractJSONSchemaToTypeDialog;\n\t})(AbstractDialogWithValidation);\n\texports.ExtractJSONSchemaToTypeDialog = ExtractJSONSchemaToTypeDialog;\n\tvar CreateGlobalSchemaDialog = (function (_super) {\n\t    __extends(CreateGlobalSchemaDialog, _super);\n\t    function CreateGlobalSchemaDialog() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    /**\n\t     * Indended for subclassing\n\t     * @param vc - parent section\n\t     */\n\t    CreateGlobalSchemaDialog.prototype.createBody = function (section) {\n\t        var _this = this;\n\t        section.addChild(UI.label(\"Schema name:\").pad(5, 0));\n\t        this.schemaNameTextField = UI.texfField(\"\", this.getDefaultSchemaName(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        section.addChild(this.schemaNameTextField);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    CreateGlobalSchemaDialog.prototype.validate = function () {\n\t        if (!this.schemaNameTextField || !this.schemaNameTextField.getBinding()) {\n\t            return null;\n\t        }\n\t        var schemaName = this.schemaNameTextField.getBinding().get();\n\t        if (schemaName.trim().length == 0) {\n\t            return \"Enter schema name\";\n\t        }\n\t        var attr = this.getParentNode();\n\t        var schemaContent = attr.value();\n\t        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n\t        if (fs.existsSync(schemaFilePath)) {\n\t            return \"Schema file \" + schemaFilePath + \" already exists\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     */\n\t    CreateGlobalSchemaDialog.prototype.performOk = function () {\n\t        var schemaName = this.schemaNameTextField.getBinding().get();\n\t        var attr = this.getParentNode();\n\t        var schemaContent = attr.value();\n\t        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n\t        var root = attr.parent().root();\n\t        var globalSchemaType = attr.property().range().universe().type(\"GlobalSchema\");\n\t        var schemaNode = stubs.createStubNode(globalSchemaType, globalSchemaType.universe().type(\"Api\").property(\"schemas\"), schemaName);\n\t        schemaNode.attrOrCreate(\"value\").setValue(\"!include \" + this.getSchemaRelativePath(schemaName, schemaContent));\n\t        root.add(schemaNode);\n\t        attr.setValue(schemaName);\n\t        this.saveUnit(attr.lowLevel().unit());\n\t        var schemaDir = path.dirname(schemaFilePath);\n\t        if (!fs.existsSync(schemaDir)) {\n\t            fs.mkdirSync(schemaDir);\n\t        }\n\t        fs.writeFileSync(schemaFilePath, schemaContent);\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.getSchemaFilePath = function (schemaName, schemaContent) {\n\t        var parentDirectory = path.resolve(path.dirname(this.getActiveEditor().getPath()), \"schemas\");\n\t        var schemaExtension = this.determineSchemaExtension(schemaContent);\n\t        var fileName = schemaName + \".\" + schemaExtension;\n\t        return path.resolve(parentDirectory, fileName);\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.getSchemaRelativePath = function (schemaName, schemaContent) {\n\t        var schemaExtension = this.determineSchemaExtension(schemaContent);\n\t        var fileName = schemaName + \".\" + schemaExtension;\n\t        return \"schemas/\" + fileName;\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.determineSchemaExtension = function (schemaContent) {\n\t        var trim = schemaContent.trim();\n\t        if (trim.indexOf(\"{\") == 0 || trim.indexOf(\"[\") == 0) {\n\t            return \"json\";\n\t        }\n\t        return \"xsd\";\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.getDefaultSchemaName = function () {\n\t        return \"NewSchema\";\n\t    };\n\t    return CreateGlobalSchemaDialog;\n\t})(AbstractDialogWithValidation);\n\texports.CreateGlobalSchemaDialog = CreateGlobalSchemaDialog;\n\tfunction createGlobalSchema(attr) {\n\t    new CreateGlobalSchemaDialog(attr, \"Create Global Schema\").show();\n\t}\n\texports.createGlobalSchema = createGlobalSchema;\n\tvar ExpandSignatureStateCalculator = (function (_super) {\n\t    __extends(ExpandSignatureStateCalculator, _super);\n\t    function ExpandSignatureStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExpandSignatureStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        return attr;\n\t    };\n\t    return ExpandSignatureStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tfunction updateEditor(node) {\n\t    var ed = assistUtils.getActiveEditor();\n\t    ed.setText(assistUtils.cleanEmptyLines(node.root().lowLevel().unit().contents()));\n\t}\n\tvar getKeyValue = function (offset, txt) {\n\t    var m = offset;\n\t    for (var i = offset; i >= 0; i--) {\n\t        var c = txt.charAt(i);\n\t        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t') {\n\t            m = i + 1;\n\t            break;\n\t        }\n\t    }\n\t    var res = \"\";\n\t    for (var i = m; i < txt.length; i++) {\n\t        var c = txt.charAt(i);\n\t        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t' || c == ':') {\n\t            break;\n\t        }\n\t        res += c;\n\t    }\n\t    return res;\n\t};\n\tvar CompleteBodyStateCalculator = (function (_super) {\n\t    __extends(CompleteBodyStateCalculator, _super);\n\t    function CompleteBodyStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CompleteBodyStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (universeHelpers.isResponseType(highLevelNode.definition()) ||\n\t            universeHelpers.isMethodType(highLevelNode.definition())) {\n\t            var txt = generalState.editor.getText();\n\t            var res = getKeyValue(generalState.offset, txt);\n\t            if (res == \"body\") {\n\t                return highLevelNode;\n\t            }\n\t        }\n\t        if (universeHelpers.isBodyLikeType(highLevelNode.definition())) {\n\t            if (highLevelNode.elements().length == 0) {\n\t                return highLevelNode;\n\t            }\n\t        }\n\t        return null;\n\t    };\n\t    return CompleteBodyStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tfunction saveExample(r, schp, content) {\n\t    var ed = assistUtils.getActiveEditor();\n\t    var sdir = path.resolve(path.dirname(ed.getPath()), path.dirname(schp));\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = path.resolve(path.dirname(ed.getPath()), schp);\n\t    fs.writeFileSync(shFile, content);\n\t}\n\texports.saveExample = saveExample;\n\tvar FillBodyDialog = (function () {\n\t    function FillBodyDialog(h, body, title) {\n\t        if (title === void 0) { title = \"Fill body\"; }\n\t        this.h = h;\n\t        this.body = body;\n\t        this.title = title;\n\t        this.name = \"\";\n\t        this.needXML = true;\n\t        this.needJSON = true;\n\t        this.jsexample = '{\\n \"message\":\"Hello world\"\\n}';\n\t        this.xmlexample = \"\";\n\t        this.xmlschema = \"\";\n\t        this.jsschema = \"\";\n\t    }\n\t    FillBodyDialog.prototype.extraContent = function (s) {\n\t    };\n\t    FillBodyDialog.prototype.updateButtons = function () {\n\t        if (!this.createButton) {\n\t            return;\n\t        }\n\t        if (this.name.length == 0) {\n\t            this.createButton.setDisabled(true);\n\t            this.em.setDisplay(true);\n\t            this.em.setText(\"Please type name of your payload\");\n\t            return;\n\t        }\n\t        if (this.needJSON) {\n\t            try {\n\t                JSON.parse(this.jsexample);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"JSON example is not correct\");\n\t                return;\n\t            }\n\t            try {\n\t                var so = su.getJSONSchema(this.jsschema, null);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"JSON schema is not correct\");\n\t                return;\n\t            }\n\t        }\n\t        if (this.needXML) {\n\t            try {\n\t                xmlutil(this.xmlexample);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"XML example is not correct\");\n\t                return;\n\t            }\n\t            try {\n\t                var so = su.getXMLSchema(this.xmlschema);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"XML schema is not correct\");\n\t                return;\n\t            }\n\t        }\n\t        this.em.setDisplay(false);\n\t        this.createButton.setDisabled(false);\n\t    };\n\t    FillBodyDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        this.em = UI.label(\"Please type name of your payload\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        var section = UI.section(this.title, UI.Icon.BOOK, false, false, this.em, UI.h3(\"Please type name for your payload\")).pad(10, 10);\n\t        section.addChild(UI.texfField(\"\", this.name, function (x) {\n\t            _this.name = x.getBinding().get();\n\t            _this.updateButtons();\n\t        }));\n\t        var r1 = UI.checkBox(\"Create XML body\");\n\t        r1.setValue(this.needXML);\n\t        r1.getBinding().addListener(function (x) {\n\t            _this.needXML = r1.getValue();\n\t            _this.updateButtons();\n\t        });\n\t        section.addChild(r1);\n\t        var r2 = UI.checkBox(\"Create JSON body\");\n\t        r2.setValue(this.needJSON);\n\t        r2.getBinding().addListener(function (x) {\n\t            _this.needJSON = r2.getValue();\n\t            _this.updateButtons();\n\t        });\n\t        section.addChild(r2);\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            zz.destroy();\n\t        }).margin(10, 10));\n\t        this.createButton = UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.onOk(zz);\n\t            zz.destroy();\n\t        });\n\t        buttonBar.addChild(this.createButton);\n\t        var tf = new UI.TabFolder();\n\t        this.createButton.setDisabled(true);\n\t        this.createTextSection(tf, \"JSON Example\", \"source.json\", \"jsexample\");\n\t        this.createTextSection(tf, \"JSON Schema\", \"source.json\", \"jsschema\");\n\t        this.createTextSection(tf, \"XML Example\", \"text.xml\", \"xmlexample\");\n\t        this.createTextSection(tf, \"XML Schema\", \"text.xml\", \"xmlschema\");\n\t        tf.setOnSelected(function () {\n\t            var c = tf.selectedComponent();\n\t            var te = c.children()[1];\n\t            te.setText(_this[c.id()]);\n\t        });\n\t        section.addChild(tf);\n\t        section.addChild(buttonBar);\n\t        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n\t    };\n\t    FillBodyDialog.prototype.createTextSection = function (tf, caption, lang, code) {\n\t        var _this = this;\n\t        var hs = UI.vc();\n\t        hs.setCaption(caption);\n\t        hs.setId(code);\n\t        var ts = new UI.AtomEditorElement(\"\", function (x) { return x; });\n\t        ts.setMini(false);\n\t        ts.getBinding().addListener(function (x) {\n\t            _this[code] = ts.getValue();\n\t            _this.updateButtons();\n\t        });\n\t        //ts.setCaption(code)\n\t        ts.setText(\"\" + this[code]);\n\t        ts.setCaption(caption);\n\t        ts.setGrammar(lang);\n\t        ts.setStyle(\"height\", \"400px\");\n\t        ts.setStyle(\"border\", \"solid\");\n\t        ts.setStyle(\"border-width\", \"1px\");\n\t        hs.addChild(UI.h3(\"Please type your example here:\"));\n\t        hs.addChild(ts);\n\t        if (code == 'jsexample') {\n\t            var b = UI.button(\"Generate JSON schema\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t                try {\n\t                    var rs = shemagen.generateSchema(_this.jsexample, \"application/json\");\n\t                    _this.jsschema = rs;\n\t                    tf.setSelectedIndex(1);\n\t                }\n\t                catch (e) {\n\t                    _this.jsschema = e.message;\n\t                    tf.setSelectedIndex(1);\n\t                }\n\t            });\n\t            hs.addChild(b.margin(5, 5, 5, 5));\n\t        }\n\t        if (code == 'xmlexample') {\n\t            var b = UI.button(\"Generate JSON example\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t                try {\n\t                    var rs = xmlutil(_this.xmlexample);\n\t                    _this.jsexample = JSON.stringify(rs, null, 2);\n\t                    tf.setSelectedIndex(0);\n\t                }\n\t                catch (e) {\n\t                    _this.jsexample = e.message;\n\t                    tf.setSelectedIndex(0);\n\t                }\n\t            });\n\t            hs.addChild(b.margin(5, 5, 5, 5));\n\t        }\n\t        tf.add(caption, null, hs);\n\t    };\n\t    FillBodyDialog.prototype.onOk = function (zz) {\n\t        var bodyType = this.body.definition().universe().type(\"BodyLike\");\n\t        if (bodyType) {\n\t            //RAML 0.8 case\n\t            var node = this.body;\n\t            if (universeHelpers.isBodyProperty(node.property())) {\n\t                node = node.parent();\n\t            }\n\t            var type = node.definition();\n\t            if (this.needJSON) {\n\t                var body = stubs.createStubNode(bodyType, type.property('name'), \"application/json\");\n\t                body.createAttr(\"schema\", this.name);\n\t                body.createAttr(\"example\", \"!include ./examples/\" + this.name + \".json\");\n\t                node.add(body);\n\t                assistUtils.createGlobalSchemaFromNameAndContent(this.h.root(), this.name, \"schemas/\" + this.name + \".json\", this.jsschema);\n\t                saveExample(this.h, \"./examples/\" + this.name + \".json\", this.jsexample);\n\t            }\n\t            if (this.needXML) {\n\t                var body = stubs.createStubNode(bodyType, type.property('name'), \"application/xml\");\n\t                body.createAttr(\"schema\", this.name + \"-xml\");\n\t                body.createAttr(\"example\", \"!include ./examples/\" + this.name + \".xml\");\n\t                node.add(body);\n\t                var xmlSchemaContents = this.xmlschema;\n\t                assistUtils.createGlobalSchemaFromNameAndContent(this.h.root(), this.name + \"-xml\", \"schemas/\" + this.name + \".xml\", xmlSchemaContents);\n\t                saveExample(this.h, \"./examples/\" + this.name + \".xml\", this.xmlexample);\n\t            }\n\t        }\n\t        else {\n\t            //RAML 1.0 case\n\t            var response = this.body;\n\t            if (!universeHelpers.isResponseType(response.property().range())) {\n\t                console.log(\"Incorrect parent \" + response.printDetails() + \" , expecting response\");\n\t                return;\n\t            }\n\t            var responseWrapper = response.wrapperNode();\n\t            var bodies = [];\n\t            if (this.needJSON) {\n\t                var typeName = \"application/json\";\n\t                var bodyWrapper = apiModifier.createTypeDeclaration(typeName);\n\t                apiModifier.setTypeDeclarationSchema(bodyWrapper, this.name);\n\t                apiModifier.setTypeDeclarationExample(bodyWrapper, \"!include ./examples/\" + this.name + \".json\");\n\t                assistUtils.createGlobalSchemaFromNameAndContent(this.h.root(), this.name, \"schemas/\" + this.name + \".json\", this.jsschema);\n\t                saveExample(this.h, \"./examples/\" + this.name + \".json\", this.jsexample);\n\t                bodies.push(bodyWrapper);\n\t            }\n\t            if (this.needXML) {\n\t                var typeName = \"application/xml\";\n\t                var bodyWrapper = apiModifier.createTypeDeclaration(typeName);\n\t                apiModifier.setTypeDeclarationSchema(bodyWrapper, this.name + \"-xml\");\n\t                apiModifier.setTypeDeclarationExample(bodyWrapper, \"!include ./examples/\" + this.name + \".xml\");\n\t                var xmlSchemaContents = this.xmlschema;\n\t                assistUtils.createGlobalSchemaFromNameAndContent(this.h.root(), this.name + \"-xml\", \"schemas/\" + this.name + \".xsd\", xmlSchemaContents);\n\t                saveExample(this.h, \"./examples/\" + this.name + \".xml\", this.xmlexample);\n\t                bodies.push(bodyWrapper);\n\t            }\n\t            bodies.forEach(function (bodyWrapper) {\n\t                var foundWrapper = _.find(responseWrapper.body() || [], function (foundWrapper) { return bodyWrapper.name() === foundWrapper.name(); });\n\t                if (foundWrapper) {\n\t                    responseWrapper.remove(foundWrapper);\n\t                }\n\t                apiModifier.addChild(responseWrapper, bodyWrapper);\n\t            });\n\t        }\n\t        var rs = this.h.lowLevel().unit().contents();\n\t        assistUtils.getActiveEditor().setText(assistUtils.cleanEmptyLines(rs));\n\t    };\n\t    return FillBodyDialog;\n\t})();\n\tvar ExtractResourceTypeStateCalculator = (function (_super) {\n\t    __extends(ExtractResourceTypeStateCalculator, _super);\n\t    function ExtractResourceTypeStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractResourceTypeStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return ExtractResourceTypeStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar ExtractTraitStateCalculator = (function (_super) {\n\t    __extends(ExtractTraitStateCalculator, _super);\n\t    function ExtractTraitStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractTraitStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isMethodType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return ExtractTraitStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar MoveContentStateCalculator = (function (_super) {\n\t    __extends(MoveContentStateCalculator, _super);\n\t    function MoveContentStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MoveContentStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (highLevelNode.children().length == 0)\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return MoveContentStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar ConvertJsonSchemaToTypeStateCalculator = (function (_super) {\n\t    __extends(ConvertJsonSchemaToTypeStateCalculator, _super);\n\t    function ConvertJsonSchemaToTypeStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ConvertJsonSchemaToTypeStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        if (!universeHelpers.isSchemaProperty(p))\n\t            return null;\n\t        if (typeof attr.value() != 'string' || attr.value().indexOf(\"{\") == -1) {\n\t            return null;\n\t        }\n\t        return highLevelNode;\n\t        //var txt=generalState.editor.getText();\n\t        //var res = getKeyValue(generalState.offset, txt);\n\t        //if(res != 'schema') return null;\n\t        //var schema = highLevelNode.attrValue('schema');\n\t        //if(!schema) return null;\n\t        //return (schema.length > 0 && schema[0] == '{')? highLevelNode : null;\n\t        //return true; //res == 'schema'? highLevelNode : null;\n\t    };\n\t    return ConvertJsonSchemaToTypeStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar ConvertTypeToJsonSchemaStateCalculator = (function (_super) {\n\t    __extends(ConvertTypeToJsonSchemaStateCalculator, _super);\n\t    function ConvertTypeToJsonSchemaStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ConvertTypeToJsonSchemaStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        var txt = generalState.editor.getText();\n\t        //var res = getKeyValue(generalState.offset, txt);\n\t        //return (res == 'type')? highLevelNode: null;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        if (!universeHelpers.isTypeProperty(p))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return ConvertTypeToJsonSchemaStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar ConvertTypeToJsonSchemaAtTypeStateCalculator = (function (_super) {\n\t    __extends(ConvertTypeToJsonSchemaAtTypeStateCalculator, _super);\n\t    function ConvertTypeToJsonSchemaAtTypeStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ConvertTypeToJsonSchemaAtTypeStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var node = generalState.node;\n\t        //highLevelNode.lowLevel().show('HL');\n\t        //console.log('node def: ' + node.property().name() + ': ' + node.definition().name() + '; ' + generalState.completionKind);\n\t        if (generalState.completionKind != search.LocationKind.SEQUENCE_KEY_COPLETION)\n\t            return null;\n\t        return universeHelpers.isTypesProperty(node.property()) ? node : null;\n\t    };\n\t    return ConvertTypeToJsonSchemaAtTypeStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tfunction indent(line) {\n\t    var rs = \"\";\n\t    for (var i = 0; i < line.length; i++) {\n\t        var c = line[i];\n\t        if (c == '\\r' || c == '\\n') {\n\t            continue;\n\t        }\n\t        if (c == ' ' || c == '\\t') {\n\t            rs += c;\n\t            continue;\n\t        }\n\t        break;\n\t    }\n\t    return rs;\n\t}\n\t//FIXME remove it from here duplication with jsyaml2lowLevel.ts\n\tfunction stripIndent(text, indent) {\n\t    var lines = assistUtils.splitOnLines(text);\n\t    var rs = [];\n\t    for (var i = 0; i < lines.length; i++) {\n\t        if (i == 0) {\n\t            rs.push(lines[0]);\n\t        }\n\t        else {\n\t            rs.push(lines[i].substring(indent.length));\n\t        }\n\t    }\n\t    return rs.join(\"\");\n\t}\n\tvar MoveToNewFileDialog = (function () {\n\t    function MoveToNewFileDialog(node) {\n\t        this.node = node;\n\t    }\n\t    MoveToNewFileDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n\t        var errorLabel = UI.label(\"Please enter destination file path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        vc.addChild(UI.label(\"Please enter destination path\"));\n\t        var txt = UI.texfField(\"\", \"\", function (x) {\n\t            if (!txt) {\n\t                return;\n\t            }\n\t            var errorMessage = null;\n\t            _this.destination = txt.getBinding().get();\n\t            if (_this.destination.trim().length == 0) {\n\t                errorMessage = \"Please enter destination file path\";\n\t            }\n\t            else if (!path.extname(_this.destination) || path.extname(_this.destination).trim().length <= 2) {\n\t                errorMessage = \"Please enter destination file extension\";\n\t            }\n\t            else {\n\t                var dir = path.resolve(path.dirname(assistUtils.getActiveEditor().getPath()), path.dirname(_this.destination));\n\t                if (!fs.existsSync(dir)) {\n\t                    errorMessage = \"Parent directory does not exist\";\n\t                }\n\t                else {\n\t                    var st = fs.statSync(dir);\n\t                    if (!st.isDirectory()) {\n\t                        errorMessage = \"Parent path is not a directory\";\n\t                    }\n\t                    if (!errorMessage) {\n\t                        var canWrite = true;\n\t                        try {\n\t                            fs.accessSync(dir, fs.W_OK);\n\t                        }\n\t                        catch (exception) {\n\t                            canWrite = false;\n\t                        }\n\t                        if (!canWrite) {\n\t                            errorMessage = \"Can't write to specified directory, access denied. Please, check your permissions.\";\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (errorMessage) {\n\t                errorLabel.setDisplay(true);\n\t                errorLabel.setText(errorMessage);\n\t                okButton.setDisabled(true);\n\t            }\n\t            else {\n\t                errorLabel.setDisplay(false);\n\t                okButton.setDisabled(false);\n\t            }\n\t        });\n\t        vc.addChild(UI.vc(txt));\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            zz.destroy();\n\t        }).margin(10, 10));\n\t        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            var d = path.resolve(path.dirname(assistUtils.getActiveEditor().getPath()), _this.destination);\n\t            var dump = _this.node.lowLevel().dump();\n\t            var ci = assistUtils.splitOnLines(dump);\n\t            var li = ci.length > 1 ? indent(ci[1]) : indent(ci[0]);\n\t            dump = dump.substring(_this.node.lowLevel().keyEnd() - _this.node.lowLevel().start() + 1).trim();\n\t            dump = stripIndent(dump, li);\n\t            var ramlComment = node.definition().universe().version() === \"RAML10\" ? \"#%RAML 1.0 \" : \"#%RAML 0.8 \";\n\t            dump = ramlComment + _this.node.definition().nameId() + \"\\n\" + dump;\n\t            fs.writeFileSync(d, dump);\n\t            //no we need to replace content of the node with text;\n\t            var txt = node.lowLevel().unit().contents();\n\t            var endPart = txt.substring(node.lowLevel().end());\n\t            var startPart = txt.substring(0, node.lowLevel().keyEnd() + 1);\n\t            var vl = startPart + \" !include \" + _this.destination + endPart;\n\t            assistUtils.getActiveEditor().setText(vl);\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return MoveToNewFileDialog;\n\t})();\n\texports.MoveToNewFileDialog = MoveToNewFileDialog;\n\tvar ExtractLibraryStateCalculator = (function (_super) {\n\t    __extends(ExtractLibraryStateCalculator, _super);\n\t    function ExtractLibraryStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractLibraryStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        while (current.parent() != null) {\n\t            current = current.parent();\n\t        }\n\t        return current;\n\t    };\n\t    return ExtractLibraryStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar ExtractOverlayStateCalculator = (function (_super) {\n\t    __extends(ExtractOverlayStateCalculator, _super);\n\t    function ExtractOverlayStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractOverlayStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        while (current.parent() != null) {\n\t            current = current.parent();\n\t        }\n\t        return current;\n\t    };\n\t    return ExtractOverlayStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar ModifyOverlayStateCalculator = (function (_super) {\n\t    __extends(ModifyOverlayStateCalculator, _super);\n\t    function ModifyOverlayStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ModifyOverlayStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        while (current.parent() != null) {\n\t            current = current.parent();\n\t        }\n\t        if (current.definition\n\t            && universeHelpers.isOverlayType(current.definition())) {\n\t            return current;\n\t        }\n\t        return null;\n\t    };\n\t    return ModifyOverlayStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar AbstractMoveTypePropertiesCalculator = (function (_super) {\n\t    __extends(AbstractMoveTypePropertiesCalculator, _super);\n\t    function AbstractMoveTypePropertiesCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AbstractMoveTypePropertiesCalculator.prototype.isTypeNode = function (node) {\n\t        return node.property\n\t            && node.property().range\n\t            && universeHelpers.isTypeDeclarationType(node.property().range())\n\t            && universeHelpers.isTypesProperty(node.property());\n\t    };\n\t    return AbstractMoveTypePropertiesCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar PullUpStateCalculator = (function (_super) {\n\t    __extends(PullUpStateCalculator, _super);\n\t    function PullUpStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    PullUpStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        if (!current)\n\t            return null;\n\t        while (current.parent() != null) {\n\t            if (this.isTypeNode(current)) {\n\t                //so, we're inside the type\n\t                //but we also want to double check that there are superclasses\n\t                var superTypes = extract.findUserDefinedSupertypes(current);\n\t                if (superTypes && superTypes.length > 0)\n\t                    return current;\n\t                else\n\t                    return null;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return null;\n\t    };\n\t    return PullUpStateCalculator;\n\t})(AbstractMoveTypePropertiesCalculator);\n\tvar ExtractSupertypeCalculator = (function (_super) {\n\t    __extends(ExtractSupertypeCalculator, _super);\n\t    function ExtractSupertypeCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractSupertypeCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        if (!current)\n\t            return null;\n\t        while (current.parent() != null) {\n\t            if (this.isTypeNode(current)) {\n\t                //so, we're inside the type\n\t                //but we also want to double check that there are no superclasses\n\t                var superTypes = extract.findUserDefinedSupertypes(current);\n\t                if (!superTypes || superTypes.length == 0)\n\t                    return current;\n\t                else\n\t                    return null;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return null;\n\t    };\n\t    return ExtractSupertypeCalculator;\n\t})(AbstractMoveTypePropertiesCalculator);\n\tvar CommentNodeCalculator = (function (_super) {\n\t    __extends(CommentNodeCalculator, _super);\n\t    function CommentNodeCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CommentNodeCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        return generalState;\n\t    };\n\t    return CommentNodeCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar GenerateExampleCalculator = (function (_super) {\n\t    __extends(GenerateExampleCalculator, _super);\n\t    function GenerateExampleCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    GenerateExampleCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        var txt = generalState.editor.getText();\n\t        //var res = getKeyValue(generalState.offset, txt);\n\t        //return (res == 'type')? highLevelNode: null;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        var p = attr.property();\n\t        if (!universeHelpers.isExampleProperty(p))\n\t            return null;\n\t        var typeAttr = highLevelNode.attr('type');\n\t        if (!typeAttr)\n\t            return null;\n\t        var type = typeAttr.value();\n\t        if (!type)\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return GenerateExampleCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tfunction findLowLevelNodeByOffset(root, offset) {\n\t    if ((root.keyStart() > offset || root.valueEnd() < offset) && root.parent()) {\n\t        return null;\n\t    }\n\t    if (root.includedFrom()) {\n\t        return findLowLevelNodeByOffset(root.includedFrom(), offset);\n\t    }\n\t    var children = root.children();\n\t    for (var key in children) {\n\t        var child = children[key];\n\t        var result = findLowLevelNodeByOffset(child, offset);\n\t        if (result)\n\t            return result;\n\t    }\n\t    return root;\n\t}\n\texports.findLowLevelNodeByOffset = findLowLevelNodeByOffset;\n\tfunction lastChild(root) {\n\t    if (root.includedFrom()) {\n\t        return root.includedFrom();\n\t    }\n\t    if (!root.children() || root.children().length === 0) {\n\t        return root;\n\t    }\n\t    return lastChild(root.children().filter(function (child) { return child ? true : false; })[root.children().length - 1]);\n\t}\n\tfunction initialize() {\n\t    contextActions.addAction({\n\t        name: \"Create global schema\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) { return createGlobalSchema(state); },\n\t        stateCalculator: new CreateGlobalSchemaStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Move resource\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new move.MoveElementsDialog(state, \"Resource Type\", true).show();\n\t        },\n\t        stateCalculator: new MoveResourceStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    //contextActions.addAction({\n\t    //\n\t    //    name: \"Expand Signature\",\n\t    //\n\t    //    target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t    //\n\t    //    category: [\"Refactoring\"],\n\t    //\n\t    //    onClick: state=>expandSignature(<hl.IAttribute> state),\n\t    //\n\t    //    stateCalculator: new ExpandSignatureStateCalculator(),\n\t    //\n\t    //    shouldDisplay: state=>state != null\n\t    //})\n\t    contextActions.addAction({\n\t        name: \"Complete body\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Add new...\"],\n\t        onClick: function (state) {\n\t            var h = state;\n\t            h.lowLevel().show('BODY');\n\t            new FillBodyDialog(h.parent().parent(), h).show();\n\t        },\n\t        stateCalculator: new CompleteBodyStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Resource Type\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractTypesAndTraitsDialog(state, \"Resource Type\", true).show();\n\t        },\n\t        stateCalculator: new ExtractResourceTypeStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Trait\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractTypesAndTraitsDialog(state, \"Trait\", false).show();\n\t        },\n\t        stateCalculator: new ExtractTraitStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Move content to other file\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new MoveToNewFileDialog(state).show();\n\t        },\n\t        stateCalculator: new MoveContentStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Convert JSON schema to type\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new ExtractJSONSchemaToTypeDialog(state, \"Convert JSON schema to type\").show();\n\t        },\n\t        stateCalculator: new ConvertJsonSchemaToTypeStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Expand type to JSON schema\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            var node = state;\n\t            var api = node.root();\n\t            var type = node.attrValue('type');\n\t            //console.log('schema: ' + schema);\n\t            var types = api.elementsOfKind('types');\n\t            var typeNode = _.find(types, function (y) { return y.name() == type; });\n\t            if (typeNode) {\n\t                node.attr('type').setValue('');\n\t                var obj = su.createModelToSchemaGenerator().generateSchema(typeNode);\n\t                var text = JSON.stringify(obj, null, 2);\n\t                node.attrOrCreate('schema').setValue(text);\n\t                text = api.lowLevel().unit().contents();\n\t                assistUtils.getActiveEditor().setText(text);\n\t            }\n\t        },\n\t        stateCalculator: new ConvertTypeToJsonSchemaStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Expand type to JSON schema definition\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            var typenode = state;\n\t            var api = typenode.root();\n\t            //console.log('generate type ' + typenode.name());\n\t            var obj = su.createModelToSchemaGenerator().generateSchema(typenode);\n\t            var schema = JSON.stringify(obj, null, 2);\n\t            console.log('schema: ' + schema);\n\t            //schema = textutil.fromMutiLine(schema);\n\t            var schemaStub = stubs.createStubNoParentPatch(api, 'schemas', typenode.name());\n\t            schemaStub.attrOrCreate('value').setValue(schema);\n\t            api.add(schemaStub);\n\t            var text = api.lowLevel().unit().contents();\n\t            //console.log('text:\\n' + text);\n\t            assistUtils.getActiveEditor().setText(text);\n\t        },\n\t        stateCalculator: new ConvertTypeToJsonSchemaAtTypeStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Library\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractLibraryDialog(state, \"Extract Library\").show();\n\t        },\n\t        stateCalculator: new ExtractLibraryStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Overlay\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractOverlayDialog(state, \"Extract Overlay\").show();\n\t        },\n\t        stateCalculator: new ExtractOverlayStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Modify Overlay\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) {\n\t            new extract.ModifyOverlayDialog(state, \"Modify Overlay\").show();\n\t        },\n\t        stateCalculator: new ModifyOverlayStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Pull Up\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.PullUpDialog(state, \"Pull Up\").show();\n\t        },\n\t        stateCalculator: new PullUpStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Supertype\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractSupertypeDialog(state, \"Extract Supertype\").show();\n\t        },\n\t        stateCalculator: new ExtractSupertypeCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Comment node\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) {\n\t            var highLevelNode = state.node;\n\t            if (!highLevelNode.lowLevel())\n\t                return;\n\t            var lowLevelNode = findLowLevelNodeByOffset(highLevelNode.lowLevel(), state.offset);\n\t            if (!lowLevelNode)\n\t                return;\n\t            var startOffset = lowLevelNode.keyStart() > -1 ? lowLevelNode.keyStart() : lowLevelNode.start();\n\t            lowLevelNode = lastChild(lowLevelNode);\n\t            var endOffset = lowLevelNode.valueEnd() > -1 ? lowLevelNode.valueEnd() : lowLevelNode.end();\n\t            var buffer = state\n\t                .editor.getBuffer();\n\t            var startPosition = buffer.positionForCharacterIndex(startOffset);\n\t            var startLine = startPosition.row;\n\t            var endPosition = buffer.positionForCharacterIndex(endOffset);\n\t            var endLine = endPosition.row;\n\t            for (var lineNumber = startLine; lineNumber <= endLine; lineNumber++) {\n\t                var oldRange = buffer.rangeForRow(lineNumber, true);\n\t                var oldText = buffer.getTextInRange(oldRange);\n\t                var newText = \"#\" + oldText;\n\t                buffer.setTextInRange(oldRange, newText);\n\t            }\n\t        },\n\t        stateCalculator: new CommentNodeCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    // contextActions.addAction({\n\t    //     name: \"Generate example\",\n\t    //     target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t    //     category: [\"Code\"],\n\t    //     onClick: (state)=> {\n\t    //         var node = <hl.IHighLevelNode>state;\n\t    //         var api = node.root();\n\t    //         var typeman = new gu.TypeManager(<wrapper.ApiImpl>api.wrapperNode());\n\t    //         var type = node.attr('type').value();\n\t    //         var egen = new genex.ExampleGenerator(typeman);\n\t    //         var nodetype = node.definition().nameId();\n\t    //         var proptype = node.property().range().nameId();\n\t    //         if(nodetype != 'application/json') {\n\t    //             type = node.name();\n\t    //         }\n\t    //         //console.log('node type: ' + nodetype + '; prop type: ' + proptype + ' ==> ' + type);\n\t    //         var json = egen.generateTypeExpression(type);\n\t    //         var example = JSON.stringify(json, null, 2);\n\t    //         node.attrOrCreate('example').setValue(example);\n\t    //         var text = api.lowLevel().unit().contents();\n\t    //         //console.log('text:\\n' + text);\n\t    //         assistUtils.getActiveEditor().setText(text);\n\t    //         //new extract.ExtractSupertypeDialog(<hl.IHighLevelNode>state, \"Extract Supertype\").show()\n\t    //     },\n\t    //     stateCalculator: new GenerateExampleCalculator(),\n\t    //     shouldDisplay: state=>state != null\n\t    // });\n\t}\n\texports.initialize = initialize;\n\t\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom-ui-lib\");\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"child_process\");\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"xmlhttprequest\");\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"mkdirp\");\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"url\");\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-1-parser\");\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"underscore\");\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-suggestions\");\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom-space-pen-views\");\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-1-parser/dist/index\");\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"basarat-text-buffer\");\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * Created by kor on 22/06/15.\n\t */\n\tvar SpacePenViews = __webpack_require__(25);\n\tvar Scrollable = (function (_super) {\n\t    __extends(Scrollable, _super);\n\t    function Scrollable() {\n\t        _super.call(this);\n\t        this._children = [];\n\t    }\n\t    Scrollable.content = function () {\n\t        var v = this.div({ class: 'scrollpad pane-item padded', tabindex: -1, style: \"overflow:scroll;\" });\n\t        return v;\n\t    };\n\t    Scrollable.prototype.dispose = function () {\n\t    };\n\t    Scrollable.prototype.caption = function () { return \"\"; };\n\t    Scrollable.prototype.scroll = function (top, left) {\n\t        this.element.scrollTop = top;\n\t        this.element.scrollLeft = left;\n\t    };\n\t    Scrollable.prototype.size = function () {\n\t        return {\n\t            top: this.element.scrollTop,\n\t            left: this.element.scrollLeft,\n\t            bottom: this.element.scrollTop + this.element.clientHeight,\n\t            right: this.element.scrollLeft + this.element.clientWidth\n\t        };\n\t    };\n\t    Scrollable.prototype.changed = function () { };\n\t    Scrollable.prototype.refresh = function () { };\n\t    Scrollable.prototype.ui = function () {\n\t        return this.element;\n\t    };\n\t    Scrollable.prototype.setParent = function (p) {\n\t        if (this._parent != null)\n\t            this._parent.removeChild(this);\n\t        this._parent = p;\n\t    };\n\t    //TODO REMOVE COPY PASTE\n\t    Scrollable.prototype.addChild = function (child) {\n\t        child.setParent(this);\n\t        this._children.push(child);\n\t        //this.changed();\n\t    };\n\t    Scrollable.prototype.removeChild = function (child) {\n\t        this._children = this._children.filter(function (x) { return x != child; });\n\t        // this.changed();\n\t    };\n\t    Scrollable.prototype.doRender = function () {\n\t        return this.innerRenderUI();\n\t    };\n\t    /**\n\t     *\n\t     * @returns not null element;\n\t     */\n\t    Scrollable.prototype.selfRender = function () {\n\t        return document.createElement(\"div\");\n\t    };\n\t    Scrollable.prototype.attached = function () {\n\t        this.html(this.innerRenderUI());\n\t    };\n\t    Scrollable.prototype.innerRenderUI = function () {\n\t        var start = this.selfRender();\n\t        this._children.forEach(function (x) {\n\t            var el = x.renderUI();\n\t            if (el) {\n\t                start.appendChild(el);\n\t            }\n\t        });\n\t        return start;\n\t    };\n\t    Scrollable.prototype.renderUI = function () {\n\t        return this.element;\n\t    };\n\t    Scrollable.prototype.parent = function () {\n\t        return null;\n\t    };\n\t    Scrollable.prototype.children = function () {\n\t        return this._children;\n\t    };\n\t    Scrollable.prototype.isAttached = function () {\n\t        return true;\n\t    };\n\t    return Scrollable;\n\t})(SpacePenViews.ScrollView);\n\texports.Scrollable = Scrollable;\n\t\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar Workspace = (function () {\n\t    function Workspace() {\n\t    }\n\t    Workspace.prototype.onDidChangeActivePaneItem = function (callback) {\n\t        return atom.workspace.onDidChangeActivePaneItem(callback);\n\t    };\n\t    Workspace.prototype.addModalPanel = function (arg) {\n\t        return atom.workspace.addModalPanel(arg);\n\t    };\n\t    Workspace.prototype.getActiveTextEditor = function () {\n\t        return atom.workspace.getActiveTextEditor();\n\t    };\n\t    Workspace.prototype.getActivePane = function () {\n\t        return atom.workspace.getActivePane();\n\t    };\n\t    Workspace.prototype.getActiveEditor = function () {\n\t        return atom.workspace.getActiveEditor();\n\t    };\n\t    Workspace.prototype.addRightPanel = function (arg) {\n\t        return atom.workspace.addRightPanel(arg);\n\t    };\n\t    Workspace.prototype.paneForItem = function (arg) {\n\t        return atom.workspace.paneForItem(arg);\n\t    };\n\t    Workspace.prototype.getPaneItems = function () {\n\t        return atom.workspace.getPaneItems();\n\t    };\n\t    Workspace.prototype.onDidAddPaneItem = function (callback) {\n\t        return atom.workspace.onDidAddPaneItem(callback);\n\t    };\n\t    Workspace.prototype.onDidDestroyPane = function (callback) {\n\t        return atom.workspace.onDidDestroyPane(callback);\n\t    };\n\t    Workspace.prototype.open = function (path, args) {\n\t        atom.workspace.open(path, args);\n\t    };\n\t    return Workspace;\n\t})();\n\texports.Workspace = Workspace;\n\tfunction open(pathsToOpen) {\n\t    atom.open(pathsToOpen);\n\t}\n\texports.open = open;\n\texports.workspace = new Workspace();\n\tvar CommandManager = (function () {\n\t    function CommandManager() {\n\t    }\n\t    CommandManager.prototype.add = function (selector, type, callback) {\n\t        return atom.commands.add(selector, type, callback);\n\t    };\n\t    return CommandManager;\n\t})();\n\texports.CommandManager = CommandManager;\n\texports.commands = new CommandManager();\n\t\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar atom = __webpack_require__(29);\n\tvar aspv = __webpack_require__(25);\n\t/*\n\t * List viewer for commands. accepts confirmation function, label function and key for fuzzy filtering.\n\t */\n\tvar SelectListView = (function (_super) {\n\t    __extends(SelectListView, _super);\n\t    function SelectListView(_confirmed, label, filterKey) {\n\t        if (filterKey === void 0) { filterKey = ''; }\n\t        _super.call(this, []);\n\t        this._confirmed = _confirmed;\n\t        this.label = label;\n\t        this.filterKey = filterKey;\n\t    }\n\t    SelectListView.prototype.getFilterKey = function () { return this.filterKey; };\n\t    SelectListView.prototype.viewForItem = function (item) {\n\t        return \"<li>\" + this.label(item) + \"</li>\";\n\t    };\n\t    SelectListView.prototype.cancel = function () {\n\t        this.panel.hide();\n\t        _super.prototype.cancel.call(this);\n\t    };\n\t    SelectListView.prototype.hide = function () {\n\t        if (!this.panel)\n\t            return;\n\t        this.panel.hide();\n\t    };\n\t    SelectListView.prototype.confirmed = function (item) {\n\t        this._confirmed(item);\n\t        this.hide();\n\t        return this.getSelectedItemView();\n\t    };\n\t    SelectListView.prototype.show = function (commands) {\n\t        this.storeFocusedElement();\n\t        if (!this.panel)\n\t            this.panel = atom.workspace.addModalPanel({ item: this });\n\t        this.setItems(commands);\n\t        this.panel.show();\n\t        this.focusFilterEditor();\n\t    };\n\t    return SelectListView;\n\t})(aspv.SelectListView);\n\texports.SelectListView = SelectListView;\n\t\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar _ = __webpack_require__(23);\n\texports.TARGET_RAML_EDITOR_NODE = \"TARGET_RAML_EDITOR_NODE\";\n\texports.TARGET_RAML_TREE_VIEWER_NODE = \"TARGET_RAML_TREE_VIEWER_NODE\";\n\t/**\n\t * Registers an action, which will take part in all engine consumers, like\n\t * context menu, outline actions and potentially toolbar\n\t * @param action\n\t */\n\tfunction addAction(action) {\n\t    if (_.find(actions, function (currentAction) {\n\t        return currentAction.name == action.name;\n\t    })) {\n\t        return;\n\t    }\n\t    actions.push(action);\n\t}\n\texports.addAction = addAction;\n\t/**\n\t * Shortcut for adding simple actions. Not recommended, use addAction() instead to\n\t * provide state calculator.\n\t *\n\t * See IContextDependedAction fields for parameter descriptions.\n\t * @param name\n\t * @param target\n\t * @param onClick\n\t * @param shouldDisplay\n\t * @param category\n\t */\n\tfunction addSimpleAction(name, category, target, onClick, shouldDisplay) {\n\t    var newAction = {\n\t        name: name,\n\t        target: target,\n\t        onClick: onClick,\n\t        shouldDisplay: shouldDisplay,\n\t        category: category\n\t    };\n\t    addAction(newAction);\n\t}\n\texports.addSimpleAction = addSimpleAction;\n\tvar ExecutableAction = (function () {\n\t    function ExecutableAction(targetAction, state) {\n\t        var _this = this;\n\t        this.name = targetAction.name;\n\t        this.category = targetAction.category;\n\t        this.label = targetAction.label;\n\t        this.target = targetAction.target;\n\t        this.state = state;\n\t        this.originalAction = targetAction;\n\t        this.onClick = function () {\n\t            _this.originalAction.onClick(_this.state);\n\t        };\n\t    }\n\t    return ExecutableAction;\n\t})();\n\t/**\n\t * Used by consumers to determine the actions to execute\n\t */\n\tfunction calculateCurrentActions(target) {\n\t    var result = [];\n\t    try {\n\t        var filteredActions = actions.filter(function (action) {\n\t            return action.target == target;\n\t        });\n\t        filteredActions.forEach(function (action) {\n\t            if (action.stateCalculator) {\n\t                if (action.stateCalculator.contextCalculationStarted) {\n\t                    try {\n\t                        action.stateCalculator.contextCalculationStarted();\n\t                    }\n\t                    catch (Error) {\n\t                        console.error(Error.message);\n\t                    }\n\t                }\n\t            }\n\t        });\n\t        filteredActions.forEach(function (action) {\n\t            try {\n\t                var state = null;\n\t                if (action.stateCalculator) {\n\t                    state = action.stateCalculator.calculate();\n\t                }\n\t                if (action.shouldDisplay) {\n\t                    if (!action.shouldDisplay(state)) {\n\t                        return;\n\t                    }\n\t                }\n\t                result.push(new ExecutableAction(action, state));\n\t            }\n\t            catch (Error) {\n\t                console.error(Error.message);\n\t            }\n\t        });\n\t        filteredActions.forEach(function (action) {\n\t            if (action.stateCalculator) {\n\t                if (action.stateCalculator.contextCalculationFinished) {\n\t                    try {\n\t                        action.stateCalculator.contextCalculationFinished();\n\t                    }\n\t                    catch (Error) {\n\t                        console.error(Error.message);\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    }\n\t    catch (Error) {\n\t        console.error(Error.message);\n\t    }\n\t    return result;\n\t}\n\texports.calculateCurrentActions = calculateCurrentActions;\n\tfunction getCategorizedActionLabel(action) {\n\t    if (action.label) {\n\t        return action.label;\n\t    }\n\t    var result = \"api-workbench:\";\n\t    if (action.category) {\n\t        action.category.forEach(function (cat) {\n\t            result = result + cat + \": \";\n\t        });\n\t    }\n\t    result = result + action.name;\n\t    return result;\n\t}\n\texports.getCategorizedActionLabel = getCategorizedActionLabel;\n\t/**\n\t * Must be called once on module startup\n\t */\n\t//export function initialize() {\n\t//    if (initialized) {\n\t//        return;\n\t//    }\n\t//\n\t//    initialized = true;\n\t//}\n\tvar initialized = false;\n\tvar actions = [];\n\t\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar editorTools = __webpack_require__(5);\n\tvar contextActions = __webpack_require__(31);\n\tvar commonContextActions = __webpack_require__(13);\n\tvar dialogs = __webpack_require__(43);\n\tvar path = __webpack_require__(15);\n\tvar rp = __webpack_require__(22);\n\tvar services = rp.ds;\n\tvar universeHelpers = rp.universeHelpers;\n\tvar AddNewResourceStateCalculator = (function (_super) {\n\t    __extends(AddNewResourceStateCalculator, _super);\n\t    function AddNewResourceStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AddNewResourceStateCalculator.prototype.calculate = function () {\n\t        //usually we dont need to check the editor, CommonASTStateCalculator does this for us\n\t        //but in this case we accept null generalState, so double-checking for opened file\n\t        var editor = this.getEditor();\n\t        if (!editor)\n\t            return null;\n\t        if (path.extname(editor.getPath()) != '.raml')\n\t            return null;\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isResourceType(highLevelNode.definition()) &&\n\t            !universeHelpers.isApiType(highLevelNode.definition()))\n\t            return null;\n\t        if (!highLevelNode.lowLevel()) {\n\t            return null;\n\t        }\n\t        return highLevelNode;\n\t    };\n\t    return AddNewResourceStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar DeleteCurrentNodeStateCalculator = (function (_super) {\n\t    __extends(DeleteCurrentNodeStateCalculator, _super);\n\t    function DeleteCurrentNodeStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    DeleteCurrentNodeStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (universeHelpers.isApiType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return DeleteCurrentNodeStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tvar CreateNewAPIStateCalculator = (function (_super) {\n\t    __extends(CreateNewAPIStateCalculator, _super);\n\t    function CreateNewAPIStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CreateNewAPIStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (generalState)\n\t            return null;\n\t        var editor = this.getEditor();\n\t        if (!editor)\n\t            return null;\n\t        if (path.extname(editor.getPath()) != '.raml')\n\t            return null;\n\t        var text = editor.getText().trim();\n\t        if (text != \"\")\n\t            return null;\n\t        return {};\n\t    };\n\t    return CreateNewAPIStateCalculator;\n\t})(commonContextActions.CommonASTStateCalculator);\n\tfunction deleteNode(node) {\n\t    if (!node || !node.parent())\n\t        return false;\n\t    var parent = node.parent();\n\t    editorTools.aquireManager()._view.forEachViewer(function (x) { return x.remove(node); });\n\t    parent.remove(node);\n\t    editorTools.aquireManager().updateText(parent.lowLevel());\n\t}\n\tfunction getResourceParent(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n\t        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n\t        return node;\n\t    return getResourceParent(node.parent());\n\t}\n\texports.getResourceParent = getResourceParent;\n\tfunction getMethodParent(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((universeHelpers.isMethodType(node.definition()) || universeHelpers.isTraitType(node.definition())) && !node.definition().getAdapter(services.RAMLService).isUserDefined()) {\n\t        return node;\n\t    }\n\t    return null;\n\t}\n\tfunction getParent(node, name) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((node.definition().isAssignableFrom(name))) {\n\t        return node;\n\t    }\n\t    return null;\n\t}\n\tfunction getResourceParentOrRoot(node) {\n\t    var rp = getResourceParent(node);\n\t    return rp ? rp : editorTools.aquireManager().ast;\n\t}\n\tfunction toResource(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n\t        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n\t        return node;\n\t    return null;\n\t}\n\texports.toResource = toResource;\n\tfunction registerQuickCommands(cm) {\n\t    if (!editorTools.aquireManager())\n\t        editorTools.initEditorTools(false);\n\t    var commands = [];\n\t    commands.forEach(function (x) { return x['__module__'] = 'editorTools'; });\n\t    contextActions.addAction({\n\t        name: \"Add new resource\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Add new...\"],\n\t        onClick: function (state) { return dialogs.newResource(editorTools.aquireManager().getSelectedNode()); },\n\t        stateCalculator: new AddNewResourceStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Delete current node\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) { return deleteNode(editorTools.aquireManager().getSelectedNode()); },\n\t        stateCalculator: new DeleteCurrentNodeStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Create new API\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Add new...\"],\n\t        onClick: function (state) { return dialogs.newApi(); },\n\t        stateCalculator: new CreateNewAPIStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addSimpleAction(\"Add new method\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newMethod(toResource(editorTools.aquireManager().getSelectedNode())); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && toResource(editorTools.aquireManager().getSelectedNode()) != null; });\n\t    contextActions.addSimpleAction(\"Create new URI Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(toResource(editorTools.aquireManager().getSelectedNode()), \"Create new URI Parameter\", \"uriParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (toResource(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Query Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Query Parameter\", \"queryParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Response Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n\t    contextActions.addSimpleAction(\"Create new Response Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Response Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n\t    contextActions.addSimpleAction(\"Create new Property\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\"), \"Create new Property\", \"properties\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\") != null); });\n\t    contextActions.addSimpleAction(\"Create new Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Response\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Response\", \"responses\", \"200\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t}\n\texports.registerQuickCommands = registerQuickCommands;\n\t\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar UI = __webpack_require__(17);\n\tvar SC = __webpack_require__(28);\n\tvar CompositeDisposable = UI.CompositeDisposable;\n\tvar rp = __webpack_require__(22);\n\tvar universes = rp.universes;\n\tvar editorTools = __webpack_require__(5);\n\tvar index_1 = __webpack_require__(26);\n\tvar RamlOutline = (function (_super) {\n\t    __extends(RamlOutline, _super);\n\t    function RamlOutline() {\n\t        _super.call(this);\n\t        this.disposables = new CompositeDisposable();\n\t        this.fire = true;\n\t        this.createTree(null);\n\t        this.addClass('raml-outline');\n\t        this.addChild(this._rs);\n\t    }\n\t    RamlOutline.prototype.createTree = function (p) {\n\t        var _this = this;\n\t        this._rs = createTree(p, function (sender) {\n\t            if (editorTools.aquireManager()._details && sender.selection && sender.selection.elements && _this.fire == true) {\n\t                if (sender.selection.elements.length > 0 && sender.selection.elements[0]) {\n\t                    editorTools.aquireManager().setSelectedNode(sender.selection.elements[0]);\n\t                }\n\t            }\n\t        });\n\t        this._viewers = [0, 1, 2, 3].map(function (i) { return _this._rs.get(i).content; });\n\t    };\n\t    RamlOutline.prototype.getTitle = function () { return \"Outline\"; };\n\t    RamlOutline.prototype.getNodePType = function (node) {\n\t        while (node.parent() && node.parent().parent()) {\n\t            node = node.parent();\n\t        }\n\t        return getNodeType(node);\n\t    };\n\t    RamlOutline.prototype.setSelection = function (node) {\n\t        //if (this._selectedNode == node) return;\n\t        this._selectedNode = node;\n\t        this.fire = false;\n\t        try {\n\t            var index = this.getNodePType(node);\n\t            var viewer = this._viewers[index];\n\t            if (viewer != null) {\n\t                viewer.setSelection(node);\n\t                this._rs.setSelectedIndex(index);\n\t            }\n\t        }\n\t        finally {\n\t            this.fire = true;\n\t        }\n\t    };\n\t    RamlOutline.prototype.setUnit = function (unit, force) {\n\t        if (force === void 0) { force = false; }\n\t        this._children = [];\n\t        this.createTree(unit);\n\t        this.addClass('raml-outline');\n\t        this.addChild(this._rs);\n\t        this.html(this.innerRenderUI());\n\t    };\n\t    RamlOutline.prototype.attach = function () {\n\t        if (!this._isAttached) {\n\t            var $this = $(this);\n\t            $this.html(this._rs.renderUI().outerHTML);\n\t            this._isAttached = true;\n\t        }\n\t    };\n\t    RamlOutline.prototype.forEachViewer = function (command) {\n\t        this._viewers.forEach(command);\n\t    };\n\t    RamlOutline.prototype.refresh = function () {\n\t        var unit = this.unit;\n\t        this.setUnit(null);\n\t        this.setUnit(unit);\n\t    };\n\t    RamlOutline.prototype.destroy = function () {\n\t        editorTools.aquireManager()._view = null;\n\t        this._selectedNode = null;\n\t        this.unit = null;\n\t        this._viewers = [];\n\t        this._rs = null;\n\t        this._children = [];\n\t        this.disposables.dispose();\n\t    };\n\t    return RamlOutline;\n\t})(SC.Scrollable);\n\texports.RamlOutline = RamlOutline;\n\t/*\n\t *\n\t */\n\tfunction treeSection(input, name, icon, filterFunc, l, opener) {\n\t    if (opener === void 0) { opener = null; }\n\t    var v = UI.treeViewerSection(name, icon, input, function (x) { return getChildren(x).filter(function (x) { return filterFunc(x); }); }, new HLRenderer(opener));\n\t    v.viewer.setBasicLabelFunction(function (x) { return x ? x.name() : ''; });\n\t    v.viewer.setKeyProvider({\n\t        key: function (p) {\n\t            return \"\" + p.lowLevel().start();\n\t        }\n\t    });\n\t    v.viewer.addSelectionListener(l);\n\t    return v;\n\t}\n\texports.treeSection = treeSection;\n\tvar HLNodeType;\n\t(function (HLNodeType) {\n\t    HLNodeType[HLNodeType[\"Resource\"] = 0] = \"Resource\";\n\t    HLNodeType[HLNodeType[\"Schema\"] = 1] = \"Schema\";\n\t    HLNodeType[HLNodeType[\"Type\"] = 2] = \"Type\";\n\t    HLNodeType[HLNodeType[\"Trait\"] = 3] = \"Trait\";\n\t    HLNodeType[HLNodeType[\"Unknown\"] = 4] = \"Unknown\";\n\t})(HLNodeType || (HLNodeType = {}));\n\tfunction getNodeType(node) {\n\t    if (isResource(node))\n\t        return HLNodeType.Resource;\n\t    else if (isOther(node))\n\t        return HLNodeType.Trait;\n\t    else if (isResourceTypeOrTrait(node))\n\t        return HLNodeType.Type;\n\t    else if (isSchemaOrType(node))\n\t        return HLNodeType.Schema;\n\t    else\n\t        return HLNodeType.Unknown;\n\t}\n\tfunction isResource(p) {\n\t    return (p.definition().key() === universes.Universe08.Resource || p.definition().key() === universes.Universe10.Resource);\n\t}\n\tvar prohibit = {\n\t    resources: true,\n\t    schemas: true,\n\t    types: true,\n\t    resourceTypes: true,\n\t    traits: true\n\t};\n\tfunction isOther(p) {\n\t    if (p.property()) {\n\t        var nm = p.property().nameId();\n\t        if (prohibit[nm]) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t}\n\tfunction isResourceTypeOrTrait(p) {\n\t    var pc = p.definition().key();\n\t    return (pc === universes.Universe08.ResourceType\n\t        || pc === universes.Universe10.ResourceType ||\n\t        pc === universes.Universe08.Trait\n\t        ||\n\t            pc === universes.Universe10.Trait);\n\t}\n\tfunction isApi(p) {\n\t    var pc = p.definition().key();\n\t    return pc === universes.Universe08.Api || pc === universes.Universe10.Api;\n\t}\n\tfunction isDocumentation(p) {\n\t    var pc = p.definition().key();\n\t    return (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem);\n\t}\n\tfunction isSchemaOrType(p) {\n\t    var pc = p.definition().key();\n\t    return (pc === universes.Universe08.GlobalSchema) || (p.property() && p.property().nameId()\n\t        == universes.Universe10.LibraryBase.properties.types.name);\n\t}\n\tfunction getChildren(p) {\n\t    if (p == null)\n\t        return [];\n\t    if (p.isAttr()) {\n\t        return [];\n\t    }\n\t    if (p.isUnknown()) {\n\t        return [];\n\t    }\n\t    var ch = p.children();\n\t    return ch.filter(function (x) {\n\t        if (x.isAttr()) {\n\t            return false;\n\t        }\n\t        if (x.isUnknown()) {\n\t            return false;\n\t        }\n\t        var e = x;\n\t        //return false;\n\t        return true;\n\t    });\n\t}\n\tfunction keyProvider(node) {\n\t    if (!node)\n\t        return null;\n\t    if (node && !node.parent())\n\t        return node.name();\n\t    else\n\t        return node.name() + \" :: \" + keyProvider(node.parent());\n\t}\n\tfunction fullPath(node) {\n\t    if (node == null)\n\t        return \"\";\n\t    else\n\t        return fullPath(node.parent()) + \"/\" + node.name();\n\t}\n\tfunction simpleTree(input, selectionListener, filterFunc, opener) {\n\t    if (opener === void 0) { opener = null; }\n\t    var viewer = UI.treeViewer(function (x) {\n\t        if (x === null) {\n\t            return [];\n\t        }\n\t        if (x.parent() == null) {\n\t            return getChildren(x).filter(function (x) { return filterFunc(x); });\n\t        }\n\t        return getChildren(x);\n\t    }, new HLRenderer(opener), fullPath);\n\t    viewer.setBasicLabelFunction(function (x) { return x.name(); });\n\t    viewer.setKeyProvider({ key: keyProvider });\n\t    viewer.addSelectionListener(selectionListener);\n\t    viewer.getBinding().set(input);\n\t    return viewer;\n\t}\n\texports.simpleTree = simpleTree;\n\tfunction createTree(p, selectionListener, opener) {\n\t    if (opener === void 0) { opener = null; }\n\t    var outline = simpleTree(p, { selectionChanged: selectionListener }, function (x) { return (isResource(x)); }, opener);\n\t    var schemas = simpleTree(p, { selectionChanged: selectionListener }, isSchemaOrType, opener);\n\t    var types = simpleTree(p, { selectionChanged: selectionListener }, isResourceTypeOrTrait, opener);\n\t    var other = simpleTree(p, { selectionChanged: selectionListener }, function (x) { return (isOther(x)); }, opener);\n\t    var folder = new UI.TabFolder();\n\t    folder.add(\"Resources\", UI.Icon.SEARCH, outline, 'raml-icon-custom');\n\t    folder.add(\"Schemas & Types\", UI.Icon.SEARCH, schemas, 'raml-icon-custom');\n\t    folder.add(\"Resource Types & Traits\", UI.Icon.SEARCH, types, 'raml-icon-custom');\n\t    folder.add(\"Other\", UI.Icon.SEARCH, other, 'raml-icon-custom');\n\t    folder.setSelectedIndex(0);\n\t    folder.setOnSelected(function () {\n\t        var selectedTab = folder.selectedComponent();\n\t        if (selectedTab) {\n\t            var selection = selectedTab.getSelection();\n\t            if (selection && selection.elements && selection.elements.length > 0) {\n\t                selectionListener(new UI.SelectionChangedEvent(selectedTab, null, selection));\n\t                selectedTab.customizePanel(true);\n\t            }\n\t        }\n\t    });\n\t    return folder;\n\t}\n\texports.createTree = createTree;\n\tvar HLRenderer = (function () {\n\t    function HLRenderer(opener) {\n\t        this.opener = opener;\n\t    }\n\t    HLRenderer.prototype.render = function (model) {\n\t        try {\n\t            if (model.isAttr()) {\n\t                var attr = model;\n\t                return UI.hc(UI.label(attr.name() + \":\" + attr.value()), UI.a(\"\", function (x) {\n\t                    var p1 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().start());\n\t                    var p2 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().end());\n\t                    editorTools.aquireManager().getCurrentEditor().setSelectedBufferRange({ start: p1, end: p1 }, {});\n\t                }, UI.Icon.ARROW_SMALL_LEFT, null, null));\n\t            }\n\t            if (model.isUnknown()) {\n\t                return UI.label(\"unknown\");\n\t            }\n\t            var icon = UI.Icon.DASH;\n\t            var highLight = UI.TextClasses.NORMAL;\n\t            var node = model;\n\t            var pc = node.definition().key();\n\t            if (pc === universes.Universe08.Resource || pc === universes.Universe10.Resource) {\n\t                icon = UI.Icon.PRIMITIVE_SQUARE;\n\t                highLight = UI.TextClasses.HIGHLIGHT;\n\t            }\n\t            if (pc === universes.Universe08.Method || pc === universes.Universe10.Method) {\n\t                icon = UI.Icon.PRIMITIVE_DOT;\n\t                highLight = UI.TextClasses.WARNING;\n\t            }\n\t            if (pc === universes.Universe08.AbstractSecurityScheme || pc === universes.Universe10.AbstractSecurityScheme) {\n\t                icon = UI.Icon.LOCK;\n\t                highLight = UI.TextClasses.HIGHLIGHT;\n\t            }\n\t            if (pc === universes.Universe08.AbstractSecurityScheme || pc == universes.Universe10.AbstractSecurityScheme) {\n\t                icon = UI.Icon.FILE_SUBMODULE;\n\t                highLight = UI.TextClasses.NORMAL;\n\t            }\n\t            if (pc == universes.Universe10.TypeDeclaration && index_1.universeHelpers.isAnnotationTypesProperty(node.property())) {\n\t                icon = UI.Icon.TAG;\n\t                highLight = UI.TextClasses.HIGHLIGHT;\n\t            }\n\t            if (node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name) ||\n\t                node.definition().isAssignableFrom(universes.Universe08.Parameter.name)) {\n\t                if (node.property() && node.property().nameId() == universes.Universe10.ObjectTypeDeclaration.properties.properties.name) {\n\t                    icon = UI.Icon.FILE_BINARY;\n\t                    highLight = UI.TextClasses.SUCCESS;\n\t                }\n\t                else {\n\t                    icon = UI.Icon.FILE_BINARY;\n\t                    highLight = UI.TextClasses.SUCCESS;\n\t                }\n\t            }\n\t            var nm = model.name();\n\t            var hnode = model;\n\t            if (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem) {\n\t                icon = UI.Icon.BOOK;\n\t                var a = hnode.attr(\"title\");\n\t                if (a) {\n\t                    nm = a.value();\n\t                }\n\t            }\n\t            var extraText = \"\";\n\t            var extraClass = UI.TextClasses.NORMAL;\n\t            var hc = UI.hc(UI.label(nm, icon, highLight));\n\t            var tp = node.attr(\"type\");\n\t            if (tp) {\n\t                var vl = tp.value();\n\t                if (vl == null) {\n\t                    vl = \"\";\n\t                }\n\t                var sv = \"\";\n\t                if (typeof vl === \"object\") {\n\t                    sv = \":\" + vl.valueName();\n\t                }\n\t                else {\n\t                    sv = \":\" + vl;\n\t                }\n\t                hc.addChild(UI.label(sv, UI.Icon.NONE, UI.TextClasses.WARNING).margin(2, 0, 0, 0));\n\t            }\n\t            if (node.lowLevel().unit() != node.root().lowLevel().unit()) {\n\t                highLight = UI.TextClasses.SUBTLE;\n\t                hc.addChild(UI.label(\"(\" + node.lowLevel().unit().path() + \")\", UI.Icon.NONE, highLight).margin(5, 0, 0, 0));\n\t            }\n\t            hc.addClass(\"outline\");\n\t            return hc;\n\t        }\n\t        catch (e) {\n\t            console.log(e);\n\t            return UI.hc(UI.label(\"Illegal node\", UI.Icon.ARROW_SMALL_LEFT, null, null));\n\t        }\n\t    };\n\t    return HLRenderer;\n\t})();\n\texports.HLRenderer = HLRenderer;\n\t\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar emissary = __webpack_require__(42);\n\tvar Subscriber = emissary.Subscriber;\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b)\n\t        if (b.hasOwnProperty(p))\n\t            d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar sp = __webpack_require__(25);\n\tvar $ = sp.$;\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b)\n\t        if (b.hasOwnProperty(p))\n\t            d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar View = (function (_super) {\n\t    __extends(View, _super);\n\t    function View(options) {\n\t        _super.call(this);\n\t        this.options = options;\n\t        this.init();\n\t    }\n\t    Object.defineProperty(View.prototype, \"$\", {\n\t        get: function () {\n\t            return this;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    View.content = function () {\n\t        throw new Error('Must override the base View static content member');\n\t    };\n\t    View.prototype.init = function () { };\n\t    return View;\n\t})(sp.View);\n\tvar ScrollView = (function (_super) {\n\t    __extends(ScrollView, _super);\n\t    function ScrollView(options) {\n\t        _super.call(this);\n\t        this.options = options;\n\t        this.init();\n\t    }\n\t    Object.defineProperty(ScrollView.prototype, \"$\", {\n\t        get: function () {\n\t            return this;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    ScrollView.content = function () {\n\t        throw new Error('Must override the base View static content member');\n\t    };\n\t    ScrollView.prototype.init = function () { };\n\t    return ScrollView;\n\t})(sp.ScrollView);\n\tvar TooltipView = (function (_super) {\n\t    __extends(TooltipView, _super);\n\t    function TooltipView(rect) {\n\t        _super.call(this, rect);\n\t        this.rect = rect;\n\t        $(document.body).append(this.$);\n\t        this.updatePosition();\n\t    }\n\t    TooltipView.content = function () {\n\t        var _this = this;\n\t        return this.div({ class: 'atom-typescript-tooltip tooltip' }, function () {\n\t            _this.div({ class: 'tooltip-inner', outlet: 'inner' });\n\t        });\n\t    };\n\t    TooltipView.prototype.updateText = function (text) {\n\t        this.inner.html(text);\n\t        this.updatePosition();\n\t        this.$.fadeTo(300, 1);\n\t    };\n\t    TooltipView.prototype.updatePosition = function () {\n\t        var offset = 10;\n\t        var left = this.rect.right;\n\t        var top = this.rect.bottom;\n\t        var right = undefined;\n\t        if (left + this.$[0].offsetWidth >= $(document.body).width())\n\t            left = $(document.body).width() - this.$[0].offsetWidth - offset;\n\t        //this.$.css({ 'max-width': '500px'})\n\t        if (left < 0) {\n\t            this.$.css({ 'white-space': 'pre-wrap' });\n\t            left = offset;\n\t            right = offset;\n\t        }\n\t        if (top + this.$[0].offsetHeight >= $(document.body).height()) {\n\t            top = this.rect.top - this.$[0].offsetHeight;\n\t        }\n\t        this.$.css({ left: left, top: top });\n\t    };\n\t    return TooltipView;\n\t})(View);\n\tfunction getFromShadowDom(element, selector) {\n\t    var el = element[0];\n\t    var found = el.rootElement.querySelectorAll(selector);\n\t    return sp.$(found[0]);\n\t}\n\texports.getFromShadowDom = getFromShadowDom;\n\tfunction getEditorPositionForBufferPosition(editor, bufferPos) {\n\t    var buffer = editor.getBuffer();\n\t    return buffer.characterIndexForPosition(bufferPos);\n\t}\n\tfunction isAllowedExtension(ext) {\n\t    return (ext == '.raml' || ext == '.yaml');\n\t}\n\texports.isAllowedExtension = isAllowedExtension;\n\tfunction attach(editorView, editor) {\n\t    //console.log(\"Attach\")\n\t    //console.log(editorView)\n\t    //var rawView = editorView;\n\t    //var filePath = editor.getPath();\n\t    //var filename = path.basename(filePath);\n\t    //var ext = path.extname(filename);\n\t    //if (!isAllowedExtension(ext))\n\t    //    return;\n\t    //if (!fs.existsSync(filePath)) {\n\t    //    return;\n\t    //}\n\t    //var scroll = getFromShadowDom([editorView], '.scroll-view');\n\t    //var subscriber = new Subscriber();\n\t    //var exprTypeTimeout = null;\n\t    //var exprTypeTooltip = null;\n\t    //var lastExprTypeBufferPt;\n\t    //subscriber.subscribe(scroll, 'mousemove', function (e) {\n\t    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n\t    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n\t    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n\t    //    if (lastExprTypeBufferPt && lastExprTypeBufferPt.isEqual(bufferPt) && exprTypeTooltip)\n\t    //        return;\n\t    //    lastExprTypeBufferPt = bufferPt;\n\t    //    clearExprTypeTimeout();\n\t    //    exprTypeTimeout = setTimeout(function () { return showExpressionType(e); }, 1000);\n\t    //});\n\t    //subscriber.subscribe(scroll, 'mouseout', function (e) { return clearExprTypeTimeout(); });\n\t    //subscriber.subscribe(scroll, 'keydown', function (e) { return clearExprTypeTimeout(); });\n\t    //editor.onDidDestroy(function () { return deactivate(); });\n\t    //function showExpressionType(e) {\n\t    //    if (exprTypeTooltip)\n\t    //        return;\n\t    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n\t    //    pixelPt.top += editor.displayBuffer.getScrollTop();\n\t    //    pixelPt.left += editor.displayBuffer.getScrollLeft();\n\t    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n\t    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n\t    //    var curCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column]);\n\t    //    var nextCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column + 1]);\n\t    //    if (curCharPixelPt.left >= nextCharPixelPt.left)\n\t    //        return;\n\t    //    var offset = editor.getLineHeightInPixels() * 0.7;\n\t    //    var tooltipRect = {\n\t    //        left: e.clientX,\n\t    //        right: e.clientX,\n\t    //        top: e.clientY - offset,\n\t    //        bottom: e.clientY + offset\n\t    //    };\n\t    //    exprTypeTooltip = new TooltipView(tooltipRect);\n\t    //    // var position = getEditorPositionForBufferPosition(editor, bufferPt);\n\t    //    var node=provider.getAstNode({\n\t    //        editor:editor,\n\t    //        bufferPosition:bufferPt\n\t    //    },false);\n\t    //    if (node) {\n\t    //        var hl=<hl.IHighLevelNode>node;\n\t    //        var pos=getEditorPositionForBufferPosition(editor,bufferPt);\n\t    //        var doc=docHelper.getDocumentation(hl,pos);\n\t    //        if (doc){\n\t    //            exprTypeTooltip.updateText(doc);\n\t    //        }\n\t    //    }\n\t    //\n\t    //}\n\t    //function deactivate() {\n\t    //    subscriber.unsubscribe();\n\t    //    clearExprTypeTimeout();\n\t    //}\n\t    //function clearExprTypeTimeout() {\n\t    //    if (exprTypeTimeout) {\n\t    //        clearTimeout(exprTypeTimeout);\n\t    //        exprTypeTimeout = null;\n\t    //    }\n\t    //    hideExpressionType();\n\t    //}\n\t    //function hideExpressionType() {\n\t    //    if (!exprTypeTooltip)\n\t    //        return;\n\t    //    exprTypeTooltip.$.remove();\n\t    //    exprTypeTooltip = null;\n\t    //}\n\t}\n\texports.attach = attach;\n\tfunction pixelPositionFromMouseEvent(editorView, event) {\n\t    var clientX = event.clientX, clientY = event.clientY;\n\t    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n\t    var top = clientY - linesClientRect.top;\n\t    var left = clientX - linesClientRect.left;\n\t    return { top: top, left: left };\n\t}\n\tfunction screenPositionFromMouseEvent(editorView, event) {\n\t    return editorView.getModel().screenPositionForPixelPosition(pixelPositionFromMouseEvent(editorView, event));\n\t}\n\texports.screenPositionFromMouseEvent = screenPositionFromMouseEvent;\n\tfunction screenPositionFromMouse(editor, event) {\n\t    var editorView = sp.$(atom.views)[0].getView(editor);\n\t    var pos = pixelPositionFromMouseEvent(editorView, event);\n\t    pos.top -= editor.displayBuffer.getScrollTop();\n\t    pos.left -= editor.displayBuffer.getScrollLeft();\n\t    var clientRect = editorView.getBoundingClientRect();\n\t    pos.top += clientRect.top;\n\t    pos.left += clientRect.left;\n\t    return pos;\n\t}\n\texports.screenPositionFromMouse = screenPositionFromMouse;\n\t//export function turnOn()\n\t//{\n\t//    (<any>atom.workspace).observeTextEditors(editor=> {\n\t//        var editorView = (<any>sp.$((<any>atom).views))[0].getView(editor);\n\t//        attach(editorView, editor);\n\t//    });\n\t//}\n\t\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar hl = __webpack_require__(22);\n\tvar UI = __webpack_require__(17);\n\tvar editorTools = __webpack_require__(5);\n\tvar extract = __webpack_require__(40);\n\tvar assist = __webpack_require__(9);\n\tvar universes = hl.universes;\n\tvar MoveElementsDialog = (function () {\n\t    function MoveElementsDialog(node, name, _resourceType) {\n\t        this.node = node;\n\t        this.name = name;\n\t        this._resourceType = _resourceType;\n\t    }\n\t    MoveElementsDialog.prototype.getActiveEditor = function () {\n\t        var activeEditor = atom.workspace.getActiveTextEditor();\n\t        if (activeEditor) {\n\t            return activeEditor;\n\t        }\n\t        if (editorTools.aquireManager())\n\t            return editorTools.aquireManager().getCurrentEditor();\n\t        return null;\n\t    };\n\t    MoveElementsDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Move resource \", UI.Icon.GIST_NEW, false, false);\n\t        var errorLabel = UI.label(\"please select destination resource\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        vc.addChild(UI.label(\"Please select destination resource\"));\n\t        var el = UI.hc();\n\t        vc.setPercentWidth(100);\n\t        el.setPercentWidth(100);\n\t        var filterFunc = function (x) {\n\t            if (_this._resourceType) {\n\t                if (x.definition().key() != universes.Universe08.Resource &&\n\t                    x.definition().key() != universes.Universe10.Resource) {\n\t                    return false;\n\t                }\n\t                if (x == node || x == node.parent()) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        var universe = node.definition().universe();\n\t        var v = extract.createSmallSelectionPanel(node.root(), filterFunc, \"400px\", \"100%\");\n\t        el.addChild(v);\n\t        vc.addChild(el);\n\t        v.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                errorLabel.setDisplay(ev.selection.isEmpty());\n\t                okButton.setDisabled(ev.selection.isEmpty());\n\t            }\n\t        });\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            var target = v.getSelection().elements[0];\n\t            node.parent().remove(node);\n\t            target.add(node);\n\t            var rs = node.lowLevel().unit().contents();\n\t            _this.getActiveEditor().setText(assist.cleanEmptyLines(rs));\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return MoveElementsDialog;\n\t})();\n\texports.MoveElementsDialog = MoveElementsDialog;\n\t\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by kor on 24/07/15.\n\t */\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar path = __webpack_require__(15);\n\tvar editorTools = __webpack_require__(5);\n\tvar rp = __webpack_require__(22);\n\tvar project = rp.project;\n\tfunction ast(editor) {\n\t    var man = editorTools.aquireManager();\n\t    if (editorTools.aquireManager()) {\n\t        if (man.getCurrentEditor() == editor) {\n\t            return man.ast;\n\t        }\n\t    }\n\t    var p = editor.getPath();\n\t    var prj = project.createProject(path.dirname(p));\n\t    var unit = prj.unit(path.basename(p));\n\t    var text = editor.getBuffer().getText();\n\t    if (!unit) {\n\t        return null;\n\t    }\n\t    unit.updateContent(text);\n\t    var ast = unit.highLevel();\n\t    return ast;\n\t}\n\texports.ast = ast;\n\t\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar UI = __webpack_require__(17);\n\tvar SC = __webpack_require__(28);\n\tvar path = __webpack_require__(15);\n\tvar CompositeDisposable = UI.CompositeDisposable;\n\tvar hl = __webpack_require__(22);\n\tvar details = __webpack_require__(50);\n\tvar schemaUI = __webpack_require__(51);\n\tvar editorTools = __webpack_require__(5);\n\tvar dialogs = __webpack_require__(43);\n\tvar fs = __webpack_require__(16);\n\tvar universeHelpers = hl.universeHelpers;\n\tvar RamlDetails = (function (_super) {\n\t    __extends(RamlDetails, _super);\n\t    function RamlDetails(allowStructureChanges) {\n\t        if (allowStructureChanges === void 0) { allowStructureChanges = true; }\n\t        _super.call(this);\n\t        this.allowStructureChanges = allowStructureChanges;\n\t        this.disposables = new CompositeDisposable();\n\t        this.addClass('raml-details');\n\t    }\n\t    RamlDetails.prototype.getTitle = function () {\n\t        return \"Details\";\n\t    };\n\t    RamlDetails.prototype.attached = function () {\n\t        try {\n\t            this.element.innerHTML = \"<div></div>\";\n\t            this._children = [];\n\t            this.container = UI.vc();\n\t            this.addChild(this.container);\n\t            this.ui().appendChild(this.container.ui());\n\t            _super.prototype.attached.call(this);\n\t        }\n\t        catch (e) {\n\t        }\n\t    };\n\t    RamlDetails.prototype.setSchema = function (node) {\n\t        if (this.wasSchema) {\n\t            this.schemaView.dispose();\n\t            this.schemaView = null;\n\t        }\n\t        var key = node.attr(\"key\"), value = node.attr(\"value\");\n\t        var ssto = 12;\n\t        if (value == null) {\n\t            this.container.clear();\n\t            var errLabel = UI.h3(\"Selected schema has incorrect node so cannot be displayed.\");\n\t            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n\t            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n\t            this.container.addChild(errLabel);\n\t            return;\n\t        }\n\t        //FIXME\n\t        setInterval(function () {\n\t            if (ssto++ != 12)\n\t                return;\n\t            if (value) {\n\t                value.setValue(schemaText);\n\t                schemaUI._updatePreview(treeView, schemaText);\n\t            }\n\t        }, 100);\n\t        var schemaText = value.value();\n\t        this.container.clear();\n\t        var textView = dialogs.smallEditor(function (e, v) {\n\t            if (value.lowLevel().includePath()) {\n\t                try {\n\t                    var sm = path.dirname(node.lowLevel().unit().absolutePath());\n\t                    var relative = path.resolve(sm, value.lowLevel().includePath());\n\t                    if (!value.lowLevel().includeReference()) {\n\t                        fs.writeFileSync(relative, v);\n\t                    }\n\t                }\n\t                catch (e) {\n\t                    console.log(e);\n\t                }\n\t            }\n\t            // if (v!=schemaText) textView.setText(schemaText); // read-only variant\n\t            schemaText = v;\n\t            ssto = 0;\n\t        });\n\t        dialogs._updateEditor(textView, schemaText);\n\t        var treeView = schemaUI._schemaPreview();\n\t        schemaUI._updatePreview(treeView, schemaText);\n\t        var schemaTab = new UI.TabFolder();\n\t        schemaTab.add(\"Tree view\", UI.Icon.GIT_MERGE, treeView);\n\t        schemaTab.add(\"Text view\", UI.Icon.FILE_TEXT, textView);\n\t        this.container.addChild(schemaTab);\n\t        window['detailsnode'] = node;\n\t        if (details.oldItem) {\n\t            details.oldItem.detach();\n\t            details.oldItem = null;\n\t        }\n\t        this.schemaView = textView;\n\t        this.wasSchema = true;\n\t    };\n\t    RamlDetails.prototype.setResource = function (node) {\n\t        if (this.wasSchema) {\n\t            this.schemaView.dispose();\n\t            this.schemaView = null;\n\t        }\n\t        this.wasSchema = false;\n\t        var hnode = node;\n\t        window[\"detailsnode\"] = hnode;\n\t        if (hnode == null || hnode.lowLevel() == null)\n\t            this.displayEmpty();\n\t        console.log(\"Displaying details for node \" + hnode.name());\n\t        details.updateDetailsPanel(hnode, this.container, true);\n\t    };\n\t    RamlDetails.prototype.update = function () {\n\t        if (window[\"detailsnode\"]) {\n\t            this.setResource(window[\"detailsnode\"]);\n\t        }\n\t    };\n\t    RamlDetails.prototype.displayEmpty = function () {\n\t        this.container.clear();\n\t        if (!editorTools.aquireManager().ast) {\n\t            this.container.addChild(UI.h3(\"Our API is fabulously empty\").margin(8, 8, 20, 8));\n\t            var create = new UI.Button(\"Create new API\", UI.ButtonSizes.LARGE, UI.ButtonHighlights.SUCCESS, UI.Icon.REPO_CLONE, function () { return dialogs.newApi(); });\n\t            create.margin(8, 8, 20, 0);\n\t            this.container.addChild(create);\n\t        }\n\t    };\n\t    RamlDetails.prototype.destroy = function () {\n\t        editorTools.aquireManager()._details = null;\n\t        this.disposables.dispose();\n\t        this._node = null;\n\t        this.container.dispose();\n\t        this.container = null;\n\t        window[\"detailsnode\"] = null;\n\t        this._children = [];\n\t        if (details.oldItem) {\n\t            details.oldItem.detach();\n\t        }\n\t        if (this.wasSchema) {\n\t            this.schemaView.dispose();\n\t            this.schemaView = null;\n\t        }\n\t        details.oldItem = null;\n\t    };\n\t    RamlDetails.prototype.show = function (node) {\n\t        if (this._node == node)\n\t            return;\n\t        this._node = node;\n\t        try {\n\t            if (isSchema(node))\n\t                this.setSchema(this._node);\n\t            else\n\t                this.setResource(node);\n\t        }\n\t        catch (e) { }\n\t    };\n\t    return RamlDetails;\n\t})(SC.Scrollable);\n\texports.RamlDetails = RamlDetails;\n\tfunction isSchema(p) {\n\t    if (!p) {\n\t        return false;\n\t    }\n\t    return universeHelpers.isGlobalSchemaType(p.definition());\n\t}\n\t\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(16);\n\tvar Atom = __webpack_require__(1);\n\tvar React = __webpack_require__(44);\n\tvar SpacePenViews = __webpack_require__(25);\n\tvar pathwatcher = __webpack_require__(52);\n\tvar extend = __webpack_require__(45);\n\tvar path = __webpack_require__(15);\n\tvar popsicle = __webpack_require__(46);\n\tvar AtomUtil = __webpack_require__(53);\n\tvar rp = __webpack_require__(22);\n\tvar Render = __webpack_require__(54);\n\tvar CompositeDisposable = Atom.CompositeDisposable;\n\tfunction template(str, replace, defaults) {\n\t    return str.replace(/\\{([^{}]+)\\}/g, function (match, key) {\n\t        if (replace && replace[key] != null) {\n\t            return replace[key];\n\t        }\n\t        if (defaults && defaults[key] != null) {\n\t            return defaults[key];\n\t        }\n\t        return '';\n\t    });\n\t}\n\t/**\n\t * Export the console view instance which provides rendering and live-updating.\n\t */\n\tvar RAMLConsoleView = (function (_super) {\n\t    __extends(RAMLConsoleView, _super);\n\t    function RAMLConsoleView(options) {\n\t        var _this = this;\n\t        _super.call(this);\n\t        this.loaded = false;\n\t        this.isAttached = false;\n\t        this.isParsing = false;\n\t        this.disposables = new CompositeDisposable();\n\t        this.pageState = {};\n\t        // Track files and editor watchers.\n\t        this.paths = {};\n\t        this.editors = {};\n\t        this.resolver = new ConsoleResolver(function (path) { return _this.readFileSync(path); });\n\t        this.state = extend({\n\t            view: {},\n\t            parameters: {},\n\t            headers: {},\n\t            uriParameters: {},\n\t            baseUriParameters: {},\n\t            queryParameters: {},\n\t            bodies: {}\n\t        }, options.state);\n\t        this.filename = options.filename;\n\t        this.editorId = options.editorId;\n\t        // Handle manually passed in RAML wrapper.\n\t        if (options.raml) {\n\t            this.raml = rp.expander.expandTraitsAndResourceTypes(options.raml);\n\t            this.project = options.raml.highLevel().lowLevel().unit().project().cloneWithResolver(this.resolver);\n\t            this.loaded = true;\n\t        }\n\t    }\n\t    /**\n\t     * Atom uses the `content` as the wrapper element.\n\t     */\n\t    RAMLConsoleView.content = function () {\n\t        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n\t    };\n\t    RAMLConsoleView.getUriForFilename = function (path) {\n\t        return 'raml-console://file/' + path;\n\t    };\n\t    RAMLConsoleView.getUriForEditor = function (editor) {\n\t        return 'raml-console://editor/' + editor.id;\n\t    };\n\t    RAMLConsoleView.prototype.attached = function () {\n\t        var _this = this;\n\t        if (this.isAttached) {\n\t            return;\n\t        }\n\t        this.render();\n\t        this.isAttached = true;\n\t        if (this.editorId) {\n\t            this.resolveEditor(this.editorId);\n\t        }\n\t        else if (this.filename) {\n\t            this.resolveFilename(this.filename);\n\t        }\n\t        this.disposables.add(atom.workspace.observeTextEditors(function (editor) {\n\t            var path = editor.getPath();\n\t            // Upgrade from file watching to editor watching.\n\t            if (_this.paths[path]) {\n\t                _this.watchEditor(editor);\n\t                _this.stopWatchingPath(path);\n\t            }\n\t        }));\n\t    };\n\t    RAMLConsoleView.prototype.resolveEditor = function (editorId) {\n\t        var _this = this;\n\t        var resolve = function () {\n\t            _this.editor = AtomUtil.getEditorById(editorId);\n\t            if (_this.editor) {\n\t                _this.trigger('title-changed');\n\t                _this.loadRAML();\n\t                return;\n\t            }\n\t            var view = _this.parents('.pane').view();\n\t            return view && view.destroyItem(_this);\n\t        };\n\t        if (atom.workspace) {\n\t            resolve();\n\t        }\n\t        else {\n\t            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.resolveFilename = function (filename) {\n\t        var _this = this;\n\t        var resolve = function () {\n\t            _this.file = new pathwatcher.File(filename);\n\t            _this.trigger('title-changed');\n\t            _this.loadRAML();\n\t        };\n\t        if (atom.workspace) {\n\t            resolve();\n\t        }\n\t        else {\n\t            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.readFileSync = function (path) {\n\t        var editor = AtomUtil.getEditorByPath(path);\n\t        var contents;\n\t        if (editor) {\n\t            contents = editor.getText();\n\t            this.watchEditor(editor);\n\t        }\n\t        else {\n\t            try {\n\t                contents = fs.readFileSync(path, 'utf8');\n\t            }\n\t            catch (err) {\n\t                if (err.code === 'ENOENT') {\n\t                    this.watchForFile(path);\n\t                    return;\n\t                }\n\t                throw err;\n\t            }\n\t            this.watchFile(path);\n\t        }\n\t        return contents;\n\t    };\n\t    RAMLConsoleView.prototype.watchEditor = function (editor) {\n\t        var _this = this;\n\t        var path = editor.getPath();\n\t        if (this.editors[path]) {\n\t            return;\n\t        }\n\t        var disposables = new CompositeDisposable();\n\t        this.editors[path] = disposables;\n\t        // Changes can be as simple as updating the cache.\n\t        disposables.add(editor.onDidStopChanging(function () {\n\t            _this.updateUnit(path, editor.getText());\n\t        }));\n\t        // Callback to dispose of listeners and force an update. This happens\n\t        // because the updated path or file may not be used by the RAML parser.\n\t        var cb = function () {\n\t            _this.stopWatchingEditor(path);\n\t            _this.updateUnit(path, _this.readFileSync(path));\n\t        };\n\t        disposables.add(editor.onDidDestroy(cb));\n\t        disposables.add(editor.onDidChangePath(cb));\n\t    };\n\t    RAMLConsoleView.prototype.getActiveEditor = function () {\n\t        return atom.workspace.getActiveTextEditor();\n\t    };\n\t    RAMLConsoleView.prototype.stopWatchingPath = function (path) {\n\t        var watcher = this.paths[path];\n\t        if (watcher) {\n\t            watcher.close();\n\t            delete this.paths[path];\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.stopWatchingEditor = function (path) {\n\t        var disposables = this.editors[path];\n\t        if (disposables) {\n\t            disposables.dispose();\n\t            delete this.editors[path];\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.watchFile = function (path) {\n\t        var _this = this;\n\t        if (this.paths[path]) {\n\t            return;\n\t        }\n\t        var watcher = pathwatcher.watch(path, function (event) {\n\t            if (event === 'change') {\n\t                _this.updateUnit(path, _this.readFileSync(path));\n\t            }\n\t            else {\n\t                _this.stopWatchingPath(path);\n\t                _this.deleteUnit(path);\n\t            }\n\t        });\n\t        this.paths[path] = watcher;\n\t    };\n\t    RAMLConsoleView.prototype.watchForFile = function (filename) {\n\t        var _this = this;\n\t        this.watchForPath(filename, function () {\n\t            _this.updateUnit(filename, _this.readFileSync(filename));\n\t        });\n\t    };\n\t    RAMLConsoleView.prototype.watchForPath = function (filename, cb) {\n\t        var _this = this;\n\t        var parent = path.dirname(filename);\n\t        var watch = function () {\n\t            var watcher = pathwatcher.watch(parent, function (event, newFilename) {\n\t                if (event === 'change') {\n\t                    if (newFilename === filename) {\n\t                        _this.stopWatchingPath(parent);\n\t                        cb();\n\t                    }\n\t                }\n\t                else {\n\t                    _this.watchForPath(parent, watch);\n\t                    _this.stopWatchingPath(parent);\n\t                }\n\t            });\n\t            _this.paths[parent] = watcher;\n\t        };\n\t        try {\n\t            watch();\n\t        }\n\t        catch (e) {\n\t            this.watchForPath(parent, watch);\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.stopWatching = function () {\n\t        var _this = this;\n\t        Object.keys(this.paths).forEach(function (path) {\n\t            _this.stopWatchingPath(path);\n\t        });\n\t        Object.keys(this.editors).forEach(function (path) {\n\t            _this.stopWatchingEditor(path);\n\t        });\n\t    };\n\t    RAMLConsoleView.prototype.navigate = function (state) {\n\t        var view = typeof state === 'string' ? { id: state } : extend(this.state.view, state);\n\t        // Reset `pageState` before re-render.\n\t        this.pageState = {};\n\t        this.setState({ view: view }, function () {\n\t            // Scroll the view to the top, as if we'd just navigated.\n\t            document.getElementById('raml-console-view').scrollTop = 0;\n\t        });\n\t        this.abortRequest();\n\t    };\n\t    /**\n\t     * Render the UI with React.\n\t     */\n\t    RAMLConsoleView.prototype.render = function (cb) {\n\t        var _this = this;\n\t        var props = {\n\t            state: this.state,\n\t            raml: this.raml,\n\t            loaded: this.loaded,\n\t            errors: this.errors,\n\t            pageState: this.pageState,\n\t            setParameter: function (group, name, value) { return _this.setParameter(group, name, value); },\n\t            setState: function (state) { return _this.setState(state); },\n\t            navigate: function (view) { return _this.navigate(view); },\n\t            execRequest: function () { return _this.execRequest(); }\n\t        };\n\t        React.render(React.createElement(Render.Console, props), this.element, cb);\n\t    };\n\t    RAMLConsoleView.prototype.execRequest = function () {\n\t        var _this = this;\n\t        this.abortRequest();\n\t        var baseUri = this.raml.baseUri();\n\t        var node = this.raml.highLevel().findById(this.state.view.id).wrapperNode();\n\t        // Remove old request errors.\n\t        this.setPageState({ requestError: undefined });\n\t        if (baseUri == null) {\n\t            this.setPageState({ requestError: 'Unable to execute request, `baseUri` is missing' });\n\t            return;\n\t        }\n\t        var securityScheme = this.state.securityScheme ?\n\t            this.raml.securitySchemes().filter(function (x) { return x.name() === _this.state.securityScheme; })[0] : undefined;\n\t        var defaultBaseUriParameters = this.toDefaultParameters(this.raml.allBaseUriParameters());\n\t        var defaultUriParameters = this.toDefaultParameters(node.parent().allUriParameters());\n\t        var methodHeaders = node.headers();\n\t        var methodQuery = node.queryParameters();\n\t        var url = template(baseUri.value() || '', this.state.baseUriParameters, defaultBaseUriParameters).replace(/\\/$/, '');\n\t        var path = template(node.parent().completeRelativeUri(), this.state.uriParameters, defaultUriParameters);\n\t        if (securityScheme) {\n\t            methodQuery = methodQuery.concat(securityScheme.describedBy().queryParameters());\n\t            methodHeaders = methodHeaders.concat(securityScheme.describedBy().headers());\n\t        }\n\t        this.request = popsicle.request({\n\t            url: url + path,\n\t            method: node.method(),\n\t            headers: extend({ 'User-Agent': 'API Workbench: Console' }, this.usedParameters(this.state.headers, methodHeaders)),\n\t            query: this.usedParameters(this.state.queryParameters, methodQuery),\n\t            body: this.state.bodies[this.state.body],\n\t            use: [\n\t                popsicle.plugins.headers(),\n\t                popsicle.plugins.unzip(),\n\t                popsicle.plugins.concatStream('string')\n\t            ]\n\t        });\n\t        this.request.progress(function () {\n\t            _this.setPageState({ requestProgress: _this.request.completed });\n\t        });\n\t        // Handle request completion.\n\t        this.request.then(function (response) {\n\t            _this.setPageState({ requestResponse: response.toJSON(), requestProgress: undefined });\n\t            _this.request = undefined;\n\t        }, function (error) {\n\t            _this.setPageState({ requestError: error.message, requestProgress: undefined });\n\t            _this.request = undefined;\n\t        });\n\t    };\n\t    RAMLConsoleView.prototype.toDefaultParameters = function (parameters) {\n\t        var params = {};\n\t        parameters.forEach(function (parameter) {\n\t            if (parameter.default()) {\n\t                params[parameter.name()] = parameter.default();\n\t            }\n\t        });\n\t        return params;\n\t    };\n\t    RAMLConsoleView.prototype.usedParameters = function (state, parameters) {\n\t        var params = {};\n\t        parameters.forEach(function (param) {\n\t            if (state[param.name()]) {\n\t                params[param.name()] = state[param.name()];\n\t            }\n\t        });\n\t        return params;\n\t    };\n\t    RAMLConsoleView.prototype.abortRequest = function () {\n\t        if (this.request) {\n\t            this.request.abort();\n\t            this.request = undefined;\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.updateRAML = function () {\n\t        this.isParsing = true;\n\t        try {\n\t            var baseUnit = this.getUnit(this.getFilename());\n\t            var errors = baseUnit.ast().errors();\n\t            this.errors = errors;\n\t            if (!errors.length) {\n\t                var originalRoot = baseUnit.highLevel().asElement().wrapperNode();\n\t                this.raml = rp.expander.expandTraitsAndResourceTypes(originalRoot);\n\t            }\n\t        }\n\t        catch (error) {\n\t            this.raml = undefined;\n\t            this.errors = [error];\n\t        }\n\t        finally {\n\t            this.loaded = true;\n\t            this.isParsing = false;\n\t            this.render();\n\t            this.trigger('title-changed');\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.loadRAML = function () {\n\t        // Reset all watchers, consider it a fresh parse.\n\t        this.stopWatching();\n\t        this.project = rp.project.createProject(path.dirname(this.getFilename()), this.resolver);\n\t        this.updateRAML();\n\t    };\n\t    RAMLConsoleView.prototype.serialize = function () {\n\t        return {\n\t            deserializer: 'RAMLConsoleView',\n\t            filename: this.getFilename(),\n\t            state: this.state\n\t        };\n\t    };\n\t    RAMLConsoleView.prototype.getFilename = function () {\n\t        if (this.file) {\n\t            return this.file.getPath();\n\t        }\n\t        if (this.editor) {\n\t            return this.editor.getPath();\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.getTitle = function () {\n\t        var name = 'RAML';\n\t        if (this.raml && this.raml.title() != null) {\n\t            name = this.raml.title();\n\t        }\n\t        else if (this.file) {\n\t            name = path.basename(this.getFilename());\n\t        }\n\t        else if (this.editor) {\n\t            name = this.editor.getTitle();\n\t        }\n\t        return name + ' Console';\n\t    };\n\t    RAMLConsoleView.prototype.destroy = function () {\n\t        this.stopWatching();\n\t        this.disposables.dispose();\n\t        React.unmountComponentAtNode(this.element);\n\t    };\n\t    RAMLConsoleView.prototype.setState = function (state, cb) {\n\t        this.state = extend(this.state, state);\n\t        this.render(cb);\n\t    };\n\t    RAMLConsoleView.prototype.setPageState = function (pageState, cb) {\n\t        this.pageState = extend(this.pageState, pageState);\n\t        this.render(cb);\n\t    };\n\t    RAMLConsoleView.prototype.setParameter = function (group, name, value) {\n\t        // TODO(blakeembrey): Use computed properties on TypeScript 1.5+.\n\t        var state = {};\n\t        var groupState = extend(this.state[group]);\n\t        // Remove falsy values from view.\n\t        if (value) {\n\t            groupState[name] = value;\n\t        }\n\t        else {\n\t            delete groupState[name];\n\t        }\n\t        state[group] = groupState;\n\t        this.setState(state);\n\t    };\n\t    RAMLConsoleView.prototype.getURI = function () {\n\t        return RAMLConsoleView.getUriForFilename(this.getFilename());\n\t    };\n\t    RAMLConsoleView.prototype.getUnit = function (path) {\n\t        return this.project.unit(path, true);\n\t    };\n\t    RAMLConsoleView.prototype.deleteUnit = function (path) {\n\t        this.project.deleteUnit(path);\n\t        this.updateRAML();\n\t    };\n\t    RAMLConsoleView.prototype.updateUnit = function (path, contents) {\n\t        this.getUnit(path).updateContent(this.readFileSync(path));\n\t        this.updateRAML();\n\t    };\n\t    return RAMLConsoleView;\n\t})(SpacePenViews.ScrollView);\n\texports.RAMLConsoleView = RAMLConsoleView;\n\tvar FSResolverImpl = (function () {\n\t    function FSResolverImpl() {\n\t    }\n\t    FSResolverImpl.prototype.content = function (path) {\n\t        if (!fs.existsSync(path)) {\n\t            return null;\n\t        }\n\t        try {\n\t            return fs.readFileSync(path).toString();\n\t        }\n\t        catch (e) {\n\t            return null;\n\t        }\n\t    };\n\t    FSResolverImpl.prototype.list = function (path) {\n\t        return fs.readdirSync(path);\n\t    };\n\t    FSResolverImpl.prototype.contentAsync = function (path) {\n\t        return new Promise(function (resolve, reject) {\n\t            fs.readFile(path, function (err, data) {\n\t                if (err != null) {\n\t                    return reject(err);\n\t                }\n\t                var content = data.toString();\n\t                resolve(content);\n\t            });\n\t        });\n\t    };\n\t    FSResolverImpl.prototype.listAsync = function (path) {\n\t        return new Promise(function (reject, resolve) {\n\t            fs.readdir(path, function (err, files) {\n\t                if (err != null) {\n\t                    return reject(err);\n\t                }\n\t                resolve(files);\n\t            });\n\t        });\n\t    };\n\t    return FSResolverImpl;\n\t})();\n\texports.FSResolverImpl = FSResolverImpl;\n\t/**\n\t * Create a console resolver class.\n\t */\n\tvar ConsoleResolver = (function (_super) {\n\t    __extends(ConsoleResolver, _super);\n\t    function ConsoleResolver(readFileSync) {\n\t        _super.call(this);\n\t        this.readFileSync = readFileSync;\n\t    }\n\t    ConsoleResolver.prototype.content = function (path) {\n\t        return this.readFileSync(path);\n\t    };\n\t    return ConsoleResolver;\n\t})(FSResolverImpl);\n\t\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar DomParser = __webpack_require__(48);\n\tfunction xmlToJson(xml) {\n\t    // Create the return object\n\t    var obj = {};\n\t    if (xml.nodeType == 1) {\n\t        // do attributes\n\t        if (xml.attributes.length > 0) {\n\t            for (var j = 0; j < xml.attributes.length; j++) {\n\t                var attribute = xml.attributes.item(j);\n\t                obj[\"@\" + attribute.nodeName] = attribute.nodeValue;\n\t            }\n\t        }\n\t    }\n\t    else if (xml.nodeType == 3) {\n\t        obj = xml.nodeValue;\n\t    }\n\t    // do children\n\t    if (xml.hasChildNodes()) {\n\t        for (var i = 0; i < xml.childNodes.length; i++) {\n\t            var item = xml.childNodes.item(i);\n\t            var nodeName = item.nodeName;\n\t            if (nodeName == undefined) {\n\t                continue;\n\t            }\n\t            if (typeof (obj[nodeName]) == \"undefined\") {\n\t                obj[nodeName] = xmlToJson(item);\n\t            }\n\t            else {\n\t                if (typeof (obj[nodeName].push) == \"undefined\") {\n\t                    var old = obj[nodeName];\n\t                    obj[nodeName] = [];\n\t                    obj[nodeName].push(old);\n\t                }\n\t                obj[nodeName].push(xmlToJson(item));\n\t            }\n\t        }\n\t    }\n\t    return obj;\n\t}\n\t;\n\tfunction cleanupText(j) {\n\t    for (var p in j) {\n\t        if (typeof (j[p]) == \"object\") {\n\t            for (var k in j[p]) {\n\t                if (k == '#text') {\n\t                    var txt = j[p]['#text'];\n\t                    if (typeof (txt) != 'string') {\n\t                        txt = txt.join(\"\");\n\t                    }\n\t                    txt = txt.trim();\n\t                    if (txt.length == 0) {\n\t                        delete j[p]['#text'];\n\t                    }\n\t                }\n\t            }\n\t            cleanupText(j[p]);\n\t        }\n\t    }\n\t    return j;\n\t}\n\tfunction cleanupJson(j) {\n\t    for (var p in j) {\n\t        if (typeof (j[p]) == \"object\") {\n\t            var keys = Object.keys(j[p]);\n\t            if (keys.length == 1) {\n\t                if (keys[0] == '#text') {\n\t                    j[p] = j[p]['#text'];\n\t                }\n\t            }\n\t            cleanupJson(j[p]);\n\t        }\n\t    }\n\t    return j;\n\t}\n\tfunction parseXML(value) {\n\t    var v = new DomParser.DOMParser();\n\t    if (!value || value.trim().indexOf(\"<<\") == 0)\n\t        return null;\n\t    var parsed = v.parseFromString(value);\n\t    return cleanupJson(cleanupText(xmlToJson(parsed)));\n\t}\n\tmodule.exports = parseXML;\n\t\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(16);\n\tvar path = __webpack_require__(15);\n\tvar rp = __webpack_require__(22);\n\tvar stubs = rp.stubs;\n\tvar _ = __webpack_require__(23);\n\tvar provider = __webpack_require__(7);\n\tvar UI = __webpack_require__(17);\n\tvar outlineView = __webpack_require__(33);\n\tvar def = rp.ds;\n\tvar assist = __webpack_require__(9);\n\tvar yaml = __webpack_require__(47);\n\tvar universeHelpers = rp.universeHelpers;\n\tvar universeModule = rp.universes;\n\tvar search = rp.search;\n\tvar util = __webpack_require__(55);\n\tvar ExtractTypesAndTraitsDialog = (function () {\n\t    function ExtractTypesAndTraitsDialog(node, name, _resourceType) {\n\t        this.node = node;\n\t        this.name = name;\n\t        this._resourceType = _resourceType;\n\t        this.filters = new NodeFilters();\n\t    }\n\t    ExtractTypesAndTraitsDialog.prototype.getActiveEditor = function () {\n\t        return assist.getActiveEditor();\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Extract \" + this.name + \":\", UI.Icon.GIST_NEW, false, false);\n\t        vc.addChild(UI.label(\"Extracted element name:\").pad(5, 0));\n\t        var errorLabel = UI.label(\"Please type valid name for \" + this.name, UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        var tf = UI.texfField(\"\", \"\", function (x) {\n\t            if (!okButton) {\n\t                return;\n\t            }\n\t            var isErr = tf.getBinding().get().trim().length == 0;\n\t            okButton.setDisabled(isErr);\n\t            errorLabel.setDisplay(isErr);\n\t            stub.attr(\"name\").setValue(tf.getBinding().get());\n\t        });\n\t        vc.addChild(tf);\n\t        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n\t        var el = UI.hc();\n\t        vc.setPercentWidth(100);\n\t        el.setPercentWidth(100);\n\t        var filterFunc = function (x) {\n\t            if (_this._resourceType) {\n\t                if (universeHelpers.isResourceType(x.definition())) {\n\t                    return false;\n\t                }\n\t            }\n\t            if (_.find(_this.filters.removals, function (y) { return x == y; })) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t        var stub = this.createNodeStub(node);\n\t        var v = createSmallSelectionPanel(node, filterFunc, \"400px\", \"47%\");\n\t        var v1 = createSmallSelectionPanel(stub, function (x) { return true; }, \"400px\", \"47%\", \"right\");\n\t        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = v.getSelection().elements;\n\t            _this.moveRight(z, stub, node, v, v1);\n\t        });\n\t        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = v1.getSelection().elements;\n\t            _this.moveLeft(z, stub, node, v, v1);\n\t        });\n\t        var allRight = UI.button(\">>\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = node.elements().filter(function (x) { return filterFunc(x); });\n\t            _this.moveRight(z, stub, node, v, v1);\n\t        });\n\t        var allLeft = UI.button(\"<<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = stub.elements();\n\t            _this.moveLeft(z, stub, node, v, v1);\n\t        });\n\t        el.addChild(UI.vc(moveRight, moveLeft, allRight, allLeft));\n\t        el.addChild(v);\n\t        el.addChild(v1);\n\t        vc.addChild(el);\n\t        v.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var rs = ev.selection.elements;\n\t                var m = (_.find(rs, function (x) { return x.parent() != node; }) != undefined);\n\t                moveRight.setDisabled(m || (rs.length == 0));\n\t            }\n\t        });\n\t        v1.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var nodesToMove = ev.selection.elements;\n\t                var unregisteredNode = _.find(nodesToMove, function (nodeToMove) {\n\t                    var registeredNode = _.find(_this.filters.removals, function (movedNode) { return nodeToMove.id() == movedNode.id(); });\n\t                    return registeredNode == undefined;\n\t                }) != undefined;\n\t                //var m=(_.find(rs, x=>x.parent() != stub)!=undefined )\n\t                moveLeft.setDisabled(unregisteredNode || (nodesToMove.length == 0));\n\t            }\n\t        });\n\t        moveLeft.setDisabled(true);\n\t        moveRight.setDisabled(true);\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        var okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.apply(node, stub, tf.getBinding().get());\n\t            //this.onOk(zz);\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.apply = function (node, stub, newTypeName) {\n\t        this.filters.removals.forEach(function (x) { return node.remove(x); });\n\t        var stub2 = this.createNodeStub(node);\n\t        stub.elements().forEach(function (child) { return stub2.add(child); });\n\t        stub2.attr(\"name\").setValue(newTypeName);\n\t        var typeOrTraitValueToReplace = \"_________TEMPORARY_TYPE_OR_TRAIT_VALUE_________\";\n\t        var replacements = [];\n\t        var superAttributeName = this._resourceType ?\n\t            universeModule.Universe10.ResourceType.properties.type.name :\n\t            universeModule.Universe10.Trait.properties.is.name;\n\t        var superAttributes = node.attributes(superAttributeName);\n\t        var superAttrProperty = stub2.definition().property(superAttributeName);\n\t        if (superAttributes && superAttributes.length > 0) {\n\t            for (var i = 0; i < superAttributes.length; i++) {\n\t                var superAttribute = superAttributes[i];\n\t                var superAttributeLL = superAttribute.lowLevel();\n\t                var start = superAttributeLL.valueStart();\n\t                var end = superAttributeLL.valueEnd();\n\t                if (start <= 0) {\n\t                    start = superAttributeLL.start();\n\t                    end = superAttributeLL.end();\n\t                }\n\t                var typeOrTraitValueToReplaceWith = superAttributeLL.unit().contents().substr(start, end - start);\n\t                replacements.push(typeOrTraitValueToReplaceWith);\n\t            }\n\t            for (var i = 0; i < superAttributes.length; i++) {\n\t                var superAttribute = superAttributes[i];\n\t                node.remove(superAttribute);\n\t            }\n\t            var stubAttributeValue = typeOrTraitValueToReplace;\n\t            if (superAttributes.length > 1) {\n\t                stubAttributeValue = \"[\" + stubAttributeValue + \"]\";\n\t            }\n\t            var stubSuperAttribute = stubs.createAttr(superAttrProperty, stubAttributeValue);\n\t            stub2.add(stubSuperAttribute);\n\t            node.resetChildren();\n\t            stub2.resetChildren();\n\t        }\n\t        if (this._resourceType) {\n\t            node.add(stubs.createAttr(node.definition().property(superAttributeName), stub.name()));\n\t        }\n\t        else {\n\t            node.add(stubs.createAttr(node.definition().property(superAttributeName), \"[\" + stub.name() + \"]\"));\n\t        }\n\t        node.root().add(stub2);\n\t        var cl = node.lowLevel().unit().contents();\n\t        if (replacements.length == 1) {\n\t            var totalRepalcement = replacements[0];\n\t            if (superAttrProperty.isMultiValue()) {\n\t                totalRepalcement = \"[\" + totalRepalcement + \"]\";\n\t            }\n\t            cl = cl.replace(typeOrTraitValueToReplace, totalRepalcement);\n\t        }\n\t        else if (replacements.length > 1) {\n\t            var totalReplacement = \"\";\n\t            for (var i = 0; i < replacements.length - 1; i++) {\n\t                totalReplacement += replacements[i] + \", \";\n\t            }\n\t            totalReplacement += replacements[replacements.length - 1];\n\t            cl = cl.replace(typeOrTraitValueToReplace, totalReplacement);\n\t        }\n\t        this.getActiveEditor().setText(assist.cleanEmptyLines(cl));\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.createNodeStub = function (node) {\n\t        var universe = node.definition().universe();\n\t        var rtypes = node.root().definition().property(\"resourceTypes\");\n\t        var traits = node.root().definition().property(\"traits\");\n\t        var stub = stubs.createStubNode(universe.type(\"ResourceType\"), rtypes);\n\t        if (!this._resourceType) {\n\t            stub = stubs.createStubNode(universe.type(\"Trait\"), traits);\n\t        }\n\t        return stub;\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.moveLeft = function (z, stub, node, v, v1) {\n\t        var _this = this;\n\t        if (z.length > 0) {\n\t            z.forEach(function (x) { return _this.filters.removals = _this.filters.removals.filter(function (y) { return y.id() != x.id(); }); });\n\t            z.forEach(function (x) {\n\t                stub.remove(x);\n\t                var k = 0;\n\t                k++;\n\t            });\n\t        }\n\t        stub.resetChildren();\n\t        v.setInput(node);\n\t        v1.setInput(stub);\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.moveRight = function (z, stub, node, v, v1) {\n\t        if (z.length > 0) {\n\t            this.filters.removals = this.filters.removals.concat(z);\n\t        }\n\t        z.forEach(function (x) { return stub.add(x.copy()); });\n\t        stub.resetChildren();\n\t        v.setInput(node);\n\t        v1.setInput(stub);\n\t    };\n\t    return ExtractTypesAndTraitsDialog;\n\t})();\n\texports.ExtractTypesAndTraitsDialog = ExtractTypesAndTraitsDialog;\n\tvar NodeFilters = (function () {\n\t    function NodeFilters() {\n\t        this.removals = [];\n\t    }\n\t    return NodeFilters;\n\t})();\n\tfunction createSmallSelectionPanel(node, filter, height, width, float) {\n\t    if (float === void 0) { float = \"left\"; }\n\t    var v = createVIewer(node, filter);\n\t    v.setTagName(\"atom-panel\");\n\t    v.setStyle(\"width\", width);\n\t    v.setStyle(\"border\", \"solid\");\n\t    v.setStyle(\"border-width\", \"1px\");\n\t    v.setStyle(\"height\", height);\n\t    v.setStyle(\"overflow\", \"scroll\");\n\t    if (float) {\n\t        v.setStyle(\"float\", float);\n\t    }\n\t    v.margin(3, 3, 3, 3);\n\t    return v;\n\t}\n\texports.createSmallSelectionPanel = createSmallSelectionPanel;\n\tfunction createVIewer(h, filter) {\n\t    var v = UI.treeViewer(function (x) {\n\t        return x.elements().filter(function (x) { return filter(x); });\n\t    }, new outlineView.HLRenderer(function (model) {\n\t    }));\n\t    v.setInput(h);\n\t    return v;\n\t}\n\texports.createVIewer = createVIewer;\n\tvar AbstractlMoveElementsDialog = (function () {\n\t    function AbstractlMoveElementsDialog(parentNode, name) {\n\t        this.parentNode = parentNode;\n\t        this.name = name;\n\t        /**\n\t         * A list of moved nodes.\n\t         */\n\t        this.movedNodes = [];\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.checkNode = function (nodeToFilter) {\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.validate = function () {\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.createHeader = function (parentPanel) {\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t    };\n\t    /**\n\t     * Call this to display the dialog.\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.show = function () {\n\t        console.log(\"Original file tree:\");\n\t        if (this.getParentNode())\n\t            console.log(this.getParentNode().printDetails());\n\t        if (!this.getParentNode()) {\n\t            return;\n\t        }\n\t        var extractSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n\t        this.stubRoot = this.createStub(this.getParentNode());\n\t        this.createValidationIndicator(extractSection);\n\t        this.createHeader(extractSection);\n\t        this.createPanels(extractSection);\n\t        this.createButtonBar(extractSection);\n\t        extractSection.setPercentWidth(100);\n\t        var html = extractSection.renderUI();\n\t        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t        this.performValidation();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.performValidation = function () {\n\t        var validationMessage = this.validate();\n\t        if (this.okButton) {\n\t            if (validationMessage)\n\t                this.okButton.setDisabled(true);\n\t            else\n\t                this.okButton.setDisabled(false);\n\t        }\n\t        if (this.errorLabel) {\n\t            if (validationMessage) {\n\t                this.errorLabel.setDisplay(true);\n\t                this.errorLabel.setText(validationMessage);\n\t            }\n\t            else {\n\t                this.errorLabel.setDisplay(false);\n\t                this.errorLabel.setText(\"\");\n\t            }\n\t        }\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createValidationIndicator = function (vc) {\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(this.errorLabel));\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.getNodeId = function (node) {\n\t        if (node.parent()) {\n\t            var parentId = this.getNodeId(node.parent());\n\t            parentId += \".\" + node.name();\n\t            var sameName = (node.parent()).asElement().directChildren().filter(function (x) { return x.name() == node.name(); });\n\t            if (sameName.length > 1) {\n\t                var ind = sameName.indexOf(node);\n\t                parentId += \"[\" + ind + \"]\";\n\t            }\n\t            return parentId;\n\t        }\n\t        else if (node.name()) {\n\t            if (node.definition && node.definition() && universeHelpers.isApiType(node.definition())) {\n\t                //no other way to get rid of a fake Api \"key\"\n\t                return \"\";\n\t            }\n\t            return \".\" + node.name();\n\t        }\n\t        return \"\";\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.nodesEqualById = function (node1, node2) {\n\t        return this.getNodeId(node1) == this.getNodeId(node2);\n\t    };\n\t    /**\n\t     * The root of the tree, which is being dynamically build from the moved nodes.\n\t     * The parents of the moved nodes are being copied to the tree, so the temp AST\n\t     * is complete. The root itself is always a stub (not copy) of the root node provided at the dialog open.\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.createMovedNodesTree = function () {\n\t        //cleaning the current tree by removing all the children of the root\n\t        //this.stubRoot.children().forEach(x=>(<any>this.stubRoot).remove(x))\n\t        var _this = this;\n\t        //instead just re-creating parent stub node\n\t        this.stubRoot = this.createStub(this.getParentNode());\n\t        this.movedNodes.forEach(function (movedNode) {\n\t            //collecting node parents till we meet the dialog root\n\t            var parents = [];\n\t            var currentParent = movedNode.parent();\n\t            while (currentParent) {\n\t                if (currentParent == _this.getParentNode())\n\t                    break;\n\t                parents.push(currentParent);\n\t                currentParent = currentParent.parent();\n\t            }\n\t            parents.reverse();\n\t            //now creating copies of parents\n\t            var currentStubPointer = _this.stubRoot;\n\t            parents.forEach(function (currentParent) {\n\t                var stubAnalogueOfParent = _.find(currentStubPointer.children(), function (currentStubElement) {\n\t                    return _this.nodesEqualById(currentStubElement, currentParent);\n\t                });\n\t                if (!stubAnalogueOfParent) {\n\t                    //we did not find an analogue, so we should create one\n\t                    stubAnalogueOfParent = _this.createStub(currentParent);\n\t                    //lets add the new parent to the stub hierarchy\n\t                    currentStubPointer.add(stubAnalogueOfParent);\n\t                    stubAnalogueOfParent.setParent(currentStubPointer);\n\t                }\n\t                currentStubPointer = stubAnalogueOfParent;\n\t            });\n\t            //okay, we found or created all parents of the new moved node, lets create the node itself\n\t            var newNode = _this.createMovedNode(movedNode);\n\t            /*(<hl.IHighLevelNode>movedNode)*/\n\t            currentStubPointer.add(newNode);\n\t            newNode.setParent(currentStubPointer);\n\t        });\n\t        console.log(\"New tree moved:\");\n\t        console.log(this.stubRoot.printDetails());\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createMovedNode = function (originalNode) {\n\t        return originalNode.copy();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.saveUnit = function (unit) {\n\t        provider.saveUnit(unit);\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createStub = function (node) {\n\t        var stub = stubs.createStubNode(node.definition(), node.property(), node.lowLevel().key());\n\t        //if (node.parent() == null && node.lowLevel().key() == null){\n\t        //    //cleaning out the fake key\n\t        //    stub.children().forEach(x=>(<any>stub).remove(x))\n\t        //}\n\t        return stub;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createStubRoot = function (node, type) {\n\t        var lowLevel = stubs.createMap();\n\t        var result = stubs.createASTNodeImpl(lowLevel, null, type, null);\n\t        result.children();\n\t        return result;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createPanels = function (vc) {\n\t        var _this = this;\n\t        var el = UI.hc();\n\t        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n\t        var leftDisplayFilter = function (nodeToCheck) {\n\t            if (!_this.checkNode(nodeToCheck).display)\n\t                return false;\n\t            if (_.find(_this.movedNodes, function (movedNode) {\n\t                return movedNode == nodeToCheck; /*|| this.isParentOf(nodeToCheck, movedNode)*/\n\t            }))\n\t                return false;\n\t            return true;\n\t        };\n\t        this.leftPanel = createSmallSelectionPanel(this.getParentNode(), leftDisplayFilter, \"400px\", \"47%\");\n\t        var rightDisplayFilter = function (nodeToCheck) {\n\t            if (!_this.checkNode(nodeToCheck).display)\n\t                return false;\n\t            //if (_.find(this.movedNodes, movedNode => movedNode == nodeToCheck)) return false\n\t            return true;\n\t        };\n\t        this.rightPanel = createSmallSelectionPanel(this.stubRoot, rightDisplayFilter, \"400px\", \"47%\", \"right\");\n\t        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = _this.leftPanel.getSelection().elements;\n\t            _this.moveRight(z);\n\t        });\n\t        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = _this.rightPanel.getSelection().elements;\n\t            _this.moveLeft(z);\n\t        });\n\t        //var allRight=UI.button(\">>\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n\t        //    var z=this.parentNode.elements().filter(x=>leftFilter(x));\n\t        //    this.moveRight(z);\n\t        //});\n\t        //\n\t        //var allLeft=UI.button(\"<<\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n\t        //    var z=stub.elements();\n\t        //    this.moveLeft(z);\n\t        //\n\t        //});\n\t        el.addChild(UI.vc(moveRight, moveLeft /*,allRight,allLeft*/));\n\t        el.addChild(this.leftPanel);\n\t        el.addChild(this.rightPanel);\n\t        vc.addChild(el);\n\t        this.leftPanel.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var rs = ev.selection.elements;\n\t                //var m=(_.find(rs, x=>x.parent() != this.getParentNode())!=undefined )\n\t                moveRight.setDisabled((rs.length == 0));\n\t            }\n\t        });\n\t        this.rightPanel.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var rs = ev.selection.elements;\n\t                //var m=(_.find(rs, x=>x.parent() != this.stubRoot)!=undefined )\n\t                moveLeft.setDisabled(rs.length == 0);\n\t            }\n\t        });\n\t        moveLeft.setDisabled(true);\n\t        moveRight.setDisabled(true);\n\t        el.setPercentWidth(100);\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createButtonBar = function (parentPanel) {\n\t        var _this = this;\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { _this.rootAtomPanel.destroy(); }).margin(10, 10));\n\t        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.performOk(_this.movedNodes, _this.stubRoot);\n\t            _this.rootAtomPanel.destroy();\n\t        });\n\t        this.okButton.setDisabled(true);\n\t        buttonBar.addChild(this.okButton);\n\t        parentPanel.addChild(buttonBar);\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.getParentNode = function () {\n\t        return this.parentNode;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.isParentOf = function (potentialParent, potentialChild) {\n\t        var current = potentialChild.parent();\n\t        while (current != null) {\n\t            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n\t                return true;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return false;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.mergeTrees = function (sourceTreeRoot, targetTreeRoot, mergeProperties) {\n\t        var _this = this;\n\t        if (mergeProperties === void 0) { mergeProperties = false; }\n\t        if (sourceTreeRoot.directChildren()) {\n\t            sourceTreeRoot.directChildren().forEach(function (child) {\n\t                _this.mergeNode(child, targetTreeRoot);\n\t            });\n\t        }\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.getActiveEditor = function () {\n\t        return assist.getActiveEditor();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.mergeNode = function (sourceNode, targetParent, mergeProperties) {\n\t        var _this = this;\n\t        if (mergeProperties === void 0) { mergeProperties = false; }\n\t        if (!mergeProperties && !(sourceNode.isElement())) {\n\t            return;\n\t        }\n\t        var targetChildren = targetParent.directChildren();\n\t        if (!targetChildren) {\n\t            targetParent.add(sourceNode);\n\t            sourceNode.setParent(targetParent);\n\t            return;\n\t        }\n\t        var analogueChild = _.find(targetChildren, function (child) {\n\t            return _this.nodesEqualById(child, sourceNode);\n\t        });\n\t        if (!analogueChild) {\n\t            targetParent.add(sourceNode);\n\t            sourceNode.setParent(targetParent);\n\t            return;\n\t        }\n\t        if (sourceNode.directChildren()) {\n\t            sourceNode.directChildren().forEach(function (sourceChild) {\n\t                return _this.mergeNode(sourceChild, analogueChild);\n\t            });\n\t        }\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.moveLeft = function (nodesToMove) {\n\t        var _this = this;\n\t        if (nodesToMove.length > 0) {\n\t            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n\t                if (_.find(nodesToMove, function (nodeToMove) {\n\t                    //removing the node itself and all of its children subsequently\n\t                    return _this.nodesEqualById(nodeToMove, currentNode)\n\t                        || _this.isParentOf(nodeToMove, currentNode);\n\t                }))\n\t                    return false;\n\t                return true;\n\t            });\n\t            this.createMovedNodesTree();\n\t        }\n\t        this.leftPanel.setInput(this.getParentNode());\n\t        this.stubRoot.resetChildren();\n\t        this.rightPanel.setInput(this.stubRoot);\n\t        this.performValidation();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.moveRight = function (nodesToMove) {\n\t        var _this = this;\n\t        if (nodesToMove.length > 0) {\n\t            //removing from already moved nodes any children of the nodes to move\n\t            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n\t                if (_.find(nodesToMove, function (nodeToMove) { return _this.isParentOf(nodeToMove, currentNode); }))\n\t                    return false;\n\t                return true;\n\t            });\n\t            nodesToMove.forEach(function (x) { return _this.movedNodes.push(x); });\n\t            //this.movedNodes = this.movedNodes.concat(nodesToMove)\n\t            this.createMovedNodesTree();\n\t        }\n\t        this.leftPanel.setInput(this.getParentNode());\n\t        this.stubRoot.resetChildren();\n\t        this.rightPanel.setInput(this.stubRoot);\n\t        this.performValidation();\n\t    };\n\t    return AbstractlMoveElementsDialog;\n\t})();\n\texports.AbstractlMoveElementsDialog = AbstractlMoveElementsDialog;\n\tvar ExtractLibraryDialog = (function (_super) {\n\t    __extends(ExtractLibraryDialog, _super);\n\t    function ExtractLibraryDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    ExtractLibraryDialog.prototype.checkNode = function (nodeToFilter) {\n\t        var range = null;\n\t        if (nodeToFilter.property() && nodeToFilter.property().range()) {\n\t            range = nodeToFilter.property().range();\n\t        }\n\t        var prrr = nodeToFilter.property();\n\t        var blah = universeHelpers.isTypesProperty(prrr);\n\t        var isTp = universeHelpers.isTypeDeclarationType(range)\n\t            && blah;\n\t        if (range &&\n\t            (universeHelpers.isResourceTypeType(range) ||\n\t                universeHelpers.isTraitType(range) ||\n\t                universeHelpers.isGlobalSchemaType(range) ||\n\t                universeHelpers.isSecuritySchemaType(range) ||\n\t                isTp)) {\n\t            return {\n\t                visitChildren: false,\n\t                display: true,\n\t                canBeMoved: true\n\t            };\n\t        }\n\t        return {\n\t            visitChildren: false,\n\t            display: false,\n\t            canBeMoved: false\n\t        };\n\t    };\n\t    ExtractLibraryDialog.prototype.createStub = function (node) {\n\t        if (node.definition().key() == universeModule.Universe10.Api ||\n\t            node.definition().key() == universeModule.Universe08.Api) {\n\t            var universe = rp.ds.getUniverse(\"RAML10\");\n\t            var nodeClass = universe.type(universeModule.Universe10.Library.name);\n\t            var stub = this.createStubRoot(node, nodeClass);\n\t            return stub;\n\t        }\n\t        return _super.prototype.createStub.call(this, node);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ExtractLibraryDialog.prototype.validate = function () {\n\t        if (!this.libraryPath)\n\t            return null;\n\t        if (!this.stubRoot)\n\t            return null;\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        if (!this.libraryNamespace)\n\t            return null;\n\t        if (!this.getLibraryQualifier()) {\n\t            return \"Enter library namespace\";\n\t        }\n\t        if (this.getLibraryQualifier().trim().length == 0) {\n\t            return \"Enter library namespace\";\n\t        }\n\t        var originalValue = this.libraryPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return \"Empty library path\";\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return \"Library path should be a RAML file\";\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return \"Library path directory does not exist\";\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return \"Library path parent is not a directory\";\n\t        }\n\t        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t        if (fs.existsSync(absolutePath)) {\n\t            return \"Destination library already exists\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ExtractLibraryDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Library namespace:\").pad(5, 0));\n\t        this.libraryNamespace = UI.texfField(\"\", this.getDefaultLibraryNamespace(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.libraryNamespace);\n\t        parentPanel.addChild(UI.label(\"Library path:\").pad(5, 0));\n\t        this.libraryPath = UI.texfField(\"\", this.generateDefaultLibraryPath(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.libraryPath);\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    ExtractLibraryDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var _this = this;\n\t        var project = this.createProject();\n\t        var libraryUnit = this.createLibraryUnit(project);\n\t        var libraries = search.globalDeclarations(this.getParentNode()).filter(function (found) { return found && found.definition && found.definition().nameId() === universeModule.Universe10.Library.name; });\n\t        var universe = this.getParentNode().definition().universe();\n\t        var libraryClass = universe.type(universeModule.Universe10.Library.name);\n\t        movedNodes.forEach(function (movedNode) {\n\t            var librariesToExport = libraries.filter(function (library) {\n\t                return _.find(library.findReferences(), function (reference) { return _this.isParentOf(movedNode, reference); }) ? true : false;\n\t            });\n\t            librariesToExport.forEach(function (library) {\n\t                var currentPath = library.lowLevel()._node.value && library.lowLevel()._node.value.value;\n\t                if (!currentPath) {\n\t                    return;\n\t                }\n\t                var relativePath;\n\t                if (isWebPath(currentPath) || path.isAbsolute(currentPath)) {\n\t                    relativePath = currentPath;\n\t                }\n\t                else {\n\t                    var currentDirectory = path.dirname(_this.getParentNode().lowLevel().unit().absolutePath());\n\t                    var relativePath = path.relative(path.dirname(libraryUnit.absolutePath()), path.resolve(currentDirectory, currentPath));\n\t                }\n\t                var lowLevel = stubs.createMapping(library.lowLevel().key(), \"!include \" + relativePath);\n\t                var stubLibrary = stubs.createASTNodeImpl(lowLevel, null, libraryClass, null);\n\t                stubTreeRoot.wrapperNode().addToProp(stubLibrary.wrapperNode(), universeModule.Universe10.FragmentDeclaration.properties.uses.name);\n\t            });\n\t        });\n\t        this.updateLibraryUnit(libraryUnit, stubTreeRoot);\n\t        this.saveUnit(libraryUnit);\n\t        var modifiedUnits = [];\n\t        modifiedUnits.push(this.getParentNode().lowLevel().unit());\n\t        var libraryQualifier = this.getLibraryQualifier();\n\t        movedNodes.forEach(function (movedNode) {\n\t            //changing node references\n\t            var movedNodeReferences = movedNode.findReferences();\n\t            if (movedNodeReferences) {\n\t                movedNodeReferences.forEach(function (reference) {\n\t                    if (!(reference.isAttr())) {\n\t                        return;\n\t                    }\n\t                    if (_.find(movedNodes, function (movedNode) { return _this.isParentOf(movedNode, reference); })) {\n\t                        return;\n\t                    }\n\t                    var property = reference;\n\t                    var oldValue = property.value();\n\t                    if (typeof oldValue != \"string\") {\n\t                        return;\n\t                    }\n\t                    var oldStringValue = oldValue;\n\t                    var textToReplace = movedNode.name();\n\t                    var textToReplanceWith = libraryQualifier + \".\" + textToReplace;\n\t                    var newStringValue = oldStringValue.replace(textToReplace, textToReplanceWith);\n\t                    property.setValue(newStringValue);\n\t                    var modifiedPropertyUnit = property.lowLevel().unit();\n\t                    if (_.find(modifiedUnits, function (modifiedUnit) { return modifiedUnit == modifiedPropertyUnit; })) {\n\t                        modifiedUnits.push(modifiedPropertyUnit);\n\t                    }\n\t                });\n\t            }\n\t            //deleting the node itself\n\t            movedNode.parent().remove(movedNode);\n\t        });\n\t        modifiedUnits.forEach(function (modifiedUnit) { return _this.saveUnit(modifiedUnit); });\n\t        this.addUsesNode(libraryQualifier, this.getLibraryPath());\n\t    };\n\t    ExtractLibraryDialog.prototype.generateDefaultLibraryPath = function () {\n\t        var node = this.getParentNode();\n\t        var currentFilePath = node.lowLevel().unit().absolutePath();\n\t        var parent = path.dirname(currentFilePath);\n\t        return path.resolve(parent, \"NewLibrary.raml\");\n\t    };\n\t    ExtractLibraryDialog.prototype.getLibraryName = function () {\n\t        return this.libraryNamespace.getBinding().get();\n\t    };\n\t    ExtractLibraryDialog.prototype.getLibraryQualifier = function () {\n\t        return this.libraryNamespace.getBinding().get();\n\t    };\n\t    ExtractLibraryDialog.prototype.getDefaultLibraryNamespace = function () {\n\t        return \"NewLibrary\";\n\t    };\n\t    ExtractLibraryDialog.prototype.getLibraryPath = function () {\n\t        var originalValue = this.libraryPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return null;\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return null;\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return null;\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return null;\n\t        }\n\t        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t    };\n\t    ExtractLibraryDialog.prototype.createProject = function () {\n\t        var targetLibraryPath = this.getLibraryPath();\n\t        return rp.project.createProject(path.dirname(targetLibraryPath));\n\t    };\n\t    ExtractLibraryDialog.prototype.createLibraryUnit = function (project) {\n\t        var targetLibraryPath = this.getLibraryPath();\n\t        fs.writeFileSync(targetLibraryPath, \"#%RAML 1.0 Library\\n\");\n\t        return project.unit(path.basename(targetLibraryPath));\n\t    };\n\t    ExtractLibraryDialog.prototype.updateLibraryUnit = function (libraryUnit, stubTreeRoot) {\n\t        var targetLibraryAst = libraryUnit.highLevel();\n\t        //adding top-level children from stub AST to the target library AST\n\t        stubTreeRoot.children().forEach(function (child) {\n\t            if (!child.getKind()) {\n\t                return;\n\t            }\n\t            targetLibraryAst.add(child);\n\t        });\n\t    };\n\t    ExtractLibraryDialog.prototype.addUsesNode = function (libraryQualifier, fileName) {\n\t        //TODO this must be done via AST manipulation, but it is impossible atm due to AST bugs\n\t        var relativePath = path.relative(path.dirname(this.getParentNode().lowLevel().unit().absolutePath()), fileName);\n\t        var existingFirstUsesNode = _.find(this.getParentNode().children(), function (child) {\n\t            var childAny = child;\n\t            return childAny.definition &&\n\t                universeHelpers.isLibraryType(childAny.definition()) &&\n\t                childAny.property() &&\n\t                universeHelpers.isUsesProperty(childAny.property());\n\t        });\n\t        var usesMapping = null;\n\t        var sequenceFound = false;\n\t        if (existingFirstUsesNode) {\n\t            var currentNode = existingFirstUsesNode.lowLevel();\n\t            while (currentNode != null) {\n\t                if (currentNode.kind() == yaml.Kind.MAPPING\n\t                    && currentNode.key() == universeModule.Universe10.FragmentDeclaration.properties.uses.name) {\n\t                    usesMapping = currentNode;\n\t                    break;\n\t                }\n\t                if (currentNode.kind() == yaml.Kind.SEQ) {\n\t                    sequenceFound = true;\n\t                }\n\t                currentNode = currentNode.parent();\n\t            }\n\t        }\n\t        if (usesMapping) {\n\t            //existing \"uses\" found, inserting there\n\t            var positionToInsert = usesMapping.keyEnd() + 1;\n\t            var text = \"\\n  \" + (sequenceFound ? \"- \" : \"\") + libraryQualifier + \": \" + relativePath;\n\t            this.insertTextToActiveEditor(positionToInsert, text);\n\t        }\n\t        else {\n\t            var titleNode = _.find(this.getParentNode().children(), function (child) {\n\t                var childAny = child;\n\t                return childAny.definition &&\n\t                    universeHelpers.isStringTypeType(childAny.definition()) &&\n\t                    childAny.property() &&\n\t                    universeHelpers.isTitleProperty(childAny.property());\n\t            });\n\t            if (titleNode) {\n\t                //title node found, inserting after it\n\t                var positionToInsert = titleNode.lowLevel().valueEnd();\n\t                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n\t                this.insertTextToActiveEditor(positionToInsert, text);\n\t            }\n\t            else {\n\t                //nothing happens, inserting in the end of the file\n\t                var positionToInsert = this.getParentNode().lowLevel().end();\n\t                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n\t                this.insertTextToActiveEditor(positionToInsert, text);\n\t            }\n\t        }\n\t    };\n\t    ExtractLibraryDialog.prototype.insertTextToActiveEditor = function (positionToInsert, text) {\n\t        var txt = this.getParentNode().lowLevel().unit().contents();\n\t        var endPart = txt.substring(positionToInsert);\n\t        var startPart = txt.substring(0, positionToInsert);\n\t        var vl = startPart + text + endPart;\n\t        this.getActiveEditor().setText(vl);\n\t    };\n\t    ExtractLibraryDialog.prototype.createUsesNode = function (libraryQualifier, fileName) {\n\t        var universe = this.getParentNode().definition().universe();\n\t        var usesProperty = this.getParentNode().root().definition().property(\"uses\");\n\t        var usesNode = stubs.createStubNode(universe.type(\"Library\"), usesProperty, libraryQualifier);\n\t        return usesNode;\n\t    };\n\t    return ExtractLibraryDialog;\n\t})(AbstractlMoveElementsDialog);\n\texports.ExtractLibraryDialog = ExtractLibraryDialog;\n\tvar ExtractOverlayDialog = (function (_super) {\n\t    __extends(ExtractOverlayDialog, _super);\n\t    function ExtractOverlayDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t    }\n\t    ExtractOverlayDialog.prototype.createStub = function (node) {\n\t        if (node.definition().key() == universeModule.Universe10.Api ||\n\t            node.definition().key() == universeModule.Universe08.Api) {\n\t            var universe = rp.ds.getUniverse(\"RAML10\");\n\t            var nodeClass = universe.type(universeModule.Universe10.Overlay.name);\n\t            var stub = this.createStubRoot(node, nodeClass);\n\t            return stub;\n\t        }\n\t        return _super.prototype.createStub.call(this, node);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    ExtractOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n\t        //we can move everything\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ExtractOverlayDialog.prototype.validate = function () {\n\t        if (!this.overlayPath)\n\t            return null;\n\t        if (!this.stubRoot)\n\t            return null;\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        var originalValue = this.overlayPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return \"Empty overlay path\";\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return \"Overlay path should be a RAML file\";\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return \"Overlay path directory does not exist\";\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return \"Overlay path parent is not a directory\";\n\t        }\n\t        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t        if (fs.existsSync(absolutePath)) {\n\t            return \"Destination overlay already exists\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ExtractOverlayDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Overlay path:\").pad(5, 0));\n\t        this.overlayPath = UI.texfField(\"\", this.generateDefaultOverlayPath(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.overlayPath);\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    ExtractOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var project = this.createProject();\n\t        var overlayUnit = this.createOverlayUnit(project);\n\t        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n\t        var overlayPath = this.getOverlayPath();\n\t        var originalUnitPath = this.getParentNode().lowLevel().unit().absolutePath();\n\t        var relativePath = path.relative(path.dirname(overlayPath), originalUnitPath);\n\t        this.addMasterReference(overlayUnit, relativePath);\n\t        this.saveUnit(overlayUnit);\n\t    };\n\t    ExtractOverlayDialog.prototype.generateDefaultOverlayPath = function () {\n\t        var node = this.getParentNode();\n\t        var currentFilePath = node.lowLevel().unit().absolutePath();\n\t        var parent = path.dirname(currentFilePath);\n\t        return path.resolve(parent, \"NewOverlay.raml\");\n\t    };\n\t    ExtractOverlayDialog.prototype.createProject = function () {\n\t        var targetOverlayPath = this.getOverlayPath();\n\t        return rp.project.createProject(path.dirname(targetOverlayPath));\n\t    };\n\t    ExtractOverlayDialog.prototype.createOverlayUnit = function (project) {\n\t        var targetOverlayPath = this.getOverlayPath();\n\t        fs.writeFileSync(targetOverlayPath, \"#%RAML 1.0 Overlay\\ntitle: Extension\\n\");\n\t        return project.unit(path.basename(targetOverlayPath));\n\t    };\n\t    ExtractOverlayDialog.prototype.updateOverlayUnit = function (overlayUnit, stubTreeRoot) {\n\t        var targetOverlayAst = overlayUnit.highLevel();\n\t        //adding top-level children from stub AST to the target overlay AST\n\t        stubTreeRoot.children().forEach(function (child) {\n\t            if (!child.getKind()) {\n\t                return;\n\t            }\n\t            targetOverlayAst.add(child);\n\t        });\n\t    };\n\t    ExtractOverlayDialog.prototype.getOverlayPath = function () {\n\t        var originalValue = this.overlayPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return null;\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return null;\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return null;\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return null;\n\t        }\n\t        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t    };\n\t    ExtractOverlayDialog.prototype.addMasterReference = function (overlayUnit, path) {\n\t        var targetLibraryAst = overlayUnit.highLevel();\n\t        var masterRefAttribute = targetLibraryAst.attrOrCreate(universeModule.Universe10.Overlay.properties.extends.name);\n\t        masterRefAttribute.setValue(path);\n\t    };\n\t    ExtractOverlayDialog.prototype.createMovedNode = function (originalNode) {\n\t        //we do not want to make a complete copy of the moved node.\n\t        //instead, we want an empty stub\n\t        return this.createStub(originalNode);\n\t    };\n\t    return ExtractOverlayDialog;\n\t})(AbstractlMoveElementsDialog);\n\texports.ExtractOverlayDialog = ExtractOverlayDialog;\n\tvar ModifyOverlayDialog = (function (_super) {\n\t    __extends(ModifyOverlayDialog, _super);\n\t    function ModifyOverlayDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t        this.overlayASTRoot = parentNode;\n\t        console.log(\"Overlay AST root:\");\n\t        console.log(this.overlayASTRoot.printDetails());\n\t        this.masterASTRoot = this.createMasterAST();\n\t        this.overlayASTLeafNodes = [];\n\t        this.calculateLeafNodes(this.overlayASTRoot, this.overlayASTLeafNodes);\n\t    }\n\t    ModifyOverlayDialog.prototype.getParentNode = function () {\n\t        return this.masterASTRoot;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    ModifyOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n\t        var _this = this;\n\t        //we can move everything except leaf nodes already defined in out AST\n\t        if (_.find(this.overlayASTLeafNodes, function (currentNode) {\n\t            return currentNode == nodeToFilter || _this.nodesEqualById(currentNode, nodeToFilter);\n\t        })) {\n\t            return {\n\t                visitChildren: false,\n\t                display: false,\n\t                canBeMoved: false\n\t            };\n\t        }\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ModifyOverlayDialog.prototype.validate = function () {\n\t        if (!this.stubRoot)\n\t            return null;\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ModifyOverlayDialog.prototype.createHeader = function (parentPanel) {\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    ModifyOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var overlayUnit = this.getOverlayUnit();\n\t        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n\t        this.saveUnit(overlayUnit);\n\t    };\n\t    ModifyOverlayDialog.prototype.createMasterAST = function () {\n\t        var masterAbsolutePath = this.findMasterAbsolutePath();\n\t        if (!masterAbsolutePath) {\n\t            return null;\n\t        }\n\t        var project = this.createProject(masterAbsolutePath);\n\t        var masterUnit = project.unit(path.basename(masterAbsolutePath));\n\t        return masterUnit.highLevel();\n\t    };\n\t    ModifyOverlayDialog.prototype.calculateLeafNodes = function (root, toReportTo) {\n\t        var _this = this;\n\t        if (!root)\n\t            return;\n\t        var children = root.directChildren() ? root.directChildren() : null;\n\t        if (root.isElement()) {\n\t            if (children) {\n\t                if (!_.find(children, function (child) { return child.isElement(); })) {\n\t                    toReportTo.push(root);\n\t                    return;\n\t                }\n\t            }\n\t            else {\n\t                toReportTo.push(root);\n\t                return;\n\t            }\n\t        }\n\t        if (children)\n\t            children.forEach(function (child) { return _this.calculateLeafNodes(child, toReportTo); });\n\t    };\n\t    ModifyOverlayDialog.prototype.findMasterAbsolutePath = function () {\n\t        try {\n\t            var masterRefAttribute = this.overlayASTRoot.attr(\"masterRef\");\n\t            if (!masterRefAttribute) {\n\t                return null;\n\t            }\n\t            var reference = masterRefAttribute.value();\n\t            if (!reference) {\n\t                return null;\n\t            }\n\t            var overlayAbsolutePath = this.getOverlayUnit().absolutePath();\n\t            var masterAbsolutePath = path.resolve(path.dirname(overlayAbsolutePath), reference);\n\t            //if (!fs.existsSync(masterAbsolutePath)) {\n\t            //    return null\n\t            //}\n\t            return masterAbsolutePath;\n\t        }\n\t        catch (Error) {\n\t            console.error(Error.message);\n\t            return null;\n\t        }\n\t    };\n\t    ModifyOverlayDialog.prototype.createProject = function (targetPath) {\n\t        return rp.project.createProject(path.dirname(targetPath));\n\t    };\n\t    ModifyOverlayDialog.prototype.getOverlayUnit = function () {\n\t        return this.overlayASTRoot.lowLevel().unit();\n\t    };\n\t    ModifyOverlayDialog.prototype.updateOverlayUnit = function (libraryUnit, stubTreeRoot) {\n\t        var targetLibraryAst = libraryUnit.highLevel();\n\t        //merging the new nodes into existing overlay tree\n\t        this.mergeTrees(stubTreeRoot, this.overlayASTRoot);\n\t    };\n\t    ModifyOverlayDialog.prototype.createMovedNode = function (originalNode) {\n\t        //we do not want to make a complete copy of the moved node.\n\t        //instead, we want an empty stub\n\t        return this.createStub(originalNode);\n\t    };\n\t    return ModifyOverlayDialog;\n\t})(AbstractlMoveElementsDialog);\n\texports.ModifyOverlayDialog = ModifyOverlayDialog;\n\t/**\n\t * Intended for subclassing, should not be instantiated.\n\t */\n\tvar AbstractMoveTypePropertiesDialog = (function (_super) {\n\t    __extends(AbstractMoveTypePropertiesDialog, _super);\n\t    function AbstractMoveTypePropertiesDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t        this.sourceType = parentNode;\n\t    }\n\t    /**\n\t     * Intended for overriding, should return the target type.\n\t     * Will only be called during performOk() execution, so it is assumed that\n\t     * UI already have required user input before the calowLevel.\n\t     * @returns {null}\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.getTargetType = function () {\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.checkNode = function (nodeToFilter) {\n\t        //we can move everything inside the type\n\t        //and as the type is our root, we can move just everything\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * This particular method should be called in a subclass before or after\n\t     * its own check, and the results should be joined.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.validate = function () {\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.createHeader = function (parentPanel) {\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var sourceUnit = this.sourceType.lowLevel().unit();\n\t        var targetType = this.getTargetType();\n\t        if (!targetType) {\n\t            return;\n\t        }\n\t        var targetUnit = targetType.lowLevel().unit();\n\t        this.mergeTrees(stubTreeRoot, targetType);\n\t        this.movedNodes.forEach(function (movedNode) {\n\t            movedNode.parent().remove(movedNode);\n\t        });\n\t        this.postMerge();\n\t        this.saveUnit(sourceUnit);\n\t        if (targetUnit)\n\t            this.saveUnit(targetUnit);\n\t    };\n\t    AbstractMoveTypePropertiesDialog.prototype.postMerge = function () {\n\t    };\n\t    return AbstractMoveTypePropertiesDialog;\n\t})(AbstractlMoveElementsDialog);\n\texports.AbstractMoveTypePropertiesDialog = AbstractMoveTypePropertiesDialog;\n\tfunction findUserDefinedSupertypes(typeNode) {\n\t    var result = [];\n\t    var nodeType = typeNode.localType();\n\t    if (!nodeType || !nodeType.isUserDefined()) {\n\t        return result;\n\t    }\n\t    addUserDefinedSupertypes(nodeType, result);\n\t    return result;\n\t}\n\texports.findUserDefinedSupertypes = findUserDefinedSupertypes;\n\tfunction addUserDefinedSupertypes(type, typesToAddTo) {\n\t    if (!type.isUserDefined()) {\n\t        return;\n\t    }\n\t    var superTypes = (type).superTypes();\n\t    if (superTypes)\n\t        superTypes.forEach(function (superType) {\n\t            if (superType.isUserDefined()) {\n\t                typesToAddTo.push(superType);\n\t            }\n\t            addUserDefinedSupertypes(superType, typesToAddTo);\n\t        });\n\t}\n\tvar PullUpDialog = (function (_super) {\n\t    __extends(PullUpDialog, _super);\n\t    function PullUpDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t        this.superTypeNames = [];\n\t        this.superTypeNames = this.findSuperTypeNames();\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    PullUpDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Select supertype:\").pad(5, 0));\n\t        var select = new UI.Select(\"\", function (selection) {\n\t            _this.selectedSuperType = select.getValue();\n\t        });\n\t        select.setOptions(this.superTypeNames);\n\t        select.setValue(this.superTypeNames[0]);\n\t        this.selectedSuperType = this.superTypeNames[0];\n\t        parentPanel.addChild(select);\n\t    };\n\t    PullUpDialog.prototype.show = function () {\n\t        //if no supertypes are found, we're not displaying anything\n\t        //Actually, state calculator should not allow action launching in this case\n\t        if (this.superTypeNames.length == 0) {\n\t            return;\n\t        }\n\t        _super.prototype.show.call(this);\n\t    };\n\t    /**\n\t     * Intended for overriding, should return the target type.\n\t     * Will only be called during performOk() execution, so it is assumed that\n\t     * UI already have required user input before the calowLevel.\n\t     * @returns {null}\n\t     */\n\t    PullUpDialog.prototype.getTargetType = function () {\n\t        var _this = this;\n\t        var foundSuperType = _.find(this.superTypes, function (superType) {\n\t            return superType.nameId() == _this.selectedSuperType;\n\t        });\n\t        if (!foundSuperType)\n\t            return null;\n\t        return foundSuperType.getAdapter(def.RAMLService).getDeclaringNode();\n\t    };\n\t    PullUpDialog.prototype.findSuperTypeNames = function () {\n\t        var result = [];\n\t        this.superTypes = findUserDefinedSupertypes(this.sourceType);\n\t        this.superTypes.forEach(function (superType) {\n\t            result.push(superType.nameId());\n\t        });\n\t        return result;\n\t    };\n\t    return PullUpDialog;\n\t})(AbstractMoveTypePropertiesDialog);\n\texports.PullUpDialog = PullUpDialog;\n\tvar ExtractSupertypeDialog = (function (_super) {\n\t    __extends(ExtractSupertypeDialog, _super);\n\t    function ExtractSupertypeDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ExtractSupertypeDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Supertype name:\").pad(5, 0));\n\t        this.superTypeName = UI.texfField(\"\", this.generateDefaultSupertypeName(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.superTypeName);\n\t    };\n\t    /**\n\t     * Intended for overriding, should return the target type.\n\t     * Will only be called during performOk() execution, so it is assumed that\n\t     * UI already have required user input before the calowLevel.\n\t     * @returns {null}\n\t     */\n\t    ExtractSupertypeDialog.prototype.getTargetType = function () {\n\t        var astRoot = this.sourceType.root();\n\t        var universe = astRoot.definition().universe();\n\t        var rtypes = astRoot.root().definition().property(universeModule.Universe10.LibraryBase.properties.types.name);\n\t        //var typeStub=(<def.NodeClass>universe.getType(\"ObjectField\")).createStubNode(rtypes, this.superTypeName.getBinding().get());\n\t        var typeWrapper = rp.parser.modify.createObjectTypeDeclaration(this.superTypeName.getBinding().get());\n\t        var typeStub = typeWrapper.highLevel();\n\t        this.typeWrapper = typeWrapper;\n\t        this.astRoot = astRoot;\n\t        //astRoot.add(typeStub);\n\t        //var unit = astRoot.lowLevel().unit();\n\t        //this.saveUnit(unit);\n\t        //\n\t        //var newAstRoot = <hl.IHighLevelNode>hl.fromUnit(unit);\n\t        //this.sourceType = <hl.IHighLevelNode> _.find(newAstRoot.children(), child=>{\n\t        //    return (<hl.IHighLevelNode>child).property\n\t        //    && (<hl.IHighLevelNode>child).property().range\n\t        //    && (<hl.IHighLevelNode>child).property().range().name() == \"DataElement\"\n\t        //    && (<hl.IHighLevelNode>child).property().name() == \"types\"\n\t        //    && (<hl.IHighLevelNode>child).name() == this.superTypeName.getBinding().get()\n\t        //})\n\t        return typeStub;\n\t    };\n\t    ExtractSupertypeDialog.prototype.validate = function () {\n\t        var superValidate = _super.prototype.validate.call(this);\n\t        if (superValidate) {\n\t            return superValidate;\n\t        }\n\t        if (!this.superTypeName.getBinding().get() ||\n\t            this.superTypeName.getBinding().get().trim().length == 0) {\n\t            return \"Enter supertype name\";\n\t        }\n\t        return null;\n\t    };\n\t    ExtractSupertypeDialog.prototype.postMerge = function () {\n\t        this.astRoot.wrapperNode().addToProp(this.typeWrapper, 'types');\n\t        this.sourceType.attrOrCreate(\"type\").setValue(this.typeWrapper.highLevel().name());\n\t        //var runtimeDef = this.typeWrapper.highLevel().definition().toRuntime()\n\t        //(<hlimpl.ASTNodeImpl>this.sourceType).patchType(runtimeDef)\n\t    };\n\t    ExtractSupertypeDialog.prototype.generateDefaultSupertypeName = function () {\n\t        return this.sourceType.name() + \"SuperType\";\n\t    };\n\t    return ExtractSupertypeDialog;\n\t})(AbstractMoveTypePropertiesDialog);\n\texports.ExtractSupertypeDialog = ExtractSupertypeDialog;\n\tfunction isWebPath(str) {\n\t    if (str == null)\n\t        return false;\n\t    return util.stringStartsWith(str, \"http://\") || util.stringStartsWith(str, \"https://\");\n\t}\n\t\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by Sviridov on 5/1/2015.\n\t */\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar JsonSchemaGenerator = (function () {\n\t    function JsonSchemaGenerator() {\n\t    }\n\t    JsonSchemaGenerator.prototype.generateSchema = function (obj) {\n\t        var sch = {};\n\t        sch['required'] = true;\n\t        sch['$schema'] = 'http://json-schema.org/draft-03/schema';\n\t        this.pass(obj, sch);\n\t        return sch;\n\t    };\n\t    JsonSchemaGenerator.prototype.pass = function (value, property) {\n\t        var valueType = this.detectType(value);\n\t        property['type'] = valueType;\n\t        if (!value || value == null) {\n\t        }\n\t        else if (Array.isArray(value)) {\n\t            this.passArray(value, property);\n\t        }\n\t        else if (value instanceof Object) {\n\t            this.passObject(value, property);\n\t        }\n\t    };\n\t    JsonSchemaGenerator.prototype.passObject = function (obj, sch) {\n\t        var _this = this;\n\t        Object.keys(obj).forEach(function (x) { return _this.registerProperty(x, obj[x], sch); });\n\t    };\n\t    JsonSchemaGenerator.prototype.registerProperty = function (propName, value, sch) {\n\t        var properties = sch['properties'];\n\t        if (!properties) {\n\t            properties = {};\n\t            sch['properties'] = properties;\n\t        }\n\t        var property = properties[propName];\n\t        if (!property) {\n\t            property = {};\n\t            properties[propName] = property;\n\t        }\n\t        property['required'] = false;\n\t        this.pass(value, property);\n\t    };\n\t    JsonSchemaGenerator.prototype.passArray = function (array, property) {\n\t        var _this = this;\n\t        var items = property['items'];\n\t        if (!items) {\n\t            items = [];\n\t            property['items'] = items;\n\t        }\n\t        var l = array.length;\n\t        var itemSet = [];\n\t        array.forEach(function (value) {\n\t            var item = {};\n\t            _this.pass(value, item);\n\t            itemSet.push(item);\n\t        });\n\t        items.push(itemSet[0]);\n\t    };\n\t    JsonSchemaGenerator.prototype.detectType = function (value) {\n\t        if (Array.isArray(value)) {\n\t            return 'array';\n\t        }\n\t        return typeof value;\n\t    };\n\t    return JsonSchemaGenerator;\n\t})();\n\texports.JsonSchemaGenerator = JsonSchemaGenerator;\n\tfunction generateSchema(text, mediaType) {\n\t    var generator = new JsonSchemaGenerator();\n\t    var obj = JSON.parse(text);\n\t    var schemaObject = generator.generateSchema(obj);\n\t    var schemaString = JSON.stringify(schemaObject, null, 2);\n\t    return schemaString;\n\t}\n\texports.generateSchema = generateSchema;\n\t\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"emissary\");\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar UI = __webpack_require__(17);\n\tvar khttp = __webpack_require__(56);\n\t/**\n\t * Created by kor on 13/05/15.\n\t */\n\tvar rp = __webpack_require__(22);\n\tvar path = __webpack_require__(15);\n\tvar defs = rp.ds;\n\tvar stubs = rp.stubs;\n\tvar services = defs;\n\tvar search = rp.search;\n\tvar fs = __webpack_require__(16);\n\tvar assistUtils = __webpack_require__(9);\n\tvar details2 = __webpack_require__(61);\n\tvar details = __webpack_require__(50);\n\tvar editorTools = __webpack_require__(5);\n\tvar schemaUI = __webpack_require__(51);\n\tvar remote = __webpack_require__(57);\n\tvar dialog = remote.require('dialog');\n\tvar pair = __webpack_require__(62);\n\tvar universeModule = rp.universes;\n\tvar universeHelpers = rp.universeHelpers;\n\tvar _dialogPanels = [];\n\tfunction showError(message, details) {\n\t    dialog.showMessageBox(remote.getCurrentWindow(), { type: 'error', buttons: ['Okay'], title: 'Error', message: message, detail: details });\n\t}\n\texports.showError = showError;\n\tvar _methodDescriptions = null;\n\tfunction getMethodDescriptions() {\n\t    if (!_methodDescriptions) {\n\t        _methodDescriptions = Object.create(null);\n\t        var methodsProperty = editorTools.aquireManager().ast.definition().property(universeModule.Universe10.Api.properties.resources.name)\n\t            .range().property(universeModule.Universe10.ResourceBase.properties.methods.name);\n\t        var list = methodsProperty.enumOptions();\n\t        khttp.methods.filter(function (x) { return list.indexOf(x.method.toLowerCase()) > -1; }).forEach(function (method) {\n\t            var desc = method.description.trim().match(/^\\\"(.*)\\\"$/)[1];\n\t            _methodDescriptions[method.method.toLowerCase()] = desc ? desc : method.description;\n\t        });\n\t    }\n\t    return _methodDescriptions;\n\t}\n\tvar _statusCodeDescriptions = null;\n\tfunction getStatusCodeDescriptions() {\n\t    if (!_statusCodeDescriptions) {\n\t        _statusCodeDescriptions = Object.create(null);\n\t        khttp.statusCodes.forEach(function (code) {\n\t            var m, desc = code.description.trim();\n\t            if (m = desc.match(/^\\\"(.*)\\\"/))\n\t                desc = m[1];\n\t            _statusCodeDescriptions[code.code] = desc;\n\t        });\n\t        _statusCodeDescriptions['7xx'] = \"is for developer errors.\";\n\t    }\n\t    return _statusCodeDescriptions;\n\t}\n\texports.getStatusCodeDescriptions = getStatusCodeDescriptions;\n\tfunction newApi() {\n\t    var title = \"\", version = \"\", baseUri = \"\", sample = true, raml1 = true;\n\t    var tfTitle = new UI.TextField(\"API Title*\", title, function (e, v) { return title = v; });\n\t    var tfVersion = new UI.TextField(\"Version\", version, function (e, v) { return version = v; });\n\t    var tfBaseURI = new UI.TextField(\"Base URI\", baseUri, function (e, v) { return baseUri = v; });\n\t    tfTitle.setTabIndex(100);\n\t    tfTitle.margin(0, 0, 8, 0);\n\t    tfVersion.setTabIndex(101);\n\t    tfVersion.margin(0, 0, 8, 0);\n\t    tfBaseURI.setTabIndex(102);\n\t    tfBaseURI.margin(0, 0, 8, 0);\n\t    var cbSample = new UI.CheckBox(\"Create sample resource\", null, function (e, v) { return sample = v; });\n\t    cbSample.setValue(sample);\n\t    var cbRaml1 = new UI.CheckBox(\"Generate 1.0 model\", null, function (e, v) { return raml1 = v; });\n\t    cbRaml1.setValue(raml1);\n\t    var panel = UI.section(\"Create new API\", UI.Icon.DASHBOARD, false, false, tfTitle, tfVersion, tfBaseURI, UI.hc(cbSample, cbRaml1).margin(0, 0, 12, 12));\n\t    _dialog(panel, function () {\n\t        if (title == '') {\n\t            showError(\"Cannot create API\", \"Title must not be empty\");\n\t            return false;\n\t        }\n\t        editorTools.aquireManager().setText(assistUtils.createRAMLFile(title, version, baseUri, sample, raml1));\n\t        return true;\n\t    }, tfTitle)(this);\n\t    tfTitle.getActualField().ui().focus();\n\t}\n\texports.newApi = newApi;\n\tvar typeValues = function (parent) {\n\t    var isSchema = false;\n\t    var tp = parent.definition().universe().type(universeModule.Universe10.TypeDeclaration.name);\n\t    if (!tp) {\n\t        isSchema = true;\n\t        tp = parent.definition().universe().type(universeModule.Universe08.BodyLike.name);\n\t    }\n\t    var sh = tp.property(universeModule.Universe10.TypeDeclaration.properties.schema.name);\n\t    var types = [];\n\t    if (sh) {\n\t        types = search.enumValues(sh, parent);\n\t    }\n\t    return { isSchema: isSchema, types: types };\n\t};\n\tfunction newMethod(parent, method) {\n\t    var mdesc = getMethodDescriptions();\n\t    var cdesc = getStatusCodeDescriptions();\n\t    var NO_RESPONCE = \"No response\";\n\t    var NO_RESPONCE_BT = \"No response body type\";\n\t    var code = null, bodyType = null;\n\t    if (method == null)\n\t        method = \"get\";\n\t    var mdescLabel = new UI.LabelField();\n\t    var cdescLabel = new UI.LabelField();\n\t    [mdescLabel, cdescLabel].forEach(function (x) { return x.addClass('wizard-description'); });\n\t    mdescLabel.getActualField().margin(0, 0, 18, 8);\n\t    cdescLabel.getActualField().margin(0, 0, 8, 8);\n\t    var methodSelect = new UI.SelectField(\"Method:\", function (e, v) {\n\t        method = v;\n\t        mdescLabel.setText(\"Method \" + v + \" \" + mdesc[v]);\n\t    }, null);\n\t    methodSelect.getActualField().setOptions(Object.keys(mdesc));\n\t    methodSelect.getActualField().setValue(method, true);\n\t    var responseSelect = new UI.SelectField(\"Status code:\", function (e, v) {\n\t        if (v == NO_RESPONCE) {\n\t            v = null;\n\t            responseTypeSelect.getActualField().setValue(NO_RESPONCE_BT);\n\t        }\n\t        code = v;\n\t        responseTypeSelect.setDisabled(v == null);\n\t        cdescLabel.setText(v ? \"Status code \" + v + \" \" + cdesc[v] : '');\n\t    }, null);\n\t    responseSelect.getActualField().setOptions([NO_RESPONCE].concat(Object.keys(cdesc)));\n\t    var responseTypeSelect = new UI.SelectField(\"Generate default response with media type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT) {\n\t            v = null;\n\t            typeOfValue.setDisabled(true);\n\t        }\n\t        else\n\t            typeOfValue.setDisabled(false);\n\t        bodyType = v;\n\t    }, null);\n\t    responseTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n\t    responseTypeSelect.setDisabled(true);\n\t    responseTypeSelect.margin(0, 0, 0, 12);\n\t    var realBodyType = null;\n\t    var bodyTypeSelect = new UI.SelectField(\"Generate default body with media type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT) {\n\t            v = null;\n\t            bodyTypeOfValue.setDisabled(true);\n\t        }\n\t        else\n\t            bodyTypeOfValue.setDisabled(false);\n\t        realBodyType = v;\n\t    }, null);\n\t    bodyTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n\t    bodyTypeSelect.margin(0, 0, 0, 12);\n\t    var actualType = null;\n\t    var bodyTypeString = null;\n\t    var typeOfValue = new UI.SelectField(\"Generate default response body with type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT)\n\t            v = null;\n\t        actualType = v;\n\t    }, null);\n\t    typeOfValue.setDisabled(true);\n\t    typeOfValue.margin(0, 0, 0, 12);\n\t    var __ret = typeValues(parent);\n\t    var isSchema = __ret.isSchema;\n\t    var types = __ret.types;\n\t    if (types) {\n\t        types = [\"\"].concat(types);\n\t        typeOfValue.getActualField().setOptions(types);\n\t    }\n\t    var bodyTypeOfValue = new UI.SelectField(\"Generate default body with type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT)\n\t            v = null;\n\t        bodyTypeString = v;\n\t    }, null);\n\t    bodyTypeOfValue.setDisabled(true);\n\t    bodyTypeOfValue.margin(0, 0, 0, 12);\n\t    var isSchema = __ret.isSchema;\n\t    var types = __ret.types;\n\t    if (types) {\n\t        types = [\"\"].concat(types);\n\t        bodyTypeOfValue.getActualField().setOptions(types);\n\t    }\n\t    var responseSection = UI.section(\"\");\n\t    responseSection.addChild(UI.h3(\"Body\"));\n\t    responseSection.addChild(bodyTypeSelect);\n\t    responseSection.addChild(bodyTypeOfValue);\n\t    responseSection.addChild(UI.h3(\"Response\"));\n\t    responseSection.addChild(responseSelect);\n\t    responseSection.addChild(cdescLabel);\n\t    responseSection.addChild(responseTypeSelect);\n\t    responseSection.addChild(typeOfValue);\n\t    responseSection.ui();\n\t    var panel = UI.section(\"Creating a new method\", UI.Icon.CODE, false, false, methodSelect, mdescLabel, responseSection);\n\t    var __ret = typeValues(parent);\n\t    //panel.addChild(typeOfValue)\n\t    _dialog(panel, function () {\n\t        var oldNode = parent.elementsOfKind('methods').filter(function (el) { return (el.attr('method').value() == method); })[0];\n\t        if (oldNode) {\n\t            showError(\"Method \" + method + \" already exists\", \"Node contents will be overwritten\");\n\t            parent.remove(oldNode);\n\t        }\n\t        var methodNode = stubs.createMethodStub(parent, method);\n\t        if (realBodyType) {\n\t            var bodyNode = stubs.createBodyStub(methodNode, realBodyType);\n\t            if (bodyTypeString) {\n\t                if (isSchema) {\n\t                    bodyNode.attrOrCreate(\"schema\").setValue(bodyTypeString);\n\t                }\n\t                else\n\t                    bodyNode.attrOrCreate(\"type\").setValue(bodyTypeString);\n\t            }\n\t            methodNode.add(bodyNode);\n\t        }\n\t        if (code) {\n\t            var codeNode = stubs.createResponseStub(methodNode, code);\n\t            methodNode.add(codeNode);\n\t            if (bodyType) {\n\t                var bodyNode = stubs.createBodyStub(codeNode, bodyType);\n\t                if (actualType) {\n\t                    if (isSchema) {\n\t                        bodyNode.attrOrCreate(\"schema\").setValue(actualType);\n\t                    }\n\t                    else\n\t                        bodyNode.attrOrCreate(\"type\").setValue(actualType);\n\t                }\n\t                codeNode.add(bodyNode);\n\t            }\n\t        }\n\t        parent.add(methodNode);\n\t        editorTools.updateAndSelect(methodNode);\n\t        return true;\n\t    })(this);\n\t}\n\texports.newMethod = newMethod;\n\tfunction getStringValue(x) {\n\t    if (typeof x === \"object\")\n\t        return x.valueName();\n\t    else\n\t        return x;\n\t}\n\texports.getStringValue = getStringValue;\n\tfunction typeEditDialog(name, value, node, onDone) {\n\t    var typePanel = UI.vc();\n\t    typePanel.margin(8, 8, 20, 8);\n\t    var typeProperty = node.definition().property(name);\n\t    var toPropagate = svMap(node, name);\n\t    var typeList = editorTools.aquireManager().ast.elementsOfKind(\"resourceType\").map(function (x) { return x.name(); });\n\t    var typeName = getStringValue(value);\n\t    var select = new UI.SelectField('Type: ', function (e, v) {\n\t        if (v == EMPTY_VALUE) {\n\t            value = \"\";\n\t            typePanel.clear();\n\t            typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n\t            return;\n\t        }\n\t        value = rp.utils.genStructuredValue(v, node, typeProperty);\n\t        var typeNode = ((typeof value) === \"object\") ? value.toHighLevel(editorTools.aquireManager().ast) : null;\n\t        propagateValues(typeNode, toPropagate);\n\t        details.updateDetailsPanel(typeNode, typePanel);\n\t        if (typeNode && typeNode.definition().allProperties().length == 0) {\n\t            value = v;\n\t        }\n\t    });\n\t    var EMPTY_VALUE = \"(no value)\";\n\t    select.getActualField().setOptions([EMPTY_VALUE].concat(typeList));\n\t    select.setPercentWidth(100);\n\t    if (typeList.indexOf(typeName) < 0) {\n\t        select.getActualField().setValue(EMPTY_VALUE);\n\t        if (typeName != \"\")\n\t            typePanel.addChild(UI.label(\"Type `\" + typeName + \"` does not exists\", null, UI.TextClasses.ERROR).setStyle(\"display\", \"block\"));\n\t        typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n\t    }\n\t    else\n\t        select.getActualField().setValue(typeName, true);\n\t    var panel = UI.section(\"Editing type value `\" + name + '`:', UI.Icon.CIRCUIT_BOARD, null, null, select, typePanel);\n\t    return _dialog(panel, function () { onDone(value); return true; });\n\t}\n\texports.typeEditDialog = typeEditDialog;\n\tfunction svMap(node, attr) {\n\t    try {\n\t        var map = new pair.Map();\n\t        var values = node.attributes(attr).map(function (x) { return x.value(); }).filter(function (x) { return typeof x === \"object\"; });\n\t        values.forEach(function (val) { return val.lowLevel().children().forEach(function (c) { return map.set(c.key(), c.value()); }); });\n\t        return map;\n\t    }\n\t    catch (e) {\n\t        return null;\n\t    }\n\t}\n\tfunction propagateValues(node, map) {\n\t    if (!node || !map)\n\t        return;\n\t    map.pairs().forEach(function (pair) {\n\t        if (node.definition().property(pair.key))\n\t            node.attrOrCreate(pair.key).setValue(pair.value);\n\t    });\n\t}\n\tfunction getResourceParent(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if (universeHelpers.isResourcesProperty(node.property()))\n\t        return node;\n\t    return getResourceParent(node.parent());\n\t}\n\texports.getResourceParent = getResourceParent;\n\tfunction enumEditDialog(name, value, onDone) {\n\t    var _cp = {\n\t        elements: function (model) { return model; },\n\t        init: function (viewer) { },\n\t        dispose: function () { }\n\t    };\n\t    var renderer = {\n\t        render: function (model) { return UI.hc(UI.label(model, UI.Icon.GIT_COMMIT), UI.a(\"\", function (e) {\n\t            value = value.filter(function (x) { return x != e.id(); });\n\t            list.remove(e.id());\n\t        }, UI.Icon.TRASHCAN).pad(8, 8).setId(model)).addClass(\"outline\"); }\n\t    };\n\t    var list = new UI.ListView(_cp, renderer);\n\t    list.setBasicLabelFunction(function (x) { return x; });\n\t    list.setInput(value, true);\n\t    var text = UI.texfField(\"\", \"\", function (x) { return x; }).margin(0, 0, 4, 4);\n\t    text.addKeyPressListener(function (i, e) {\n\t        if (e.keyCode != 13)\n\t            return;\n\t        var b = i.getBinding();\n\t        var newValue = b.get();\n\t        b.set(\"\");\n\t        value.push(newValue);\n\t        list.setInput(value, true);\n\t    });\n\t    var panel = UI.section(\"Editing enum value `\" + name + '`:', UI.Icon.LIST_UNORDERED, null, null, UI.h3(\"List of elements in enum:\").margin(0, 0, 20, 0), list.margin(20, 20), UI.h3(\"Add new element:\").margin(0, 0, 20, 0), text);\n\t    return _dialog(panel, function () { onDone(value); return true; }, text); //\n\t}\n\texports.enumEditDialog = enumEditDialog;\n\tfunction calculatesParentURIPath(resource) {\n\t    var result = resource.attrValue(\"relativeUri\");\n\t    if (!result)\n\t        return null;\n\t    var current = getResourceParent(resource.parent());\n\t    while (current) {\n\t        var segment = current.attrValue(\"relativeUri\");\n\t        if (!segment)\n\t            return null;\n\t        result = segment + result;\n\t        current = getResourceParent(current.parent());\n\t    }\n\t    return result;\n\t}\n\tfunction newResource(parent) {\n\t    var uri = \"/\";\n\t    var uriLable = \"\";\n\t    var resourceParent = getResourceParent(parent);\n\t    var parentsPath = null;\n\t    if (resourceParent) {\n\t        parentsPath = calculatesParentURIPath(resourceParent);\n\t        if (parentsPath) {\n\t            uriLable = parentsPath;\n\t        }\n\t    }\n\t    var uriTF = uriTF = new UI.TextField(uriLable, uri, function (e, v) {\n\t        uri = v;\n\t    });\n\t    uriTF.margin(0, 0, 6, 12);\n\t    var methods = {};\n\t    var methodsPanel = UI.vc().margin(0, 0, 0, 12);\n\t    Object.keys(getMethodDescriptions())\n\t        .forEach(function (val) {\n\t        var ch = new UI.CheckBox(val, null, function (x) {\n\t            if (methods[val]) {\n\t                delete methods[val];\n\t            }\n\t            else {\n\t                methods[val] = x;\n\t            }\n\t        }).addClass(\"checkbox-group\");\n\t        var hcp = UI.vc().margin(0, 0, 15, 0);\n\t        hcp.addChild(ch);\n\t        var desc = val + \":\" + getMethodDescriptions()[val];\n\t        methodsPanel.addChild(UI.vc(hcp));\n\t        var label = UI.label(desc, UI.Icon.NONE, UI.TextClasses.SUBTLE).margin(5, 10, -4, 0);\n\t        methodsPanel.addChild(label);\n\t    });\n\t    var node = stubs.createResourceStub(parent, uri);\n\t    var resourceTypeProp = UI.select(\"type\");\n\t    var sm = search.globalDeclarations(parent).filter(function (x) { return universeHelpers.isResourceTypeType(x.definition()) && !x.definition().getAdapter(services.RAMLService).isUserDefined(); });\n\t    var options = sm.map(function (x) { return rp.search.qName(x, parent); });\n\t    var options = [\"\"].concat(options);\n\t    resourceTypeProp.setOptions(options);\n\t    //var resourceTypeProp = details.property2(node, \"type\");\n\t    var panel = UI.section(\"Creating a new resource\", UI.Icon.BOOK, false, false);\n\t    panel.addChild(UI.label(\"New resource URI:\"));\n\t    panel.addChild(uriTF);\n\t    panel.addChild(UI.label(\"Type:\"));\n\t    panel.addChild(resourceTypeProp);\n\t    panel.addChild(UI.label(\"Add additional methods:\").margin(0, 0, 18, 6));\n\t    panel.addChild(methodsPanel);\n\t    _dialog(panel, function () {\n\t        if (uri.indexOf('/') != 0)\n\t            return false;\n\t        node.attrOrCreate(\"relativeUri\").setValue(uri);\n\t        Object.keys(methods).filter(function (x) { return methods[x]; }).forEach(function (method) {\n\t            var stub = stubs.createMethodStub(node, method);\n\t            stub.attrOrCreate(\"method\").setValue(method);\n\t            node.add(stub);\n\t        });\n\t        var vl = resourceTypeProp.getValue();\n\t        if (vl) {\n\t            node.attrOrCreate(\"type\").setValue(vl);\n\t        }\n\t        parent.add(node);\n\t        editorTools.updateAndSelect(node);\n\t        return true;\n\t    }, uriTF, true)(this);\n\t    uriTF.getActualField().ui().focus();\n\t    //(<UI.TextField>resourceTypeProp).hideLabel();\n\t    if (!parentsPath) {\n\t        uriTF.hideLabel();\n\t    }\n\t    else {\n\t        uriTF.makeLabelNextToField();\n\t    }\n\t}\n\texports.newResource = newResource;\n\tfunction newNode(parent, title, property, key) {\n\t    if (key === void 0) { key = \"key\"; }\n\t    var name = \"\", type = \"\";\n\t    if (parent == null) {\n\t        return;\n\t    }\n\t    if (property == \"body\") {\n\t        key = \"application/json\";\n\t    }\n\t    var stub = stubs.createStub(parent, property, key);\n\t    var item = details2.buildItem(stub, true);\n\t    item.setTitle(title);\n\t    var panel = item.render({ showDescription: true });\n\t    panel.margin(8, 8, 8, 8);\n\t    _dialog(panel, function () {\n\t        stub._parent = null;\n\t        stub.lowLevel()._unit = null;\n\t        parent.add(stub);\n\t        editorTools.updateAndSelect(stub);\n\t        return true;\n\t    }, null)(this);\n\t}\n\texports.newNode = newNode;\n\tfunction traitsEditDialog(name, values, node, onDone) {\n\t    var toPropagate = svMap(node, name);\n\t    var tabs = new UI.TabFolder();\n\t    var sel = UI.vc(UI.h3(\"Enabled traits: \")).margin(10, 10, 0, 0);\n\t    tabs.margin(0, 0, 20, 10);\n\t    tabs.add(\"Traits\", UI.Icon.FILE_SUBMODULE, sel);\n\t    var traitProperty = node.definition().property(name);\n\t    var ui = {};\n\t    var index = 0;\n\t    var returnv = node.root().elementsOfKind('traits').map(function (trait) {\n\t        var traitName = trait.name();\n\t        var traitValue = rp.utils.genStructuredValue(traitName, node, traitProperty);\n\t        var traitNode = (typeof traitValue === \"object\") ? traitValue.toHighLevel() : null;\n\t        if (traitNode && traitNode.definition().allProperties().length == 0)\n\t            traitValue = traitName;\n\t        var returnee = {\n\t            index: index,\n\t            name: traitName,\n\t            value: traitValue,\n\t            enabled: values.filter(function (x) { return getStringValue(x) == traitName; }).length > 0\n\t        };\n\t        propagateValues(traitNode, toPropagate);\n\t        var tcb = UI.checkBox(returnee.name, function (e) {\n\t            returnee.enabled = tcb.getValue();\n\t            tabs.toggle(1 + returnee.index, returnee.enabled);\n\t        });\n\t        tcb.margin(12, 12);\n\t        tcb.setValue(returnee.enabled);\n\t        sel.addChild(tcb);\n\t        var traitPanel = UI.vc();\n\t        traitPanel.margin(8, 8, 20, 8);\n\t        details.updateDetailsPanel(traitNode, traitPanel);\n\t        tabs.add(traitName, UI.Icon.CIRCUIT_BOARD, traitPanel);\n\t        tabs.toggle(1 + index, returnee.enabled);\n\t        index += 1;\n\t        return returnee;\n\t    });\n\t    var panel = UI.section(\"Editing trait value `\" + name + \"`:\", UI.Icon.CIRCUIT_BOARD, null, null, tabs);\n\t    return _dialog(panel, function () { onDone(returnv); return true; });\n\t}\n\texports.traitsEditDialog = traitsEditDialog;\n\tfunction getNewSchemaPath(schema) {\n\t    return path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath()) + '/' + (schema.length > 0 ? schema + '.raml' : \"\");\n\t}\n\tfunction schemaText(nameOrValue) {\n\t    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n\t    return schema ? schema.value().value() : \"\";\n\t}\n\tfunction schemaEditDialog(name, value, onDone) {\n\t    var NEW_SCHEMA = \"(New Schema)\";\n\t    var schemas = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }); // list of all available schema names\n\t    var refValue = schemas.indexOf(value) >= 0;\n\t    var text = refValue ? _schemaText(value) : value;\n\t    var sname = refValue ? value : \"\";\n\t    var timeout = 0;\n\t    var editor = smallEditor(function (e, v) { timeout = 0; });\n\t    var preview = schemaUI._schemaPreview();\n\t    var intervalId = setInterval(function () {\n\t        if (timeout++ < 5)\n\t            return;\n\t        timeout = 0;\n\t        schemaUI._updatePreview(preview, editor.getValue());\n\t    }, 100);\n\t    var select = new UI.SelectField('Select schema: ', function (e, v) {\n\t        sname = v;\n\t        text = schemaText(v);\n\t        _updateEditor(editor, text);\n\t    });\n\t    select.getActualField().setOptions([NEW_SCHEMA].concat(schemas));\n\t    select.setPercentWidth(100);\n\t    if (refValue)\n\t        select.getActualField().setValue(sname);\n\t    _updateEditor(editor, text);\n\t    var tabs = new UI.TabFolder();\n\t    tabs.add(\"Write\", UI.Icon.FILE_TEXT, editor);\n\t    tabs.add(\"Preview\", UI.Icon.GIT_MERGE, preview);\n\t    var panel = UI.section(\"Editing schema value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, select, tabs);\n\t    var NoSchema = function () {\n\t        showError(\"No schema entered\", \"Please enter a valid schema or select one from the list before proceeding.\");\n\t        return false;\n\t    };\n\t    var InvalidSchema = function () {\n\t        showError(\"Invalid schema\", \"Please fix the errors in the schema before saving it.\");\n\t        return false;\n\t    };\n\t    return _dialog2(panel, [\n\t        {\n\t            name: \"Save as reference\",\n\t            highlight: UI.ButtonHighlights.INFO,\n\t            action: function () {\n\t                var newText = editor.getValue();\n\t                var isChanged = (text != newText);\n\t                if (!isChanged && sname == NEW_SCHEMA)\n\t                    return NoSchema();\n\t                else if (validateSchema(newText) == false)\n\t                    return InvalidSchema();\n\t                if (isChanged) {\n\t                    var res = saveSchema(sname, newText);\n\t                    if (res) {\n\t                        onDone(res);\n\t                        clearInterval(intervalId);\n\t                        return true;\n\t                    }\n\t                    else\n\t                        return false;\n\t                }\n\t                else {\n\t                    onDone(sname);\n\t                    clearInterval(intervalId);\n\t                    return true;\n\t                }\n\t            }\n\t        },\n\t        {\n\t            name: \"Save as text\",\n\t            highlight: UI.ButtonHighlights.WARNING,\n\t            action: function () {\n\t                var newText = editor.getValue();\n\t                var isChanged = (text != newText);\n\t                if (newText == \"\")\n\t                    return NoSchema();\n\t                else if (validateSchema(newText) == false)\n\t                    return InvalidSchema();\n\t                select.getActualField().setValue(NEW_SCHEMA);\n\t                sname = \"Untitled\";\n\t                onDone(newText);\n\t                clearInterval(intervalId);\n\t                return true;\n\t            }\n\t        },\n\t        {\n\t            name: \"Cancel\",\n\t            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n\t            action: function () { clearInterval(intervalId); return true; }\n\t        }\n\t    ]);\n\t}\n\texports.schemaEditDialog = schemaEditDialog;\n\tfunction _updateEditor(editor, value) {\n\t    var schema = rp.schema.createSchema(value, null);\n\t    var schemaType = (schema == null || schema.getType == null) ? \"text/plain\" : schema.getType();\n\t    editor.setGrammar(schemaType);\n\t    editor.setText(value);\n\t}\n\texports._updateEditor = _updateEditor;\n\tfunction validateSchema(schema) {\n\t    return true;\n\t}\n\tfunction saveSchema(name, value) {\n\t    var schema = rp.schema.createSchema(value, null);\n\t    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n\t    var projectFolder = path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath());\n\t    var ext;\n\t    var filter;\n\t    switch (schema.getType()) {\n\t        case 'source.json':\n\t            filter = [filterJSON];\n\t            ext = \".json\";\n\t            break;\n\t        case 'text.xml':\n\t            filter = [filterXML];\n\t            ext = \".xsd\";\n\t            break;\n\t        default:\n\t            filter = [];\n\t    }\n\t    var result = dialog.showSaveDialog(remote.getCurrentWindow(), {\n\t        title: 'Save schema',\n\t        defaultPath: path.resolve(projectFolder, \"schemas\", name + ext),\n\t        filters: filter\n\t    });\n\t    if (result == null)\n\t        return null;\n\t    var fname = path.basename(result);\n\t    var ename = path.extname(fname);\n\t    var sname = fname.substr(0, fname.indexOf(ename));\n\t    var rpath = path.relative(projectFolder, result);\n\t    if (editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }).indexOf(sname) == -1)\n\t        assistUtils.createGlobalSchemaFromNameAndContent(editorTools.aquireManager().ast.root(), sname, rpath, value, result);\n\t    return sname;\n\t}\n\tfunction markdown(name, values, onDone) {\n\t    var editor = new UI.AtomEditorElement(values.join('\\n'), function (e) { });\n\t    editor.margin(0, 0, 6, 12);\n\t    editor.setMini(false);\n\t    editor.setGrammar('source.gfm');\n\t    var panel = UI.section(\"Editing markdown value `\" + name + '`:', UI.Icon.FILE_TEXT, false, false, UI.h3(\"Please note that lines might be long enough so window would scroll.\").margin(0, 0, 20, 0), editor);\n\t    return _dialog(panel, function () { onDone(editor.getBinding().get()); return true; }, editor);\n\t}\n\texports.markdown = markdown;\n\tfunction exampleEditorDialog(name, rpath, value, onDone) {\n\t    var editor = smallEditor(function (e, v) {\n\t        if (v.indexOf('xml') > 0)\n\t            editor.setGrammar('text.xml');\n\t        else\n\t            editor.setGrammar('source.json');\n\t    });\n\t    editor.setText(value);\n\t    var projectPath = path.dirname(editorTools.aquireManager().getPath());\n\t    var refPath = new UI.TextField(\"Referenced from\", rpath, function (e, v) { return rpath = v; }, null, \"No reference path provided\");\n\t    refPath.addChild(new UI.Button(\"Browse\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.NO_HIGHLIGHT, null, function () {\n\t        var res = UI.fdUtils.openFileDialogModal(\"Open a reference\", path.resolve(projectPath, rpath), []);\n\t        if (!res)\n\t            return;\n\t        refPath.getActualField().setText(path.relative(projectPath, rpath = res[0]));\n\t        value = fs.readFileSync(res[0]).toString(\"UTF-8\");\n\t        editor.setText(value);\n\t    }).margin(4, 0));\n\t    var reui = refPath.getActualField().ui();\n\t    reui.onclick = function (e) {\n\t        reui.blur();\n\t        if (reui.nextSibling['onclick'])\n\t            reui.nextSibling['onclick'](e);\n\t    };\n\t    var refFrom = UI.vc(UI.h3(\"Referenced\"));\n\t    var panel = UI.section(\"Editing example value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, refPath.margin(12, 12, 20, 12), editor.margin(12, 12, 20, 12));\n\t    return _dialog2(panel, [\n\t        {\n\t            name: \"Save as reference\",\n\t            highlight: UI.ButtonHighlights.INFO,\n\t            action: function () {\n\t                var newText = editor.getValue();\n\t                if ((value != newText)) {\n\t                    var res = saveExample(path.resolve(projectPath, rpath), newText);\n\t                    if (res) {\n\t                        onDone(path.relative(projectPath, res));\n\t                        return true;\n\t                    }\n\t                    else\n\t                        return false;\n\t                }\n\t                else {\n\t                    onDone(rpath);\n\t                    return true;\n\t                }\n\t            }\n\t        },\n\t        {\n\t            name: \"Save as text\",\n\t            highlight: UI.ButtonHighlights.WARNING,\n\t            action: function () { return onDone(editor.getValue()) == undefined || true; }\n\t        },\n\t        {\n\t            name: \"Cancel\",\n\t            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n\t            action: function () { return true; }\n\t        }\n\t    ]);\n\t}\n\texports.exampleEditorDialog = exampleEditorDialog;\n\tvar mdp = null;\n\tfunction _closeDialog() {\n\t    _dialogPanels.pop();\n\t    if (_dialogPanels.length == 0)\n\t        mdp.destroy();\n\t    else\n\t        mdp = atom.workspace.addModalPanel({ item: _dialogPanels[_dialogPanels.length - 1].ui() });\n\t}\n\tfunction saveExample(filePath, value) {\n\t    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n\t    var ext = value.indexOf('xml') < 0 ? 'json' : 'xml';\n\t    var filename = UI.fdUtils.saveFileDialogModal('Save an example', filePath, [filterJSON, filterXML, filterAll]);\n\t    if (filename)\n\t        fs.writeFileSync(filename, value);\n\t    return filename;\n\t}\n\tfunction _dialog2(panel, actions, toFocus, stretch) {\n\t    if (stretch === void 0) { stretch = false; }\n\t    var buttonBar = UI.hc().setPercentWidth(100);\n\t    actions.reverse().forEach(function (a) {\n\t        var button = UI.button(a.name, UI.ButtonSizes.NORMAL, a.highlight, UI.Icon.NONE, function (x) { if (a.action())\n\t            _closeDialog(); });\n\t        if (a.isPrimary) {\n\t            var st = panel.getBinding().status();\n\t            if (st) {\n\t                if (st.code == UI.StatusCode.ERROR) {\n\t                    button.setDisabled(true);\n\t                }\n\t            }\n\t            panel.getBinding().addStatusListener(function (x) {\n\t                var st = panel.getBinding().status();\n\t                if (st) {\n\t                    if (st.code != UI.StatusCode.ERROR) {\n\t                        button.setDisabled(false);\n\t                    }\n\t                    else {\n\t                        button.setDisabled(true);\n\t                    }\n\t                }\n\t            });\n\t        }\n\t        button.setStyle(\"float\", \"right\")\n\t            .margin(4, 10);\n\t        buttonBar.addChild(button);\n\t    });\n\t    panel.addChild(buttonBar);\n\t    var ui = panel.ui();\n\t    return function (e) {\n\t        _dialogPanels.push(panel);\n\t        var eventListener = function () {\n\t            if (!stretch) {\n\t                return;\n\t            }\n\t            var parent = ui.parentElement;\n\t            var height = document.body.clientHeight;\n\t            if (!parent) {\n\t                return;\n\t            }\n\t            var style = window.getComputedStyle(parent);\n\t            [\"paddingBottom\", \"paddingTop\", \"marginBottom\", \"marginTop\"].forEach(function (property) {\n\t                height -= parseFloat(style[property] || 0);\n\t            });\n\t            ui.style.height = height + \"px\";\n\t            ui.style.overflowY = \"scroll\";\n\t        };\n\t        window.addEventListener('resize', eventListener);\n\t        mdp = atom.workspace.addModalPanel({ item: ui });\n\t        mdp.onDidDestroy(function () {\n\t            window.removeEventListener('resize', eventListener);\n\t        });\n\t        eventListener();\n\t        if (toFocus)\n\t            toFocus.ui().focus();\n\t    };\n\t}\n\tfunction msg(m) {\n\t    showError(m, \"\");\n\t}\n\texports.msg = msg;\n\tfunction smallEditor(onChange) {\n\t    if (!onChange)\n\t        onChange = function (e, v) { };\n\t    var editor = new UI.AtomEditorElement(\"\", onChange);\n\t    editor.setMini(false);\n\t    editor.setStyle(\"height\", \"400px\");\n\t    editor.setStyle(\"border\", \"solid\");\n\t    editor.setStyle(\"border-width\", \"1px\");\n\t    return editor;\n\t}\n\texports.smallEditor = smallEditor;\n\tfunction _schemaText(nameOrValue) {\n\t    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n\t    return schema ? schema.value().value() : \"\";\n\t}\n\tfunction _dialog(panel, onDone, toFocus, stretch) {\n\t    if (stretch === void 0) { stretch = false; }\n\t    return _dialog2(panel, [\n\t        { name: \"Ok\", isPrimary: true, highlight: UI.ButtonHighlights.PRIMARY, action: onDone },\n\t        { name: \"Cancel\", highlight: UI.ButtonHighlights.NO_HIGHLIGHT, action: function () { return true; } }\n\t    ], toFocus, stretch);\n\t}\n\t\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"react\");\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"xtend\");\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"popsicle\");\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"yaml-ast-parser\");\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"xmldom\");\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = [\n\t\t{\n\t\t\t\"id\": 31423945,\n\t\t\t\"name\": \"AmazonS3\",\n\t\t\t\"full_name\": \"raml-apis/AmazonS3\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/AmazonS3\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:35Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:35Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:01Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/AmazonS3.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/AmazonS3.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/AmazonS3.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 264,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423955,\n\t\t\t\"name\": \"Box\",\n\t\t\t\"full_name\": \"raml-apis/Box\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Box\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Box\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Box/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Box/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Box/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Box/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Box/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Box/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Box/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Box/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Box/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Box/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Box/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Box/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Box/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Box/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Box/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Box/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Box/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Box/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Box/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Box/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Box/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Box/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Box/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Box/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Box/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Box/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Box/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Box/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Box/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Box/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Box/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Box/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Box/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Box/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Box/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:41Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:41Z\",\n\t\t\t\"pushed_at\": \"2015-07-28T23:37:53Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Box.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Box.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Box.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Box\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 224,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423957,\n\t\t\t\"name\": \"Bufferapp\",\n\t\t\t\"full_name\": \"raml-apis/Bufferapp\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bufferapp\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:42Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:08:44Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:27Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Bufferapp.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Bufferapp.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Bufferapp.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 172,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423973,\n\t\t\t\"name\": \"FuelEconomy\",\n\t\t\t\"full_name\": \"raml-apis/FuelEconomy\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/FuelEconomy\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:49Z\",\n\t\t\t\"pushed_at\": \"2015-04-04T00:32:59Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/FuelEconomy.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/FuelEconomy.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/FuelEconomy.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 172,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423980,\n\t\t\t\"name\": \"GoogleContacts\",\n\t\t\t\"full_name\": \"raml-apis/GoogleContacts\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleContacts\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:52Z\",\n\t\t\t\"updated_at\": \"2015-10-31T15:35:32Z\",\n\t\t\t\"pushed_at\": \"2015-05-21T12:01:57Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleContacts.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleContacts.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleContacts.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 260,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423986,\n\t\t\t\"name\": \"Instagram\",\n\t\t\t\"full_name\": \"raml-apis/Instagram\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Instagram\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Instagram/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Instagram/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Instagram/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Instagram/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Instagram/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Instagram/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Instagram/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Instagram/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Instagram/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Instagram/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Instagram/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Instagram/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Instagram/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Instagram/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Instagram/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Instagram/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Instagram/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Instagram/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Instagram/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Instagram/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Instagram/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Instagram/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Instagram/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:56Z\",\n\t\t\t\"updated_at\": \"2015-09-08T12:55:09Z\",\n\t\t\t\"pushed_at\": \"2015-10-14T07:16:39Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Instagram.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Instagram.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Instagram.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 187,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423979,\n\t\t\t\"name\": \"GoogleCalendar\",\n\t\t\t\"full_name\": \"raml-apis/GoogleCalendar\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:51Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:09:48Z\",\n\t\t\t\"pushed_at\": \"2015-05-21T02:57:16Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleCalendar.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 252,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423964,\n\t\t\t\"name\": \"Facebook\",\n\t\t\t\"full_name\": \"raml-apis/Facebook\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Facebook\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Facebook/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Facebook/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Facebook/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Facebook/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Facebook/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Facebook/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Facebook/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Facebook/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Facebook/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Facebook/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Facebook/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Facebook/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Facebook/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Facebook/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Facebook/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Facebook/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Facebook/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Facebook/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Facebook/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Facebook/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Facebook/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Facebook/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Facebook/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:45Z\",\n\t\t\t\"updated_at\": \"2015-10-21T23:11:31Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T13:46:05Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Facebook.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Facebook.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Facebook.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 272,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424019,\n\t\t\t\"name\": \"Stormpath\",\n\t\t\t\"full_name\": \"raml-apis/Stormpath\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stormpath\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stormpath/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stormpath/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stormpath/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stormpath/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stormpath/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stormpath/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stormpath/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stormpath/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stormpath/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stormpath/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stormpath/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stormpath/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stormpath/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stormpath/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stormpath/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stormpath/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:33Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Stormpath.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Stormpath.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Stormpath.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 188,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424034,\n\t\t\t\"name\": \"XKCD\",\n\t\t\t\"full_name\": \"raml-apis/XKCD\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/XKCD\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/XKCD/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/XKCD/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/XKCD/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/XKCD/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/XKCD/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/XKCD/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/XKCD/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/XKCD/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/XKCD/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/XKCD/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/XKCD/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/XKCD/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/XKCD/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/XKCD/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/XKCD/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/XKCD/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/XKCD/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/XKCD/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/XKCD/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/XKCD/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/XKCD/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/XKCD/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/XKCD/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:21Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:53:13Z\",\n\t\t\t\"pushed_at\": \"2015-08-07T05:17:33Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/XKCD.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/XKCD.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/XKCD.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 148,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424012,\n\t\t\t\"name\": \"SlideShare\",\n\t\t\t\"full_name\": \"raml-apis/SlideShare\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/SlideShare\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SlideShare/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SlideShare/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SlideShare/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SlideShare/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SlideShare/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SlideShare/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SlideShare/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SlideShare/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SlideShare/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SlideShare/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SlideShare/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SlideShare/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SlideShare/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SlideShare/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SlideShare/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SlideShare/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:11Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:11Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:13Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/SlideShare.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/SlideShare.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/SlideShare.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424024,\n\t\t\t\"name\": \"Twilio\",\n\t\t\t\"full_name\": \"raml-apis/Twilio\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twilio\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twilio/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twilio/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twilio/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twilio/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twilio/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twilio/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twilio/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twilio/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twilio/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twilio/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twilio/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twilio/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twilio/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twilio/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twilio/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twilio/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twilio/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twilio/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twilio/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twilio/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twilio/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twilio/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twilio/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:16Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:42:14Z\",\n\t\t\t\"pushed_at\": \"2015-08-21T10:07:35Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Twilio.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Twilio.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Twilio.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 340,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424029,\n\t\t\t\"name\": \"WeatherUnderground\",\n\t\t\t\"full_name\": \"raml-apis/WeatherUnderground\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:19Z\",\n\t\t\t\"updated_at\": \"2015-10-31T15:36:51Z\",\n\t\t\t\"pushed_at\": \"2015-07-30T15:19:32Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/WeatherUnderground.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 248,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424039,\n\t\t\t\"name\": \"Zuora\",\n\t\t\t\"full_name\": \"raml-apis/Zuora\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zuora\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zuora/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zuora/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zuora/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zuora/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zuora/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zuora/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zuora/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zuora/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zuora/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zuora/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zuora/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zuora/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zuora/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zuora/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zuora/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zuora/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zuora/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zuora/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zuora/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zuora/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zuora/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zuora/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zuora/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:43:10Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:15:34Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Zuora.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Zuora.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Zuora.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 184,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423938,\n\t\t\t\"name\": \"AccuWeather\",\n\t\t\t\"full_name\": \"raml-apis/AccuWeather\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/AccuWeather\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:24Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:51:18Z\",\n\t\t\t\"pushed_at\": \"2015-11-06T07:20:20Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/AccuWeather.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/AccuWeather.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/AccuWeather.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 278,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424026,\n\t\t\t\"name\": \"Twitch\",\n\t\t\t\"full_name\": \"raml-apis/Twitch\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitch\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitch/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitch/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitch/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitch/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitch/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitch/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitch/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitch/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitch/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitch/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitch/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitch/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitch/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitch/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitch/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitch/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitch/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitch/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitch/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitch/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitch/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitch/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitch/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:17Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:17Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:49Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Twitch.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitch.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Twitch.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423975,\n\t\t\t\"name\": \"Geonames\",\n\t\t\t\"full_name\": \"raml-apis/Geonames\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Geonames\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Geonames/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Geonames/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Geonames/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Geonames/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Geonames/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Geonames/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Geonames/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Geonames/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Geonames/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Geonames/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Geonames/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Geonames/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Geonames/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Geonames/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Geonames/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Geonames/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Geonames/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Geonames/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Geonames/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Geonames/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Geonames/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Geonames/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Geonames/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\t\"updated_at\": \"2015-03-16T03:36:21Z\",\n\t\t\t\"pushed_at\": \"2015-07-24T13:32:52Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Geonames.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Geonames.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Geonames.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 248,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 1,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 1,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 34848402,\n\t\t\t\"name\": \"Uber\",\n\t\t\t\"full_name\": \"raml-apis/Uber\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\t\"description\": \"\",\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Uber\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Uber/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Uber/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Uber/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Uber/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Uber/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Uber/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Uber/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Uber/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Uber/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Uber/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Uber/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Uber/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Uber/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Uber/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Uber/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Uber/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Uber/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Uber/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Uber/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Uber/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Uber/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Uber/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Uber/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Uber/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Uber/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Uber/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Uber/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Uber/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Uber/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Uber/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Uber/releases{/id}\",\n\t\t\t\"created_at\": \"2015-04-30T10:18:59Z\",\n\t\t\t\"updated_at\": \"2015-04-30T10:18:59Z\",\n\t\t\t\"pushed_at\": \"2015-10-15T05:35:23Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Uber.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Uber.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Uber.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 193,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": true,\n\t\t\t\"has_wiki\": true,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 3,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 3,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"staging\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423987,\n\t\t\t\"name\": \"Jira\",\n\t\t\t\"full_name\": \"raml-apis/Jira\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Jira\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Jira/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Jira/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Jira/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Jira/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Jira/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Jira/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Jira/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Jira/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Jira/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Jira/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Jira/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Jira/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Jira/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Jira/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Jira/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Jira/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Jira/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Jira/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Jira/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Jira/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Jira/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Jira/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Jira/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Jira/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Jira/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Jira/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Jira/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Jira/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Jira/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Jira/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Jira/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:57Z\",\n\t\t\t\"updated_at\": \"2015-09-30T16:37:10Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:12:56Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Jira.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Jira.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Jira.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 240,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424011,\n\t\t\t\"name\": \"Slack\",\n\t\t\t\"full_name\": \"raml-apis/Slack\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Slack\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Slack/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Slack/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Slack/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Slack/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Slack/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Slack/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Slack/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Slack/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Slack/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Slack/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Slack/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Slack/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Slack/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Slack/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Slack/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Slack/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Slack/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Slack/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Slack/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Slack/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Slack/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Slack/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Slack/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Slack/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Slack/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Slack/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Slack/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Slack/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Slack/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Slack/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Slack/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:10Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:12:05Z\",\n\t\t\t\"pushed_at\": \"2015-10-14T05:29:57Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Slack.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Slack.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Slack.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 237,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423977,\n\t\t\t\"name\": \"GitHub\",\n\t\t\t\"full_name\": \"raml-apis/GitHub\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GitHub\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GitHub/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GitHub/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GitHub/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GitHub/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GitHub/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GitHub/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GitHub/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GitHub/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GitHub/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GitHub/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GitHub/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GitHub/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GitHub/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GitHub/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GitHub/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GitHub/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GitHub/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GitHub/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GitHub/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GitHub/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GitHub/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GitHub/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GitHub/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:50Z\",\n\t\t\t\"updated_at\": \"2015-11-04T16:18:02Z\",\n\t\t\t\"pushed_at\": \"2015-10-16T09:54:09Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GitHub.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GitHub.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GitHub.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 366,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 2,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 2,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423990,\n\t\t\t\"name\": \"LinkedIn\",\n\t\t\t\"full_name\": \"raml-apis/LinkedIn\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/LinkedIn\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:59Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:11:03Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:13:06Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/LinkedIn.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/LinkedIn.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/LinkedIn.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 184,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424036,\n\t\t\t\"name\": \"Yammer\",\n\t\t\t\"full_name\": \"raml-apis/Yammer\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Yammer\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Yammer/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Yammer/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Yammer/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Yammer/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Yammer/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Yammer/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Yammer/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Yammer/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Yammer/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Yammer/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Yammer/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Yammer/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Yammer/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Yammer/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Yammer/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Yammer/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Yammer/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Yammer/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Yammer/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Yammer/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Yammer/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Yammer/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Yammer/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:22Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:52:23Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:15:18Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Yammer.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Yammer.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Yammer.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 168,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423985,\n\t\t\t\"name\": \"HealthCare\",\n\t\t\t\"full_name\": \"raml-apis/HealthCare\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/HealthCare\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/HealthCare/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/HealthCare/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/HealthCare/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/HealthCare/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/HealthCare/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/HealthCare/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/HealthCare/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/HealthCare/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/HealthCare/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/HealthCare/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/HealthCare/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/HealthCare/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/HealthCare/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/HealthCare/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/HealthCare/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/HealthCare/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:55Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:55Z\",\n\t\t\t\"pushed_at\": \"2015-07-30T16:44:45Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/HealthCare.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/HealthCare.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/HealthCare.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 200,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423954,\n\t\t\t\"name\": \"Blogger\",\n\t\t\t\"full_name\": \"raml-apis/Blogger\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Blogger\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Blogger/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Blogger/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Blogger/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Blogger/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Blogger/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Blogger/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Blogger/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Blogger/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Blogger/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Blogger/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Blogger/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Blogger/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Blogger/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Blogger/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Blogger/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Blogger/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Blogger/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Blogger/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Blogger/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Blogger/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Blogger/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Blogger/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Blogger/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:40Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:40Z\",\n\t\t\t\"pushed_at\": \"2015-05-28T11:21:49Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Blogger.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Blogger.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Blogger.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 200,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 41861038,\n\t\t\t\"name\": \"SalesforceChatter\",\n\t\t\t\"full_name\": \"raml-apis/SalesforceChatter\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\t\"description\": \"\",\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/releases{/id}\",\n\t\t\t\"created_at\": \"2015-09-03T13:24:46Z\",\n\t\t\t\"updated_at\": \"2015-09-03T13:36:51Z\",\n\t\t\t\"pushed_at\": \"2015-10-22T12:08:05Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/SalesforceChatter.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 412,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"RAML\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": true,\n\t\t\t\"has_wiki\": true,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"production\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423959,\n\t\t\t\"name\": \"Elasticsearch\",\n\t\t\t\"full_name\": \"raml-apis/Elasticsearch\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Elasticsearch\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:43Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:43Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:32Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Elasticsearch.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Elasticsearch.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Elasticsearch.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 228,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423981,\n\t\t\t\"name\": \"GoogleDrive\",\n\t\t\t\"full_name\": \"raml-apis/GoogleDrive\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleDrive\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:53Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:53Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:30:50Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleDrive.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleDrive.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleDrive.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 268,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424001,\n\t\t\t\"name\": \"PagerDuty\",\n\t\t\t\"full_name\": \"raml-apis/PagerDuty\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/PagerDuty\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:04Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:43:49Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:37:18Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/PagerDuty.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/PagerDuty.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/PagerDuty.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 232,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424037,\n\t\t\t\"name\": \"Zendesk\",\n\t\t\t\"full_name\": \"raml-apis/Zendesk\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zendesk\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zendesk/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zendesk/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zendesk/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zendesk/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zendesk/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zendesk/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zendesk/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zendesk/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zendesk/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zendesk/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zendesk/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zendesk/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zendesk/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zendesk/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zendesk/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zendesk/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:23Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:51:58Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:15:23Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Zendesk.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Zendesk.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Zendesk.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 320,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423982,\n\t\t\t\"name\": \"GoogleMail\",\n\t\t\t\"full_name\": \"raml-apis/GoogleMail\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleMail\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:54Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:10:17Z\",\n\t\t\t\"pushed_at\": \"2015-10-15T11:27:34Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleMail.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleMail.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleMail.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 208,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423998,\n\t\t\t\"name\": \"NewRelic\",\n\t\t\t\"full_name\": \"raml-apis/NewRelic\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/NewRelic\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/NewRelic/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/NewRelic/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/NewRelic/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/NewRelic/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/NewRelic/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/NewRelic/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/NewRelic/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/NewRelic/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/NewRelic/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/NewRelic/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/NewRelic/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/NewRelic/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/NewRelic/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/NewRelic/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/NewRelic/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/NewRelic/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:02Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:02Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:13:24Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/NewRelic.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/NewRelic.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/NewRelic.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 248,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424027,\n\t\t\t\"name\": \"Twitter\",\n\t\t\t\"full_name\": \"raml-apis/Twitter\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitter\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitter/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitter/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitter/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitter/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitter/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitter/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitter/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitter/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitter/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitter/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitter/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitter/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitter/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitter/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitter/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitter/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitter/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitter/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitter/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitter/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitter/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitter/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitter/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:18Z\",\n\t\t\t\"updated_at\": \"2015-04-28T22:37:52Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:26:44Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Twitter.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitter.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Twitter.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 256,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424038,\n\t\t\t\"name\": \"Zillow\",\n\t\t\t\"full_name\": \"raml-apis/Zillow\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zillow\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zillow/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zillow/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zillow/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zillow/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zillow/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zillow/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zillow/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zillow/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zillow/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zillow/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zillow/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zillow/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zillow/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zillow/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zillow/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zillow/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zillow/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zillow/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zillow/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zillow/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zillow/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zillow/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zillow/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:51:44Z\",\n\t\t\t\"pushed_at\": \"2015-07-24T13:33:15Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Zillow.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Zillow.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Zillow.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 232,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 34780551,\n\t\t\t\"name\": \"FlightStats\",\n\t\t\t\"full_name\": \"raml-apis/FlightStats\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\t\"description\": \"\",\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/FlightStats\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FlightStats/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FlightStats/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FlightStats/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FlightStats/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FlightStats/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FlightStats/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FlightStats/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FlightStats/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FlightStats/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FlightStats/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FlightStats/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FlightStats/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FlightStats/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FlightStats/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FlightStats/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FlightStats/releases{/id}\",\n\t\t\t\"created_at\": \"2015-04-29T08:03:54Z\",\n\t\t\t\"updated_at\": \"2015-04-29T08:03:54Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:10:56Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/FlightStats.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/FlightStats.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/FlightStats.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 460,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": true,\n\t\t\t\"has_wiki\": true,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"staging\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424005,\n\t\t\t\"name\": \"PivotalTracker\",\n\t\t\t\"full_name\": \"raml-apis/PivotalTracker\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/PivotalTracker\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:07Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:07Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:50:22Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/PivotalTracker.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/PivotalTracker.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/PivotalTracker.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 196,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424014,\n\t\t\t\"name\": \"SmartSheet\",\n\t\t\t\"full_name\": \"raml-apis/SmartSheet\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/SmartSheet\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:12Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:12Z\",\n\t\t\t\"pushed_at\": \"2015-05-22T15:01:12Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/SmartSheet.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/SmartSheet.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/SmartSheet.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 224,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424018,\n\t\t\t\"name\": \"StackExchange\",\n\t\t\t\"full_name\": \"raml-apis/StackExchange\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/StackExchange\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/StackExchange/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/StackExchange/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/StackExchange/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/StackExchange/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/StackExchange/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/StackExchange/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/StackExchange/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/StackExchange/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/StackExchange/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/StackExchange/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/StackExchange/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/StackExchange/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/StackExchange/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/StackExchange/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/StackExchange/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/StackExchange/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:28Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/StackExchange.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/StackExchange.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/StackExchange.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424002,\n\t\t\t\"name\": \"Parse\",\n\t\t\t\"full_name\": \"raml-apis/Parse\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Parse\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Parse/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Parse/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Parse/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Parse/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Parse/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Parse/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Parse/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Parse/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Parse/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Parse/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Parse/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Parse/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Parse/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Parse/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Parse/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Parse/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Parse/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Parse/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Parse/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Parse/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Parse/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Parse/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Parse/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Parse/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Parse/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Parse/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Parse/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Parse/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Parse/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Parse/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Parse/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:05Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:05Z\",\n\t\t\t\"pushed_at\": \"2015-07-28T19:32:46Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Parse.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Parse.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Parse.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 224,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423952,\n\t\t\t\"name\": \"Bitly\",\n\t\t\t\"full_name\": \"raml-apis/Bitly\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bitly\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bitly/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bitly/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bitly/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bitly/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bitly/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bitly/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bitly/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bitly/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bitly/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bitly/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bitly/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bitly/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bitly/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bitly/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bitly/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bitly/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bitly/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bitly/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bitly/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bitly/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bitly/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bitly/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bitly/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:08:16Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:12Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Bitly.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Bitly.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Bitly.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 204,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424021,\n\t\t\t\"name\": \"Stripe\",\n\t\t\t\"full_name\": \"raml-apis/Stripe\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stripe\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stripe/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stripe/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stripe/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stripe/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stripe/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stripe/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stripe/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stripe/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stripe/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stripe/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stripe/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stripe/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stripe/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stripe/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stripe/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stripe/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stripe/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stripe/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stripe/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stripe/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stripe/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stripe/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stripe/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:15Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:15Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:38Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Stripe.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Stripe.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Stripe.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 380,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423951,\n\t\t\t\"name\": \"AzureTableStorage\",\n\t\t\t\"full_name\": \"raml-apis/AzureTableStorage\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:39Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:07Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/AzureTableStorage.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 152,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424016,\n\t\t\t\"name\": \"Squareup\",\n\t\t\t\"full_name\": \"raml-apis/Squareup\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Squareup\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Squareup/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Squareup/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Squareup/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Squareup/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Squareup/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Squareup/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Squareup/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Squareup/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Squareup/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Squareup/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Squareup/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Squareup/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Squareup/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Squareup/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Squareup/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Squareup/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Squareup/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Squareup/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Squareup/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Squareup/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Squareup/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Squareup/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Squareup/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:13Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:13Z\",\n\t\t\t\"pushed_at\": \"2015-03-16T16:14:08Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Squareup.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Squareup.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Squareup.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 176,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424009,\n\t\t\t\"name\": \"Salesforce\",\n\t\t\t\"full_name\": \"raml-apis/Salesforce\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Salesforce\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Salesforce/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Salesforce/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Salesforce/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Salesforce/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Salesforce/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Salesforce/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Salesforce/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Salesforce/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Salesforce/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Salesforce/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Salesforce/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Salesforce/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Salesforce/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Salesforce/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Salesforce/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Salesforce/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:09Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:09Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:02Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Salesforce.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Salesforce.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Salesforce.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t}\n\t];\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar rp = __webpack_require__(22);\n\tvar def = rp.ds;\n\tvar UI = __webpack_require__(17);\n\tvar schemautil = rp.schema;\n\tvar editorTools = __webpack_require__(5);\n\tvar details2 = __webpack_require__(61);\n\tvar HTTPANDHTTPS = \"HTTP, HTTPS\";\n\tvar HTTPHTTPS = \"HTTP/HTTPS\";\n\texports.nodes = {\n\t    Api: {\n\t        properties: [\"title\", \"version\", \"baseUri\", \"mediaType\", \"protocols\"],\n\t        actions: []\n\t    },\n\t    Resource: {\n\t        properties: [\"relativeUri\", \"displayName\", \"description\", \"is\", \"type\"]\n\t    },\n\t    Method: {\n\t        properties: [\"method\", \"displayName\", \"description\", \"is\", \"type\", \"protocols\", \"securedBy\"]\n\t    },\n\t    DataElement: {\n\t        properties: [\"name\", \"displayName\", \"description\", \"default\", \"required\"]\n\t    },\n\t    Response: {\n\t        properties: [\"code\", \"description\"]\n\t    }\n\t};\n\texports.filterOut = {\n\t    properties: [\"location\", \"annotations\", \"repeat\", \"locationKind\", \"signature\"]\n\t};\n\t//export function property2(node: hl.IHighLevelNode, name: string, descriptionLabel?: UI.TextElement<any>, updateTextOnDone: boolean = false) {\n\t//    var pinfo = propertyInfo(node, name);\n\t//\n\t//    return property(name, pinfo.required, pinfo.type, pinfo.value, pinfo.values, node, descriptionLabel, updateTextOnDone);\n\t//}\n\tvar focusedPropertyName = null;\n\tvar focusedPosition = -1;\n\tvar toFocus = null;\n\tfunction updateDetailsPanel(node, panel, updateTextOnDone) {\n\t    if (updateTextOnDone === void 0) { updateTextOnDone = false; }\n\t    panel.clear();\n\t    var cfg = atom.config;\n\t    var l = atom.styles.emitter.handlersByEventName;\n\t    var sadd = [].concat(l['did-add-style-element']);\n\t    var sremove = [].concat(l['did-remove-style-element']);\n\t    var schange = [].concat(l['did-update-style-element']);\n\t    var cfgCh = [].concat(cfg.emitter.handlersByEventName['did-change']);\n\t    var grammars = atom.grammars.emitter.handlersByEventName;\n\t    var addGrammar = [].concat(grammars[\"did-add-grammar\"]);\n\t    var updateGrammar = [].concat(grammars[\"did-update-grammar\"]);\n\t    var emptyGrammarListeners = [].concat(atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"]);\n\t    try {\n\t        var empty = true;\n\t        var pcmp = function (a, b) {\n\t            var ap = a.getAdapter(def.RAMLPropertyService).priority(), bp = b.getAdapter(def.RAMLPropertyService).priority();\n\t            if (ap != bp)\n\t                return bp - ap;\n\t            else\n\t                return a.nameId().localeCompare(b.nameId());\n\t        };\n\t        if (false) {\n\t            var info = exports.nodes[node.definition().nameId()];\n\t            info.properties.forEach(function (pn) {\n\t                try {\n\t                    //panel.addChild(property2(node, pn, <UI.TextElement<any>> descLabel2, updateTextOnDone));\n\t                    empty = false;\n\t                }\n\t                catch (e) {\n\t                    console.log(\"Error while updating details panel for node \", node, \"(property \", pn, \"): \", e);\n\t                }\n\t            });\n\t        }\n\t        else {\n\t            var item = details2.buildItem(node, false);\n\t            item.addListener(function (x) {\n\t                editorTools.aquireManager().updateText(null);\n\t            });\n\t            var rend = item.render({});\n\t            //var oldDispose=rend.dispose;\n\t            if (exports.oldItem) {\n\t                exports.oldItem.detach();\n\t            }\n\t            exports.oldItem = item;\n\t            panel.addChild(rend);\n\t            empty = false;\n\t        }\n\t        if (toFocus) {\n\t            var field = toFocus.getActualField().ui();\n\t            field.focus();\n\t            field.getModel().setCursorBufferPosition(focusedPosition);\n\t            toFocus = null;\n\t            focusedPosition = null;\n\t            focusedPropertyName = null;\n\t        }\n\t        if (empty) {\n\t            var errLabel = UI.h3(\"Object `\" + node.name() + \"` has no additional properties.\");\n\t            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n\t            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n\t            panel.addChild(errLabel);\n\t        }\n\t        ;\n\t    }\n\t    finally {\n\t        cfg.emitter.handlersByEventName['did-change'] = cfgCh;\n\t        l['did-add-style-element'] = sadd;\n\t        l['did-remove-style-element'] = sremove;\n\t        l['did-update-style-element'] = schange;\n\t        grammars[\"did-add-grammar\"] = addGrammar;\n\t        grammars[\"did-update-grammar\"] = updateGrammar;\n\t        atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"] = emptyGrammarListeners;\n\t    }\n\t}\n\texports.updateDetailsPanel = updateDetailsPanel;\n\t//export function property(name: string, required: boolean, type: string, value: string, values: any[], node: hl.IHighLevelNode, descriptionLabel: UI.TextElement<any>, updateText: boolean = false) {\n\t//    var bonclick = (e)=>{};\n\t//    var attr = node.attr(name);\n\t//    var useModalEditor = false;\n\t//\n\t//    var tfValue = new UI.BasicBinding(dialogs.getStringValue(value));\n\t//    var updateViewModel = function(value) {\n\t//        if (updateText) editorTools.aquireManager().updateText(node.lowLevel());\n\t//\n\t//        fire = false;\n\t//        if (type==\"protocols\"){\n\t//            if (value==HTTPANDHTTPS){\n\t//                value=HTTPHTTPS\n\t//            }\n\t//        }\n\t//        tfValue.set(value);\n\t//        fire = true;\n\t//    }\n\t//    var disabledMessage: string = null;\n\t//    var res;\n\t//    switch (type) {\n\t//        case 'markdown':\n\t//            bonclick = dialogs.markdown(name, values, (newValue) => {\n\t//                node.attrOrCreate(name).setValue(value = newValue);\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'schema':\n\t//            bonclick = dialogs.schemaEditDialog(name, values.length > 0 ? values[0] : value, (newValue) => {\n\t//                node.attrOrCreate(name).setValue(newValue);\n\t//                if (updateText) editorTools.aquireManager().updateText();\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'schexample':\n\t//            bonclick = dialogs.exampleEditorDialog(name, values[1], values[0], (newValue) => {\n\t//                var value = newValue;\n\t//                if (fs.exists(newValue))\n\t//                    value = \"!include \" + path.relative(node.lowLevel().unit().path(), newValue);\n\t//                node.attrOrCreate(name).setValue(value);\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'enum':\n\t//            bonclick = dialogs.enumEditDialog(name, values, (values)=>{\n\t//                node.attributes(name).forEach(attr => attr.remove());\n\t//                values.forEach(val => node.attrOrCreate(name).addValue(val));\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'protocols':\n\t//            break;\n\t//        case 'type':\n\t//            bonclick = dialogs.typeEditDialog(name, value, node, (newValue) => {\n\t//                node.attrOrCreate(name).setValue(newValue);\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            if (editorTools.aquireManager().ast.elementsOfKind('resourceTypes').length < 1) disabledMessage = \"No resource types defined\";\n\t//            else useModalEditor = true;\n\t//            break;\n\t//        case 'trait':\n\t//            bonclick = dialogs.traitsEditDialog(name, values, node, (newTraits) => {\n\t//                node.attributes(name).forEach(attr => attr.remove());\n\t//\n\t//                newTraits\n\t//                    .filter(trait => trait.enabled)\n\t//                    .filter(trait => typeof trait.value == \"string\") // FIXME should only be trait => trait.enabled\n\t//                    .forEach(trait => node.attrOrCreate(name).addValue(trait.value));\n\t//\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//\n\t//            useModalEditor = true;\n\t//            break;\n\t//        default:\n\t//    }\n\t//\n\t//    var fire = true;\n\t//    var updateValueDeferred = (newValue)=>{ uvdTimeout = 0; }\n\t//\n\t//    if (!useModalEditor && node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node).length > 0 || name == 'code') {\n\t//        var ores = new UI.SelectField(name + (required ? \"*\" : \"\"), (e, v) => {\n\t//            if (fire == false) return;\n\t//            if (v == \"(no value)\") v = \"\";\n\t//            if (type==\"protocols\"){\n\t//                node.attributes(name).forEach(attr => attr.remove());\n\t//                if( v==HTTPHTTPS){\n\t//                    [\"HTTP\",\"HTTPS\"].forEach(val => node.attrOrCreate(name).addValue(val));\n\t//                }\n\t//                else{\n\t//                    if (v) {\n\t//                        node.attrOrCreate(name).setValue(v);\n\t//                    }\n\t//                }\n\t//                updateViewModel(stringView(node, name));\n\t//                return;\n\t//            }\n\t//            updateValueDeferred(v);\n\t//        });\n\t//        var options = [];\n\t//        if (name == 'code')\n\t//            options = Object.keys(dialogs.getStatusCodeDescriptions());\n\t//        else {\n\t//            var enumValues = node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node);\n\t//            options = node.definition().property(name).getAdapter(services.RAMLPropertyService).isKey() ? enumValues : [\"(no value)\"].concat(enumValues);\n\t//\n\t//            if (type=='protocols'){\n\t//                if (tfValue.get()==HTTPANDHTTPS){\n\t//                    tfValue.set(HTTPHTTPS)\n\t//                }\n\t//                options =[\"(no value)\",\"HTTP\",\"HTTPS\",HTTPHTTPS]\n\t//            }\n\t//        }\n\t//\n\t//        ores.getActualField().setOptions(options);\n\t//        ores.setBinding(tfValue);\n\t//\n\t//        res = ores;\n\t//    } else {\n\t//        if (!res) {\n\t//            res = new UI.TextField(name + (required ? \"*\" : \"\"), tfValue, (e, v)=> {\n\t//                if (fire == false) return;\n\t//                if (useModalEditor && res && res.getActualField())\n\t//                    res.getActualField().setText(value, false); // do not re-call onChange\n\t//                else\n\t//                    updateValueDeferred(v);\n\t//            }, null, editorTools.aquireManager().placeholder ? name + \" has no value\" : '');\n\t//            if (name == focusedPropertyName) toFocus = res;\n\t//        }\n\t//    }\n\t//    var uvdTimeout = 12;\n\t//\n\t//    setInterval(()=>{\n\t//        if (uvdTimeout++ != 10) return;\n\t//        var newValue = res.getActualField().getValue();\n\t//        var attrEx = node.attr(name)\n\t//        var attr = node.attrOrCreate(name);\n\t//        attr.setValue(newValue);\n\t//        if (updateText) {\n\t//            if (res instanceof UI.TextField) {\n\t//                focusedPropertyName = name;\n\t//                focusedPosition = (<any> res.getActualField()).ui().getModel().getCursorBufferPosition();\n\t//            }\n\t//            editorTools.aquireManager().updateText(newValue == '' || attr == null ? node.lowLevel() : attr.lowLevel());\n\t//\n\t//        }\n\t//\n\t//    }, 50);\n\t//\n\t//    res.getActualField().addClass(\"ate\").addClass(type).setStyle(\"margin-bottom\", \"0px !important\");\n\t//    res.margin(0, 0, 0, 6);\n\t//    if (useModalEditor) {\n\t//        res.getActualField().ui().addEventListener('focus', (e) => {\n\t//            bonclick(e);\n\t//            res.getActualField().ui().blur();\n\t//        });\n\t//        res.addChild(UI.button(\"(edit)\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, null, bonclick).margin(4, 0, 0, 0));\n\t//    } else if (disabledMessage) {\n\t//        if (editorTools.aquireManager().placeholder) res.getActualField().setPlaceholder(disabledMessage);\n\t//        res.getActualField().ui().addEventListener('focus', (e) => res.getActualField().ui().blur());\n\t//    }\n\t//    if (descriptionLabel) {\n\t//        res.ui().addEventListener('mouseenter', () => {\n\t//            descriptionLabel.setStyle(\"opacity\", \"1\")\n\t//            descriptionLabel.setText(node.definition().property(name).description());\n\t//        });\n\t//        res.ui().addEventListener('mouseleave', () => {\n\t//            descriptionLabel.setStyle(\"opacity\", \"0\");\n\t//        });\n\t//    }\n\t//    return res;\n\t//}\n\tfunction getSchemaType(value) {\n\t    var schema = schemautil.createSchema(value, null);\n\t    if (!schema || !schema.getType)\n\t        return \"Invalid\";\n\t    switch (schema.getType()) {\n\t        case \"source.json\":\n\t            return \"JSON\";\n\t        case \"text.xml\":\n\t            return \"XML\";\n\t        default:\n\t            return \"Unknown type\";\n\t    }\n\t}\n\tfunction getStringValue(x) {\n\t    if (typeof x === \"object\")\n\t        return x.valueName();\n\t    else\n\t        return x;\n\t}\n\texports.getStringValue = getStringValue;\n\tfunction propertyInfo(node, name) {\n\t    var prop = node.definition().property(name);\n\t    if (prop.isValueProperty() == false)\n\t        return null;\n\t    var isMulti = prop.isMultiValue();\n\t    var required = prop.isRequired();\n\t    var value;\n\t    var values = [];\n\t    var type;\n\t    var ipath;\n\t    var rangeName = prop.range().nameId();\n\t    if (isMulti) {\n\t        values = node.attributes(name).map(function (x) { return x.value(); });\n\t        value = values.map(function (x) { return getStringValue(x); }).join(\", \");\n\t        switch (rangeName) {\n\t            case \"StringType\":\n\t                type = 'enum';\n\t                if (!node.definition().getAdapter(def.RAMLService).isUserDefined() && name == \"protocols\") {\n\t                    type = \"protocols\";\n\t                }\n\t                break;\n\t            case \"TraitRef\":\n\t                type = 'trait';\n\t                break;\n\t            default:\n\t                type = 'unknown';\n\t        }\n\t    }\n\t    else {\n\t        var attr = node.attr(name);\n\t        value = attr && attr.value() ? attr.value() : \"\";\n\t        switch (rangeName) {\n\t            case \"MarkdownString\":\n\t                type = 'markdown';\n\t                values = value.split(\"\\n\");\n\t                value = values[0];\n\t                break;\n\t            case \"SchemaString\":\n\t                type = 'schema';\n\t                if (value.indexOf(\"\\n\") >= 0) {\n\t                    values = [value];\n\t                    value = \"(\" + getSchemaType(value) + \" Schema)\";\n\t                }\n\t                break;\n\t            case \"ExampleString\":\n\t                type = 'schexample';\n\t                try {\n\t                    ipath = attr.lowLevel().includePath();\n\t                }\n\t                catch (e) {\n\t                    ipath = \"\";\n\t                }\n\t                values = [value, ipath];\n\t                value = \"Example\" + (ipath != \"\" ? \" (referenced from \" + ipath + \")\" : \"\");\n\t                break;\n\t            case \"ResourceTypeRef\":\n\t                type = \"type\";\n\t                break;\n\t            default:\n\t                type = 'string';\n\t        }\n\t        if (type == \"string\") {\n\t            if (value.indexOf(\"\\n\") >= 0) {\n\t                values = value.split(\"\\n\");\n\t                value = \"(\" + values.length + \" lines) \" + values[0].substring(0, 20) + \" ...\";\n\t                type = \"multiline\";\n\t            }\n\t            if (attr)\n\t                ipath = attr.lowLevel().includePath();\n\t            if (ipath) {\n\t                value = \"(included from \" + ipath + \")\";\n\t                type = \"include\";\n\t            }\n\t        }\n\t    }\n\t    var ret = {\n\t        value: value,\n\t        values: values,\n\t        type: type,\n\t        include: ipath,\n\t        required: required,\n\t    };\n\t    return ret;\n\t}\n\texports.propertyInfo = propertyInfo;\n\tfunction stringView(node, name) {\n\t    return getStringValue(propertyInfo(node, name).value);\n\t}\n\texports.stringView = stringView;\n\t\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar UI = __webpack_require__(17);\n\tvar rp = __webpack_require__(22);\n\tvar Opt = __webpack_require__(63);\n\tvar schemautil = rp.schema;\n\tvar SchemaRenderer = (function () {\n\t    function SchemaRenderer() {\n\t    }\n\t    SchemaRenderer.prototype.render = function (elem) {\n\t        var icon;\n\t        var tc;\n\t        switch (elem.type) {\n\t            case 'object':\n\t                icon = UI.Icon.CIRCUIT_BOARD;\n\t                tc = UI.TextClasses.INFO;\n\t                break;\n\t            case 'array':\n\t                icon = UI.Icon.LIST_UNORDERED;\n\t                tc = UI.TextClasses.ERROR;\n\t                break;\n\t            case 'unspecified':\n\t                icon = UI.Icon.QUESTION;\n\t                tc = UI.TextClasses.WARNING;\n\t                break;\n\t            default:\n\t                icon = UI.Icon.CODE;\n\t                tc = UI.TextClasses.SUCCESS;\n\t        }\n\t        return UI.hc(UI.label(elem.name + \": \", icon), UI.label(elem.type, null, tc, null).pad(4, 0));\n\t    };\n\t    return SchemaRenderer;\n\t})();\n\texports.SchemaRenderer = SchemaRenderer;\n\tfunction _schemaPreview() {\n\t    var hashkey = function (n) {\n\t        if (n == null)\n\t            return \"\";\n\t        return hashkey(n.parent) + \"::[\" + (n.name + \":\" + n.type + \"]\" + (n.children.length > 0 ? \"*\" : \"\"));\n\t    };\n\t    var treeViewer = UI.treeViewer(function (x) { return x.children; }, new SchemaRenderer(), function (x) { return x.name + \":\" + x.type; });\n\t    treeViewer.setComparator(function (x, y) { return x.name == y.name && x.type == y.type; });\n\t    return treeViewer;\n\t}\n\texports._schemaPreview = _schemaPreview;\n\tfunction getSchemaTree(name, contents) {\n\t    if (contents.type instanceof Array)\n\t        if (contents.type.indexOf('object') >= 0)\n\t            contents.type = 'object';\n\t        else if (contents.type.indexOf('array') >= 0)\n\t            contents.type = 'array';\n\t    var typeString = contents.type ? (contents.type instanceof Array ? contents.type.join(\"|\") : contents.type).toLowerCase() : 'unspecified';\n\t    var children = [];\n\t    if (contents.properties)\n\t        children = Object.keys(contents.properties).map(function (el) { return getSchemaTree(el, contents.properties[el]); });\n\t    else if (contents.items)\n\t        children = contents.items instanceof Array ? contents.items.map(function (el) { return getSchemaTree(\"item\", el); }) : getSchemaTree(\"item\", contents.items);\n\t    if (children instanceof Array == false)\n\t        children = [children];\n\t    var result = {\n\t        type: typeString,\n\t        name: name,\n\t        parent: null,\n\t        children: children\n\t    };\n\t    result.children.forEach(function (x) { return x.parent = result; });\n\t    return result;\n\t}\n\texports.getSchemaTree = getSchemaTree;\n\tfunction _updatePreview(treeView, value) {\n\t    try {\n\t        var schema = schemautil.createSchema(value, null);\n\t        if (schema == null || schema.getType == null) {\n\t            treeView.setInput({}, true);\n\t            return;\n\t        }\n\t        var schemaType = schema.getType();\n\t        var schemaModel = schemaType == \"source.json\" ? JSON.parse(value) : rootElements(value);\n\t        var schemaTree = schemaType == \"source.json\" ? getSchemaTree(\"schema\", schemaModel) : getXMLSchemaTree(schemaModel);\n\t        treeView.setInput(schemaTree, true);\n\t    }\n\t    catch (e) {\n\t        console.log(e);\n\t    }\n\t}\n\texports._updatePreview = _updatePreview;\n\tvar jsonix = __webpack_require__(58);\n\tfunction parseSchema(schema) {\n\t    var XSD_1_0 = __webpack_require__(59).XSD_1_0;\n\t    var context = new jsonix.Jsonix.Context([XSD_1_0]);\n\t    var unmarshaller = context.createUnmarshaller();\n\t    var schemaObject = unmarshaller.unmarshalString(schema);\n\t    return schemaObject;\n\t}\n\t;\n\tfunction rootElements(schema) {\n\t    var schemaObj = parseSchema(schema);\n\t    return getRootElements(schemaObj);\n\t}\n\tvar TypeDescription = (function () {\n\t    function TypeDescription(owner, _name, _isSimple, _object) {\n\t        var _this = this;\n\t        this.owner = owner;\n\t        this._name = _name;\n\t        this._isSimple = _isSimple;\n\t        this._object = _object;\n\t        this.name = function () { return _this._name; };\n\t        this.isSimple = function () { return _this._isSimple; };\n\t        this.object = function () { return _this._object; };\n\t    }\n\t    TypeDescription.prototype.isChoice = function () {\n\t        return this.object && (this.object['choice'] ||\n\t            (this.object['complexContent'] && this.object['complexContent']['choice']));\n\t    };\n\t    TypeDescription.prototype.elements = function () {\n\t        var _this = this;\n\t        var elementObjects = [];\n\t        if (this._object) {\n\t            elementObjects = this.collectElements(this._object);\n\t            if (elementObjects.length == 0) {\n\t                var complexContent = this.object['complexContent'];\n\t                if (complexContent) {\n\t                    elementObjects = this.collectElements(complexContent);\n\t                }\n\t            }\n\t        }\n\t        var result = elementObjects.map(function (x) { return new ElementDescription(_this.owner, x); });\n\t        return result;\n\t    };\n\t    TypeDescription.prototype.attributes = function () {\n\t        var _this = this;\n\t        var result = [];\n\t        var objects = [this._object];\n\t        for (var i = 0; i < objects.length; i++) {\n\t            var obj = objects[i];\n\t            if (!obj) {\n\t                continue;\n\t            }\n\t            if (obj['attributeGroup']) {\n\t                var attributeGroups = obj['attributeGroup'].filter(function (x) { return x['otherAttributes']; });\n\t                for (var j = 0; j < attributeGroups.length; j++) {\n\t                    var groupRef = attributeGroups[j]['otherAttributes']['ref'];\n\t                    var groupDef = this.owner.attributeGroups[groupRef];\n\t                    objects.push(groupDef);\n\t                }\n\t            }\n\t            if (obj['attribute']) {\n\t                obj['attribute'].forEach(function (x) { return result.push(new AttributeDescription(_this.owner, x)); });\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    TypeDescription.prototype.base = function () {\n\t        if (!this._object) {\n\t            return Opt.empty();\n\t        }\n\t        var baseObj;\n\t        if (this._object['restriction']) {\n\t            var restriction = this._object['restriction'];\n\t            baseObj = restriction['base'];\n\t        }\n\t        else if (this._object['complexContent']) {\n\t            var complexContent = this.object['complexContent'];\n\t            var resExt = complexContent['restriction'] || complexContent['extension'];\n\t            if (resExt) {\n\t                baseObj = resExt['base'];\n\t            }\n\t        }\n\t        if (!baseObj) {\n\t            return Opt.empty();\n\t        }\n\t        var typeName = extractName(baseObj);\n\t        var isSimple = false;\n\t        var typeObject;\n\t        var sType = this.owner.simpleTypes[typeName];\n\t        if (sType) {\n\t            typeObject = sType;\n\t            isSimple = true;\n\t        }\n\t        var cType = this.owner.complexTypes[typeName];\n\t        if (cType) {\n\t            typeObject = cType;\n\t        }\n\t        if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n\t            if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n\t                isSimple = true;\n\t            }\n\t        }\n\t        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n\t        return new Opt(result);\n\t    };\n\t    TypeDescription.prototype.getBaseName = function () {\n\t        var typeOpt = new Opt(this);\n\t        var result = '';\n\t        while (typeOpt.isDefined()) {\n\t            var t = typeOpt.getOrThrow();\n\t            result = t.name();\n\t            typeOpt = t.base();\n\t        }\n\t        return result;\n\t    };\n\t    TypeDescription.prototype.collectElements = function (obj) {\n\t        var result = [];\n\t        var containers = [obj['sequence'], obj['any'], obj['choice']];\n\t        for (var i = 0; i < containers.length; i++) {\n\t            var x = containers[i];\n\t            if (!x) {\n\t                continue;\n\t            }\n\t            if (x['group']) {\n\t                var groups = x['group'].filter(function (gr) { return gr['otherAttributes']; });\n\t                for (var j = 0; j < groups.length; j++) {\n\t                    var groupRef = groups[j]['otherAttributes']['ref'];\n\t                    var groupDef = this.owner.elementGroups[groupRef];\n\t                    if (groupDef) {\n\t                        if (groupDef['sequence']) {\n\t                            containers = containers.concat(groupDef['sequence']);\n\t                        }\n\t                        if (groupDef['any']) {\n\t                            containers = containers.concat(groupDef['any']);\n\t                        }\n\t                        if (groupDef['choice']) {\n\t                            containers = containers.concat(groupDef['choice']);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (x['element']) {\n\t                result = result.concat(x['element']);\n\t            }\n\t            result = result.concat(this.collectElements(x));\n\t        }\n\t        return result;\n\t    };\n\t    return TypeDescription;\n\t})();\n\tvar PropertyDescription = (function () {\n\t    function PropertyDescription(owner, _object) {\n\t        var _this = this;\n\t        this.owner = owner;\n\t        this._object = _object;\n\t        this.name = function () { return _this._object['name']; };\n\t    }\n\t    PropertyDescription.prototype.type = function () {\n\t        var typeName;\n\t        var typeObject;\n\t        var isSimple = false;\n\t        if (this._object['type']) {\n\t            var typeObj = this._object['type'];\n\t            typeName = extractName(typeObj);\n\t            var sType = this.owner.simpleTypes[typeName];\n\t            if (sType) {\n\t                typeObject = sType;\n\t                isSimple = true;\n\t            }\n\t            var cType = this.owner.complexTypes[typeName];\n\t            if (cType) {\n\t                typeObject = cType;\n\t            }\n\t            if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n\t                if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n\t                    isSimple = true;\n\t                }\n\t            }\n\t        }\n\t        else if (this._object['complexType']) {\n\t            typeObject = this._object['complexType'];\n\t        }\n\t        else if (this._object['simpleType']) {\n\t            typeObject = this._object['simpleType'];\n\t        }\n\t        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n\t        return new Opt(result);\n\t    };\n\t    PropertyDescription.prototype.optional = function () {\n\t        throw new Error(\"This method is abstract.\");\n\t    };\n\t    PropertyDescription.prototype.isArray = function () {\n\t        throw new Error(\"This method is abstract.\");\n\t    };\n\t    PropertyDescription.prototype.isAttribute = function () {\n\t        return false;\n\t    };\n\t    return PropertyDescription;\n\t})();\n\texports.PropertyDescription = PropertyDescription;\n\tvar ElementDescription = (function (_super) {\n\t    __extends(ElementDescription, _super);\n\t    function ElementDescription(owner, object) {\n\t        _super.call(this, owner, object);\n\t    }\n\t    ElementDescription.prototype.isArray = function () {\n\t        var otherAttributes = this._object['otherAttributes'];\n\t        if (!otherAttributes) {\n\t            return false;\n\t        }\n\t        var maxOccurs = otherAttributes['maxOccurs'];\n\t        if (!maxOccurs) {\n\t            return false;\n\t        }\n\t        if (maxOccurs == 'unbounded') {\n\t            return true;\n\t        }\n\t        try {\n\t            var mo = parseInt(maxOccurs);\n\t            return mo > 1;\n\t        }\n\t        catch (e) { }\n\t        return false;\n\t    };\n\t    ElementDescription.prototype.optional = function () {\n\t        var otherAttributes = this._object['otherAttributes'];\n\t        if (!otherAttributes) {\n\t            return true;\n\t        }\n\t        var minOccurs = otherAttributes['minOccurs'];\n\t        if (!minOccurs) {\n\t            return true;\n\t        }\n\t        try {\n\t            var mo = parseInt(minOccurs);\n\t            return mo == 0;\n\t        }\n\t        catch (e) {\n\t        }\n\t        return true;\n\t    };\n\t    return ElementDescription;\n\t})(PropertyDescription);\n\texports.ElementDescription = ElementDescription;\n\tfunction extractName(typeObj) {\n\t    var prefix = typeObj['prefix'];\n\t    var localPart = typeObj['localPart'];\n\t    var typeName = prefix + (prefix.length > 0 ? ':' : '') + localPart;\n\t    return typeName;\n\t}\n\t;\n\tvar AttributeDescription = (function (_super) {\n\t    __extends(AttributeDescription, _super);\n\t    function AttributeDescription(owner, object) {\n\t        _super.call(this, owner, object);\n\t    }\n\t    AttributeDescription.prototype.optional = function () {\n\t        var otherAttributes = this._object['otherAttributes'];\n\t        if (!otherAttributes) {\n\t            return false;\n\t        }\n\t        var use = otherAttributes['use'];\n\t        if (!use) {\n\t            return false;\n\t        }\n\t        return use != 'required';\n\t    };\n\t    AttributeDescription.prototype.isArray = function () {\n\t        return false;\n\t    };\n\t    AttributeDescription.prototype.isAttribute = function () {\n\t        return true;\n\t    };\n\t    return AttributeDescription;\n\t})(PropertyDescription);\n\texports.AttributeDescription = AttributeDescription;\n\tfunction getRootElements(obj) {\n\t    var _this = this;\n\t    var objValue = obj['value'];\n\t    var result = [];\n\t    if (objValue) {\n\t        var groups = objValue['group'];\n\t        if (groups) {\n\t            groups.forEach(function (x) { return _this.elementGroups[x.name] = x; });\n\t        }\n\t        var attributeGroups = objValue['attributeGroup'];\n\t        if (attributeGroups) {\n\t            attributeGroups.forEach(function (x) { return _this.attributeGroups[x.name] = x; });\n\t        }\n\t        var simpleTypes = objValue['simpleType'];\n\t        if (simpleTypes) {\n\t            simpleTypes.forEach(function (x) { return _this.simpleTypes[x.name] = x; });\n\t        }\n\t        var complexTypes = objValue['complexType'];\n\t        if (complexTypes) {\n\t            complexTypes.forEach(function (x) { return _this.complexTypes[x.name] = x; });\n\t        }\n\t        var rootElements = objValue['element'];\n\t        if (rootElements) {\n\t            result = rootElements.map(function (x) { return new ElementDescription(_this, x); });\n\t        }\n\t    }\n\t    return result;\n\t}\n\tvar XSD_2_TS_TYPE_MAP = {\n\t    \"ENTITIES\": \"string\",\n\t    \"ENTITY\": \"string\",\n\t    \"ID\": \"string\",\n\t    \"IDREF\": \"string\",\n\t    \"IDREFS\": \"string\",\n\t    \"language\": \"string\",\n\t    \"Name\": \"string\",\n\t    \"NCName\": \"string\",\n\t    \"NMTOKEN\": \"string\",\n\t    \"NMTOKENS\": \"string\",\n\t    \"normalizedString\": \"string\",\n\t    \"QName\": \"string\",\n\t    \"string\": \"string\",\n\t    \"token\": \"string\",\n\t    \"date\": \"string\",\n\t    \"dateTime\": \"string\",\n\t    \"duration\": \"string\",\n\t    \"gDay\": \"string\",\n\t    \"gMonth\": \"string\",\n\t    \"gMonthDay\": \"string\",\n\t    \"gYear\": \"string\",\n\t    \"gYearMonth\": \"string\",\n\t    \"time\": \"string\",\n\t    \"anyURI\": \"string\",\n\t    \"base64Binary\": \"string\",\n\t    \"hexBinary\": \"string\",\n\t    \"NOTATION\": \"string\",\n\t    \"boolean\": \"boolean\",\n\t    \"double\": \"number\",\n\t    \"float\": \"number\",\n\t    \"byte\": \"number\",\n\t    \"decimal\": \"number\",\n\t    \"int\": \"number\",\n\t    \"integer\": \"number\",\n\t    \"long\": \"number\",\n\t    \"negativeInteger\": \"number\",\n\t    \"nonNegativeInteger\": \"number\",\n\t    \"nonPositiveInteger\": \"number\",\n\t    \"positiveInteger\": \"number\",\n\t    \"short\": \"number\",\n\t    \"unsignedLong\": \"number\",\n\t    \"unsignedInt\": \"number\",\n\t    \"unsignedShort\": \"number\",\n\t    \"unsignedByte\": \"number\"\n\t};\n\tfunction getTSType(xmltype) {\n\t    return XSD_2_TS_TYPE_MAP[xmltype];\n\t}\n\texports.getTSType = getTSType;\n\tfunction getXMLSchemaTree(roots) {\n\t    var getSType = function (type) {\n\t        if (!type)\n\t            return 'Unknown';\n\t        type = type.substr(type.indexOf(':') + 1);\n\t        return getTSType(type);\n\t    };\n\t    return roots.map(function (root) {\n\t        var result;\n\t        var t = root.type().value();\n\t        if (root.isArray())\n\t            result = {\n\t                type: 'Array',\n\t                name: root.name(),\n\t                parent: null,\n\t                children: getXMLSchemaTree(t.elements())\n\t            };\n\t        else if (t.isSimple())\n\t            result = {\n\t                type: getSType(t.name()),\n\t                name: root.name(),\n\t                parent: null,\n\t                children: []\n\t            };\n\t        else\n\t            result = {\n\t                type: 'Object',\n\t                name: root.name(),\n\t                parent: null,\n\t                children: getXMLSchemaTree(t.elements())\n\t            };\n\t        result.children.forEach(function (x) { return x.parent = result; });\n\t        return result;\n\t    });\n\t}\n\t\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar File = (function () {\n\t    function File(path) {\n\t        this.path = path;\n\t    }\n\t    File.prototype.getPath = function () {\n\t        return this.path;\n\t    };\n\t    File.prototype.close = function () { };\n\t    return File;\n\t})();\n\texports.File = File;\n\tfunction watch(path, f) {\n\t    return { close: function () { } };\n\t}\n\texports.watch = watch;\n\t\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mime = __webpack_require__(60);\n\tmime.define({\n\t    'text/xml': ['xml']\n\t});\n\tfunction getEditorById(editorId) {\n\t    var editors = atom.workspace.getTextEditors();\n\t    for (var i = 0; i < editors.length; i++) {\n\t        var editor = editors[i];\n\t        if (String(editor.id) === editorId) {\n\t            return editor;\n\t        }\n\t    }\n\t}\n\texports.getEditorById = getEditorById;\n\tfunction getEditorByPath(path) {\n\t    var editors = atom.workspace.getTextEditors();\n\t    for (var i = 0; i < editors.length; i++) {\n\t        var editor = editors[i];\n\t        if (editor.getPath() === path) {\n\t            return editor;\n\t        }\n\t    }\n\t}\n\texports.getEditorByPath = getEditorByPath;\n\tfunction getGrammerFromMime(mimeType) {\n\t    if (mimeType == null) {\n\t        return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n\t    }\n\t    var extension = mime.extension(mimeType);\n\t    var grammars = atom.grammars.getGrammars();\n\t    for (var i = 0; i < grammars.length; i++) {\n\t        var grammar = grammars[i];\n\t        if (grammar.fileTypes.indexOf(extension) > -1) {\n\t            return grammar;\n\t        }\n\t    }\n\t    return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n\t}\n\texports.getGrammerFromMime = getGrammerFromMime;\n\t/**\n\t * Create an Atom text editor instance for syntax highlighting.\n\t *\n\t * Source: https://github.com/atom/markdown-preview/blob/6d672aca4cff48420977708c31290018622bb166/lib/renderer.coffee#L102-L126\n\t */\n\tfunction codeToEditorElement(code, grammar) {\n\t    var editorElement = document.createElement('atom-text-editor');\n\t    editorElement.setAttributeNode(document.createAttribute('gutter-hidden'));\n\t    editorElement.removeAttribute('tabindex'); // Make read-only.\n\t    var editor = editorElement.getModel();\n\t    editor.getDecorations({ class: 'cursor-line', type: 'line' })[0].destroy();\n\t    editor.setText(code);\n\t    editor.setGrammar(grammar);\n\t    return editorElement;\n\t}\n\texports.codeToEditorElement = codeToEditorElement;\n\t\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar marked = __webpack_require__(64);\n\tvar React = __webpack_require__(44);\n\tvar extend = __webpack_require__(45);\n\tvar classnames = __webpack_require__(65);\n\tvar PureComponent = __webpack_require__(66);\n\tvar pretty = __webpack_require__(67);\n\tvar rp = __webpack_require__(22);\n\tvar highLevelAst = rp.hl;\n\tvar RamlWrapper1 = rp.api10;\n\tvar RamlWrapper08 = rp.api08;\n\tvar atomUtil = __webpack_require__(53);\n\tvar services = rp.ds;\n\tvar BULLET_TEXT = '\\u00b7';\n\tvar METHOD_CLASS_MAP = {\n\t    'get': 'btn-primary',\n\t    'get?': 'btn-primary',\n\t    'post': 'btn-success',\n\t    'post?': 'btn-success',\n\t    'delete': 'btn-error',\n\t    'delete?': 'btn-error',\n\t    'put': 'btn-warning',\n\t    'put?': 'btn-warning',\n\t    'patch': 'btn-info',\n\t    'patch?': 'btn-info'\n\t};\n\t//Methods moved to the parser as: 1) Custom type guards like isApi() for each node interface and 2) RAMLVersion() method for each node.\n\t//\n\t// /**\n\t//  * Returns whether the node is instance of interface by interface name.\n\t//  * DOES NOT CHECK SUPER INTERFACES!\n\t//  * @param node\n\t//  * @param interfaceShortName - interface name, does not include namespace.\n\t//  * @param ramlVersion - optionally also checks if node belongs to \"RAML10\" or \"RAML08\" RAML.\n\t//  * @returns {boolean}\n\t//  */\n\t// function nodeInstanceOf(node : core.BasicNode, interfaceShortName : string, ramlVersion? : string) : boolean {\n\t//   var nodeKind = node.kind();\n\t//\n\t//   if (nodeKind != interfaceShortName) return false;\n\t//\n\t//   if (ramlVersion) {\n\t//     if (ramlVersion != nodeRAMLVersion(node)) return false;\n\t//   }\n\t//\n\t//   return true;\n\t// }\n\t//\n\t// function nodeInstanceOf10(node : core.BasicNode, interfaceShortName : string) {\n\t//   return nodeInstanceOf(node, interfaceShortName, \"RAML10\");\n\t// }\n\t//\n\t// function nodeInstanceOf08(node : core.BasicNode, interfaceShortName : string) {\n\t//   return nodeInstanceOf(node, interfaceShortName, \"RAML08\");\n\t// }\n\t//\n\t// /**\n\t//  * Returns node version.\n\t//  * @param node\n\t//  * @returns {string} : \"RAML10\" for RAML 1.0 and \"RAML08\" for RAML 0.8\n\t//  */\n\t// function nodeRAMLVersion(node : core.BasicNode) : string {\n\t//   return node.highLevel().definition().universe().version();\n\t// }\n\t//\n\tfunction isRAML10(node) {\n\t    return node.RAMLVersion() == \"RAML10\";\n\t}\n\tfunction isRAML08(node) {\n\t    return node.RAMLVersion() == \"RAML08\";\n\t}\n\tvar Console = (function (_super) {\n\t    __extends(Console, _super);\n\t    function Console() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Console.prototype.isSupportedNode = function (node) {\n\t        return !(RamlWrapper1.isObjectTypeDeclaration(node) ||\n\t            RamlWrapper1.isResponse(node) ||\n\t            RamlWrapper1.isTypeDeclaration(node) ||\n\t            RamlWrapper1.isLibrary(node) ||\n\t            RamlWrapper1.isSecuritySchemePart(node) ||\n\t            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n\t            RamlWrapper08.isResponse(node) ||\n\t            RamlWrapper08.isSecuritySchemePart(node) ||\n\t            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper08.isOAuth2SecurityScheme(node));\n\t    };\n\t    Console.prototype.renderNode = function (node) {\n\t        var props = extend(this.props, { node: node });\n\t        if (RamlWrapper1.isTrait(node) ||\n\t            RamlWrapper08.isTrait(node)) {\n\t            return React.createElement(Trait, props);\n\t        }\n\t        if (RamlWrapper1.isResourceType(node) ||\n\t            RamlWrapper08.isResourceType(node)) {\n\t            return React.createElement(ResourceType, props);\n\t        }\n\t        if (RamlWrapper1.isAbstractSecurityScheme(node) ||\n\t            RamlWrapper08.isAbstractSecurityScheme(node) ||\n\t            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n\t            RamlWrapper08.isOAuth2SecurityScheme(node)) {\n\t            return React.createElement(SecurityScheme, props);\n\t        }\n\t        if (RamlWrapper1.isResource(node) ||\n\t            RamlWrapper08.isResource(node)) {\n\t            return React.createElement(Resource, props);\n\t        }\n\t        if (RamlWrapper1.isDocumentationItem(node) ||\n\t            RamlWrapper08.isDocumentationItem(node)) {\n\t            return React.createElement(Documentation, props);\n\t        }\n\t        if (RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n\t            return React.createElement(Method, props);\n\t        }\n\t        if (RamlWrapper1.isApi(node) || RamlWrapper08.isApi(node) ||\n\t            RamlWrapper1.isExtension(node) || RamlWrapper1.isOverlay(node)) {\n\t            return React.createElement(Root, props);\n\t        }\n\t        // Psuedo \"404\" in case a view isn't implemented.\n\t        return React.createElement(Block, null, React.createElement(TitleText, { title: '404' }), React.createElement(Block, null, 'How did you get here? You shouldn\\'t be here! Please ', React.createElement('a', {\n\t            href: 'https://github.com/mulesoft/api-workbench/issues'\n\t        }, 'report me'), '.'), React.createElement(Block, null, React.createElement('strong', null, \"Reference: \" + node.wrapperClassName())));\n\t    };\n\t    Console.prototype.renderBreadcrumb = function (node, renderedNode) {\n\t        var _this = this;\n\t        var parts = [];\n\t        var nodes = [];\n\t        var currentNode = node;\n\t        // Render \"Errors\" as a breadcrumb.\n\t        if (this.props.errors.length) {\n\t            parts.push(React.createElement('span', { key: 'errors' }, 'Errors'));\n\t        }\n\t        else {\n\t            do {\n\t                nodes.unshift(currentNode);\n\t            } while (currentNode = currentNode.parent());\n\t            nodes.forEach(function (node, index) {\n\t                var lastNode = index === nodes.length - 1;\n\t                if (node.getKind() === highLevelAst.NodeKind.NODE &&\n\t                    _this.isSupportedNode(node.wrapperNode()) &&\n\t                    node.wrapperNode() !== renderedNode) {\n\t                    parts.push(React.createElement('a', {\n\t                        key: node.id(),\n\t                        onClick: function () { return _this.props.navigate(node.id()); }\n\t                    }, getNodeLabel(node)));\n\t                }\n\t                else {\n\t                    parts.push(React.createElement('span', { key: \"value\" + index }, getNodeLabel(node)));\n\t                }\n\t                if (!lastNode) {\n\t                    parts.push(React.createElement('span', { key: \"sep\" + index }, \" \" + BULLET_TEXT + \" \"));\n\t                }\n\t            });\n\t        }\n\t        return React.createElement(Block, { className: 'padded', style: { margin: 0, flex: '0 0 auto' } }, parts);\n\t    };\n\t    Console.prototype.getCurrentNode = function () {\n\t        var raml = this.props.raml;\n\t        var state = this.props.state;\n\t        if (!raml) {\n\t            return null;\n\t        }\n\t        if (state.view.id) {\n\t            var idNode = raml.highLevel().findById(state.view.id);\n\t            if (idNode) {\n\t                return idNode;\n\t            }\n\t        }\n\t        return raml.highLevel();\n\t    };\n\t    Console.prototype.wrapBody = function (element) {\n\t        return React.createElement(Block, {\n\t            id: 'raml-console-view',\n\t            className: 'padded',\n\t            style: {\n\t                overflow: 'auto',\n\t                height: '100%'\n\t            }\n\t        }, element);\n\t    };\n\t    Console.prototype.wrapContent = function (breadcrumb, element) {\n\t        return React.createElement(Block, { style: { height: '100%', display: 'flex', flexDirection: 'column' } }, breadcrumb, this.wrapBody(element));\n\t    };\n\t    Console.prototype.render = function () {\n\t        if (!this.props.loaded) {\n\t            return React.createElement(Loading);\n\t        }\n\t        var highLevelNode = this.getCurrentNode();\n\t        if (!highLevelNode) {\n\t            return React.createElement(Block, null, React.createElement(TitleText, { title: 'Unsupported fragment' }), React.createElement(Block, null, 'This type of fragment is not supported. Only APIs, Overlays and Extensions can be displayed.'));\n\t        }\n\t        var node;\n\t        if (this.props.errors.length) {\n\t            return this.wrapBody(React.createElement(Errors, { errors: this.props.errors }));\n\t        }\n\t        if (!highLevelNode.isElement()) {\n\t            var referencedNode = highLevelNode.findReferencedValue();\n\t            if (!referencedNode) {\n\t                return this.wrapContent(this.renderBreadcrumb(highLevelNode), React.createElement(MissingReference, extend(this.props, { highLevelNode: highLevelNode })));\n\t            }\n\t            node = referencedNode.wrapperNode();\n\t        }\n\t        else {\n\t            node = highLevelNode.wrapperNode();\n\t        }\n\t        // Traverse upwards to rendered nodes.\n\t        while (!this.isSupportedNode(node)) {\n\t            node = node.parent();\n\t        }\n\t        return this.wrapContent(this.renderBreadcrumb(highLevelNode, node), this.renderNode(node));\n\t    };\n\t    return Console;\n\t})(PureComponent);\n\texports.Console = Console;\n\tvar Errors = (function (_super) {\n\t    __extends(Errors, _super);\n\t    function Errors() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Errors.prototype.render = function () {\n\t        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Errors' }), React.createElement('ul', null, this.props.errors.map(function (error, index) {\n\t            // TODO(blakeembrey): Use `error.mark` to open text editor to issue.\n\t            return React.createElement('li', { key: index }, error.message);\n\t        })));\n\t    };\n\t    return Errors;\n\t})(PureComponent);\n\tvar Root = (function (_super) {\n\t    __extends(Root, _super);\n\t    function Root() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Root.prototype.render = function () {\n\t        var _this = this;\n\t        var raml = this.props.node;\n\t        return React.createElement('div', null, React.createElement(TitleText, { title: raml.title() }), React.createElement(ResourceTypesAndTraits, this.props), raml.documentation().length ? React.createElement(InsetPanel, null, React.createElement('h3', { style: { marginTop: 0 } }, 'Documentation'), React.createElement('ul', null, raml.documentation().map(function (documentation) {\n\t            var id = documentation.highLevel().id();\n\t            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, documentation.title()));\n\t        }))) : null, React.createElement(ResourceChildren, this.props));\n\t    };\n\t    return Root;\n\t})(PureComponent);\n\tvar MethodButton = (function (_super) {\n\t    __extends(MethodButton, _super);\n\t    function MethodButton() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MethodButton.prototype.render = function () {\n\t        var _this = this;\n\t        var verb = this.props.method.method();\n\t        return React.createElement('div', {\n\t            onClick: function () { return _this.props.navigate(_this.props.method.highLevel().id()); },\n\t            className: classnames('btn inline-block', METHOD_CLASS_MAP[verb])\n\t        }, verb.toUpperCase());\n\t    };\n\t    return MethodButton;\n\t})(PureComponent);\n\tvar MissingReference = (function (_super) {\n\t    __extends(MissingReference, _super);\n\t    function MissingReference() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MissingReference.prototype.render = function () {\n\t        var node = this.props.highLevelNode;\n\t        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Missing Reference' }), 'Unable to resolve reference: ', React.createElement('strong', null, node.id()));\n\t    };\n\t    return MissingReference;\n\t})(PureComponent);\n\t// class GlobalSchema extends PureComponent<NodeProps<RamlWrapper1.GlobalSchema>, {}> {\n\t//\n\t//   render () {\n\t//     var node = this.props.node\n\t//\n\t//     return React.createElement(\n\t//       Block,\n\t//       null,\n\t//       React.createElement(TitleText, { node, title: node.key(), type: 'Schema' }),\n\t//       React.createElement(Markup, { content: node.value().value(), setState: this.props.setState, state: this.props.state })\n\t//     )\n\t//   }\n\t//\n\t// }\n\tvar Loading = (function (_super) {\n\t    __extends(Loading, _super);\n\t    function Loading() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Loading.prototype.render = function () {\n\t        return React.createElement(Block, null, React.createElement('div', {\n\t            className: 'loading-spinner-medium inline-block'\n\t        }), React.createElement('span', {\n\t            className: 'inline-block'\n\t        }, 'Loading RAML\\u2026'));\n\t    };\n\t    return Loading;\n\t})(PureComponent);\n\tvar Trait = (function (_super) {\n\t    __extends(Trait, _super);\n\t    function Trait() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Trait.prototype.render = function () {\n\t        var node = this.props.node;\n\t        var references = node.highLevel().findReferences();\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Trait' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractMethod, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n\t    };\n\t    return Trait;\n\t})(PureComponent);\n\tvar TitleText = (function (_super) {\n\t    __extends(TitleText, _super);\n\t    function TitleText() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TitleText.prototype.render = function () {\n\t        var title = this.props.title;\n\t        return React.createElement('h1', { style: { marginTop: 0 } }, this.props.node ? React.createElement(OpenInEditor, { node: this.props.node }, title) : title, this.props.type ? React.createElement('small', null, \" (\" + this.props.type + \")\") : null);\n\t    };\n\t    return TitleText;\n\t})(PureComponent);\n\tvar SimpleText = (function (_super) {\n\t    __extends(SimpleText, _super);\n\t    function SimpleText() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SimpleText.prototype.render = function () {\n\t        var text = this.props.text;\n\t        if (!text) {\n\t            return null;\n\t        }\n\t        return React.createElement(Block, null, React.createElement('strong', null, this.props.title + \": \"), text);\n\t    };\n\t    return SimpleText;\n\t})(PureComponent);\n\tvar References = (function (_super) {\n\t    __extends(References, _super);\n\t    function References() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    References.prototype.formatNode = function (node) {\n\t        var parts = [];\n\t        do {\n\t            parts.unshift(getNodeLabel(node));\n\t        } while (node = node.parent());\n\t        return parts.join(\" \" + BULLET_TEXT + \" \");\n\t    };\n\t    References.prototype.render = function () {\n\t        var _this = this;\n\t        var references = this.props.references;\n\t        if (!references.length) {\n\t            return null;\n\t        }\n\t        return React.createElement(InsetPanel, null, React.createElement('h3', null, \"References (\" + references.length + \" Found)\"), React.createElement('ul', null, references.map(function (reference) {\n\t            var id = reference.id();\n\t            var parent = reference.parent();\n\t            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(parent.id()); } }, _this.formatNode(parent)));\n\t        })));\n\t    };\n\t    return References;\n\t})(PureComponent);\n\tvar AbstractResource = (function (_super) {\n\t    __extends(AbstractResource, _super);\n\t    function AbstractResource() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AbstractResource.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        var navigate = this.props.navigate;\n\t        var methods = node.methods();\n\t        var uriParameters = node.uriParameters();\n\t        return React.createElement(Block, null, React.createElement(ResourceTypesAndTraits, this.props), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), methods.length ? React.createElement(Block, null, methods.map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })) : null, React.createElement(ParametersBlock, { parameters: uriParameters, title: 'URI Parameters', navigate: navigate }));\n\t    };\n\t    return AbstractResource;\n\t})(PureComponent);\n\tvar ResourceType = (function (_super) {\n\t    __extends(ResourceType, _super);\n\t    function ResourceType() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ResourceType.prototype.render = function () {\n\t        var node = this.props.node;\n\t        var references = node.highLevel().findReferences();\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Resource Type' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractResource, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n\t    };\n\t    return ResourceType;\n\t})(PureComponent);\n\tvar SecurityScheme = (function (_super) {\n\t    __extends(SecurityScheme, _super);\n\t    function SecurityScheme() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SecurityScheme.prototype.render = function () {\n\t        var node = this.props.node;\n\t        var references = node.highLevel().findReferences();\n\t        // TODO(blakeembrey): Render `settings`.\n\t        var displayName = \"\";\n\t        if (isRAML08(node)) {\n\t            displayName = node.name();\n\t        }\n\t        else {\n\t            displayName = node.displayName();\n\t        }\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Security Scheme' }), React.createElement(SimpleText, { title: 'Type', text: node.type() }), React.createElement(SimpleText, { title: 'Display Name', text: displayName }), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), React.createElement(AbstractMethod, extend(this.props, { node: node.describedBy() })), React.createElement(References, { references: references, navigate: this.props.navigate }));\n\t    };\n\t    return SecurityScheme;\n\t})(PureComponent);\n\tvar Resource = (function (_super) {\n\t    __extends(Resource, _super);\n\t    function Resource() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Resource.prototype.render = function () {\n\t        var node = this.props.node;\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.relativeUri().value(), type: 'Resource' }), React.createElement(AbstractResource, this.props), React.createElement(ResourceChildren, this.props));\n\t    };\n\t    return Resource;\n\t})(PureComponent);\n\tvar ParameterInfo = (function (_super) {\n\t    __extends(ParameterInfo, _super);\n\t    function ParameterInfo() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ParameterInfo.prototype.render = function () {\n\t        var node = this.props.node;\n\t        if (node == null) {\n\t            return null;\n\t        }\n\t        var nodeType = node.type();\n\t        if (!nodeType)\n\t            nodeType = \"string\";\n\t        return React.createElement(Block, null, React.createElement(Block, null, React.createElement('span', {\n\t            key: nodeType,\n\t            className: 'highlight',\n\t            style: { marginRight: 5 }\n\t        }, nodeType)));\n\t    };\n\t    return ParameterInfo;\n\t})(PureComponent);\n\tvar TypeInfo = (function (_super) {\n\t    __extends(TypeInfo, _super);\n\t    function TypeInfo() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TypeInfo.prototype.hasNamedSuperTypes = function (type) {\n\t        var superTypes = type.superTypes();\n\t        if (!superTypes)\n\t            return false;\n\t        var namedTypeFound = false;\n\t        superTypes.forEach(function (superType) {\n\t            if (superType.nameId() && superType.nameId().indexOf(\"application/\") != 0)\n\t                namedTypeFound = true;\n\t        });\n\t        return namedTypeFound;\n\t    };\n\t    TypeInfo.prototype.renderDefinition = function (definition, renderNameId) {\n\t        return React.createElement(Block, null, \n\t        // TODO(blakeembrey): Fix `renderNameId` check, currently hacky because\n\t        // the media type is being printed out sometimes.\n\t        renderNameId ? React.createElement(Block, null, React.createElement('span', {\n\t            className: 'highlight'\n\t        }, definition.nameId())) : null, this.hasNamedSuperTypes(definition) ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Super Types:')), definition.superTypes().map(function (x) {\n\t            return React.createElement('span', {\n\t                className: 'highlight',\n\t                style: { marginRight: 5 }\n\t            }, x.nameId());\n\t        })) : null, definition.allProperties().length ? React.createElement(Block, null, React.createElement('h5', null, 'Properties'), definition.allProperties().map(function (property) {\n\t            return React.createElement(Block, { key: property.nameId() }, React.createElement(Block, null, React.createElement('strong', null, property.nameId()), property.isRequired() ? ' (required)' : ''), React.createElement(Block, null, property.description()));\n\t        })) : null, definition.hasUnionInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Left: ')), this.renderDefinition(definition.unionInHierarchy().leftType(), true), React.createElement(Block, null, React.createElement('strong', null, 'Right: ')), this.renderDefinition(definition.unionInHierarchy().rightType(), true)) : null, definition.hasArrayInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Item: ')), this.renderDefinition(definition.arrayInHierarchy().componentType(), true)) : null);\n\t    };\n\t    TypeInfo.prototype.render = function () {\n\t        var node = this.props.node;\n\t        // Array items can be `null`.\n\t        if (node == null) {\n\t            return null;\n\t        }\n\t        var definition = node.runtimeDefinition();\n\t        if (definition && definition.hasGenuineUserDefinedTypeInHierarchy()\n\t            && !definition.isGenuineUserDefinedType()) {\n\t            definition = definition.genuineUserDefinedTypeInHierarchy();\n\t        }\n\t        return React.createElement(Block, null, typeof node.type === 'function' ? React.createElement(Block, null, node.type().map(function (type) {\n\t            return React.createElement('span', {\n\t                key: type,\n\t                className: 'highlight',\n\t                style: { marginRight: 5 }\n\t            }, type);\n\t        })) : null, this.renderDefinition(definition, false));\n\t    };\n\t    return TypeInfo;\n\t})(PureComponent);\n\tvar ParametersBlock = (function (_super) {\n\t    __extends(ParametersBlock, _super);\n\t    function ParametersBlock() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ParametersBlock.prototype.summary = function (param) {\n\t        var parts = [];\n\t        if (RamlWrapper1.isFileTypeDeclaration(param) /*param.wrapperClassName() === 'FileTypeDeclarationImpl'*/) {\n\t            if (param.fileTypes()) {\n\t                parts.push(\"fileTypes: \" + param.fileTypes());\n\t            }\n\t            if (param.minLength()) {\n\t                parts.push(\"minLength: \" + param.minLength());\n\t            }\n\t            if (param.maxLength()) {\n\t                parts.push(\"maxLength: \" + param.maxLength());\n\t            }\n\t        }\n\t        if (RamlWrapper1.isIntegerTypeDeclaration(param) /*param.wrapperClassName() === 'IntegerTypeDeclarationImpl'*/) {\n\t            if (param.minimum() != null) {\n\t                parts.push(\"minimum: \" + param.minimum());\n\t            }\n\t            if (param.maximum() != null) {\n\t                parts.push(\"maximum: \" + param.maximum());\n\t            }\n\t        }\n\t        if (param.required()) {\n\t            parts.push('required');\n\t        }\n\t        if (param.repeat()) {\n\t            parts.push('repeat');\n\t        }\n\t        return parts.join(', ');\n\t    };\n\t    ParametersBlock.prototype.render = function () {\n\t        var _this = this;\n\t        if (!this.props.parameters.length) {\n\t            return null;\n\t        }\n\t        var navigate = this.props.navigate;\n\t        return React.createElement(Block, null, React.createElement('h3', null, this.props.title), this.props.parameters.map(function (parameter) {\n\t            return React.createElement(Block, { key: parameter.name() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: parameter }, parameter.name())), React.createElement(isRAML10(parameter) ? TypeInfo : ParameterInfo, { node: parameter }), React.createElement(Block, null, React.createElement('strong', null, _this.summary(parameter))), React.createElement(MarkdownBlock, { content: (parameter.description() ? parameter.description().value() : null) }));\n\t        }));\n\t    };\n\t    return ParametersBlock;\n\t})(PureComponent);\n\tvar ResourceChildren = (function (_super) {\n\t    __extends(ResourceChildren, _super);\n\t    function ResourceChildren() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ResourceChildren.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        return React.createElement(Block, null, node.resources().map(function (resource) {\n\t            var id = resource.highLevel().id();\n\t            var children = resource.resources().length;\n\t            return React.createElement(InsetPanel, { key: id }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: resource }, resource.completeRelativeUri()), ' ', children ? React.createElement('small', null, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, \"View \" + children + \" more \" + plural(children, 'resource', 'resources'))) : null), React.createElement(MarkdownBlock, {\n\t                content: (resource.description() ? resource.description().value() : null)\n\t            }), React.createElement(Block, null, resource.methods().map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })));\n\t        }));\n\t    };\n\t    return ResourceChildren;\n\t})(PureComponent);\n\tvar Documentation = (function (_super) {\n\t    __extends(Documentation, _super);\n\t    function Documentation() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Documentation.prototype.render = function () {\n\t        var node = this.props.node;\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.title(), type: 'Documentation' }), React.createElement(MarkdownBlock, { content: (this.props.node.content() ? this.props.node.content().value() : null) }));\n\t    };\n\t    return Documentation;\n\t})(PureComponent);\n\tvar AbstractMethod = (function (_super) {\n\t    __extends(AbstractMethod, _super);\n\t    function AbstractMethod() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AbstractMethod.prototype.renderBody = function (body) {\n\t        // TODO(blakeembrey): Render more properties from `ObjectField`.\n\t        var parts = [];\n\t        //link to open body in the editor\n\t        parts.push(React.createElement('h4', null, React.createElement(OpenInEditor, { node: body }, body.name())));\n\t        //type block for 1.0 raml\n\t        if (isRAML10(body)) {\n\t            parts.push(React.createElement(TypeInfo, { node: body }));\n\t        }\n\t        //if there is schema, we render it\n\t        //TODO for 1.0 case this should be replaced with external type rendering in TypeInfo\n\t        var schemaPart = this.createSchemaPart(body);\n\t        if (schemaPart)\n\t            parts.push(schemaPart);\n\t        //adding examples if available\n\t        parts.push(this.createExampleParts(body));\n\t        return React.createElement(Block, { key: body.name() }, parts);\n\t    };\n\t    AbstractMethod.prototype.exampleToString = function (example) {\n\t        var exampleValue = example.value();\n\t        if (exampleValue == null)\n\t            return null;\n\t        if (typeof (exampleValue) == \"string\") {\n\t            return exampleValue;\n\t        }\n\t        return JSON.stringify(exampleValue, null, 2);\n\t    };\n\t    AbstractMethod.prototype.createExampleParts = function (body) {\n\t        var _this = this;\n\t        if (isRAML10(body)) {\n\t            var bodyType = body;\n\t            var examples = bodyType.examples();\n\t            if (examples && examples.length > 0) {\n\t                return examples.map(function (example) {\n\t                    var exampleName = example.name() ? example.name() : \"Example\";\n\t                    var displayName = example.displayName() ? example.displayName() : exampleName;\n\t                    return React.createElement(MarkupBlock, {\n\t                        key: displayName,\n\t                        content: _this.exampleToString(example),\n\t                        title: \"Example\",\n\t                        name: exampleName,\n\t                        mime: body.name(),\n\t                        setState: _this.props.setState,\n\t                        state: _this.props.state\n\t                    });\n\t                });\n\t            }\n\t            var singleExampleNode = bodyType.example();\n\t            var singleExampleContent = singleExampleNode ? this.exampleToString(singleExampleNode) : null;\n\t            if (singleExampleContent && singleExampleContent != \"null\" && typeof (singleExampleContent) == \"string\") {\n\t                return [React.createElement(MarkupBlock, {\n\t                        content: singleExampleContent,\n\t                        title: 'Example',\n\t                        mime: body.name(),\n\t                        setState: this.props.setState,\n\t                        state: this.props.state\n\t                    })];\n\t            }\n\t        }\n\t        else if (RamlWrapper08.isBodyLike(body)) {\n\t            var exampleNode = body.example();\n\t            if (!exampleNode)\n\t                return [];\n\t            var exampleContent = exampleNode.value();\n\t            if (!exampleContent)\n\t                return [];\n\t            return [React.createElement(MarkupBlock, {\n\t                    content: exampleContent,\n\t                    title: 'Example',\n\t                    mime: body.name(),\n\t                    setState: this.props.setState,\n\t                    state: this.props.state\n\t                })];\n\t        }\n\t        return [];\n\t    };\n\t    AbstractMethod.prototype.createSchemaPart = function (body) {\n\t        var schemaName = null;\n\t        var schemaContent = null;\n\t        if (RamlWrapper08.isBodyLike(body)) {\n\t            schemaName = body.schema() ? body.schema().value() : \"\";\n\t            //this is probably not an external scheme reference, but inplace schema.\n\t            if (!schemaName || schemaName.indexOf(\"{\") != -1 && schemaName.indexOf(\"}\") != -1)\n\t                schemaName = \"\";\n\t            schemaContent = body.schemaContent();\n\t        }\n\t        else if (isRAML10(body)) {\n\t            var bodyAsType = body;\n\t            if (body.runtimeType() && bodyAsType.runtimeType().hasExternalInHierarchy()) {\n\t                var externalType = bodyAsType.runtimeType().externalInHierarchy();\n\t                if (externalType) {\n\t                    schemaName = body.runtimeType().superTypes() != null && body.runtimeType().superTypes().length == 1 &&\n\t                        body.runtimeType().superTypes()[0].nameId();\n\t                    schemaContent = externalType.schema();\n\t                }\n\t            }\n\t        }\n\t        if (schemaContent) {\n\t            return React.createElement(MarkupBlock, {\n\t                key: undefined,\n\t                content: schemaContent,\n\t                title: 'Schema',\n\t                mime: body.name(),\n\t                name: schemaName,\n\t                setState: this.props.setState,\n\t                state: this.props.state\n\t            });\n\t        }\n\t        return null;\n\t    };\n\t    AbstractMethod.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        var navigate = this.props.navigate;\n\t        if (!node) {\n\t            return null;\n\t        }\n\t        var methodBodies = node.body();\n\t        return React.createElement(Block, null, React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), node.queryParameters().length ? React.createElement(InsetPanel, null, React.createElement(ParametersBlock, {\n\t            parameters: node.queryParameters(),\n\t            title: 'Query Parameters',\n\t            navigate: navigate\n\t        })) : null, React.createElement(ParametersBlock, {\n\t            parameters: node.headers(),\n\t            title: 'Headers',\n\t            navigate: navigate\n\t        }), methodBodies.length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Body'), methodBodies.map(function (body) { return _this.renderBody(body); })) : null, node.responses().length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Responses'), node.responses().map(function (response) {\n\t            return React.createElement(Block, { key: response.code().value() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: response.code() }, response.code().value())), React.createElement(MarkdownBlock, { content: (response.description() ? response.description().value() : null) }), React.createElement(ParametersBlock, {\n\t                parameters: response.headers(),\n\t                title: 'Headers',\n\t                navigate: navigate\n\t            }), response.body().map(function (body) { return _this.renderBody(body); }));\n\t        })) : null);\n\t    };\n\t    return AbstractMethod;\n\t})(PureComponent);\n\tvar Method = (function (_super) {\n\t    __extends(Method, _super);\n\t    function Method() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Method.prototype.render = function () {\n\t        var props = this.props;\n\t        var node = props.node;\n\t        var demo = props.state.view.demo;\n\t        var canDemo = node.parent().wrapperClassName() === 'ResourceImpl';\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.method().toUpperCase(), type: 'Method' }), React.createElement(ResourceTypesAndTraits, props), canDemo ? React.createElement(Block, null, React.createElement('div', {\n\t            className: 'btn btn-primary',\n\t            onClick: function () { return props.navigate({ demo: !demo }); }\n\t        }, demo ? 'Read Documentation' : 'Make an API Request')) : null, canDemo && demo ? React.createElement(MethodDemo, props) : React.createElement(AbstractMethod, props));\n\t    };\n\t    return Method;\n\t})(PureComponent);\n\tvar MethodDemo = (function (_super) {\n\t    __extends(MethodDemo, _super);\n\t    function MethodDemo() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MethodDemo.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        var method = node.method();\n\t        var contentType = this.props.state.body;\n\t        var securityScheme = this.props.state.securityScheme;\n\t        var progress = this.props.pageState.requestProgress;\n\t        var bodies = node.body().map(function (x) { return x.name(); });\n\t        var securitySchemes = node.allSecuredBy().map(function (x) { return x.securityScheme(); });\n\t        var currentSecurityScheme = securitySchemes.filter(function (x) { return x != null && x.name() === securityScheme; })[0];\n\t        return React.createElement(Block, null, securitySchemes.length ? React.createElement(Block, null, React.createElement('h3', null, 'Security Scheme'), React.createElement(Block, null, React.createElement('select', {\n\t            onChange: function (e) { return _this.props.setState({ securityScheme: e.target.value }); },\n\t            className: 'form-control',\n\t            value: securityScheme\n\t        }, securitySchemes.map(function (x) {\n\t            var name = x != null ? x.name() : 'null';\n\t            return React.createElement('option', { key: name, value: x == null ? '' : x.name() }, name);\n\t        }))), currentSecurityScheme ? React.createElement(Block, null, React.createElement(EditParameters, {\n\t            title: undefined,\n\t            prefix: \"Security Scheme Query Parameter\",\n\t            parameters: currentSecurityScheme.describedBy().queryParameters(),\n\t            values: this.props.state.queryParameters,\n\t            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n\t        }), React.createElement(EditParameters, {\n\t            title: undefined,\n\t            prefix: \"Security Scheme Header\",\n\t            parameters: currentSecurityScheme.describedBy().headers(),\n\t            values: this.props.state.headers,\n\t            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n\t        })) : null) : null, React.createElement(EditParameters, {\n\t            title: 'Base URI Parameters',\n\t            prefix: undefined,\n\t            parameters: node.ownerApi().allBaseUriParameters(),\n\t            values: this.props.state.baseUriParameters,\n\t            change: function (name, value) { return _this.props.setParameter('baseUriParameters', name, value); }\n\t        }), null, React.createElement(EditParameters, {\n\t            title: 'URI Parameters',\n\t            prefix: undefined,\n\t            parameters: node.parent().allUriParameters(),\n\t            values: this.props.state.uriParameters,\n\t            change: function (name, value) { return _this.props.setParameter('uriParameters', name, value); }\n\t        }), React.createElement(EditParameters, {\n\t            title: 'Query Parameters',\n\t            prefix: undefined,\n\t            parameters: node.queryParameters(),\n\t            values: this.props.state.queryParameters,\n\t            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n\t        }), React.createElement(EditParameters, {\n\t            title: 'Headers',\n\t            prefix: undefined,\n\t            parameters: node.headers(),\n\t            values: this.props.state.headers,\n\t            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n\t        }), bodies.length ? React.createElement(Block, null, React.createElement('h3', null, 'Body'), React.createElement(Block, null, React.createElement('select', {\n\t            onChange: function (e) { return _this.props.setState({ body: e.target.value }); },\n\t            className: 'form-control',\n\t            value: contentType\n\t        }, bodies.map(function (x) { return React.createElement('option', { key: x }, x); }))), React.createElement(TextEditor, {\n\t            mini: false,\n\t            value: this.props.state.bodies[contentType],\n\t            onChange: function (body) { return _this.props.setParameter('bodies', contentType, body); }\n\t        })) : null, React.createElement(Block, null, React.createElement('div', {\n\t            className: classnames('btn inline-block', METHOD_CLASS_MAP[method]),\n\t            onClick: function () { return _this.props.execRequest(); }\n\t        }, method.toUpperCase()), progress == null ? null : React.createElement('progress', {\n\t            style: { marginLeft: 5 },\n\t            className: 'inline-block',\n\t            max: isNaN(progress) ? null : '1',\n\t            value: isNaN(progress) ? null : String(progress)\n\t        })), React.createElement(Response, this.props));\n\t    };\n\t    return MethodDemo;\n\t})(PureComponent);\n\tvar Response = (function (_super) {\n\t    __extends(Response, _super);\n\t    function Response() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Response.prototype.render = function () {\n\t        var error = this.props.pageState.requestError;\n\t        var response = this.props.pageState.requestResponse;\n\t        if (error) {\n\t            return React.createElement(Block, { className: 'text-error' }, error);\n\t        }\n\t        if (response) {\n\t            var mime = getCaseless(response.headers, 'content-type');\n\t            // readonly: boolean\n\t            // grammar: any\n\t            // gutter: boolean\n\t            // mini: boolean\n\t            // value: string\n\t            // placeholder: string\n\t            // onChange: (value: string) => any\n\t            return React.createElement(Block, null, React.createElement('h3', null, 'Response'), React.createElement(Block, null, React.createElement('div', null, React.createElement('strong', null, 'Status Code: '), response.status), React.createElement('div', null, React.createElement('strong', null, 'Status Text: '), response.statusText), React.createElement('div', null, React.createElement('strong', null, 'URL: '), response.url)), React.createElement(Block, null, React.createElement('h4', null, 'Headers'), React.createElement(Block, null, response.rawHeaders.map(function (value, index) {\n\t                if (index % 2 === 0) {\n\t                    return React.createElement('strong', { key: index }, value + \": \");\n\t                }\n\t                return React.createElement('span', { key: index }, value, React.createElement('br'));\n\t            }))), response.body ? React.createElement(Block, null, React.createElement('h4', null, 'Body'), React.createElement(Markup, {\n\t                content: response.body,\n\t                mime: mime,\n\t                setState: this.props.setState,\n\t                state: this.props.state\n\t            })) : null);\n\t        }\n\t        return null;\n\t    };\n\t    return Response;\n\t})(PureComponent);\n\tvar EditParameters = (function (_super) {\n\t    __extends(EditParameters, _super);\n\t    function EditParameters() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    EditParameters.prototype.render = function () {\n\t        var _this = this;\n\t        var values = this.props.values || {};\n\t        var params = this.props.parameters;\n\t        if (!params.length) {\n\t            return null;\n\t        }\n\t        return React.createElement(Block, null, this.props.title ? React.createElement('h3', {\n\t            className: 'sub-title'\n\t        }, this.props.title) : null, params.map(function (parameter) {\n\t            var name = parameter.name();\n\t            var input;\n\t            var value = values[name];\n\t            var label = _this.props.prefix == null ? name : _this.props.prefix + \": \" + name;\n\t            input = React.createElement(TextEditor, {\n\t                mini: true,\n\t                value: value,\n\t                placeholder: parameter.default(),\n\t                onChange: function (value) { return _this.props.change(name, value); }\n\t            });\n\t            // if (definition.enum().getOrElse([]).length === 0) {\n\t            //   input = React.createElement(TextEditor, {\n\t            //     value: currentValue,\n\t            //     placeholder: definition.default().getOrElse(''),\n\t            //     onChange: (value: string) => this.props.change(name, value)\n\t            //   })\n\t            // } else {\n\t            //   input = React.createElement(\n\t            //     'select',\n\t            //     {\n\t            //       onChange: (e) => this.props.change(name, e.target.value),\n\t            //       className: 'form-control',\n\t            //       value: currentValue\n\t            //     },\n\t            //     definition.required() ? null : React.createElement('option'),\n\t            //     definition.enum().getOrElse([])\n\t            //       .filter((value) => value !== '')\n\t            //       .map((value, index) => {\n\t            //         return React.createElement('option', {\n\t            //           value: String(value),\n\t            //           key: index\n\t            //         }, String(value))\n\t            //       })\n\t            //   )\n\t            // }\n\t            return React.createElement(Block, { key: name }, React.createElement('label', null, label, parameter.required() ? ' *' : ''), input);\n\t        }));\n\t    };\n\t    return EditParameters;\n\t})(PureComponent);\n\tvar TextEditor = (function (_super) {\n\t    __extends(TextEditor, _super);\n\t    function TextEditor() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TextEditor.prototype.componentDidMount = function () {\n\t        var editor = this.editor = document.createElement('atom-text-editor');\n\t        this.updateModel(this.props);\n\t        this.refs.container.getDOMNode().appendChild(editor);\n\t    };\n\t    TextEditor.prototype.updateModel = function (props) {\n\t        var editor = this.editor;\n\t        var model = editor.getModel();\n\t        this.cleanup();\n\t        model.setMini(props.mini);\n\t        model.setPlaceholderText(props.placeholder);\n\t        model.setGrammar(props.grammar);\n\t        model.setText(props.value || '');\n\t        if (props.readonly) {\n\t            editor.removeAttribute('tabindex');\n\t        }\n\t        else {\n\t            editor.setAttribute('tabindex', '0');\n\t        }\n\t        if (props.gutter === false) {\n\t            editor.setAttribute('gutter-hidden', '');\n\t        }\n\t        else {\n\t            editor.removeAttribute('gutter-hidden');\n\t        }\n\t        if (props.onChange) {\n\t            this.disposable = model.onDidChange(function () {\n\t                props.onChange(model.getText());\n\t            });\n\t        }\n\t    };\n\t    TextEditor.prototype.cleanup = function () {\n\t        if (this.disposable) {\n\t            this.disposable.dispose();\n\t            this.disposable = null;\n\t        }\n\t    };\n\t    TextEditor.prototype.componentWillUnmount = function () {\n\t        this.cleanup();\n\t    };\n\t    TextEditor.prototype.componentDidUpdate = function () {\n\t        this.updateModel(this.props);\n\t    };\n\t    TextEditor.prototype.render = function () {\n\t        return React.createElement('div', { ref: 'container' });\n\t    };\n\t    return TextEditor;\n\t})(PureComponent);\n\tvar MarkupBlock = (function (_super) {\n\t    __extends(MarkupBlock, _super);\n\t    function MarkupBlock() {\n\t        _super.apply(this, arguments);\n\t        this.state = { visible: false };\n\t    }\n\t    MarkupBlock.prototype.render = function () {\n\t        var _this = this;\n\t        if (!this.props.content) {\n\t            return null;\n\t        }\n\t        var visible = this.state.visible;\n\t        return React.createElement(Block, { key: this.props.key }, React.createElement('a', { onClick: function () { return _this.setState({ visible: !visible }); } }, (visible ? 'Hide' : 'Show') + \" \" + this.props.title), this.props.name ? \" (\" + this.props.name + \")\" : null, visible ? React.createElement('div', { style: { marginTop: 5 } }, React.createElement(Markup, this.props)) : null);\n\t    };\n\t    return MarkupBlock;\n\t})(PureComponent);\n\tvar Markup = (function (_super) {\n\t    __extends(Markup, _super);\n\t    function Markup() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Markup.prototype.render = function () {\n\t        var _this = this;\n\t        var grammar = atomUtil.getGrammerFromMime(this.props.mime);\n\t        var content = this.props.content;\n\t        var isXml = grammar.fileTypes.indexOf('xml') > -1;\n\t        var isJson = grammar.fileTypes.indexOf('json') > -1;\n\t        var isCss = grammar.fileTypes.indexOf('css') > -1;\n\t        var canPrettify = isXml || isJson || isCss;\n\t        if (this.props.state.pretty) {\n\t            try {\n\t                if (isXml) {\n\t                    content = pretty.pd.xml(content);\n\t                }\n\t                else if (isJson) {\n\t                    content = pretty.pd.json(content);\n\t                }\n\t                else if (isCss) {\n\t                    content = pretty.pd.css(content);\n\t                }\n\t            }\n\t            catch (e) {\n\t            }\n\t        }\n\t        return React.createElement(Block, null, React.createElement(TextEditor, {\n\t            value: content,\n\t            grammar: grammar,\n\t            readonly: true\n\t        }), canPrettify ? React.createElement(Block, null, React.createElement('label', null, React.createElement('input', {\n\t            type: 'checkbox',\n\t            onChange: function (e) { return _this.props.setState({ pretty: e.target.checked }); },\n\t            checked: this.props.state.pretty,\n\t            style: { marginRight: 5 }\n\t        }), React.createElement('span', null, 'Pretty data'))) : null);\n\t    };\n\t    return Markup;\n\t})(PureComponent);\n\tvar NavigateLabel = (function (_super) {\n\t    __extends(NavigateLabel, _super);\n\t    function NavigateLabel() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    NavigateLabel.prototype.getName = function (node) {\n\t        var value = node.value();\n\t        return typeof value === 'string' ? value : value.valueName();\n\t    };\n\t    NavigateLabel.prototype.render = function () {\n\t        var node = this.props.node;\n\t        // Ignore empty node values.\n\t        if (node.value() == null) {\n\t            return null;\n\t        }\n\t        var navigate = this.props.navigate;\n\t        var title = this.props.title;\n\t        var id = node.highLevel().id();\n\t        return React.createElement('span', {\n\t            className: 'highlight',\n\t            style: {\n\t                margin: '0 5px 5px 0',\n\t                cursor: 'pointer',\n\t                display: 'inline-block'\n\t            },\n\t            onClick: function () { return navigate(id); }\n\t        }, React.createElement('strong', null, title + \": \"), this.getName(node));\n\t    };\n\t    return NavigateLabel;\n\t})(PureComponent);\n\tvar ResourceTypesAndTraits = (function (_super) {\n\t    __extends(ResourceTypesAndTraits, _super);\n\t    function ResourceTypesAndTraits() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ResourceTypesAndTraits.prototype.render = function () {\n\t        var types = [];\n\t        var node = this.props.node;\n\t        var navigate = this.props.navigate;\n\t        if ((RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node))\n\t            && node.type()) {\n\t            types.push(React.createElement(\"NavigateLabel\", { title: 'Type', key: 'type', node: node.type(), navigate: navigate }));\n\t        }\n\t        if (RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node)\n\t            || RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n\t            node.is().forEach(function (is, index) {\n\t                types.push(React.createElement(\"NavigateLabel\", { title: 'Trait', key: \"is:\" + index, node: is, navigate: navigate }));\n\t            });\n\t        }\n\t        node.securedBy().forEach(function (securedBy, index) {\n\t            types.push(React.createElement(\"NavigateLabel\", { title: 'Secured By', key: \"securedBy:\" + index, node: securedBy, navigate: navigate }));\n\t        });\n\t        return React.createElement(Block, null, types);\n\t    };\n\t    return ResourceTypesAndTraits;\n\t})(PureComponent);\n\tvar Block = (function (_super) {\n\t    __extends(Block, _super);\n\t    function Block() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Block.prototype.render = function () {\n\t        return React.createElement('div', extend(this.props, {\n\t            className: classnames(this.props.className, 'block')\n\t        }), this.props.children);\n\t    };\n\t    return Block;\n\t})(PureComponent);\n\tvar InsetPanel = (function (_super) {\n\t    __extends(InsetPanel, _super);\n\t    function InsetPanel() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    InsetPanel.prototype.render = function () {\n\t        return React.createElement(Block, null, React.createElement('atom-panel', null, React.createElement('div', { className: 'padded' }, this.props.children)));\n\t    };\n\t    return InsetPanel;\n\t})(PureComponent);\n\tvar Icon = (function (_super) {\n\t    __extends(Icon, _super);\n\t    function Icon() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Icon.prototype.render = function () {\n\t        return React.createElement('i', {\n\t            className: classnames('icon icon-' + this.props.name, this.props.className)\n\t        });\n\t    };\n\t    return Icon;\n\t})(PureComponent);\n\tvar OpenInEditor = (function (_super) {\n\t    __extends(OpenInEditor, _super);\n\t    function OpenInEditor() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    OpenInEditor.prototype.openInEditor = function (node) {\n\t        var editors = atom.workspace.getTextEditors();\n\t        var path = node.unit().absolutePath();\n\t        var start = node.start();\n\t        // TODO(blakeembrey): Review logic if atom/atom#9258 lands.\n\t        function resolve(editor) {\n\t            var position = editor.getBuffer().positionForCharacterIndex(start);\n\t            editor.setCursorBufferPosition(position);\n\t        }\n\t        var split;\n\t        // Split is disabled for the console, just open it without any bells.\n\t        if (atom.config.get('api-workbench.openConsoleInSplitPane')) {\n\t            // Attempt to render onto the preferred side of the console.\n\t            var panes = atom.workspace.getPanes();\n\t            var activePane = atom.workspace.getActivePane();\n\t            if (panes.length === 1) {\n\t                split = 'left';\n\t                activePane.splitLeft({});\n\t            }\n\t            else {\n\t                split = activePane === panes[0] ? 'right' : 'left';\n\t            }\n\t        }\n\t        atom.workspace.open(path, { searchAllPanes: true, split: split }).then(resolve);\n\t    };\n\t    OpenInEditor.prototype.render = function () {\n\t        var _this = this;\n\t        var lowLevel = this.props.node.highLevel().lowLevel();\n\t        var hasUnit = lowLevel.unit() != null;\n\t        if (!hasUnit) {\n\t            return React.createElement('span', null, this.props.children);\n\t        }\n\t        return React.createElement('a', {\n\t            onClick: function () { return _this.openInEditor(lowLevel); }\n\t        }, this.props.children);\n\t    };\n\t    return OpenInEditor;\n\t})(PureComponent);\n\tvar MarkdownBlock = (function (_super) {\n\t    __extends(MarkdownBlock, _super);\n\t    function MarkdownBlock() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MarkdownBlock.prototype.render = function () {\n\t        var content = this.props.content;\n\t        if (content == null) {\n\t            return null;\n\t        }\n\t        return React.createElement(Block, { dangerouslySetInnerHTML: { __html: marked(content) } });\n\t    };\n\t    return MarkdownBlock;\n\t})(PureComponent);\n\tfunction plural(count, singular, plural) {\n\t    return count === 1 ? singular : plural;\n\t}\n\tfunction getCaseless(obj, key) {\n\t    var keys = Object.keys(obj);\n\t    var match = key.toLowerCase();\n\t    for (var i = 0; i < keys.length; i++) {\n\t        if (keys[i].toLowerCase() === match) {\n\t            return obj[keys[i]];\n\t        }\n\t    }\n\t}\n\tfunction getNodeLabel(node) {\n\t    var name = node.getKind() === highLevelAst.NodeKind.ATTRIBUTE ? node.value() : node.name();\n\t    if (typeof name !== 'string') {\n\t        name = name.valueName();\n\t    }\n\t    if (!name && node.getKind() === highLevelAst.NodeKind.NODE) {\n\t        var wrapper = node.wrapperNode();\n\t        if (RamlWrapper1.isDocumentationItem(wrapper) ||\n\t            RamlWrapper08.isDocumentationItem(wrapper)) {\n\t            return wrapper.title();\n\t        }\n\t        if (RamlWrapper1.isApi(wrapper) || RamlWrapper08.isApi(wrapper) ||\n\t            RamlWrapper1.isExtension(wrapper) || RamlWrapper1.isOverlay(wrapper)) {\n\t            return 'Home';\n\t        }\n\t    }\n\t    return name;\n\t}\n\t\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar _ = __webpack_require__(23);\n\tvar Opt = __webpack_require__(63);\n\texports.defined = function (x) { return (x !== null) && (x !== undefined); };\n\t/**\n\t * Arrays of Objects are common in RAML08.\n\t * @param x\n\t * @returns {{}}\n\t */\n\tfunction flattenArrayOfObjects(x) {\n\t    var res = {};\n\t    x.forEach(function (v) { return Object.keys(v).forEach(function (k) { return res[k] = v[k]; }); });\n\t    return res;\n\t}\n\texports.flattenArrayOfObjects = flattenArrayOfObjects;\n\tfunction find(xs, f) {\n\t    return new Opt(_.find(xs || [], f));\n\t}\n\texports.find = find;\n\texports.isInstance = function (v, C) { return (v instanceof C) ? [v] : []; };\n\texports.ifInstanceOf = function (v, C, f) { return (v instanceof C) ? f(v) : null; };\n\tfunction toTuples(map) {\n\t    return Object.keys(map).map(function (k) { return [k, map[k]]; });\n\t}\n\texports.toTuples = toTuples;\n\tfunction fromTuples(tuples) {\n\t    var obj = {};\n\t    tuples.forEach(function (x) { return obj[x[0]] = x[1]; });\n\t    return obj;\n\t}\n\texports.fromTuples = fromTuples;\n\texports.collectInstancesOf = function (xs, C) { return tap([], function (res) { return xs.forEach(function (v) { return exports.ifInstanceOf(v, C, function (x) { return res.push(x); }); }); }); };\n\texports.collectInstancesOfInMap = function (map, C) {\n\t    return Object.keys(map).map(function (k) { return [k, map[k]]; }).filter(function (x) { return x[1] instanceof C; }).map(function (x) { return x; });\n\t};\n\texports.asArray = function (v) { return exports.defined(v) ? ((v instanceof Array) ? v : [v]) : []; };\n\texports.shallowCopy = function (obj) { return tap({}, function (copy) { return Object.keys(obj).forEach(function (k) { return copy[k] = obj[k]; }); }); };\n\texports.flatMap = function (xs, f) { return exports.flatten(xs.map(f)); };\n\texports.flatten = function (xss) { return Array.prototype.concat.apply([], xss); };\n\texports.takeWhile = function (xs, f) { return tap([], function (res) {\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (!f(xs[i]))\n\t            break;\n\t        res.push(xs[i]);\n\t    }\n\t}); };\n\tfunction tap(v, f) {\n\t    f(v);\n\t    return v;\n\t}\n\texports.tap = tap;\n\tfunction kv(obj, iter) {\n\t    if (typeof obj === 'object')\n\t        Object.keys(obj).forEach(function (k) { return iter(k, obj[k]); });\n\t}\n\texports.kv = kv;\n\tfunction indexed(objects, key, delKey) {\n\t    if (delKey === void 0) { delKey = false; }\n\t    var obj = {};\n\t    objects.forEach(function (original) {\n\t        var copy = exports.shallowCopy(original);\n\t        if (delKey)\n\t            delete copy[key];\n\t        obj[original[key]] = copy;\n\t    });\n\t    return obj;\n\t}\n\texports.indexed = indexed;\n\tfunction stringEndsWith(str, search) {\n\t    var dif = str.length - search.length;\n\t    return dif >= 0 && str.lastIndexOf(search) === dif;\n\t}\n\texports.stringEndsWith = stringEndsWith;\n\tfunction stringStartsWith(str, search) {\n\t    return str.length - search.length >= 0 && str.substring(0, search.length) === search;\n\t}\n\texports.stringStartsWith = stringStartsWith;\n\tfunction lazypropkeyfilter(k) {\n\t    return k[k.length - 1] == \"_\"; // ends with underscore\n\t}\n\texports.lazypropkeyfilter = lazypropkeyfilter;\n\tfunction lazyprop(obj, key, func) {\n\t    var result, ready = false;\n\t    obj[key] = function () {\n\t        if (!ready) {\n\t            ready = true;\n\t            result = func.apply(obj);\n\t        }\n\t        return result;\n\t    };\n\t}\n\tfunction lazyprops(obj, keyfilter) {\n\t    if (keyfilter === void 0) { keyfilter = lazypropkeyfilter; }\n\t    for (var k in obj) {\n\t        if (keyfilter(k)) {\n\t            exports.ifInstanceOf(obj[k], Function, function (vf) { return (vf.length === 0) ? lazyprop(obj, k, vf) : null; });\n\t        }\n\t    }\n\t}\n\texports.lazyprops = lazyprops;\n\tfunction iff(v, f) {\n\t    if (v !== undefined)\n\t        f(v);\n\t}\n\texports.iff = iff;\n\tfunction isRAMLUrl(str) {\n\t    if (typeof str !== 'string' || str == '')\n\t        return false;\n\t    return stringEndsWith(str, \".raml\");\n\t}\n\texports.isRAMLUrl = isRAMLUrl;\n\tfunction getAllRequiredExternalModulesFromCode(code) {\n\t    var match;\n\t    var mods = [];\n\t    // both quoting styles\n\t    var r1 = new RegExp(\"require\\\\('([^']+)'\\\\)\", \"gi\");\n\t    while (match = r1.exec(code)) {\n\t        mods.push(match[1]);\n\t    }\n\t    var r2 = new RegExp('require\\\\(\"([^\"]+)\"\\\\)', \"gi\");\n\t    while (match = r2.exec(code)) {\n\t        mods.push(match[1]);\n\t    }\n\t    mods = _.unique(mods).filter(function (x) { return x != \"\"; });\n\t    mods.sort();\n\t    return mods;\n\t}\n\texports.getAllRequiredExternalModulesFromCode = getAllRequiredExternalModulesFromCode;\n\texports.serial = (function () { var i = 0; return function () { return i++; }; })();\n\tfunction isEssential(arg) {\n\t    return typeof arg !== 'undefined' && arg != null;\n\t}\n\texports.isEssential = isEssential;\n\tfunction firstToUpper(q) {\n\t    if (q.length == 0) {\n\t        return q;\n\t    }\n\t    return q.charAt(0).toUpperCase() + q.substr(1);\n\t}\n\texports.firstToUpper = firstToUpper;\n\tfunction updateObject(source, target, addNewFields) {\n\t    if (addNewFields === void 0) { addNewFields = false; }\n\t    var keySet = Object.keys(target);\n\t    if (addNewFields) {\n\t        var map = {};\n\t        keySet.forEach(function (x) { return map[x] = true; });\n\t        Object.keys(source).forEach(function (x) { return map[x] = true; });\n\t        keySet = Object.keys(map);\n\t    }\n\t    keySet.forEach(function (x) {\n\t        var value = source[x];\n\t        if (value instanceof Object) {\n\t            if (!target[x]) {\n\t                target[x] = {};\n\t            }\n\t            updateObject(value, target[x], true);\n\t        }\n\t        else if (value != undefined) {\n\t            target[x] = source[x];\n\t        }\n\t    });\n\t}\n\texports.updateObject = updateObject;\n\t;\n\t/**\n\t * In 'str' replace all occurences of 'map' keys to their values.\n\t */\n\tfunction replaceMap(str, map) {\n\t    Object.keys(map).forEach(function (x) { return str = replace(str, x, map[x]); });\n\t    return str;\n\t}\n\texports.replaceMap = replaceMap;\n\t/**\n\t * Replace all occurences of 'x' in 'str' to 'r' without thinking if 'x' can be passed without\n\t * escaping as argument to RegExp constructor\n\t */\n\tfunction replace(str, x, r) {\n\t    var result = '';\n\t    var prev = 0;\n\t    for (var i = str.indexOf(x); i < str.length && i >= 0; i = str.indexOf(x, prev)) {\n\t        result += str.substring(prev, i);\n\t        result += r;\n\t        prev = i + x.length;\n\t    }\n\t    result += str.substring(prev, str.length);\n\t    return result;\n\t}\n\texports.replace = replace;\n\t\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"know-your-http-well\");\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"remote\");\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"jsonix\");\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"w3c-schemas\");\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"mime\");\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(16);\n\tvar rp = __webpack_require__(22);\n\tvar def = rp.ds;\n\tvar search = rp.search;\n\tvar _ = __webpack_require__(23);\n\tvar provider = __webpack_require__(7);\n\tvar UI = __webpack_require__(17);\n\tvar contextActions = __webpack_require__(31);\n\tvar suggestions = __webpack_require__(69);\n\tvar universe = rp.universes;\n\tvar universehelpers = rp.universeHelpers;\n\tvar typeDisplay = __webpack_require__(70);\n\tvar defaultValues = __webpack_require__(71);\n\tvar resourceRegistry = rp.utils;\n\tvar Item = (function () {\n\t    function Item(_title, description) {\n\t        if (description === void 0) { description = \"\"; }\n\t        this._title = _title;\n\t        this.description = description;\n\t        this.listeners = [];\n\t    }\n\t    Item.prototype.needsSeparateLabel = function () {\n\t        return false;\n\t    };\n\t    Item.prototype.detach = function () {\n\t        this.dispose();\n\t        this.children().forEach(function (x) { return x.detach(); });\n\t    };\n\t    Item.prototype.addListener = function (r) {\n\t        this.listeners.push(r);\n\t    };\n\t    Item.prototype.removeListener = function (r) {\n\t        this.listeners = this.listeners.filter(function (x) { return x != r; });\n\t    };\n\t    Item.prototype.add = function (i) {\n\t        throw new Error(\"Not supported\");\n\t    };\n\t    Item.prototype.root = function () {\n\t        if (this.parent) {\n\t            return this.parent.root();\n\t        }\n\t        return this;\n\t    };\n\t    Item.prototype.title = function () {\n\t        return this._title;\n\t    };\n\t    Item.prototype.children = function () {\n\t        return [];\n\t    };\n\t    Item.prototype.setDescription = function (desc) {\n\t        this.description = desc;\n\t    };\n\t    Item.prototype.setTitle = function (t) {\n\t        this._title = t;\n\t    };\n\t    Item.prototype.render = function (r) {\n\t        if (r === void 0) { r = {}; }\n\t        throw new Error(\"Not Implemented\");\n\t    };\n\t    Item.prototype.item = function (name) {\n\t        return null;\n\t    };\n\t    Item.prototype.setError = function (text) {\n\t    };\n\t    Item.prototype.clearErrors = function () {\n\t    };\n\t    return Item;\n\t})();\n\texports.Item = Item;\n\tvar TypeDisplayItem = (function (_super) {\n\t    __extends(TypeDisplayItem, _super);\n\t    function TypeDisplayItem(node) {\n\t        _super.call(this, \"Type\", \"\");\n\t        this.node = node;\n\t    }\n\t    TypeDisplayItem.prototype.render = function (r) {\n\t        return typeDisplay.render(this.node);\n\t    };\n\t    TypeDisplayItem.prototype.dispose = function () {\n\t    };\n\t    return TypeDisplayItem;\n\t})(Item);\n\texports.TypeDisplayItem = TypeDisplayItem;\n\tvar Category = (function (_super) {\n\t    __extends(Category, _super);\n\t    function Category() {\n\t        _super.apply(this, arguments);\n\t        this._children = [];\n\t    }\n\t    Category.prototype.add = function (i) {\n\t        i.parent = this;\n\t        this._children.push(i);\n\t    };\n\t    Category.prototype.children = function () {\n\t        return this._children;\n\t    };\n\t    Category.prototype.plainChildren = function () {\n\t        return this._children.filter(function (x) { return !(x instanceof Category); });\n\t    };\n\t    Category.prototype.categories = function () {\n\t        return this._children.filter(function (x) { return (x instanceof Category); });\n\t    };\n\t    Category.prototype.item = function (name) {\n\t        var it;\n\t        this._children.forEach(function (x) {\n\t            if (x.title() == name) {\n\t                it = x;\n\t            }\n\t            var rr = x.item(name);\n\t            if (rr) {\n\t                it = rr;\n\t            }\n\t        });\n\t        return it;\n\t    };\n\t    Category.prototype.render = function (r) {\n\t        var _this = this;\n\t        if (r === void 0) { r = {}; }\n\t        var section = this.createSection(r);\n\t        this._result = section;\n\t        if (this.description && r.showDescription) {\n\t            this.descriptionLabel = UI.label(this.description);\n\t            section.addChild(this.descriptionLabel);\n\t        }\n\t        this.contributeTop(section);\n\t        this.plainChildren().forEach(function (x) { return _this.addChild(section, x); });\n\t        var wrappedChild = this.createWrappedChild(section);\n\t        this.subCategories = wrappedChild;\n\t        var cats = this.categories();\n\t        var remap = {};\n\t        cats.forEach(function (x) { return remap[x.title()] = x; });\n\t        var newCats = [];\n\t        if (remap[\"General\"]) {\n\t            newCats.push(remap[\"General\"]);\n\t            delete remap[\"General\"];\n\t        }\n\t        if (remap[\"Facets\"]) {\n\t            newCats.push(remap[\"Facets\"]);\n\t            delete remap[\"Facets\"];\n\t        }\n\t        for (var c in remap) {\n\t            newCats.push(remap[c]);\n\t        }\n\t        newCats.forEach(function (x) { return _this.addChild(wrappedChild, x); });\n\t        return section;\n\t    };\n\t    Category.prototype.detach = function () {\n\t        _super.prototype.detach.call(this);\n\t        this._result.dispose();\n\t    };\n\t    Category.prototype.createSection = function (r) {\n\t        if (r.showHeader) {\n\t            return new UI.Section(UI.h3(this.title()), false);\n\t        }\n\t        var pnl = new UI.Panel();\n\t        pnl.setCaption(this.title());\n\t        return pnl;\n\t    };\n\t    Category.prototype.createWrappedChild = function (section) {\n\t        return section;\n\t    };\n\t    Category.prototype.addChild = function (section, item) {\n\t        var child = item.render();\n\t        if (section instanceof UI.TabFolder) {\n\t            var tf = section;\n\t            tf.add(child.caption(), UI.Icon.NONE, child);\n\t        }\n\t        else {\n\t            if (item.needsSeparateLabel()) {\n\t                var firstLabel = UI.label(item.title());\n\t                firstLabel.margin(0, 5, 0, 0);\n\t                section.addChild(firstLabel);\n\t                section.addChild(UI.label(item.description));\n\t            }\n\t            section.addChild(child);\n\t        }\n\t    };\n\t    Category.prototype.contributeTop = function (section) {\n\t    };\n\t    Category.prototype.dispose = function () {\n\t    };\n\t    Category.prototype.setError = function (text) {\n\t    };\n\t    Category.prototype.clearErrors = function () {\n\t        this._children.forEach(function (x) { return x.clearErrors(); });\n\t    };\n\t    Category.prototype.update = function (i) {\n\t    };\n\t    return Category;\n\t})(Item);\n\tvar lastSelectedCaption;\n\tvar inRender = false;\n\tvar TopLevelNode = (function (_super) {\n\t    __extends(TopLevelNode, _super);\n\t    function TopLevelNode(node) {\n\t        _super.call(this, node.definition().nameId(), node.definition().description());\n\t        this.node = node;\n\t        this.ep = null;\n\t    }\n\t    TopLevelNode.prototype.detach = function () {\n\t        _super.prototype.detach.call(this);\n\t        this._result.dispose();\n\t    };\n\t    TopLevelNode.prototype.createWrappedChild = function (section) {\n\t        var tf = new UI.TabFolder();\n\t        tf.setOnSelected(function () {\n\t            if (!inRender) {\n\t                lastSelectedCaption = (tf.selectedComponent().caption());\n\t            }\n\t        });\n\t        section.addChild(tf);\n\t        return tf;\n\t    };\n\t    TopLevelNode.prototype.subCategoryByNameOrCreate = function (name) {\n\t        var item = _.find(this.children(), function (x) { return x.title() == name; });\n\t        if (!item) {\n\t            var rs = new Category(name);\n\t            this.add(rs);\n\t            return rs;\n\t        }\n\t        return item;\n\t    };\n\t    TopLevelNode.prototype.addItemToCategory = function (name, it) {\n\t        if (name == null) {\n\t            this._children.push(it);\n\t            it.parent = this;\n\t            return;\n\t        }\n\t        this.subCategoryByNameOrCreate(name).add(it);\n\t    };\n\t    TopLevelNode.prototype.contributeTop = function (section) {\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n\t        this.ep = UI.hc(this.errorLabel);\n\t        this.ep.setDisplay(false);\n\t        section.addChild(this.ep);\n\t    };\n\t    TopLevelNode.prototype.render = function (r) {\n\t        if (r === void 0) { r = {}; }\n\t        inRender = true;\n\t        try {\n\t            var result = _super.prototype.render.call(this, r);\n\t            this._options = r;\n\t            this._panel = result;\n\t            var tf = this.subCategories;\n\t            for (var n = 0; n < tf.tabsCount(); n++) {\n\t                var item = tf.get(n);\n\t                if (item.header == lastSelectedCaption) {\n\t                    tf.setSelectedIndex(n);\n\t                    return result;\n\t                }\n\t            }\n\t            var documentation = \"\";\n\t            if (this.node.property()) {\n\t                documentation = this.node.property().description();\n\t            }\n\t            else {\n\t                documentation = this.node.definition().description();\n\t            }\n\t            if (documentation.length && !r.showDescription) {\n\t                result.addChild(UI.html(\"<hr/>\"));\n\t                result.addChild(UI.label(documentation, UI.Icon.INBOX, UI.TextClasses.SUBTLE));\n\t            }\n\t            this.update(this);\n\t            return result;\n\t        }\n\t        finally {\n\t            inRender = false;\n\t        }\n\t    };\n\t    TopLevelNode.prototype.dispose = function () {\n\t        this.node = null;\n\t    };\n\t    TopLevelNode.prototype.update = function (i) {\n\t        var _this = this;\n\t        //this.listeners.forEach(x=>x(i));\n\t        if (!this._panel) {\n\t            return;\n\t        }\n\t        if (i instanceof PropertyEditorInfo) {\n\t            var prInfo = i;\n\t            if (prInfo.property.getAdapter(def.RAMLPropertyService).isTypeExpr() || prInfo.property.isDescriminator()) {\n\t                rp.utils.updateType(this.node);\n\t                var extras = this.item(\"Facets\");\n\t                if (extras && extras._result) {\n\t                    extras._result.clear();\n\t                }\n\t                var item = buildItem(this.node, false);\n\t                var newExtras = item.item(\"Facets\");\n\t                if (newExtras) {\n\t                    if (extras && extras._result) {\n\t                        extras._children = newExtras._children;\n\t                        extras._children.forEach(function (x) { return x.parent = extras; });\n\t                        if (extras._children.length > 0) {\n\t                            extras._result.setDisplay(true);\n\t                        }\n\t                        newExtras.children().forEach(function (x) {\n\t                            extras._result.addChild(x.render(_this._options));\n\t                        });\n\t                    }\n\t                    else {\n\t                        this._children.push(newExtras);\n\t                        if (this._panel) {\n\t                            this._panel.addChild(newExtras.render(this._options));\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    if (extras && extras._result) {\n\t                        extras._result.setDisplay(false);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var kp = null;\n\t        this.node.definition().allProperties().forEach(function (x) {\n\t            if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n\t                kp = x;\n\t            }\n\t        });\n\t        if (kp) {\n\t            var keyItem = this.item(kp.nameId());\n\t            if (keyItem) {\n\t                var m = keyItem.fld;\n\t                var vl = m.getBinding().get();\n\t                if ((!vl) || vl.trim().length == 0) {\n\t                    this._panel.getBinding().setStatus(UI.errorStatus(\"\"));\n\t                }\n\t                else {\n\t                    this._panel.getBinding().setStatus(UI.okStatus());\n\t                }\n\t            }\n\t        }\n\t        var errors = this.node.errors();\n\t        this.clearErrors();\n\t        this.ep.setDisplay(false);\n\t        if (!resourceRegistry.hasAsyncRequests() && errors && errors.length > 0) {\n\t            var notFound = [];\n\t            errors.forEach(function (error) {\n\t                if (error.extras && error.extras.length > 0) {\n\t                    error = error.extras[0];\n\t                }\n\t                var item = _this.item(error.node.name());\n\t                if (item) {\n\t                    item.setError(error.message);\n\t                }\n\t                else {\n\t                    notFound.push(error);\n\t                }\n\t            });\n\t            if (notFound.length > 0) {\n\t                this.errorLabel.setIcon(UI.Icon.BUG);\n\t                var et = notFound.map(function (x) { return x.node.name() + \":\" + x.message; }).join(\",\");\n\t                if (et.length > 100) {\n\t                    et = et.substring(0, 100) + \"...\";\n\t                }\n\t                this.errorLabel.setText(et);\n\t                this.ep.setDisplay(true);\n\t            }\n\t            else {\n\t                this.ep.setDisplay(false);\n\t            }\n\t        }\n\t    };\n\t    return TopLevelNode;\n\t})(Category);\n\tvar CheckBox2 = (function (_super) {\n\t    __extends(CheckBox2, _super);\n\t    function CheckBox2() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CheckBox2.prototype.setLabelWidth = function (n) {\n\t        this.setStyle(\"margin-left\", (n + 2) + \"ch\");\n\t    };\n\t    return CheckBox2;\n\t})(UI.CheckBox);\n\tvar PropertyEditorInfo = (function (_super) {\n\t    __extends(PropertyEditorInfo, _super);\n\t    function PropertyEditorInfo(property, node) {\n\t        var _this = this;\n\t        _super.call(this, property.nameId(), property.description());\n\t        this.property = property;\n\t        this.node = node;\n\t        this.rendered = false;\n\t        this.update = function (newValue, oldValue) {\n\t            if (!_this.rendered) {\n\t                return;\n\t            }\n\t            _this.fromEditorToModel(newValue, oldValue);\n\t        };\n\t    }\n\t    PropertyEditorInfo.prototype.dispose = function () {\n\t        this.property = null;\n\t        this.node = null;\n\t        this.fld.getBinding().removeListener(this.update);\n\t    };\n\t    PropertyEditorInfo.prototype.getDefaultValue = function () {\n\t        return defaultValues.getDefaultValue(this.node, this.property);\n\t    };\n\t    PropertyEditorInfo.prototype.hasDefault = function () {\n\t        return defaultValues.hasDefault(this.property);\n\t    };\n\t    PropertyEditorInfo.prototype.clearErrors = function () {\n\t        this.setError(null);\n\t    };\n\t    PropertyEditorInfo.prototype.setError = function (text) {\n\t        if (text) {\n\t            this.errorLabel.setText(text);\n\t            this.errorLabel.setDisplay(true);\n\t        }\n\t        else {\n\t            if (this.errorLabel) {\n\t                this.errorLabel.setDisplay(false);\n\t            }\n\t        }\n\t    };\n\t    PropertyEditorInfo.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t        var field = this.fld;\n\t        var vl = this.toLocalValue(field.getBinding().get());\n\t        if (vl == null) {\n\t            vl = \"\";\n\t        }\n\t        if (vl === true) {\n\t            vl = \"true\";\n\t        }\n\t        if (vl === false) {\n\t            vl = \"\";\n\t        }\n\t        var attr = this.node.attr(this.property.nameId());\n\t        var av = \"\";\n\t        if (attr) {\n\t            var l = this.toLocalValue(this.toUIValue(attr.value()));\n\t            if (l) {\n\t                av = \"\" + l;\n\t            }\n\t        }\n\t        if (av == vl) {\n\t            return;\n\t        }\n\t        if (vl.length > 0) {\n\t            if (attr && attr.lowLevel().includePath()) {\n\t                var path = attr.lowLevel().includePath();\n\t                var actualUnit = attr.lowLevel().unit().resolve(path);\n\t                if (actualUnit) {\n\t                    var apath = actualUnit.absolutePath();\n\t                    fs.writeFileSync(apath, vl);\n\t                }\n\t                return;\n\t            }\n\t            if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n\t                return;\n\t            }\n\t            attr = this.node.attrOrCreate(this.property.nameId());\n\t            attr.setValue(\"\" + vl);\n\t        }\n\t        else {\n\t            if (attr) {\n\t                if (!this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n\t                    attr.remove();\n\t                }\n\t            }\n\t        }\n\t        if (attr.lowLevel() && attr.lowLevel().unit() && attr.lowLevel().unit() != this.node.lowLevel().unit()) {\n\t            provider.saveUnit(attr.lowLevel().unit());\n\t        }\n\t        var root = this.root();\n\t        if (root) {\n\t            root.update(this);\n\t        }\n\t    };\n\t    PropertyEditorInfo.prototype.toLocalValue = function (inputValue) {\n\t        return inputValue;\n\t    };\n\t    PropertyEditorInfo.prototype.toUIValue = function (value) {\n\t        return value;\n\t    };\n\t    PropertyEditorInfo.prototype.fromModelToEditor = function () {\n\t        var attr = this.node.attr(this.property.nameId());\n\t        if (attr || this.hasDefault()) {\n\t            var val = attr ? attr.value() : this.getDefaultValue();\n\t            if (val == null) {\n\t                val = \"\";\n\t            }\n\t            this.fld.getBinding().set(this.toUIValue(\"\" + val));\n\t        }\n\t    };\n\t    PropertyEditorInfo.prototype.render = function () {\n\t        var container = new UI.WrapPanel();\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n\t        this.errorLabel.setDisplay(false);\n\t        this.errorLabel.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n\t        var field = this.createField();\n\t        this.fld = field;\n\t        field.getBinding().addListener(this.update);\n\t        container.setCaption(this.title());\n\t        this.fromModelToEditor();\n\t        container.addChild(field);\n\t        var attr = this.node.attr(this.property.nameId());\n\t        if (attr) {\n\t            var val = attr.value();\n\t        }\n\t        var np = this.property.valueDocProvider();\n\t        if (np) {\n\t            var ac = np(val);\n\t            if (ac == null) {\n\t                ac = \"\";\n\t            }\n\t            var lbl = UI.label(ac, UI.Icon.INFO, UI.TextClasses.SUBTLE);\n\t            if (!ac) {\n\t                lbl.setDisplay(false);\n\t            }\n\t            container.addChild(lbl);\n\t            field.getBinding().addListener(function (x) {\n\t                var newDoc = np(field.getBinding().get());\n\t                if (!newDoc) {\n\t                    newDoc = \"\";\n\t                }\n\t                lbl.setText(newDoc);\n\t                lbl.setDisplay(newDoc.length > 0);\n\t            });\n\t            lbl.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n\t        }\n\t        if (attr && attr.lowLevel().includePath()) {\n\t            container.addChild(UI.label(\"Included from \" + attr.lowLevel().includePath(), UI.Icon.INFO, UI.TextClasses.SUBTLE));\n\t        }\n\t        //container.addChild(this.descLabel)\n\t        container.addChild(this.errorLabel);\n\t        this.rendered = true;\n\t        return container;\n\t    };\n\t    PropertyEditorInfo.prototype.createField = function () {\n\t        return UI.texfField(this.needsSeparateLabel() ? \"\" : this.property.nameId(), \"\", function (x) { });\n\t    };\n\t    return PropertyEditorInfo;\n\t})(Item);\n\tvar SimpleMultiEditor = (function (_super) {\n\t    __extends(SimpleMultiEditor, _super);\n\t    function SimpleMultiEditor() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SimpleMultiEditor.prototype.fromEditorToModel = function () {\n\t        var field = this.fld;\n\t        var vl = field.getBinding().get();\n\t        if (vl == null) {\n\t            vl = \"\";\n\t        }\n\t        var attrs = this.node.attributes(this.property.nameId());\n\t        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n\t        if (av == vl) {\n\t            return;\n\t        }\n\t        var ww = vl.split(\",\");\n\t        var vl = ww.filter(function (x) { return x.trim().length > 0; }).map(function (x) { return x.trim(); });\n\t        if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n\t            return;\n\t        }\n\t        var attribute = this.node.attrOrCreate(this.property.nameId());\n\t        attribute.setValues(vl);\n\t        var root = this.root();\n\t        if (root) {\n\t            root.update(this);\n\t        }\n\t    };\n\t    SimpleMultiEditor.prototype.fromModelToEditor = function () {\n\t        var attrs = this.node.attributes(this.property.nameId());\n\t        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n\t        this.fld.getBinding().set(av);\n\t    };\n\t    return SimpleMultiEditor;\n\t})(PropertyEditorInfo);\n\tfunction escapeValue(v) {\n\t    if (v.length > 0) {\n\t        if (v.charAt(0) == \"'\") {\n\t            return '\"' + v + '\"';\n\t        }\n\t        if (v.charAt(0) == '\"') {\n\t            return '\"' + v + '\"';\n\t        }\n\t    }\n\t    if (v.indexOf(' ') != -1 || v.indexOf(',') != -1) {\n\t        if (v.indexOf('\"') == -1) {\n\t            return '\"' + v + '\"';\n\t        }\n\t        if (v.indexOf(\"'\") == -1) {\n\t            return \"'\" + v + \"'\";\n\t        }\n\t    }\n\t    return v;\n\t}\n\tvar CheckBoxField = (function (_super) {\n\t    __extends(CheckBoxField, _super);\n\t    function CheckBoxField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CheckBoxField.prototype.createField = function () {\n\t        return new CheckBox2(this.property.nameId(), UI.Icon.NONE, function (x) { });\n\t    };\n\t    CheckBoxField.prototype.toUIValue = function (value) {\n\t        if (!value) {\n\t            return false;\n\t        }\n\t        if (value === true || value.trim() === 'true') {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    CheckBoxField.prototype.toLocalValue = function (value) {\n\t        return value + \"\";\n\t    };\n\t    return CheckBoxField;\n\t})(PropertyEditorInfo);\n\tvar ActionsItem = (function (_super) {\n\t    __extends(ActionsItem, _super);\n\t    function ActionsItem(node) {\n\t        _super.call(this, \"Actions\", \"\");\n\t        this.node = node;\n\t    }\n\t    ActionsItem.prototype.render = function (r) {\n\t        return suggestions.generateSuggestionsPanel(this.node);\n\t    };\n\t    ActionsItem.prototype.dispose = function () {\n\t        this.node = null;\n\t    };\n\t    return ActionsItem;\n\t})(Item);\n\tvar ContextActionsItem = (function (_super) {\n\t    __extends(ContextActionsItem, _super);\n\t    function ContextActionsItem(node, name, actions) {\n\t        _super.call(this, name, \"\");\n\t        this.actions = actions;\n\t    }\n\t    ContextActionsItem.prototype.dispose = function () {\n\t    };\n\t    ContextActionsItem.prototype.render = function (r) {\n\t        var result = UI.hc();\n\t        result.addChild(UI.h3(this.title()));\n\t        this.actions.forEach(function (x) {\n\t            result.addChild(UI.button(x.name, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.CHECKLIST, function (a) { return x.onClick(); }).margin(3, 3, 3, 3));\n\t        });\n\t        return result;\n\t    };\n\t    return ContextActionsItem;\n\t})(Item);\n\tvar MarkdownFieldUI = (function (_super) {\n\t    __extends(MarkdownFieldUI, _super);\n\t    function MarkdownFieldUI(text, onchange) {\n\t        _super.call(this, text, onchange);\n\t        this.margin(0, 0, 6, 12);\n\t        this.setMini(false);\n\t        this.setStyle(\"min-height\", \"100px\");\n\t        //this.setStyle(\"max-height\",\"200px\");\n\t        this.setStyle(\"border\", \"solid\");\n\t        this.setStyle(\"border-width\", \"1px\");\n\t        this.setStyle(\"border-radius\", \"2px\");\n\t        this.setStyle(\"font-size\", \"1.15em\");\n\t        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n\t        this.setGrammar('source.gfm');\n\t    }\n\t    MarkdownFieldUI.prototype.setLabelWidth = function () {\n\t    };\n\t    MarkdownFieldUI.prototype.setLabelHeight = function () {\n\t    };\n\t    MarkdownFieldUI.prototype.setRequired = function (v) {\n\t    };\n\t    return MarkdownFieldUI;\n\t})(UI.AtomEditorElement);\n\tvar XMLField = (function (_super) {\n\t    __extends(XMLField, _super);\n\t    function XMLField(text, onchange) {\n\t        _super.call(this, text, onchange);\n\t        this.margin(0, 0, 6, 12);\n\t        this.setMini(false);\n\t        this.setStyle(\"min-height\", \"100px\");\n\t        //this.setStyle(\"max-height\",\"200px\");\n\t        this.setStyle(\"border\", \"solid\");\n\t        this.setStyle(\"border-width\", \"1px\");\n\t        this.setStyle(\"border-radius\", \"2px\");\n\t        this.setStyle(\"font-size\", \"1.15em\");\n\t        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n\t        this.setGrammar('text.xml');\n\t    }\n\t    XMLField.prototype.setLabelWidth = function () {\n\t    };\n\t    XMLField.prototype.setLabelHeight = function () {\n\t    };\n\t    XMLField.prototype.setRequired = function (v) {\n\t    };\n\t    return XMLField;\n\t})(UI.AtomEditorElement);\n\tvar JSONField = (function (_super) {\n\t    __extends(JSONField, _super);\n\t    function JSONField(text, onchange) {\n\t        _super.call(this, text, onchange);\n\t        this.margin(0, 0, 6, 12);\n\t        this.setMini(false);\n\t        this.setStyle(\"min-height\", \"100px\");\n\t        //this.setStyle(\"max-height\",\"200px\");\n\t        this.setStyle(\"border\", \"solid\");\n\t        this.setStyle(\"border-width\", \"1px\");\n\t        this.setStyle(\"border-radius\", \"2px\");\n\t        this.setStyle(\"font-size\", \"1.15em\");\n\t        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n\t        this.setGrammar('source.json');\n\t    }\n\t    JSONField.prototype.setLabelWidth = function () {\n\t    };\n\t    JSONField.prototype.setLabelHeight = function () {\n\t    };\n\t    JSONField.prototype.setRequired = function (v) {\n\t    };\n\t    return JSONField;\n\t})(UI.AtomEditorElement);\n\tvar MarkdownField = (function (_super) {\n\t    __extends(MarkdownField, _super);\n\t    function MarkdownField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MarkdownField.prototype.createField = function () {\n\t        var editor = new MarkdownFieldUI(\"\", function (x) { });\n\t        return editor;\n\t    };\n\t    MarkdownField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    return MarkdownField;\n\t})(PropertyEditorInfo);\n\tvar ExampleField = (function (_super) {\n\t    __extends(ExampleField, _super);\n\t    function ExampleField(property, node, text, title) {\n\t        _super.call(this, property, node);\n\t        this.property = property;\n\t        this.node = node;\n\t        this.text = text;\n\t        this.setDescription(\"\");\n\t        if (title)\n\t            this.setTitle(title);\n\t    }\n\t    ExampleField.prototype.createField = function () {\n\t        var editor = new JSONField(this.text, function (x) { });\n\t        return editor;\n\t    };\n\t    ExampleField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    ExampleField.prototype.fromModelToEditor = function () {\n\t    };\n\t    ExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t    };\n\t    return ExampleField;\n\t})(PropertyEditorInfo);\n\tvar XMLExampleField = (function (_super) {\n\t    __extends(XMLExampleField, _super);\n\t    function XMLExampleField(property, node, text, title) {\n\t        _super.call(this, property, node);\n\t        this.property = property;\n\t        this.node = node;\n\t        this.text = text;\n\t        this.setDescription(\"\");\n\t        if (title)\n\t            this.setTitle(title);\n\t    }\n\t    XMLExampleField.prototype.createField = function () {\n\t        var editor = new XMLField(this.text, function (x) { });\n\t        return editor;\n\t    };\n\t    XMLExampleField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    XMLExampleField.prototype.fromModelToEditor = function () {\n\t    };\n\t    XMLExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t    };\n\t    return XMLExampleField;\n\t})(PropertyEditorInfo);\n\tvar XMLSchemaField = (function (_super) {\n\t    __extends(XMLSchemaField, _super);\n\t    function XMLSchemaField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    XMLSchemaField.prototype.createField = function () {\n\t        var editor = new XMLField(\"\", function (x) { });\n\t        return editor;\n\t    };\n\t    XMLSchemaField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    return XMLSchemaField;\n\t})(PropertyEditorInfo);\n\tvar JSONSchemaField = (function (_super) {\n\t    __extends(JSONSchemaField, _super);\n\t    function JSONSchemaField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    JSONSchemaField.prototype.createField = function () {\n\t        var editor = new JSONField(\"\", function (x) { });\n\t        return editor;\n\t    };\n\t    JSONSchemaField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    return JSONSchemaField;\n\t})(PropertyEditorInfo);\n\tvar SelectBox = (function (_super) {\n\t    __extends(SelectBox, _super);\n\t    function SelectBox() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SelectBox.prototype.createField = function () {\n\t        var options = valueOptions(this.property, this.node);\n\t        var a = this.node.attr(this.property.nameId());\n\t        if (a) {\n\t            if (!_.find(options, function (x) { return x == a.value(); })) {\n\t                options.push(a.value());\n\t            }\n\t        }\n\t        if (!this.property.isRequired() && !this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n\t            options = [\"\"].concat(options);\n\t        }\n\t        var select = new UI.SelectField(this.property.nameId(), function (x) { }, \"\", UI.Icon.NONE, options);\n\t        select.getActualField().setOptions(options);\n\t        // select.clearUI();\n\t        return select;\n\t    };\n\t    return SelectBox;\n\t})(PropertyEditorInfo);\n\tvar TypeSelectBox = (function (_super) {\n\t    __extends(TypeSelectBox, _super);\n\t    function TypeSelectBox() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TypeSelectBox.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t        //current implementation only allows changing the facets of certain types for safety\n\t        //TODO change this to arbitrary facets (remove type filtering)\n\t        var _this = this;\n\t        var oldNames = [];\n\t        var savedAttrs = [];\n\t        if (newValue && oldValue) {\n\t            try {\n\t                this.node.definition().allSuperTypes().forEach(function (superType) {\n\t                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n\t                        _this.addTypeFacets(superType, oldNames);\n\t                    }\n\t                });\n\t                savedAttrs = [].concat(this.node.attrs());\n\t            }\n\t            catch (err) {\n\t                console.log(err);\n\t            }\n\t        }\n\t        _super.prototype.fromEditorToModel.call(this);\n\t        if (newValue && oldValue) {\n\t            try {\n\t                //collecting facets allowed to remove\n\t                var currentUniverse = this.node.definition().universe();\n\t                var names = [];\n\t                this.node.definition().allSuperTypes().forEach(function (superType) {\n\t                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n\t                        _this.addTypeFacets(superType, names);\n\t                    }\n\t                });\n\t                if (oldNames.length > 0 && names.length > 0) {\n\t                    savedAttrs.forEach(function (attribute) {\n\t                        if (_.find(oldNames, function (facetName) { return facetName == attribute.name(); })\n\t                            && !_.find(names, function (facetName) { return facetName == attribute.name(); })) {\n\t                            _this.node.remove(attribute);\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t            catch (err) {\n\t                console.log(err);\n\t            }\n\t        }\n\t    };\n\t    TypeSelectBox.prototype.isAllowedTypeToReplaceFacets = function (currentTypeDef) {\n\t        return currentTypeDef.key() == universe.Universe10.StringTypeDeclaration ||\n\t            currentTypeDef.key() == universe.Universe10.BooleanTypeDeclaration ||\n\t            currentTypeDef.key() == universe.Universe10.NumberTypeDeclaration ||\n\t            currentTypeDef.key() == universe.Universe10.IntegerTypeDeclaration;\n\t    };\n\t    TypeSelectBox.prototype.addTypeFacets = function (currentTypeDef, names) {\n\t        currentTypeDef.properties().map(function (property) { return property.nameId(); }).forEach(function (name) { return names.push(name); });\n\t    };\n\t    return TypeSelectBox;\n\t})(SelectBox);\n\tvar TreeField = (function (_super) {\n\t    __extends(TreeField, _super);\n\t    function TreeField(input, caption) {\n\t        _super.call(this);\n\t        this.input = input;\n\t        var rend = {\n\t            render: function (n) {\n\t                var key = n.key();\n\t                var value = n.value();\n\t                if (typeof value === 'number') {\n\t                    value = \"\" + value;\n\t                }\n\t                if (typeof value != 'string') {\n\t                    value = \"\";\n\t                }\n\t                if (value.length > 30) {\n\t                    value = value.substring(0, 20) + \"...\";\n\t                }\n\t                if (!key && value) {\n\t                    key = value;\n\t                    value = \"\";\n\t                }\n\t                var res = UI.label(key, UI.Icon.CIRCUIT_BOARD, UI.TextClasses.HIGHLIGHT);\n\t                value = UI.label(value ? (\":\" + value) : \"\", UI.Icon.NONE, UI.TextClasses.SUCCESS);\n\t                var result = UI.hc(res, value);\n\t                return result;\n\t            }\n\t        };\n\t        var viewer = UI.treeViewer(function (x) { return x.children(); }, rend, function (x) { return x.key(); });\n\t        var inputV = {\n\t            children: function () {\n\t                return [input];\n\t            }\n\t        };\n\t        viewer.setInput(inputV);\n\t        this.addChild(UI.label(caption));\n\t        this.addChild(viewer);\n\t    }\n\t    TreeField.prototype.setLabelWidth = function () {\n\t    };\n\t    TreeField.prototype.setLabelHeight = function () {\n\t    };\n\t    TreeField.prototype.setRequired = function (v) {\n\t    };\n\t    return TreeField;\n\t})(UI.Panel);\n\tvar StructuredField = (function (_super) {\n\t    __extends(StructuredField, _super);\n\t    function StructuredField(pr, node, stvalue) {\n\t        _super.call(this, pr, node);\n\t        this.stvalue = stvalue;\n\t    }\n\t    StructuredField.prototype.createField = function () {\n\t        var tm = new TreeField(this.stvalue.lowLevel(), this.title() + \":\");\n\t        return tm;\n\t    };\n\t    return StructuredField;\n\t})(PropertyEditorInfo);\n\tvar LowLevelTreeField = (function (_super) {\n\t    __extends(LowLevelTreeField, _super);\n\t    function LowLevelTreeField(pr, node, lowLevel, title) {\n\t        _super.call(this, pr, node);\n\t        this.lowLevel = lowLevel;\n\t        if (title)\n\t            this.setTitle(title);\n\t    }\n\t    LowLevelTreeField.prototype.createField = function () {\n\t        var tm = new TreeField(this.lowLevel, this.title() + \":\");\n\t        return tm;\n\t    };\n\t    return LowLevelTreeField;\n\t})(PropertyEditorInfo);\n\tfunction category(p, node) {\n\t    if (p.getAdapter(def.RAMLPropertyService).isKey() || p.isRequired()) {\n\t        return null;\n\t    }\n\t    if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n\t        if (universehelpers.isDocumentationProperty(p) ||\n\t            universehelpers.isUsageProperty(p) ||\n\t            universehelpers.isDescriptionProperty(p) ||\n\t            universehelpers.isDisplayNameProperty(p) ||\n\t            universehelpers.isTitleProperty(p)) {\n\t            return \"Documentation\";\n\t        }\n\t        if (universehelpers.isAnnotationsProperty(p) ||\n\t            universehelpers.isIsProperty(p) ||\n\t            universehelpers.isSecuredByProperty(p) ||\n\t            (universehelpers.isTypeProperty(p) && !p.getAdapter(def.RAMLPropertyService).isTypeExpr())) {\n\t            return \"References\";\n\t        }\n\t        if (universehelpers.isProtocolsProperty(p)) {\n\t            return \"General\";\n\t        }\n\t    }\n\t    if (universehelpers.isTypeProperty(p)) {\n\t        if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n\t            return null;\n\t        }\n\t    }\n\t    if (node.property()) {\n\t        if (p.domain() && p.domain() != node.property().range()) {\n\t            return \"Facets\";\n\t        }\n\t    }\n\t    return \"General\";\n\t}\n\tvar valueOptions = function (x, node) {\n\t    var vls = search.enumValues(x, node);\n\t    if (universehelpers.isNameProperty(x)) {\n\t        if (node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t            if (node.property() && universehelpers.isBodyProperty(node.property())) {\n\t                if (!(node.property() instanceof def.UserDefinedProp)) {\n\t                    if (node.parent() &&\n\t                        universehelpers.isMethodType(node.parent().definition())) {\n\t                        return [\"application/json\", \"application/xml\", \"multipart/form-data\", \"application/x-www-form-urlencoded\"];\n\t                    }\n\t                    return [\"application/json\", \"application/xml\"];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if ((!vls) || vls.length == 0) {\n\t        var sug = x.suggester();\n\t        if (sug) {\n\t            vls = sug(node);\n\t        }\n\t        if ((!vls) || vls.length == 0) {\n\t            vls = x.getOftenKeys();\n\t        }\n\t    }\n\t    return _.unique(vls);\n\t};\n\tfunction addExampleControl(property, node, exampleElement, example, container) {\n\t    if (example.isYAML()) {\n\t        container.addItemToCategory(category(property, node), new LowLevelTreeField(property, node, exampleElement.lowLevel(), example.name()));\n\t    }\n\t    else if (example.isJSONString()) {\n\t        container.addItemToCategory(category(property, node), new ExampleField(property, node, example.asString(), example.name()));\n\t    }\n\t    else if (example.isXMLString()) {\n\t        container.addItemToCategory(category(property, node), new XMLExampleField(property, node, example.asString(), example.name()));\n\t    }\n\t}\n\tfunction buildItem(node, dialog) {\n\t    rp.utils.updateType(node);\n\t    var props = node.propertiesAllowedToUse();\n\t    var result = new TopLevelNode(node);\n\t    if (node.property() && node.property().description()) {\n\t        result.setDescription(node.property().description());\n\t    }\n\t    var isFragment = false;\n\t    if (node.definition() && !node.parent()) {\n\t        var fragmentName = rp.utils.getFragmentDefenitionName(node);\n\t        var superTypes = node.definition().allSuperTypes();\n\t        superTypes.push(node.definition());\n\t        superTypes.forEach(function (superType) {\n\t            if (superType.nameId && superType.nameId() === fragmentName) {\n\t                isFragment = true;\n\t            }\n\t        });\n\t    }\n\t    props = props.filter(function (x) {\n\t        if (isFragment && universehelpers.isNameProperty(x)) {\n\t            return false;\n\t        }\n\t        if ((universehelpers.isNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n\t            return false;\n\t        }\n\t        if ((universehelpers.isDisplayNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n\t            return false;\n\t        }\n\t        return true;\n\t    });\n\t    props = props.sort(function (x, y) {\n\t        if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n\t            return -1;\n\t        }\n\t        if (y.getAdapter(def.RAMLPropertyService).isKey()) {\n\t            return 1;\n\t        }\n\t        if (x.nameId() < y.nameId()) {\n\t            return -1;\n\t        }\n\t        return 1;\n\t    });\n\t    props.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            //\n\t            if (universehelpers.isAnnotationsProperty(x)) {\n\t                //we ban annotations from appearing as we can not provide the editing\n\t                //with this mechanism\n\t                return;\n\t            }\n\t            if (universehelpers.isBooleanTypeType(x.range())) {\n\t                return;\n\t            }\n\t            if (universehelpers.isMarkdownStringType(x.range())) {\n\t                return;\n\t            }\n\t            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/json\"){\n\t            //     result.addItemToCategory(category(x,node), new ExampleField(x, node));\n\t            //     return;\n\t            // }\n\t            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/xml\"){\n\t            //     result.addItemToCategory(category(x,node), new XMLExampleField(x, node));\n\t            //     return;\n\t            // }\n\t            var nm = node.attr(x.nameId());\n\t            if (nm && typeof nm.value() === \"object\") {\n\t                result.addItemToCategory(category(x, node), new StructuredField(x, node, nm.value()));\n\t                return;\n\t            }\n\t            if (x.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n\t                var nm = node.attr(x.nameId());\n\t                if (nm) {\n\t                    var vl = nm.value();\n\t                    if (vl.trim().charAt(0) == '{') {\n\t                        result.addItemToCategory(category(x, node), new JSONSchemaField(x, node));\n\t                        return;\n\t                    }\n\t                    if (vl.trim().charAt(0) == '<') {\n\t                        result.addItemToCategory(category(x, node), new XMLSchemaField(x, node));\n\t                        return;\n\t                    }\n\t                }\n\t            }\n\t            if (universehelpers.isSchemaProperty(x)\n\t                && x.domain() && x.domain().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t                return;\n\t            }\n\t            var vls = valueOptions(x, node);\n\t            if (vls && vls.length > 0 && ((x.domain() && x.domain().getAdapter(def.RAMLService).isUserDefined()))) {\n\t                if (universehelpers.isTypeProperty(x) &&\n\t                    node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t                    result.addItemToCategory(category(x, node), new TypeSelectBox(x, node));\n\t                }\n\t                else {\n\t                    result.addItemToCategory(category(x, node), new SelectBox(x, node));\n\t                }\n\t            }\n\t            else {\n\t                if (x.isMultiValue()) {\n\t                    result.addItemToCategory(category(x, node), new SimpleMultiEditor(x, node));\n\t                }\n\t                else {\n\t                    result.addItemToCategory(category(x, node), new PropertyEditorInfo(x, node));\n\t                }\n\t            }\n\t        }\n\t    });\n\t    props.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            if (universehelpers.isBooleanTypeType(x.range())) {\n\t                result.addItemToCategory(category(x, node), new CheckBoxField(x, node));\n\t            }\n\t        }\n\t    });\n\t    props.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            if (universehelpers.isMarkdownStringType(x.range())) {\n\t                result.addItemToCategory(category(x, node), new MarkdownField(x, node));\n\t            }\n\t        }\n\t    });\n\t    if (universehelpers.isTypeDeclarationSibling(node.definition())) {\n\t        props.forEach(function (x) {\n\t            if (universehelpers.isExampleProperty(x)) {\n\t                var exampleElement = node.element(universe.Universe10.TypeDeclaration.properties.example.name);\n\t                if (exampleElement) {\n\t                    var examples = node.localType().examples();\n\t                    if (examples && examples.length == 1) {\n\t                        var example = examples[0];\n\t                        addExampleControl(x, node, exampleElement, example, result);\n\t                    }\n\t                }\n\t            }\n\t            else if (universehelpers.isExamplesProperty(x)) {\n\t                var exampleElements = node.elementsOfKind(universe.Universe10.TypeDeclaration.properties.examples.name);\n\t                if (exampleElements && exampleElements.length > 0) {\n\t                    var examples = node.localType().examples();\n\t                    exampleElements.forEach(function (exampleElement) {\n\t                        var exampleElementName = exampleElement.attrValue(universe.Universe10.ExampleSpec.properties.name.name);\n\t                        if (exampleElementName) {\n\t                            var example = _.find(examples, function (currentExample) { return currentExample.name() == exampleElementName; });\n\t                            if (example) {\n\t                                addExampleControl(x, node, exampleElement, example, result);\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        });\n\t    }\n\t    if (!dialog) {\n\t        result.addItemToCategory(\"Palette\", new ActionsItem(node));\n\t        var visibleActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t        var cats = _.groupBy(visibleActions, function (x) { return x.category.join(\"/\"); });\n\t        for (var cat in cats) {\n\t            result.addItemToCategory(\"Palette\", new ContextActionsItem(node, cat, cats[cat]));\n\t        }\n\t    }\n\t    if (node.definition().getAdapter(def.RAMLService).isUserDefined() || node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t        result.addItemToCategory(\"Type\", new TypeDisplayItem(node));\n\t    }\n\t    return result;\n\t}\n\texports.buildItem = buildItem;\n\t\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar KeyValuePair = (function () {\n\t    function KeyValuePair() {\n\t    }\n\t    return KeyValuePair;\n\t})();\n\texports.KeyValuePair = KeyValuePair;\n\tvar Map = (function () {\n\t    function Map(ms) {\n\t        var _this = this;\n\t        if (ms === void 0) { ms = []; }\n\t        this.mappings = [];\n\t        ms.forEach(function (m) { return _this.mappings.push(m); });\n\t    }\n\t    Map.prototype.volume = function () { return this.mappings.length; };\n\t    Map.prototype.pairs = function () { return [].concat(this.mappings); };\n\t    Map.prototype.set = function (key, value) {\n\t        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n\t        if (pairs.length == 0)\n\t            this.mappings.push({ key: key, value: value });\n\t        else\n\t            pairs[0].value = value;\n\t    };\n\t    Map.prototype.get = function (key) {\n\t        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n\t        return (pairs.length == 0) ? null : pairs[0].value;\n\t    };\n\t    Map.prototype.map = function (callbackfn) {\n\t        return this.mappings.map(function (x) { return x.value; }).map(callbackfn);\n\t    };\n\t    Map.prototype.forEach = function (callbackfn) {\n\t        this.mappings.map(function (x) { return x.value; }).forEach(callbackfn);\n\t    };\n\t    Map.prototype.filter = function (callbackfn) {\n\t        return this.mappings.map(function (x) { return x.value; }).filter(callbackfn);\n\t    };\n\t    return Map;\n\t})();\n\texports.Map = Map;\n\t\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../typings/main.d.ts\" />\n\tvar invariant = __webpack_require__(68);\n\tvar exists = function (v) { return (v != null); };\n\tvar globalEmptyOpt;\n\tvar Opt = (function () {\n\t    function Opt(_value) {\n\t        var _this = this;\n\t        this._value = _value;\n\t        this._isDefined = false;\n\t        this._isEmpty = true;\n\t        this._arr = undefined;\n\t        this.getOrThrow = function () {\n\t            invariant(_this._isDefined, 'Opt is empty. Use `Opt#getOrElse` or check `Opt#isDefined`.');\n\t            return _this._value;\n\t        };\n\t        this.value = function () { return _this._value; };\n\t        this.isDefined = function () { return _this._isDefined; };\n\t        this.isEmpty = function () { return _this._isEmpty; };\n\t        this.toArray = function () { return _this._arr || (_this._arr = _this._isDefined ? [_this._value] : []); };\n\t        this.getOrElse = function (v) { return _this._isDefined ? _this._value : v; };\n\t        this.getOrElseF = function (v) { return _this._isDefined ? _this._value : v(); };\n\t        this.map = function (f) { return _this._isEmpty ? Opt.empty() : new Opt(f(_this._value)); };\n\t        this.flatMap = function (f) { return _this.map(f).getOrElse(Opt.empty()); };\n\t        this.equals = function (other) {\n\t            invariant(other instanceof Opt, 'Expected other to be an `Opt`, but got `%s`', typeof other);\n\t            return (_this._isDefined === other.isDefined()) && (_this._value === other.value());\n\t        };\n\t        if (exists(this._value)) {\n\t            this._isDefined = true;\n\t            this._isEmpty = false;\n\t        }\n\t    }\n\t    Opt.prototype.forEach = function (fn) {\n\t        if (this.isDefined()) {\n\t            fn(this._value);\n\t        }\n\t    };\n\t    /**\n\t     * You can always create an empty option by hand just by calling new Opt<T>()\n\t     * but calling this method will return a global instance instead of allocating a new one each time\n\t     */\n\t    Opt.empty = function () { return (globalEmptyOpt || (globalEmptyOpt = new Opt())); };\n\t    return Opt;\n\t})();\n\tmodule.exports = Opt;\n\t\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"marked\");\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"classnames\");\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"react-pure-render/component\");\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"pretty-data\");\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"invariant\");\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar UI = __webpack_require__(17);\n\tvar hl = __webpack_require__(22);\n\tvar universes = hl.universes;\n\tvar stubs = hl.stubs;\n\tvar _ = __webpack_require__(23);\n\tvar ds = hl.ds;\n\tvar editorTools = __webpack_require__(5);\n\tvar Inserter = (function () {\n\t    function Inserter(value, property, node) {\n\t        this.value = value;\n\t        this.property = property;\n\t        this.node = node;\n\t    }\n\t    Inserter.prototype.insert = function () {\n\t        var rn = this.property.range();\n\t        var key = this.value;\n\t        if (this.property.nameId() == universes.Universe10.Method.properties.body.name) {\n\t            key = \"application/json\";\n\t        }\n\t        if (this.property.nameId() == universes.Universe10.MethodBase.properties.responses.name) {\n\t            key = \"200\";\n\t        }\n\t        //TODO we need to take care of keys globally, including collections\n\t        //if (this.property.nameId() == universes.Universe10.TypeDeclaration.properties.xml.name\n\t        //    && this.node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name)) {\n\t        //    key = universes.Universe10.XMLSerializationHints.properties.name.name;\n\t        //}\n\t        var newNode = stubs.createStubNode(rn, this.property, key);\n\t        editorTools.aquireManager()._cleanOutline = true;\n\t        //this is a hack TODO FIX ME we should remove it after we will fix partial reconcile on outline\n\t        this.node.add(newNode);\n\t        editorTools.aquireManager().patchCurrentNode(this.node);\n\t    };\n\t    return Inserter;\n\t})();\n\tfunction generateSuggestionsPanel(node) {\n\t    var cm = node.definition().allProperties();\n\t    var result = UI.vc();\n\t    var hc = UI.hc();\n\t    result.addChild(UI.h3(\"Insertions and Delete: \"));\n\t    result.addChild(hc);\n\t    cm.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            return;\n\t        }\n\t        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n\t            return;\n\t        }\n\t        if (_.find(node.lowLevel().children(), function (y) { return y.key() == x.nameId(); })) {\n\t            return;\n\t        }\n\t        if (node.lowLevel().includesContents()) {\n\t            return;\n\t        }\n\t        var inserter = new Inserter(\"\", x, node);\n\t        hc.addChild(UI.button(x.nameId(), UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.INFO, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n\t    });\n\t    cm.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            return;\n\t        }\n\t        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n\t            var enums = x.enumOptions();\n\t            if (enums) {\n\t                enums.forEach(function (y) {\n\t                    if (_.find(node.lowLevel().children(), function (z) { return z.key() == y; })) {\n\t                        return;\n\t                    }\n\t                    if (node.lowLevel().includesContents()) {\n\t                        return;\n\t                    }\n\t                    var inserter = new Inserter(y, x, node);\n\t                    hc.addChild(UI.button(y, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.WARNING, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n\t                });\n\t            }\n\t            return;\n\t        }\n\t    });\n\t    hc.addChild(UI.button(\"Delete\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.ERROR, UI.Icon.NONE, function (x) { return node.parent().remove(node); }).margin(3, 3, 3, 3));\n\t    return result;\n\t}\n\texports.generateSuggestionsPanel = generateSuggestionsPanel;\n\t\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar _ = __webpack_require__(23);\n\tvar UI = __webpack_require__(17);\n\tvar hl = __webpack_require__(22);\n\tvar def = hl.ds;\n\tfunction findBuiltInValueType(type) {\n\t    if (type.isValueType() && type.isBuiltIn())\n\t        return type;\n\t    var superTypes = type.allSuperTypes();\n\t    if (superTypes == null || superTypes.length == 0)\n\t        return null;\n\t    return _.find(superTypes, function (superType) { return (superType.isValueType() && superType.isBuiltIn()); });\n\t}\n\tfunction getValueTypeDisplayName(type) {\n\t    var builtinValueType = findBuiltInValueType(type);\n\t    if (!builtinValueType)\n\t        type.nameId() ? type.nameId() : \"\";\n\t    if (builtinValueType.nameId() == \"StringType\") {\n\t        return \"string\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"AnyType\") {\n\t        return \"any\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"NumberType\") {\n\t        return \"number\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"IntegerType\") {\n\t        return \"integer\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"NullType\") {\n\t        return \"null\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"TimeOnlyType\") {\n\t        return \"time-only\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"DateOnlyType\") {\n\t        return \"date-only\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"DateTimeOnlyType\") {\n\t        return \"datetime-only\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"DateTimeType\") {\n\t        return \"datetime\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"FileType\") {\n\t        return \"file\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"BooleanType\") {\n\t        return \"boolean\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"AnnotationTarget\") {\n\t        return \"annotation target\";\n\t    }\n\t    return builtinValueType.nameId() ? builtinValueType.nameId() : \"\";\n\t}\n\tfunction getTypeDisplayName(type) {\n\t    if (type == null)\n\t        return \"\";\n\t    if (type.isValueType()) {\n\t        return getValueTypeDisplayName(type);\n\t    }\n\t    else if (type.hasArrayInHierarchy()) {\n\t        var componentType = type.arrayInHierarchy().componentType();\n\t        if (componentType && componentType.nameId()) {\n\t            return getTypeDisplayName(componentType) + \"[]\";\n\t        }\n\t        else {\n\t            return \"array\";\n\t        }\n\t    }\n\t    else if (type.hasUnionInHierarchy()) {\n\t        var asUnion = type.unionInHierarchy();\n\t        return getTypeDisplayName(asUnion.leftType()) +\n\t            \" | \" + getTypeDisplayName(asUnion.rightType());\n\t    }\n\t    return type.nameId() ? type.nameId() : \"\";\n\t}\n\texports.getTypeDisplayName = getTypeDisplayName;\n\tvar renderType = function (definition) {\n\t    var result = UI.vc();\n\t    result.addChild(UI.label(\"definition:\" + getTypeDisplayName(definition)));\n\t    var elements = definition.properties();\n\t    var superTypes = definition.superTypes();\n\t    if (superTypes) {\n\t        result.addChild(UI.h3(\"Super types:\"));\n\t        definition.allSuperTypes().forEach(function (x) {\n\t            result.addChild(UI.hc(UI.label(getTypeDisplayName(x), UI.Icon.TAG)));\n\t        });\n\t    }\n\t    var rf = definition.getAdapter(def.RAMLService).getRepresentationOf();\n\t    if (rf) {\n\t        var facets = rf.getFixedFacets();\n\t        if (Object.keys(facets).length > 0) {\n\t            result.addChild(UI.h3(\"All facets\"));\n\t            Object.keys(facets).forEach(function (x) {\n\t                result.addChild(UI.label(x + \":\" + facets[x].value()));\n\t            });\n\t        }\n\t    }\n\t    if (elements && elements.length > 0) {\n\t        result.addChild(UI.h3(\"All properties\"));\n\t        elements.forEach(function (property) {\n\t            var propertyName = property.nameId();\n\t            if (!property.isRequired()) {\n\t                propertyName += \"?\";\n\t            }\n\t            result.addChild(UI.hc(UI.label(propertyName, UI.Icon.LINK), UI.label(\": \" + getTypeDisplayName(property.range()), UI.Icon.NONE, UI.TextClasses.WARNING)));\n\t        });\n\t    }\n\t    if (definition.hasArrayInHierarchy()) {\n\t        result.addChild(UI.h3(\"Component type:\"));\n\t        result.addChild(renderType(definition.arrayInHierarchy().componentType()));\n\t    }\n\t    if (definition.hasUnionInHierarchy()) {\n\t        result.addChild(UI.h3(\"Union type:\"));\n\t        result.addChild(UI.h3(\"Left:\"));\n\t        result.addChild(renderType(definition.unionInHierarchy().leftType()));\n\t        result.addChild(UI.h3(\"Right:\"));\n\t        result.addChild(renderType(definition.unionInHierarchy().rightType()));\n\t    }\n\t    return result;\n\t};\n\tfunction render(node) {\n\t    var wn = node.wrapperNode();\n\t    var definition = wn.highLevel().localType();\n\t    return renderType(definition);\n\t}\n\texports.render = render;\n\t\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar hl = __webpack_require__(22);\n\tvar ds = hl.ds;\n\tvar universe = ds.universesInfo;\n\tfunction getDefaultValue(node, property) {\n\t    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n\t        return node.name().indexOf(\"?\") == node.name().length - 1;\n\t    }\n\t}\n\texports.getDefaultValue = getDefaultValue;\n\tfunction hasDefault(property) {\n\t    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\texports.hasDefault = hasDefault;\n\t\n\n\n/***/ }\n/******/ ])\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8bcdd317b0b69fa9a856\n **/","/// <reference path=\"../../typings/main.d.ts\" />\nvar Console = require('./console/index');\nvar apiList = require('./popular-apis/popular-apis');\nvar editorTools = require('./editor-tools/editor-tools');\nvar quickCommands = require('./quick-commands/quick-commands');\nvar provider = require(\"./suggestion/provider\");\nvar quickOutline = require(\"./quick-outline/quick-outline\");\nvar decl = require(\"./dialogs/assist-utils\");\nvar linterUI = require(\"./core/linter-ui\");\nvar CompositeDisposable = require('atom').CompositeDisposable;\nvar commandManager = require(\"./quick-commands/command-manager\");\nvar contextMenu = require(\"./context-menu/contextMenu\");\nvar commonContextActions = require(\"./context-menu/commonContextActions\");\nvar quickFixActions = require(\"./context-menu/quickFix\");\nvar package_entry_point;\n(function (package_entry_point) {\n    var subscriptions = new CompositeDisposable();\n    function activate(state) {\n        require('atom-package-deps').install('api-workbench', true)\n            .then(function () {\n            subscriptions.add(atom.commands.add('atom-workspace', {\n                'api-workbench:popular-apis': apiList.showPopularApis,\n                'api-workbench:editor-tools': editorTools.initEditorTools,\n                'api-workbench:console': Console.toggle,\n                'api-workbench:go-to-definition': decl.gotoDeclaration,\n                'api-workbench:find-usages': decl.findUsages,\n                'api-workbench:quick-outline': quickOutline.show,\n                'api-workbench:quick-commands': quickCommands.showCommands,\n                'api-workbench:rename': decl.renameRAMLElement,\n                'api-workbench:new-project': decl.newProject,\n                'api-workbench:select-node': decl.select\n            }));\n            subscriptions.add(atom.workspace.addOpener(Console.opener));\n            //subscriptions.add(atom.workspace.addOpener(RamlScriptReport.opener))\n            commandManager.initialize();\n            contextMenu.initialize();\n            commonContextActions.initialize();\n            quickCommands.registerCommands();\n            quickFixActions.initialize();\n            editorTools.initEditorTools();\n        });\n    }\n    package_entry_point.activate = activate;\n    function getProvider() {\n        return provider;\n    }\n    package_entry_point.getProvider = getProvider;\n    function provideLinter() {\n        return linterUI;\n    }\n    package_entry_point.provideLinter = provideLinter;\n    function consumeLinter(linterApi) {\n        subscriptions.add(linterUI.initEditorObservers(linterApi));\n    }\n    package_entry_point.consumeLinter = consumeLinter;\n    function deactivate() {\n        subscriptions.dispose();\n    }\n    package_entry_point.deactivate = deactivate;\n    package_entry_point.config = {\n        grammars: {\n            type: 'array',\n            default: [\n                'source.raml'\n            ]\n        },\n        openConsoleInSplitPane: {\n            type: 'boolean',\n            default: true\n        }\n    };\n})(package_entry_point || (package_entry_point = {}));\nmodule.exports = package_entry_point;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/main.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = require(\"atom\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"atom-package-deps\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom-package-deps\"\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar url = require('url');\nvar ConsoleView = require('./console-view');\natom.deserializers.add({\n    name: 'RAMLConsoleView',\n    deserialize: function (state) {\n        if (state) {\n            return createConsoleView(state);\n        }\n    }\n});\nfunction createConsoleView(opts) {\n    return new ConsoleView.RAMLConsoleView(opts);\n}\nexports.createConsoleView = createConsoleView;\nfunction isConsoleView(obj) {\n    return obj instanceof ConsoleView.RAMLConsoleView;\n}\nexports.isConsoleView = isConsoleView;\nfunction toggle() {\n    if (isConsoleView(atom.workspace.getActivePaneItem())) {\n        atom.workspace.destroyActivePaneItem();\n        return;\n    }\n    var editor = atom.workspace.getActiveTextEditor();\n    if (!editor) {\n        atom.notifications.addInfo('The API Console can only be opened when focused on a RAML file editor.');\n        return;\n    }\n    var grammars = atom.config.get('api-workbench.grammars') || [];\n    if (grammars.indexOf(editor.getGrammar().scopeName) === -1) {\n        atom.notifications.addInfo('The API Console can only be opened with focus on a RAML file.');\n        return;\n    }\n    if (!removeConsoleForEditor(editor)) {\n        addConsoleForEditor(editor);\n        return;\n    }\n}\nexports.toggle = toggle;\nfunction removeConsoleForEditor(editor) {\n    var uri = ConsoleView.RAMLConsoleView.getUriForEditor(editor);\n    var previewPane = atom.workspace.paneForURI(uri);\n    if (previewPane) {\n        previewPane.destroyItem(previewPane.itemForURI(uri));\n        return true;\n    }\n    return false;\n}\nexports.removeConsoleForEditor = removeConsoleForEditor;\nfunction addConsoleForEditor(editor, state) {\n    return open(ConsoleView.RAMLConsoleView.getUriForEditor(editor), state);\n}\nexports.addConsoleForEditor = addConsoleForEditor;\nfunction addConsoleForFile(filename, state) {\n    return open(ConsoleView.RAMLConsoleView.getUriForFilename(filename), state);\n}\nexports.addConsoleForFile = addConsoleForFile;\nfunction opener(uri) {\n    try {\n        var result = url.parse(uri);\n        var protocol = result.protocol;\n        var host = result.host;\n        var pathname = result.pathname;\n    }\n    catch (err) {\n        return;\n    }\n    if (protocol !== 'raml-console:') {\n        return;\n    }\n    try {\n        pathname = decodeURI(pathname || '').substr(1);\n    }\n    catch (err) {\n        return;\n    }\n    if (host === 'editor') {\n        return createConsoleView({ editorId: pathname });\n    }\n    return createConsoleView({ filename: pathname });\n}\nexports.opener = opener;\nfunction shouldSplit() {\n    return atom.config.get('api-workbench.openConsoleInSplitPane');\n}\nfunction getWorkspaceOptions() {\n    return {\n        activatePane: false,\n        searchAllPanes: true,\n        split: shouldSplit() ? 'right' : undefined\n    };\n}\nfunction openView(raml, state) {\n    var pane = atom.workspace.getActivePane();\n    var item = createConsoleView({ raml: raml, state: state });\n    // TODO(blakeembrey): Fix RAML instance passed in, RAML 0.8 interface is dead.\n    if (shouldSplit()) {\n        pane = pane.findOrCreateRightmostSibling();\n    }\n    atom.workspace.itemOpened(item);\n    pane.activateItem(item);\n    return Promise.resolve(item);\n}\nexports.openView = openView;\nfunction open(uri, state) {\n    var workspaceOptions = getWorkspaceOptions();\n    var previousActivePane = atom.workspace.getActivePane();\n    return atom.workspace.open(uri, workspaceOptions)\n        .then(function (view) {\n        view.setState(state);\n        return view;\n    });\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/console/index.js\n ** module id = 3\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar path = require('path');\nvar fs = require('fs');\nvar UI = require(\"atom-ui-lib\");\nvar SC = require(\"../util/ScrollViewUI\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar childProcess = require('child_process');\nvar atom = require('../core/atomWrapper');\nvar fileDialogUtils = UI.fdUtils;\nvar XMLHttpRequestConstructor = require(\"xmlhttprequest\").XMLHttpRequest;\nvar mkdirp = require('mkdirp');\nvar defaultBranch = \"production\";\nfunction buildXHR() {\n    var x = new XMLHttpRequestConstructor;\n    return x;\n}\nvar ExecConfig = (function () {\n    function ExecConfig() {\n        this.callPath = null;\n        this.wrkDir = null;\n        this.logEnabled = false;\n        this.errLogEnabled = true;\n        this.messageBefore = '';\n        this.messageAfter = '';\n        this.messageError = '';\n        this.maxLogLength = -1;\n        this.onError = null;\n    }\n    return ExecConfig;\n})();\nfunction execProcess(config) {\n    try {\n        if (config.logEnabled) {\n            console.log(config.messageBefore);\n        }\n        var logObj = childProcess.execSync(config.callPath, {\n            cwd: config.wrkDir,\n            encoding: 'utf8',\n            stdio: [0, 1, 2]\n        });\n        if (config.logEnabled) {\n            console.log(config.messageAfter);\n            if (logObj) {\n                var log = logObj.toString();\n                if (log.trim().length > 0) {\n                    if (config.maxLogLength < 0) {\n                        console.log(log);\n                    }\n                    else if (config.maxLogLength > 0) {\n                        console.log(log.substring(0, Math.min(config.maxLogLength, log.length)));\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        if (config.onError) {\n            config.onError(err);\n        }\n        if (config.errLogEnabled) {\n            console.log(config.messageError);\n            console.log(err.message);\n        }\n    }\n}\nfunction branches(repoName, cb) {\n    var xhr = buildXHR();\n    var reposLink = 'https://api.github.com/repos/raml-apis/' + repoName + '/branches';\n    xhr.open(\"GET\", reposLink);\n    xhr.onload = function () {\n        var data = JSON.parse(xhr.responseText);\n        cb(data);\n    };\n    xhr.send();\n}\nfunction gitInstalled() {\n    var errorOccured = false;\n    var config = new ExecConfig();\n    config.callPath = 'git version';\n    config.wrkDir = fileDialogUtils.getHome();\n    config.logEnabled = true;\n    config.messageError = 'Git launch failed';\n    config.onError = function () {\n        errorOccured = true;\n    };\n    execProcess(config);\n    return !errorOccured;\n}\nexports.gitInstalled = gitInstalled;\nvar RamlOutline = (function (_super) {\n    __extends(RamlOutline, _super);\n    function RamlOutline() {\n        _super.apply(this, arguments);\n        this.disposables = new UI.CompositeDisposable();\n    }\n    RamlOutline.prototype.getTitle = function () {\n        return \"RAML Apis\";\n    };\n    RamlOutline.prototype.load = function () {\n        var reposLink = 'https://api.github.com/orgs/raml-apis/repos?per_page=200';\n        var sec = UI.section(\"RAML Apis\");\n        var xhr = buildXHR();\n        sec.addChild(UI.label(\"loading...\"));\n        this.html(sec.renderUI());\n        xhr.open(\"GET\", reposLink);\n        var outer = this;\n        var home = fileDialogUtils.getHome();\n        var dir = path.resolve(home, \"apis\");\n        var apiListData = require('../../util/config/apiList.json');\n        var secHC = UI.hc();\n        var sett = UI.a(\"Cloning to: \" + dir + \"(click to change)\", function (x) {\n            fileDialogUtils.openFolderDialog(\"Please enter new path to clone\", function (newVal) {\n                dir = newVal;\n                sett.setText(\"Cloning to: \" + dir + \"(click to change)\");\n            }, true, dir);\n        }, UI.Icon.SETTINGS, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n        secHC.addChild(sett);\n        var branchLink = UI.a(\"\" + defaultBranch, function (x) {\n            UI.prompt(\"Please enter name of the branch\", function (y) {\n                defaultBranch = y;\n                branchLink.setText(y);\n            }, defaultBranch);\n        }, UI.Icon.GIT_BRANCH, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n        branchLink.margin(10, 0);\n        var l = UI.list(apiListData, function (x) {\n            var uiLabel = UI.label(x.name, UI.Icon.REPO, UI.TextClasses.HIGHLIGHT, UI.HighLightClasses.NONE).pad(10, 10);\n            var buttonCallback = function () {\n                if (!fs.existsSync(dir)) {\n                    fs.mkdirSync(dir);\n                }\n                var ok = cloneRepo(x.git_url, dir);\n                if (ok) {\n                    var output = path.resolve(dir, x.name);\n                    if (!fs.existsSync(dir)) {\n                        fs.mkdirSync(dir);\n                    }\n                    var a = path.resolve(output, \"api.raml\");\n                    if (!fs.existsSync(a)) {\n                        a = path.resolve(output, x.name + \".raml\");\n                    }\n                    if (fs.existsSync(a)) {\n                        atom.open({ pathsToOpen: [output, a] });\n                    }\n                    else {\n                        atom.open({ pathsToOpen: [output] });\n                    }\n                }\n            };\n            var uiButton = UI.button(\"clone\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, buttonCallback);\n            return UI.hc(uiLabel, uiButton);\n        });\n        secHC.addChild(l);\n        outer.html(secHC.renderUI());\n    };\n    RamlOutline.prototype.attached = function () {\n        if (this._isAttached) {\n            return;\n        }\n        this.load();\n        this._isAttached = true;\n    };\n    RamlOutline.prototype.destroy = function () {\n        this.disposables.dispose();\n    };\n    return RamlOutline;\n})(SC.Scrollable);\nfunction info(name, callBack) {\n    var pane = null;\n    var section = UI.section(name, UI.Icon.BOOK, false, false);\n    var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n    buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n    var okButton = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n        pane.destroy();\n    });\n    buttonBar.addChild(okButton);\n    section.addChild(buttonBar);\n    pane = atom.workspace.addModalPanel({\n        item: section.renderUI()\n    });\n}\nexports.info = info;\nfunction cloneRepo(repo, dir, branch) {\n    if (branch === void 0) { branch = null; }\n    if (!branch) {\n        branch = defaultBranch;\n    }\n    var repoName = extractRepoName(repo);\n    mkdirp.sync(dir);\n    var ok = true;\n    var config = new ExecConfig();\n    config.callPath = 'git clone --branch ' + branch + ' \"' + repo + '\"';\n    config.wrkDir = dir;\n    config.logEnabled = true;\n    config.messageBefore = 'Cloning GIT repository: ' + repo;\n    config.messageAfter = 'Cloning complete: ' + repo;\n    config.messageError = 'Cloning failed: ' + repo;\n    config.onError = function (error) {\n        ok = false;\n        info(error.message, function () { return null; });\n    };\n    execProcess(config);\n    return ok;\n}\nfunction extractRepoName(repoPath) {\n    return repoPath.substring(repoPath.lastIndexOf('/') + 1, repoPath.lastIndexOf('.'));\n}\nfunction showPopularApis() {\n    if (!gitInstalled()) {\n        info(\"GIT is required to clone APIs. Please install GIT.\", function (x) { });\n        return;\n    }\n    editorTools.doSplit(new RamlOutline(), editorTools.SplitDirections.RIGHT);\n}\nexports.showPopularApis = showPopularApis;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/popular-apis/popular-apis.js\n ** module id = 4\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar path = require('path');\nvar atom = require('../core/atomWrapper');\nvar rp = require(\"raml-1-parser\");\nvar project = rp.project;\nvar detailsView = require(\"./details-view\");\nvar outlineView = require(\"./outline-view\");\nvar _bmc = 0;\nfunction benchmark(func) {\n    var t0 = new Date().getTime();\n    if (_bmc != 0 && func)\n        console.log(func + \" took \" + (t0 - _bmc) + \" miliseconds.\");\n    _bmc = t0;\n}\nvar EditorManager = (function () {\n    function EditorManager(display) {\n        var _this = this;\n        if (display === void 0) { display = true; }\n        this._initialized = false;\n        this.updateCount = 0;\n        this.outlineCount = 0;\n        this.fire = true;\n        this.opened = false;\n        this._cleanOutline = false;\n        this.performanceDebug = true;\n        this.placeholder = false;\n        manager = window[\"manager\"] = this;\n        atom.workspace.onDidChangeActivePaneItem(function (e) { return _this.updateEverything(display); });\n        this.updateEverything(display);\n        this.addAutoCloseListener();\n    }\n    EditorManager.prototype.getPath = function () {\n        console.log(\"ETM::GetPath\");\n        return this.currentEditor ? this.currentEditor.getPath() : null;\n    };\n    EditorManager.prototype.getCurrentEditor = function () { return this.currentEditor; };\n    EditorManager.prototype.internalScheduleUpdateViews = function (count) {\n        var _this = this;\n        this.updateCount = count;\n        setTimeout(function () {\n            if (_this.updateCount == count) {\n                _this.updateViews();\n            }\n        }, 500);\n    };\n    EditorManager.prototype.scheduleViewsUpdate = function () {\n        if (this.fire) {\n            this.internalScheduleUpdateViews(this.updateCount + 1);\n        }\n    };\n    EditorManager.prototype.internalScheduleOutlineUpdate = function (count) {\n        var _this = this;\n        this.outlineCount = count;\n        setTimeout(function () {\n            if (_this.outlineCount == count) {\n                _this.updateOutline();\n            }\n        }, 500);\n    };\n    EditorManager.prototype.scheduleOutlineUpdate = function () {\n        this.internalScheduleOutlineUpdate(this.outlineCount + 1);\n    };\n    EditorManager.prototype.addAutoCloseListener = function () {\n        var _this = this;\n        atom.workspace.onDidDestroyPane(function (evt) {\n            try {\n                var edcount = atom.workspace.getPaneItems().filter(function (e) {\n                    return e['softTabs'] != undefined;\n                }).length;\n                if (edcount == 0) {\n                    _this.ast = null;\n                    _this.unit = null;\n                    _this._currentNode = null;\n                    _this.currentEditor = null;\n                    global.cleanCache();\n                    if (atom.workspace.paneForItem(_this._view))\n                        atom.workspace.paneForItem(_this._view).destroy();\n                    if (atom.workspace.paneForItem(_this._details))\n                        atom.workspace.paneForItem(_this._details).destroy();\n                    _this.opened = false;\n                }\n            }\n            catch (e) {\n                //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n                console.log(e);\n            }\n        });\n    };\n    EditorManager.prototype.getOrCreateView = function () {\n        if (!this._view) {\n            this._view = new outlineView.RamlOutline();\n            if (this.ast) {\n                this._view.setUnit(this.ast);\n            }\n        }\n        return this._view;\n    };\n    EditorManager.prototype.getDetails = function () {\n        if (!this._details)\n            this._details = new detailsView.RamlDetails();\n        return this._details;\n    };\n    EditorManager.prototype.updateDetails = function () {\n        this.getDetails().update();\n    };\n    EditorManager.prototype.reparseAST = function () {\n        var _this = this;\n        if (this.currentEditor) {\n            var _path = this.currentEditor.getPath();\n            var bf = this.currentEditor.getBuffer();\n            var prj = project.createProject(path.dirname(_path));\n            var unit = prj.setCachedUnitContent(path.basename(_path), this.currentEditor.getBuffer().getText());\n            unit.project().addTextChangeListener(function (delta) {\n                if (delta.unit != unit) {\n                    return;\n                }\n                var cm = delta.offset;\n                var end = delta.replacementLength;\n                var text = delta.text;\n                var buffer = _this.currentEditor.getBuffer();\n                var start = buffer.positionForCharacterIndex(cm);\n                var endPosition = buffer.positionForCharacterIndex(cm + end);\n                try {\n                    _this.fire = false;\n                    buffer.setTextInRange({ start: start, end: endPosition }, text);\n                    _this.scheduleOutlineUpdate();\n                }\n                finally {\n                    _this.fire = true;\n                }\n            });\n            this.ast = unit.highLevel();\n            this.unit = unit;\n        }\n    };\n    EditorManager.prototype.isETPane = function (pane) {\n        if (!this._view) {\n            return;\n        }\n        var items = pane.getItems();\n        return (items.indexOf(this.getDetails()) >= 0 || items.indexOf(this._view) >= 0);\n    };\n    EditorManager.prototype.display = function () {\n        console.log(\"ETM::Display\");\n        var aw = atom.workspace;\n        var fpane = atom.workspace.paneForItem(this.getCurrentEditor());\n        if (!fpane)\n            return;\n        if (!aw.paneForItem(this.getOrCreateView()))\n            doSplit(this.getOrCreateView());\n        if (!aw.paneForItem(manager.getDetails()))\n            doSplit(this.getDetails(), SplitDirections.BOTTOM);\n        this.opened = true;\n    };\n    EditorManager.prototype.updateText = function (node) {\n        this.fire = false;\n        var editor = this.currentEditor;\n        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n        editor.setText(this.unit.contents());\n        this.fire = true;\n        if (pos)\n            editor.setCursorBufferPosition(pos);\n    };\n    EditorManager.prototype.selectNode = function (hnode) {\n        var node = hnode.lowLevel();\n        if (!node)\n            return;\n        var editor = this.currentEditor;\n        if (!editor)\n            return;\n        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n        if (pos)\n            editor.setCursorBufferPosition(pos);\n    };\n    EditorManager.prototype.updateEverything = function (display) {\n        if (display === void 0) { display = true; }\n        var editor = atom.workspace.getActiveTextEditor();\n        if (!editor || this.currentEditor == editor)\n            return;\n        var pth = editor.getPath();\n        if (!pth || path.extname(pth) != \".raml\")\n            return;\n        this.currentEditor = editor;\n        if (this.opened == false && display)\n            this.display();\n        if (!editor.patched) {\n            this.addListenersToEditor(editor);\n        }\n        this.reparseAST();\n        var pos = editor.getBuffer().characterIndexForPosition(editor.getCursorBufferPosition());\n        this.positionUpdated(pos);\n        this.scheduleViewsUpdate();\n    };\n    EditorManager.prototype.addListenersToEditor = function (cedit) {\n        var _this = this;\n        var buffer = cedit.getBuffer();\n        buffer.onDidChange(function (x) {\n            try {\n                var t0 = new Date().getMilliseconds();\n                _this.reparseAST();\n                var pos = buffer.characterIndexForPosition(cedit.getCursorBufferPosition());\n                _this.positionUpdated(pos);\n                _this.scheduleViewsUpdate();\n                var t1 = new Date().getMilliseconds();\n                if (_this.performanceDebug) {\n                    console.log(\"Change take:\" + (t1 - t0));\n                }\n            }\n            catch (e) {\n                console.log(e);\n            }\n        });\n        //updating ast node on position change\n        cedit.getLastCursor().onDidChangePosition(function (x) {\n            if (!_this.fire)\n                return;\n            _this.positionUpdated(buffer.characterIndexForPosition(cedit.getCursorBufferPosition()));\n            _this.scheduleViewsUpdate();\n        });\n        this.addListenersOnMove(cedit);\n        this.currentEditor.patched = true;\n    };\n    EditorManager.prototype.addListenersOnMove = function (cedit) {\n        var _this = this;\n        var movingPane = false;\n        atom.workspace.onDidAddPaneItem(function (event) {\n            if (movingPane || _this.isETPane(event.pane) == false || event.item == _this.getOrCreateView() || event.item == _this.getDetails())\n                return event;\n            setTimeout(function () {\n                try {\n                    var fpane = atom.workspace.paneForItem(cedit);\n                    if (fpane) {\n                        movingPane = true;\n                        event.pane.moveItemToPane(event.item, fpane, null);\n                        movingPane = false;\n                        fpane.setActiveItem(event.item);\n                        fpane.activate();\n                    }\n                }\n                catch (e) {\n                    //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n                    console.log(e);\n                }\n            }, 18);\n        });\n    };\n    //_selectedNode: hl.IHighLevelNode;\n    EditorManager.prototype.patchCurrentNode = function (n) {\n        this._currentNode = n;\n    };\n    EditorManager.prototype.getCurrentNode = function () {\n        if (this._currentNode == null)\n            return this._currentNode = this.ast;\n        else\n            return this._currentNode;\n    };\n    EditorManager.prototype.setSelectedNode = function (node) {\n        //this._selectedNode = node;\n        if (this.unit) {\n            var unitPath = this.unit.absolutePath();\n            while (node.lowLevel().unit().absolutePath() != unitPath) {\n                if (!node.parent()) {\n                    break;\n                }\n                else {\n                    node = node.parent();\n                }\n            }\n        }\n        var id = node.id();\n        var anode = this.ast.findById(id);\n        if (anode) {\n            node = anode;\n        }\n        if (this._details) {\n            this._details.show(node);\n        }\n        var editor = this.getCurrentEditor();\n        if (editor) {\n            this.fire = false;\n            try {\n                var buffer = editor.getBuffer();\n                var posStart = buffer.positionForCharacterIndex(node.lowLevel().start());\n                var posEnd = buffer.positionForCharacterIndex(node.lowLevel().end());\n                editor.setCursorBufferPosition(posStart);\n                this.positionUpdated(buffer.characterIndexForPosition(editor.getCursorBufferPosition()));\n            }\n            finally {\n                this.fire = true;\n            }\n        }\n    };\n    EditorManager.prototype.getSelectedNode = function () {\n        return this.getCurrentNode();\n        //else return this._selectedNode;\n    };\n    EditorManager.prototype.setText = function (text) {\n        console.log(\"ETM::SetText\");\n        var editor = this.currentEditor;\n        if (editor == null)\n            return;\n        editor.setText(text);\n    };\n    EditorManager.prototype.updateViews = function () {\n        var cNode = this.getCurrentNode();\n        var ds = new Date().getMilliseconds();\n        if (this._details) {\n            this.getDetails().show(cNode);\n        }\n        if (this._view) {\n            this.getOrCreateView().setUnit(manager.ast);\n            this.getOrCreateView().setSelection(cNode);\n        }\n        var d1 = new Date().getMilliseconds();\n        if (this.performanceDebug) {\n            console.log(\"Views update:\" + (d1 - ds));\n        }\n    };\n    EditorManager.prototype.updateOutline = function () {\n        var cNode = this.getCurrentNode();\n        var ds = new Date().getMilliseconds();\n        if (this._view) {\n            this.getOrCreateView().setUnit(manager.ast);\n            this.getOrCreateView().setSelection(cNode);\n        }\n        var d1 = new Date().getMilliseconds();\n        if (this.performanceDebug) {\n            console.log(\"Outline update:\" + (d1 - ds));\n        }\n    };\n    EditorManager.prototype.positionUpdated = function (newPosition) {\n        this.currentPosition = newPosition;\n        if (this.ast) {\n            this._currentNode = this.ast.findElementAtOffset(this.currentPosition);\n        }\n    };\n    return EditorManager;\n})();\nvar manager = null;\nfunction initEditorTools(display) {\n    if (display === void 0) { display = true; }\n    if (manager == null)\n        manager = new EditorManager(display);\n    else if (display)\n        manager.display();\n}\nexports.initEditorTools = initEditorTools;\nfunction editorToolsStatus() {\n    return manager != null && manager.opened;\n}\nexports.editorToolsStatus = editorToolsStatus;\nfunction aquireManager() {\n    if (!manager) {\n        manager = new EditorManager(true);\n    }\n    return manager;\n}\nexports.aquireManager = aquireManager;\nfunction updateAndSelect(node) {\n    if (aquireManager()._view) {\n        aquireManager()._view.refresh();\n    }\n    aquireManager().updateText();\n    aquireManager().selectNode(node);\n}\nexports.updateAndSelect = updateAndSelect;\n(function (SplitDirections) {\n    SplitDirections[SplitDirections[\"RIGHT\"] = 0] = \"RIGHT\";\n    SplitDirections[SplitDirections[\"LEFT\"] = 1] = \"LEFT\";\n    SplitDirections[SplitDirections[\"TOP\"] = 2] = \"TOP\";\n    SplitDirections[SplitDirections[\"BOTTOM\"] = 3] = \"BOTTOM\";\n})(exports.SplitDirections || (exports.SplitDirections = {}));\nvar SplitDirections = exports.SplitDirections;\nfunction doSplit(value, dir) {\n    if (dir === void 0) { dir = SplitDirections.RIGHT; }\n    var newPane = null;\n    switch (dir) {\n        case SplitDirections.BOTTOM:\n            newPane = atom.workspace.getActivePane().splitDown({});\n            break;\n        case SplitDirections.TOP:\n            newPane = atom.workspace.getActivePane().splitUp({});\n            break;\n        case SplitDirections.LEFT:\n            newPane = atom.workspace.getActivePane().splitLeft({});\n            break;\n        case SplitDirections.RIGHT:\n            newPane = atom.workspace.getActivePane().splitRight({});\n            break;\n    }\n    newPane.addItem(value, 0);\n    return newPane;\n}\nexports.doSplit = doSplit;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/editor-tools.js\n ** module id = 5\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar qcui = require('./quick-commands-ui');\nvar atom = require('../core/atomWrapper');\nvar contextActions = require(\"../context-menu/contextActions\");\nvar cc = require('./code-commands');\nvar et = require('../editor-tools/editor-tools');\n/*\n * Quick command is a command object that stores command info, body and filtering function\n */\nvar QuickCommand = (function () {\n    function QuickCommand(id, title, command, priority, when) {\n        this.id = id;\n        this.title = title;\n        this.command = command;\n        this.priority = priority;\n        this.when = when;\n    }\n    QuickCommand.prototype.registerAsAtomCommand = function (target) {\n        if (this.atomCommand && this.atomCommand.disposed == false)\n            this.atomCommand.dispose();\n        this.atomCommand = atom.commands.add(target, this.id, this.command);\n    };\n    QuickCommand.prototype.dispose = function () {\n        if (this.atomCommand && this.atomCommand.disposed == false)\n            this.atomCommand.dispose();\n        cm.unregister(this);\n    };\n    return QuickCommand;\n})();\nexports.QuickCommand = QuickCommand;\n/*\n * Command manager manages quick commands.\n * All quick commands should be registered here.\n * For usage example, see registerCommands\n */\nvar CommandManager = (function () {\n    function CommandManager() {\n        this.commands = {};\n        this.panel = new qcui.SelectListView(function (command) { return command.command(); }, function (command) { return command.title; }, 'title');\n    }\n    CommandManager.prototype.register = function (cmd) {\n        if (this.commands[cmd.id] != null)\n            this.unregister(cmd.id);\n        this.commands[cmd.id] = cmd;\n        return cmd;\n    };\n    CommandManager.prototype.unregister = function (cmd) {\n        if (typeof (cmd) == \"string\")\n            this.unregister(this.commands[cmd]);\n        var qcmd = cmd;\n        if (qcmd == null)\n            return null;\n        delete this.commands[qcmd.id];\n        return qcmd;\n    };\n    CommandManager.prototype.add = function (id, title, command, when, priority, atomTarget) {\n        var cmd = new QuickCommand(id, title, command, priority ? priority : 0, when ? when : function () { return true; });\n        if (atomTarget)\n            cmd.registerAsAtomCommand(atomTarget);\n        this.register(cmd);\n        return cmd;\n    };\n    CommandManager.prototype.show = function (predicate) {\n        var joinedCommands = {};\n        for (var commandId in this.commands) {\n            joinedCommands[commandId] = this.commands[commandId];\n        }\n        this.getDynamicCommands().forEach(function (currentCommand) {\n            joinedCommands[currentCommand.id] = currentCommand;\n        });\n        var list = Object.keys(joinedCommands)\n            .map(function (key) { return joinedCommands[key]; })\n            .sort(function (a, b) { return b.priority - a.priority; })\n            .filter(function (cmd) { return cmd.when(); });\n        if (predicate)\n            list = list.filter(predicate);\n        this.panel.show(list);\n    };\n    CommandManager.prototype.getDynamicCommands = function () {\n        var result = [];\n        var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n        currentActions.forEach(function (action) {\n            var convertedQuickCommand = new QuickCommand(action.name, action.label ? action.label : action.name, action.onClick, 1, function () { return true; });\n            var cmd = convertedQuickCommand;\n            cmd['__module__'] = 'editorTools';\n            result.push(convertedQuickCommand);\n        });\n        return result;\n    };\n    return CommandManager;\n})();\nexports.CommandManager = CommandManager;\nvar cm;\n/*\n * Always return working copy of manager.\n */\nfunction manager() {\n    if (!cm)\n        cm = new CommandManager();\n    return cm;\n}\nexports.manager = manager;\n/*\n * function for RAML -> Show Quick Commands (^Q)\n */\nfunction showCommands() {\n    manager().show();\n}\nexports.showCommands = showCommands;\n/*\n * registerCommands is called at the plugin initialization for registering global commands\n */\nfunction registerCommands() {\n    cc.registerQuickCommands(manager());\n    cm.add('api-workbench:editor-tools', 'Show Editor Tools', function () { return et.initEditorTools(); }, function () { return et.editorToolsStatus() == false; });\n}\nexports.registerCommands = registerCommands;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/quick-commands.js\n ** module id = 6\n ** module chunks = 0\n **/","var fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar search = rp.search;\nvar _ = require('underscore');\nvar suggestions = require('raml-suggestions');\nexports.selector = '.source.raml';\nexports.disableForSelector = '.text.html .comment';\nexports.filterSuggestions = true;\nexports.inclusionPriority = 1;\nexports.excludeLowerPriority = true;\nvar editorTools = require(\"../editor-tools/editor-tools\");\nfunction onDidInsertSuggestion(event) {\n    var offset = event.editor.getBuffer().characterIndexForPosition(event.triggerPosition);\n    if (event.suggestion.annotation) {\n        var txt = event.editor.getBuffer().getText();\n        for (var i = offset; i < txt.length; i++) {\n            var c = txt.charAt(i);\n            if (c == ')') {\n                offset = i + 1;\n                break;\n            }\n            if (c == '\\r' || c == '\\n') {\n                return;\n            }\n        }\n        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n        event.editor.getBuffer().insert(newPos, ':');\n        return;\n    }\n    if ((event.suggestion.replacementPrefix && event.suggestion.extra) || event.suggestion.extra == \"%\") {\n        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset - event.suggestion.replacementPrefix.length);\n        event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n    }\n    else {\n        //This actually looks exactly like a previous case but typing it as a separate case for now TODO\n        if (event.suggestion.extra == \" \") {\n            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n        }\n        //FIXME\n        if (event.suggestion.extra == \" { \") {\n            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n        }\n        if (event.suggestion.extra && event.suggestion.extra.indexOf(\"!include\") != -1) {\n            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n        }\n    }\n}\nexports.onDidInsertSuggestion = onDidInsertSuggestion;\nvar ContentProvider = (function () {\n    function ContentProvider() {\n    }\n    ContentProvider.prototype.contentDirName = function (content) {\n        var contentPath = content.getPath();\n        return path.dirname(contentPath);\n    };\n    ContentProvider.prototype.dirName = function (childPath) {\n        return path.dirname(childPath);\n    };\n    ContentProvider.prototype.exists = function (checkPath) {\n        return fs.existsSync(checkPath);\n    };\n    ContentProvider.prototype.resolve = function (contextPath, relativePath) {\n        return path.resolve(contextPath, relativePath);\n    };\n    ContentProvider.prototype.isDirectory = function (dirPath) {\n        var stat = fs.statSync(dirPath);\n        return stat && stat.isDirectory();\n    };\n    ContentProvider.prototype.readDir = function (dirPath) {\n        return fs.readdirSync(dirPath);\n    };\n    return ContentProvider;\n})();\nvar AtomEditorContent = (function () {\n    function AtomEditorContent(textEditor) {\n        this.textEditor = textEditor;\n    }\n    AtomEditorContent.prototype.getText = function () {\n        return this.textEditor.getBuffer().getText();\n    };\n    AtomEditorContent.prototype.getPath = function () {\n        return this.textEditor.getPath();\n    };\n    AtomEditorContent.prototype.getBaseName = function () {\n        return path.basename(this.getPath());\n    };\n    return AtomEditorContent;\n})();\nvar AtomPosition = (function () {\n    function AtomPosition(request) {\n        this.request = request;\n    }\n    AtomPosition.prototype.getOffset = function () {\n        return this.request.editor.getBuffer().characterIndexForPosition(this.request.bufferPosition);\n    };\n    return AtomPosition;\n})();\nfunction getSuggestions(request) {\n    var t0 = new Date().getMilliseconds();\n    try {\n        var atomContent = new AtomEditorContent(request.editor);\n        var atomPosition = new AtomPosition(request);\n        var suggestionsProvider = new suggestions.CompletionProvider(new ContentProvider());\n        return suggestionsProvider.suggest(new suggestions.CompletionRequest(atomContent, atomPosition));\n    }\n    finally {\n        if (editorTools.aquireManager()) {\n            var m = editorTools.aquireManager();\n            if (m.performanceDebug) {\n                var t1 = new Date().getMilliseconds();\n                console.log(\"Completion calc:\" + (t1 - t0));\n            }\n        }\n    }\n}\nexports.getSuggestions = getSuggestions;\nfunction getAstNode(request, clearLastChar, allowNull) {\n    if (clearLastChar === void 0) { clearLastChar = true; }\n    if (allowNull === void 0) { allowNull = true; }\n    var p = request.editor.getPath();\n    var prj = rp.project.createProject(path.dirname(p));\n    var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n    var text = request.editor.getBuffer().getText();\n    var kind = search.determineCompletionKind(text, offset);\n    if (kind == search.LocationKind.KEY_COMPLETION && clearLastChar) {\n        var pos = offset > 0 ? offset - 1 : offset;\n        for (var i = pos; i > 0; i--) {\n            var c = text[i];\n            if (c == '\\r' || c == '\\n') {\n                break;\n            }\n            else {\n                if (c == ' ' || c == '\\t') {\n                    ilevel++;\n                }\n            }\n        }\n        var oldOfffset = offset;\n        text = text.substring(0, oldOfffset) + \"k:\" + text.substring(oldOfffset);\n    }\n    var ilevel = 0;\n    var unit = prj.setCachedUnitContent(path.basename(p), text);\n    var ast = unit.highLevel();\n    var cm = offset;\n    for (var pm = offset - 1; pm >= 0; pm--) {\n        var c = text[pm];\n        //if (c==' '||c=='\\t'||c=='\\r'||c=='\\n'){\n        //    cm=pm-1;\n        //    continue;\n        //}\n        if (c == ' ' || c == '\\t') {\n            cm = pm - 1;\n            continue;\n        }\n        break;\n    }\n    var astNode = ast.findElementAtOffset(cm);\n    if (astNode && astNode.parent() == null) {\n        if (ilevel > 0 && kind == search.LocationKind.KEY_COMPLETION) {\n            var attr = _.find(astNode.attrs(), function (attr) {\n                var at = attr;\n                return at.lowLevel().start() < offset && at.lowLevel().end() >= offset && !at.property().isKey();\n            });\n            if (!attr) {\n                if (allowNull) {\n                    return null;\n                }\n            }\n        }\n    }\n    if (!allowNull && !astNode) {\n        return ast;\n    }\n    return astNode;\n}\nexports.getAstNode = getAstNode;\nfunction saveUnit(unit) {\n    var unitPath = unit.absolutePath();\n    var unitText = unit.contents();\n    //first trying to find an opened text editor\n    var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n        var editorPath = editor.getPath();\n        return editorPath == unitPath;\n    });\n    if (openedEditor) {\n        openedEditor.setText(unitText);\n    }\n    else {\n        fs.writeFileSync(unitPath, unitText);\n    }\n}\nexports.saveUnit = saveUnit;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/suggestion/provider.js\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar path = require('path');\nvar fs = require('fs');\nvar atom_space_pen_views_1 = require(\"atom-space-pen-views\");\nvar provider = require('../suggestion/provider');\nvar tooltipManager = require(\"../core/tooltip-manager\");\nvar UI = require(\"atom-ui-lib\");\nvar outline = require(\"../editor-tools/outline-view\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar QuickOutlineDialog = (function () {\n    function QuickOutlineDialog(_editor) {\n        this._editor = _editor;\n    }\n    QuickOutlineDialog.prototype.extraContent = function (s) {\n    };\n    QuickOutlineDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var nodeToSelect = null;\n        var node = provider.getAstNode({ bufferPosition: this._editor.getCursorBufferPosition(), editor: this._editor }, false, false);\n        var vc = UI.section(\"Quick outline:\");\n        var section = outline.createTree(node.root(), function (x) {\n            if (x.selection) {\n                if (x.selection.elements.length > 0) {\n                    nodeToSelect = x.selection.elements[0];\n                    ok.setDisabled(false);\n                    return;\n                }\n            }\n            ok.setDisabled(true);\n        }, function (model) {\n            var editor = _this._editor;\n            var buffer = editor.getBuffer();\n            var posStart = buffer.positionForCharacterIndex(model.lowLevel().start());\n            editor.setCursorScreenPosition(posStart);\n            zz.destroy();\n        });\n        section.setStyle(\"max-height\", \"800px\");\n        section.addClass(\"tree-view-scroller\");\n        vc.addChild(section);\n        var cancel = UI.buttonSimple(\"Cancel\", function (x) { zz.destroy(); }, UI.Icon.NONE);\n        cancel.setStyle(\"float\", \"right\")\n            .margin(4, 10);\n        var ok = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) {\n            if (nodeToSelect) {\n                editorTools.aquireManager().setSelectedNode(nodeToSelect);\n            }\n            zz.destroy();\n        });\n        ok.setStyle(\"float\", \"right\")\n            .margin(4, 10);\n        ok.setDisabled(true);\n        vc.addChild(ok);\n        vc.addChild(cancel);\n        var html = vc.renderUI();\n        html.tabIndex = 0;\n        html.onkeypress = function (x) {\n            if (x.keyCode == 27) {\n                zz.destroy();\n            }\n        };\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return QuickOutlineDialog;\n})();\nfunction showQuickOutline(editor) {\n    new QuickOutlineDialog(editor).show();\n}\nfunction pixelPositionFromMouseEvent(editorView) {\n    var clientX = 0, clientY = 0;\n    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n    var top = clientY - linesClientRect.top;\n    var left = clientX - linesClientRect.left;\n    return { top: top, left: left };\n}\nfunction getFromShadowDom(element, selector) {\n    var el = element[0];\n    var found = el.rootElement.querySelectorAll(selector);\n    return atom_space_pen_views_1.$(found[0]);\n}\nfunction show() {\n    var ed = atom.workspace.getActiveTextEditor();\n    if (!ed) {\n        return;\n    }\n    var filePath = ed.getPath();\n    var filename = path.basename(filePath);\n    var ext = path.extname(filename);\n    if (!tooltipManager.isAllowedExtension(ext))\n        return;\n    if (!fs.existsSync(filePath)) {\n        return;\n    }\n    showQuickOutline(ed);\n}\nexports.show = show;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-outline/quick-outline.js\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar stubs = rp.stubs;\nvar universes = rp.universes;\nvar search = rp.search;\nvar _ = require(\"underscore\");\nvar provider = require(\"../suggestion/provider\");\nvar UI = require(\"atom-ui-lib\");\nvar SpacePenViews = require('atom-space-pen-views');\nvar def = rp.ds;\nvar services = def;\nvar move = require(\"./moveElementsDialog\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar index_1 = require(\"raml-1-parser/dist/index\");\nfunction createGlobalSchema(attr) {\n    var r = attr.parent().root();\n    var t = attr.property().range().universe().type(\"GlobalSchema\");\n    var sc = stubs.createStubNode(t, t.universe().type(\"Api\").property(\"schemas\"), \"\" + attr.value());\n    sc.attrOrCreate(\"value\").setValue(\"!include \" + \"schemas/\" + attr.value() + \".json\");\n    r.add(sc);\n    var ed = atom.workspace.getActiveTextEditor();\n    ed.getBuffer().setText(r.lowLevel().unit().contents());\n    var sdir = path.resolve(path.dirname(ed.getPath()), \"schemas\");\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = path.resolve(sdir, attr.value() + \".json\");\n    fs.writeFileSync(shFile, \"\\n{\\n  \\\"$schema\\\" : \\\"http://json-schema.org/draft-04/schema\\\" ,\\n  \\\"type\\\" : \\\"object\\\" ,\\n  \\\"properties\\\" : {\\n   }\\n}\\n\");\n    atom.workspace.open(shFile, {});\n}\nexports.createGlobalSchema = createGlobalSchema;\nfunction createGlobalSchemaFromNameAndContent(root, name, schp, content, absolutePath) {\n    if (index_1.universeHelpers.isRAML10Node(root)) {\n        createGlobalSchemaFromNameAndContent10(root, name, schp, content, absolutePath);\n    }\n    else if (index_1.universeHelpers.isRAML08Node(root)) {\n        createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath);\n    }\n}\nexports.createGlobalSchemaFromNameAndContent = createGlobalSchemaFromNameAndContent;\nfunction createSchemaFile(content, schemaPath, absolutePath) {\n    var ed = getActiveEditor();\n    var sdir = absolutePath ? path.dirname(absolutePath) : path.resolve(path.dirname(ed.getPath()), path.dirname(schemaPath));\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = absolutePath ? absolutePath : path.resolve(path.dirname(ed.getPath()), schemaPath);\n    fs.writeFileSync(shFile, content);\n}\nfunction createGlobalSchemaFromNameAndContent10(root, name, schemaPath, content, absolutePath) {\n    var t = root.definition().universe().type(universes.Universe10.TypeDeclaration.name);\n    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe10.Api.name).property(universes.Universe10.Api.properties.types.name), \"\" + name);\n    sc.attrOrCreate(universes.Universe10.TypeDeclaration.properties.type.name).setValue(\"!include \" + schemaPath);\n    root.add(sc);\n    createSchemaFile(content, schemaPath, absolutePath);\n}\nexports.createGlobalSchemaFromNameAndContent10 = createGlobalSchemaFromNameAndContent10;\nfunction createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath) {\n    var t = root.definition().universe().type(universes.Universe08.GlobalSchema.name);\n    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe08.Api.name).property(universes.Universe08.Api.properties.schemas.name), \"\" + name);\n    sc.attrOrCreate(universes.Universe08.GlobalSchema.properties.value.name).setValue(\"!include \" + schp);\n    root.add(sc);\n    createSchemaFile(content, schp, absolutePath);\n}\nexports.createGlobalSchemaFromNameAndContent08 = createGlobalSchemaFromNameAndContent08;\nfunction saveExample(r, schp, content) {\n    var ed = getActiveEditor();\n    var sdir = path.resolve(path.dirname(ed.getPath()), path.dirname(schp));\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = path.resolve(path.dirname(ed.getPath()), schp);\n    fs.writeFileSync(shFile, content);\n}\nexports.saveExample = saveExample;\nvar NewProjectDialog = (function () {\n    function NewProjectDialog(title) {\n        if (title === void 0) { title = \"Create RAML Project\"; }\n        this.title = title;\n        this.apititle = \"New API\";\n        this.version = \"v1\";\n        this.baseUri = \"http://api.samplehost.com\";\n        this._raml1 = true;\n        this._defStructure = true;\n        this._createSampleResource = true;\n        this.sourceValue = path.resolve(this.generateDefaultProjectParentFolder(), \"newRamlProject\");\n    }\n    NewProjectDialog.prototype.generateDefaultProjectParentFolder = function () {\n        return UI.fdUtils.getHome();\n    };\n    NewProjectDialog.prototype.extraContent = function (s) {\n    };\n    NewProjectDialog.prototype.validateProjectLocation = function (value) {\n        var toValidate = value ? value.trim() : \"\";\n        if (!toValidate) {\n            return UI.errorStatus(\"Path should't be empty\");\n        }\n        var parentDirectory = path.dirname(toValidate);\n        if (!parentDirectory || parentDirectory == \".\")\n            return UI.errorStatus(\"Can not find path parent\");\n        if (!fs.existsSync(parentDirectory))\n            return UI.errorStatus(\"Parent directory does not exist\");\n        return UI.okStatus();\n    };\n    NewProjectDialog.prototype.validateTitle = function (value) {\n        var toValidate = value ? value.trim() : \"\";\n        if (!toValidate || toValidate.length < 1) {\n            return UI.errorStatus(\"Title field is required\");\n        }\n        return UI.okStatus();\n    };\n    NewProjectDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var section = UI.section(this.title, UI.Icon.BOOK, false, false, UI.h3(\"Please select location to place your project:\")).pad(10, 10);\n        var panel = new UI.Panel(UI.LayoutType.BLOCK);\n        var statusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n        var slf = new UI.CustomField(\"\", statusLabel, function (x) { return x; });\n        slf.setDisplay(this.validateProjectLocation(this.sourceValue).code == UI.StatusCode.ERROR);\n        panel.addChild(slf);\n        var projectLocationInput = UI.texfField(\"\", this.sourceValue, function (x) { return _this.sourceValue = x.getBinding().get(); });\n        projectLocationInput.getBinding().addValidator(function () { return _this.validateProjectLocation(_this.sourceValue); });\n        projectLocationInput.setStyle(\"width\", \"400px\");\n        projectLocationInput.getBinding().addListener(function (value) {\n            //var st = projectLocationInput.getBinding().status()\n            var st = _this.validateProjectLocation(value);\n            if (st.code != UI.StatusCode.ERROR) {\n                //this.updateUI(q, x)\n                statusLabel.setText(\"\");\n                statusLabel.setIcon(UI.Icon.NONE);\n                slf.setDisplay(false);\n            }\n            else {\n                statusLabel.setText(st.message);\n                statusLabel.setIcon(UI.Icon.BUG);\n                slf.setDisplay(true);\n            }\n        });\n        panel.addChild(\n        //UI.hc(\n        projectLocationInput);\n        panel.addChild(UI.h3(\"Title of your API:\"));\n        var titleStatusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n        var titleStatusMessage = new UI.CustomField(\"\", titleStatusLabel, function (x) { return x; });\n        titleStatusMessage.setDisplay(false);\n        panel.addChild(titleStatusMessage);\n        var titleTextField = UI.texfField(\"\", this.apititle, function (x) { return _this.apititle = x.getBinding().get(); });\n        titleTextField.getBinding().addValidator(function () { return _this.validateTitle(_this.apititle); });\n        titleTextField.getBinding().addListener(function (value) {\n            var status = _this.validateTitle(value);\n            if (status.code !== UI.StatusCode.ERROR) {\n                titleStatusLabel.setText(\"\");\n                titleStatusLabel.setIcon(UI.Icon.NONE);\n                titleStatusMessage.setDisplay(false);\n            }\n            else {\n                titleStatusLabel.setText(status.message);\n                titleStatusLabel.setIcon(UI.Icon.BUG);\n                titleStatusMessage.setDisplay(true);\n            }\n        });\n        panel.addChild(titleTextField);\n        panel.addChild(UI.h3(\"Version of your API\"));\n        panel.addChild(UI.texfField(\"\", this.version, function (x) { return _this.version = x.getBinding().get(); }));\n        panel.addChild(UI.h3(\"Base URI of your API\"));\n        panel.addChild(UI.texfField(\"\", this.baseUri, function (x) { return _this.baseUri = x.getBinding().get(); }));\n        section.addChild(panel);\n        var r1 = UI.checkBox(\"Use RAML 1.0\");\n        r1.setValue(this._raml1);\n        r1.getBinding().addListener(function (x) { return _this._raml1 = r1.getValue(); });\n        section.addChild(r1);\n        var r2 = UI.checkBox(\"Create default directory structure\");\n        r2.setValue(this._defStructure);\n        r2.getBinding().addListener(function (x) { return _this._defStructure = r2.getValue(); });\n        section.addChild(r2);\n        var r3 = UI.checkBox(\"Create sample resource and method\");\n        r3.setValue(this._createSampleResource);\n        r3.getBinding().addListener(function (x) { return _this._createSampleResource = r3.getValue(); });\n        section.addChild(r3);\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        buttonBar.addChild(UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            if (_this.validateTitle(_this.apititle).code === UI.StatusCode.ERROR) {\n                return;\n            }\n            if (_this.validateProjectLocation(_this.sourceValue).code === UI.StatusCode.ERROR) {\n                return;\n            }\n            _this.onOk(zz);\n            zz.destroy();\n        }));\n        section.addChild(buttonBar);\n        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n    };\n    NewProjectDialog.prototype.createIfNotExist = function (p) {\n        var ps = path.resolve(this.sourceValue, p);\n        if (!fs.existsSync(ps)) {\n            fs.mkdirSync(ps);\n        }\n    };\n    NewProjectDialog.prototype.onOk = function (zz) {\n        if (!fs.existsSync(this.sourceValue)) {\n            fs.mkdirSync(this.sourceValue);\n        }\n        if (this._defStructure) {\n            this.createIfNotExist(\"schemas\");\n            this.createIfNotExist(\"examples\");\n            this.createIfNotExist(\"traits\");\n            this.createIfNotExist(\"resourceTypes\");\n            this.createIfNotExist(\"securitySchemes\");\n            this.createIfNotExist(\"documentation\");\n            if (this._raml1) {\n                this.createIfNotExist(\"notebooks\");\n                this.createIfNotExist(\"scripts\");\n            }\n        }\n        var content = createRAMLFile(this.apititle, this.version, this.baseUri, this._createSampleResource, this._raml1);\n        var ps = path.resolve(this.sourceValue, \"api.raml\");\n        fs.writeFileSync(ps, content);\n        atom.open({ pathsToOpen: [this.sourceValue, ps] });\n    };\n    return NewProjectDialog;\n})();\nfunction createRAMLFile(title, version, baseUri, sample, raml1) {\n    if (sample === void 0) { sample = true; }\n    if (raml1 === void 0) { raml1 = true; }\n    var apiLines = [(raml1 ? \"#%RAML 1.0\" : \"#%RAML 0.8\"), (\"title: \" + title)];\n    if (version)\n        apiLines.push(\"version: \" + version);\n    if (baseUri)\n        apiLines.push(\"baseUri: \" + baseUri);\n    var typesLines = [\n        'types:',\n        '  TestType:',\n        '    type: object',\n        '    properties:',\n        '      id: number',\n        '      optional?: string',\n        '      expanded:',\n        '        type: object',\n        '        properties:',\n        '          count: number'\n    ], resourceLines = [\n        '/helloWorld:',\n        '  get:',\n        '    responses:',\n        '      200:',\n        '        body:',\n        '          application/json:',\n        '            example: |',\n        '              {',\n        '                \"message\" : \"Hello World\"',\n        '              }'\n    ];\n    var result = apiLines;\n    if (sample) {\n        if (raml1)\n            result = result.concat(typesLines);\n        result = result.concat(resourceLines);\n    }\n    return result.join('\\n') + '\\n';\n}\nexports.createRAMLFile = createRAMLFile;\nfunction newProject() {\n    new NewProjectDialog().show();\n}\nexports.newProject = newProject;\nfunction moveResource(h) {\n    new move.MoveElementsDialog(h, \"Resource Type\", true).show();\n}\nexports.moveResource = moveResource;\nfunction splitOnLines(text) {\n    var lines = text.match(/^.*((\\r\\n|\\n|\\r)|$)/gm);\n    return lines;\n}\nexports.splitOnLines = splitOnLines;\nfunction cleanEmptyLines(text) {\n    var lines = splitOnLines(text);\n    var rs = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (lines[i].trim().length > 0) {\n            rs.push(lines[i]);\n        }\n    }\n    return rs.join(\"\");\n}\nexports.cleanEmptyLines = cleanEmptyLines;\n//FIXME remove it from here duplication with jsyaml2lowLevel.ts\nfunction stripIndent(text, indent) {\n    var lines = splitOnLines(text);\n    var rs = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (i == 0) {\n            rs.push(lines[0]);\n        }\n        else {\n            rs.push(lines[i].substring(indent.length));\n        }\n    }\n    return rs.join(\"\");\n}\nvar leadingIndent = function (node, text) {\n    var leading = \"\";\n    var pos = node.start() - 1;\n    while (pos > 0) {\n        var ch = text[pos];\n        if (ch == '\\r' || ch == '\\n')\n            break;\n        leading = ch + leading;\n        pos--;\n    }\n    return leading;\n};\nfunction indent(line) {\n    var rs = \"\";\n    for (var i = 0; i < line.length; i++) {\n        var c = line[i];\n        if (c == '\\r' || c == '\\n') {\n            continue;\n        }\n        if (c == ' ' || c == '\\t') {\n            rs += c;\n            continue;\n        }\n        break;\n    }\n    return rs;\n}\nfunction getActiveEditor() {\n    var activeEditor = atom.workspace.getActiveTextEditor();\n    if (activeEditor) {\n        return activeEditor;\n    }\n    if (editorTools.aquireManager())\n        return editorTools.aquireManager().getCurrentEditor();\n    return null;\n}\nexports.getActiveEditor = getActiveEditor;\nvar MoveToNewFileDialog = (function () {\n    function MoveToNewFileDialog(node) {\n        this.node = node;\n    }\n    MoveToNewFileDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n        var errorLabel = UI.label(\"please enter correct destination path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        vc.addChild(UI.label(\"Please enter destination path\"));\n        var txt = UI.texfField(\"\", \"\", function (x) {\n            if (!txt) {\n                return;\n            }\n            _this.destination = txt.getBinding().get();\n            var isError = _this.destination.trim().length == 0;\n            if (!isError) {\n                if (path.extname(_this.destination) != '.raml') {\n                    isError = true;\n                }\n            }\n            if (!isError) {\n                var dir = path.resolve(path.dirname(getActiveEditor().getPath()), path.dirname(_this.destination));\n                if (!fs.existsSync(dir)) {\n                    isError = true;\n                }\n                else {\n                    var st = fs.statSync(dir);\n                    if (!st.isDirectory()) {\n                        isError = true;\n                    }\n                }\n            }\n            errorLabel.setDisplay(isError);\n            okButton.setDisabled(isError);\n        });\n        vc.addChild(UI.vc(txt));\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            var d = path.resolve(path.dirname(getActiveEditor().getPath()), _this.destination);\n            var dump = _this.node.lowLevel().dump();\n            var ci = splitOnLines(dump);\n            var li = ci.length > 1 ? indent(ci[1]) : indent(ci[0]);\n            dump = dump.substring(_this.node.lowLevel().keyEnd() - _this.node.lowLevel().start() + 1).trim();\n            dump = stripIndent(dump, li);\n            dump = \"#%RAML 0.8 \" + _this.node.definition().nameId() + \"\\n\" + dump;\n            fs.writeFileSync(d, dump);\n            //no we need to replace content of the node with text;\n            var txt = node.lowLevel().unit().contents();\n            var endPart = txt.substring(node.lowLevel().end());\n            var startPart = txt.substring(0, node.lowLevel().keyEnd() + 1);\n            var vl = startPart + \" !include \" + _this.destination + endPart;\n            getActiveEditor().setText(vl);\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return MoveToNewFileDialog;\n})();\nexports.MoveToNewFileDialog = MoveToNewFileDialog;\nfunction moveOut(h) {\n    new MoveToNewFileDialog(h).show();\n}\nexports.moveOut = moveOut;\nfunction renameRAMLElement() {\n    var ed = getActiveEditor();\n    var quickFixes = [];\n    if (ed) {\n        if (path.extname(ed.getPath()) == '.raml') {\n            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n            var node = provider.getAstNode(request, false);\n            if (!node) {\n                return;\n            }\n            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n            var kind = search.determineCompletionKind(ed.getBuffer().getText(), offset);\n            if (kind == search.LocationKind.VALUE_COMPLETION) {\n                var hlnode = node;\n                var attr = _.find(hlnode.attrs(), function (x) { return x.lowLevel().start() < offset && x.lowLevel().end() >= offset && !x.property().getAdapter(services.RAMLPropertyService).isKey(); });\n                if (attr) {\n                    if (attr.value()) {\n                        var p = attr.property();\n                        //FIXME INFRASTRUCTURE NEEDED\n                        var v = attr.value();\n                        var targets = search.referenceTargets(p, hlnode);\n                        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n                        if (t) {\n                            UI.prompt(\"New name for \" + attr.value(), function (newVal) {\n                                findUsagesImpl(function (n, r) {\n                                    //todo update nodes\n                                    r.reverse().forEach(function (x) {\n                                        var ua = x;\n                                        ua.asAttr().setValue(newVal);\n                                    });\n                                    n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n                                    var ed = getActiveEditor();\n                                    ed.getBuffer().setText(n.lowLevel().unit().contents());\n                                });\n                            }, attr.value());\n                        }\n                    }\n                }\n            }\n            if (kind == search.LocationKind.KEY_COMPLETION || kind == search.LocationKind.SEQUENCE_KEY_COPLETION) {\n                var hlnode = node;\n                UI.prompt(\"New name for \" + hlnode.name(), function (newVal) {\n                    findUsagesImpl(function (n, r) {\n                        var oldValue = n.attrValue(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId());\n                        //todo update nodes\n                        r.reverse().forEach(function (x) {\n                            var ua = x;\n                            renameInProperty(ua.asAttr(), oldValue, newVal);\n                        });\n                        n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n                        var ed = getActiveEditor();\n                        ed.getBuffer().setText(n.lowLevel().unit().contents());\n                    });\n                }, hlnode.name());\n            }\n        }\n    }\n}\nexports.renameRAMLElement = renameRAMLElement;\nfunction renameInProperty(property, contentToReplace, replaceWith) {\n    var oldPropertyValue = property.value();\n    if (typeof oldPropertyValue == 'string') {\n        var oldPropertyStringValue = oldPropertyValue;\n        var newPropertyStringValue = oldPropertyStringValue.replace(contentToReplace, replaceWith);\n        property.setValue(newPropertyStringValue);\n        if (oldPropertyStringValue.indexOf(contentToReplace) == -1) {\n            if (property.name().indexOf(contentToReplace) != -1) {\n                var newValue = property.name().replace(contentToReplace, replaceWith);\n                property.setKey(newValue);\n            }\n        }\n        return;\n    }\n    else if (typeof oldPropertyValue === \"object\") {\n        var structuredValue = oldPropertyValue;\n        var oldPropertyStringValue = structuredValue.valueName();\n        if (oldPropertyStringValue.indexOf(contentToReplace) != -1) {\n            var convertedHighLevel = structuredValue.toHighLevel();\n            if (convertedHighLevel) {\n                var found = false;\n                if (convertedHighLevel.definition().isAnnotationType()) {\n                    var prop = getKey(convertedHighLevel.definition(), structuredValue.lowLevel());\n                    prop.setValue(\"(\" + replaceWith + \")\");\n                    return;\n                }\n                convertedHighLevel.attrs().forEach(function (attribute) {\n                    if (attribute.property().getAdapter(services.RAMLPropertyService).isKey()) {\n                        var oldValue = attribute.value();\n                        if (typeof oldValue == 'string') {\n                            found = true;\n                            var newValue = oldValue.replace(contentToReplace, replaceWith);\n                            attribute.setValue(newValue);\n                        }\n                    }\n                });\n                return;\n            }\n        }\n    }\n    //default case\n    property.setValue(replaceWith);\n}\nfunction getKey(t, n) {\n    var up = new def.UserDefinedProp(\"name\", null);\n    //up.withDomain(this);\n    up.withRange(this.universe().type(universes.Universe10.StringType.name));\n    up.withFromParentKey(true);\n    var node = t.getAdapter(services.RAMLService).getDeclaringNode();\n    //node:ll.ILowLevelASTNode, parent:hl.IHighLevelNode, private _def:hl.IValueTypeDefinition, private _prop:hl.IProperty, private fromKey:boolean = false\n    return stubs.createASTPropImpl(n, node, up.range(), up, true);\n    //rs.push(up);\n}\nvar getKeyValue = function (offset, txt) {\n    var m = offset;\n    for (var i = offset; i >= 0; i--) {\n        var c = txt.charAt(i);\n        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t') {\n            m = i + 1;\n            break;\n        }\n    }\n    var res = \"\";\n    for (var i = m; m < txt.length; i++) {\n        var c = txt.charAt(i);\n        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t' || c == ':') {\n            break;\n        }\n        res += c;\n    }\n    return res;\n};\nfunction select() {\n    var ed = getActiveEditor();\n    var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n    var node = provider.getAstNode(request, false);\n    if (!node) {\n        return;\n    }\n    var start = ed.getBuffer().positionForCharacterIndex(node.lowLevel().start());\n    var end = ed.getBuffer().positionForCharacterIndex(node.lowLevel().end());\n    ed.setSelectedBufferRange({ start: start, end: end }, {});\n}\nexports.select = select;\n//export function expandSignature(attr:hl.IAttribute){\n//    var tr=signature.convertToTrait(signature.parse(attr));\n//    //console.log('trait:\\n' + tr.highLevel().lowLevel().dump());\n//    var res = attr.parent();\n//    //pr.remove(attr); // incorrect usage!!! remove attributes as below\n//    attr.remove();\n//    tr.highLevel().elements().forEach(x=>{\n//        res.add(<any>x)\n//    });\n//    var ed=getActiveEditor();\n//    ed.setText(attr.root().lowLevel().unit().contents());\n//}\nfunction findUsagesImpl(f) {\n    if (f === void 0) { f = display; }\n    var ed = getActiveEditor();\n    if (ed) {\n        if (path.extname(ed.getPath()) == '.raml') {\n            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n            var p = request.editor.getPath();\n            var prj = rp.project.createProject(path.dirname(p));\n            var unit = prj.unit(path.basename(p));\n            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n            var text = request.editor.getBuffer().getText();\n            unit.updateContent(text);\n            var decl = search.findUsages(unit, offset);\n            if (decl.node) {\n                f(decl.node, decl.results);\n            }\n        }\n    }\n}\nexports.findUsagesImpl = findUsagesImpl;\nfunction findUsages() {\n    findUsagesImpl(display);\n}\nexports.findUsages = findUsages;\nvar SearchResultView = (function (_super) {\n    __extends(SearchResultView, _super);\n    function SearchResultView(query, _result) {\n        _super.call(this);\n        this.query = query;\n        this._result = _result;\n        this.isAttached = false;\n    }\n    SearchResultView.prototype.initialize = function () {\n        _super.prototype.initialize.apply(this, arguments);\n        return true;\n    };\n    SearchResultView.content = function () {\n        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n    };\n    SearchResultView.prototype.attached = function () {\n        if (this.isAttached) {\n            return;\n        }\n        this.load();\n        this.isAttached = true;\n    };\n    SearchResultView.prototype.setInput = function (query, _result) {\n        this.query = query;\n        this._result = _result;\n        this.load();\n    };\n    SearchResultView.prototype.load = function () {\n        var _this = this;\n        var section = UI.section(\"Find usages for \" + this.query, UI.Icon.SEARCH);\n        var view = UI.list(this._result, function (x) {\n            var p1 = getActiveEditor().getBuffer().positionForCharacterIndex(x.getLowLevelStart());\n            var res = UI.hc(UI.a(x.id(), function (y) {\n                openPropertyNode(getActiveEditor(), x);\n            }), UI.label(x.lowLevel().unit().path() + \" line:\", UI.Icon.NONE, UI.TextClasses.SUBTLE).pad(5, 5), UI.label(\"\" + p1.row, UI.Icon.NONE, UI.TextClasses.SUCCESS));\n            return res;\n        });\n        view.setStyle(\"max-height\", \"400px\");\n        section.addChild(view);\n        section.addChild(UI.button(\"Close\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) { _this.panel.destroy(); sv = null; }));\n        this.html(section.renderUI());\n    };\n    return SearchResultView;\n})(SpacePenViews.ScrollView);\nvar sv;\nfunction display(query, n) {\n    if (sv) {\n        sv.setInput(query.name(), n);\n    }\n    else {\n        sv = new SearchResultView(query.name() + \":\" + query.definition().nameId(), n);\n        sv.panel = atom.workspace.addBottomPanel({ item: sv });\n    }\n}\n//TODO REFACTOR COMMON LOGIC TO COFE\nvar openPropertyNode = function (ed, t) {\n    var p1 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelStart());\n    var p2 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelEnd());\n    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n};\n//TODO REFACTOR COMMON LOGIC TO COFE\nvar openNode = function (ed, t) {\n    openLowLevelNode(ed, t.lowLevel());\n};\n//TODO REFACTOR COMMON LOGIC TO COFE\nvar openLowLevelNode = function (ed, t) {\n    if (t.unit().absolutePath() != ed.getPath()) {\n        atom.workspace.open(t.unit().absolutePath(), {}).then(function (x) {\n            ed = getActiveEditor();\n            openLowLevelNode(ed, t);\n        });\n        return;\n    }\n    var p1 = ed.getBuffer().positionForCharacterIndex(t.start());\n    var p2 = ed.getBuffer().positionForCharacterIndex(t.end());\n    p2.column = p1.column + t.key() ? t.key().length : 0;\n    p2.row = p1.row;\n    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n};\nfunction gotoDeclaration() {\n    var ed = getActiveEditor();\n    if (ed) {\n        if (path.extname(ed.getPath()) == '.raml') {\n            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n            var p = request.editor.getPath();\n            var prj = rp.project.createProject(path.dirname(p));\n            var unit = prj.unit(path.basename(p));\n            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n            var text = request.editor.getBuffer().getText();\n            unit.updateContent(text);\n            var decl = search.findDeclaration(unit, offset);\n            if (decl) {\n                if (!decl.absolutePath) {\n                    openLowLevelNode(ed, decl.lowLevel());\n                }\n                else {\n                    var absolutePath = decl.absolutePath();\n                    if (absolutePath && absolutePath.toLowerCase().indexOf('http') === 0) {\n                        return;\n                    }\n                    atom.workspace.open(absolutePath, {});\n                }\n            }\n        }\n    }\n}\nexports.gotoDeclaration = gotoDeclaration;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/assist-utils.js\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar rr = rp.utils;\nvar TextBuffer = require(\"basarat-text-buffer\");\nvar editorManager = require(\"./editorManager\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nexports.grammarScopes = ['source.raml'];\nexports.scope = 'file';\nexports.lintOnFly = true;\nvar lintersToDestroy = [];\nvar linterApiProxy = {};\nvar relint = function (editor) {\n    var editorPath = editor.getPath && editor.getPath();\n    var extName = editorPath && path.extname(editorPath);\n    var lowerCase = extName && extName.toLowerCase();\n    var linter = linterApiProxy.getEditorLinter(editor);\n    lintersToDestroy.push(linter);\n    if (lowerCase === '.raml' || lowerCase === '.yaml') {\n        var res = lint(editor);\n        if (!rr.hasAsyncRequests()) {\n            linterApiProxy.setMessages(linter, res);\n            console.log(\"Messages: \" + res.length);\n        }\n        setupLinterCallback(editor, function () { return linterApiProxy.deleteMessages(linter); });\n        linter.onDidDestroy(function () {\n            removeLinterCallback(editor);\n        });\n        editor.onDidDestroy(function () {\n            destroyLinter(linterApiProxy, linter);\n        });\n    }\n};\nfunction initEditorObservers(linterApi) {\n    linterApiProxy = linterApi;\n    rr.addLoadCallback(function (x) {\n        atom.workspace.getTextEditors().forEach(function (x) { return relint(x); });\n        var manager = editorTools.aquireManager();\n        if (manager) {\n            manager.updateDetails();\n        }\n    });\n    atom.workspace.observeTextEditors(relint);\n    return {\n        dispose: function () {\n            lintersToDestroy.forEach(function (linter) {\n                destroyLinter(linterApi, linter);\n            });\n        }\n    };\n}\nexports.initEditorObservers = initEditorObservers;\nfunction destroyLinter(linterApi, linter) {\n    linterApi.deleteMessages(linter);\n    linterApi.deleteLinter(linter);\n}\n;\nfunction setupLinterCallback(editor, callback) {\n    editor.linterCallback = callback;\n}\nfunction removeLinterCallback(editor) {\n    editor.linterCallback = null;\n}\nfunction execLinterCallback(editor) {\n    if (editor.linterCallback) {\n        editor.linterCallback();\n        removeLinterCallback(editor);\n    }\n}\nfunction lint(textEditor) {\n    var result = actualLint(textEditor);\n    if (rr.hasAsyncRequests()) {\n        return [];\n    }\n    return result;\n}\nexports.lint = lint;\nfunction isRAMLUnit(editor) {\n    var contents = editor.getBuffer().getText();\n    return contents.match(/^\\s*#%RAML\\s+(\\d\\.\\d)\\s*(\\w*)\\s*$/m);\n}\nfunction actualLint(textEditor) {\n    execLinterCallback(textEditor);\n    if (rr.hasAsyncRequests()) {\n        return [];\n    }\n    if (!isRAMLUnit(textEditor))\n        return [];\n    var l = new Date().getTime();\n    var astNode = editorManager.ast(textEditor);\n    if (astNode == null) {\n        return [];\n    }\n    var result = [];\n    var acceptor = new Acceptor(textEditor, result);\n    var c = astNode.lowLevel() ? astNode.lowLevel().unit().contents() : \"\";\n    var tab = 0;\n    while (true) {\n        var tab = c.indexOf('\\t', tab);\n        if (tab != -1) {\n            var p1 = textEditor.getBuffer().positionForCharacterIndex(tab);\n            var p2 = textEditor.getBuffer().positionForCharacterIndex(tab + 1);\n            var t = \"Using tabs  can lead to unpredictable results\";\n            var message = {\n                type: (\"Warning\"),\n                filePath: textEditor.getPath(),\n                text: t,\n                trace: [],\n                range: [[p1.row, p1.column], [p2.row, p2.column]]\n            };\n            result.push(message);\n            tab++;\n        }\n        else {\n            break;\n        }\n    }\n    if (!astNode.lowLevel()) {\n        return [];\n    }\n    gatherValidationErrors(astNode, result, textEditor);\n    var l1 = new Date().getTime();\n    var map = {};\n    result.forEach(function (x) {\n        var original = JSON.parse(JSON.stringify(x));\n        original.trace = null;\n        var newKey = JSON.stringify(original);\n        var tr = map[newKey];\n        if (tr) {\n            tr.push(x);\n        }\n        else {\n            map[newKey] = [x];\n        }\n    });\n    var rs = [];\n    for (var i in map) {\n        var mes = JSON.parse(i);\n        mes.trace = [];\n        var ms = map[i];\n        ms.forEach(function (x) {\n            if (x.trace) {\n                mes.trace = mes.trace.concat(x.trace);\n            }\n        });\n        rs.push(mes);\n    }\n    if (editorTools.aquireManager()) {\n        if (editorTools.aquireManager().performanceDebug) {\n            console.log(\"Linting took:\" + (l1 - l));\n        }\n    }\n    return rs.filter(function (x) { return x; });\n}\nvar Acceptor = (function () {\n    function Acceptor(editor, errors) {\n        this.editor = editor;\n        this.errors = errors;\n        this.buffers = {};\n    }\n    Acceptor.prototype.begin = function () {\n    };\n    Acceptor.prototype.accept = function (issue) {\n        var _this = this;\n        if (!issue) {\n            return;\n        }\n        var p1 = this.editor.getBuffer().positionForCharacterIndex(issue.start);\n        var p2 = this.editor.getBuffer().positionForCharacterIndex(issue.end);\n        var t = issue.message;\n        var pos = t.lastIndexOf(\" at line \");\n        if (pos != -1) {\n            t = t.substring(0, pos); //it is message from yaml lets cut line info\n        }\n        var message = { type: (issue.isWarning ? \"Warning\" : 'Error'),\n            filePath: issue.path ? issue.path : this.editor.getPath(),\n            text: t,\n            trace: [],\n            range: [[p1.row, p1.column], [p2.row, p2.column]] };\n        this.errors.push(message);\n        if (issue.extras) {\n            issue.extras.forEach(function (x) {\n                var t = x.message;\n                var buf = _this.editor.getBuffer();\n                var ps = x.path;\n                if (x.unit) {\n                    ps = x.unit.absolutePath();\n                }\n                if (ps) {\n                    if (_this.buffers[ps]) {\n                        buf = _this.buffers[ps];\n                    }\n                    else {\n                        buf = new TextBuffer(x.unit.contents());\n                        _this.buffers[ps] = buf;\n                    }\n                }\n                var p1 = buf.positionForCharacterIndex(x.start);\n                var p2 = buf.positionForCharacterIndex(x.end);\n                var trace = {\n                    type: \"Trace\",\n                    filePath: x.path ? ps : _this.editor.getPath(),\n                    text: t,\n                    range: [[p1.row, p1.column], [p2.row, p2.column]]\n                };\n                message.trace.push(trace);\n            });\n        }\n    };\n    Acceptor.prototype.acceptUnique = function (issue) {\n        this.accept(issue);\n    };\n    Acceptor.prototype.end = function () {\n    };\n    return Acceptor;\n})();\nfunction gatherValidationErrors(astNode, errors, editor) {\n    if (astNode) {\n        astNode.validate(new Acceptor(editor, errors));\n    }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/linter-ui.js\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar _ = require(\"underscore\");\nexports.DYNAMIC_COMMAND_TAG = \"DYNAMIC_COMMAND_TAG\";\nvar commandIdToCommandInfo = {};\nvar tagToCommands = {};\n/**\n * Adds new managed command\n * @param selector - command CSS selector\n * @param id - command id. Must be unique across the managed commands.\n * @param callBack - called on command invocation\n * @param tag - optional action tag allowing to perform batch operations\n */\nfunction addCommand(selector, id, callBack, tag) {\n    if (_.find(listCommands(), function (commandId) {\n        if (commandId == id) {\n            return true;\n        }\n        return false;\n    })) {\n        return;\n    }\n    var disposable = atom.commands.add(selector, id, callBack);\n    var commandInfo = {\n        commandId: id,\n        tag: tag,\n        disposable: disposable\n    };\n    commandIdToCommandInfo[id] = commandInfo;\n    if (tag) {\n        var tagCommands = tagToCommands[tag];\n        if (!tagCommands) {\n            tagCommands = [];\n            tagToCommands[tag] = tagCommands;\n        }\n        tagCommands.push(commandInfo);\n    }\n}\nexports.addCommand = addCommand;\n/**\n * Deletes unmanaged command.\n * Generally, should not be called for managed actions, use the managed\n * version instead.\n * @param id - command id\n */\nfunction deleteUnmanagedCommand(id) {\n    atom.commands.registeredCommands[id] = null;\n    atom.commands.selectorBasedListenersByCommandName[id] = null;\n}\nexports.deleteUnmanagedCommand = deleteUnmanagedCommand;\n/**\n * Deletes managed action by id\n * @param id\n */\nfunction deleteManagedCommand(id) {\n    var commandInfo = commandIdToCommandInfo[id];\n    if (!commandInfo)\n        return;\n    commandInfo.disposable.dispose();\n    delete commandIdToCommandInfo[id];\n    if (commandInfo.tag) {\n        var tagCommands = tagToCommands[commandInfo.tag];\n        if (!tagCommands)\n            return;\n        var infoIndex = -1;\n        _.find(tagCommands, function (currentInfo, index) {\n            if (currentInfo.commandId == id) {\n                infoIndex = index;\n                return true;\n            }\n            return false;\n        });\n        if (infoIndex != -1)\n            tagCommands.splice(infoIndex, 1);\n    }\n}\nexports.deleteManagedCommand = deleteManagedCommand;\n/**\n * Deletes all managed commands tagged the the specific tag\n * @param tag\n */\nfunction deleteCommandsByTag(tag) {\n    var tagCommands = tagToCommands[tag];\n    if (!tagCommands)\n        return;\n    for (var index in tagCommands) {\n        var currentInfo = tagCommands[index];\n        currentInfo.disposable.dispose();\n        delete commandIdToCommandInfo[currentInfo.commandId];\n    }\n    delete tagToCommands[tag];\n}\nexports.deleteCommandsByTag = deleteCommandsByTag;\n/**\n * Lists all commands, both managed and unmanaged.\n * @returns {string[]}\n */\nfunction listCommands() {\n    var result = [];\n    for (var commandName in atom.commands.selectorBasedListenersByCommandName) {\n        result.push(commandName);\n    }\n    return result;\n}\nexports.listCommands = listCommands;\nvar initialized = false;\nfunction initialize() {\n    if (initialized)\n        return;\n    initialized = true;\n    try {\n        //forcing command palette to register itself\n        atom.packages.activatePackage('command-palette');\n        //registering our own listener to command palette's command\n        var listener = function () {\n            prePanelDisplay();\n        };\n        listener.commandManager = true;\n        atom.commands.add('atom-workspace', 'command-palette:toggle', listener);\n        ////and now swapping those listeners, so our one is called first\n        //var listenersArray = (<any>atom.commands.selectorBasedListenersByCommandName)\n        //    [\"command-palette:toggle\"]\n        //listenersArray.splice(0,0,listenersArray[1])\n        //listenersArray.splice(1, 1)\n        var listenersArray = atom.commands.selectorBasedListenersByCommandName[\"command-palette:toggle\"];\n        listenersArray.forEach(function (listener) {\n            if (listener.callback.commandManager) {\n                listener.sequenceNumber = 100500000;\n            }\n        });\n    }\n    catch (Error) {\n        console.error(Error.message);\n    }\n}\nexports.initialize = initialize;\nvar contributors = {};\nfunction registerContributor(contributor) {\n    contributors[contributor.id] = contributor;\n}\nexports.registerContributor = registerContributor;\nfunction prePanelDisplay() {\n    deleteCommandsByTag(exports.DYNAMIC_COMMAND_TAG);\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        if (contributor.calculationStarted) {\n            contributor.calculationStarted();\n        }\n    }\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        contributor.calculateItems().forEach(function (item) {\n            addCommand(item.selector, \"api-workbench:\" + item.id, item.callBack, exports.DYNAMIC_COMMAND_TAG);\n        });\n    }\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        if (contributor.calculationFinished) {\n            contributor.calculationFinished();\n        }\n    }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/command-manager.js\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar _ = require(\"underscore\");\nvar commandManager = require(\"../quick-commands/command-manager\");\nvar originalShowForEvent;\n/**\n * Must be called first, at startup, before the module is used.\n */\nfunction initialize() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    originalShowForEvent = atom.contextMenu.constructor.prototype.showForEvent;\n    atom.contextMenu.constructor.prototype.showForEvent = function (event) {\n        preMenuDisplay();\n        originalShowForEvent.apply(atom.contextMenu, [event]);\n        postMenuDisplay();\n    };\n}\nexports.initialize = initialize;\n/**\n * Adds new contributor to the list. All contributors are asked for the menu items\n * before the menu is displayed.\n * @param contributor\n */\nfunction registerContributor(contributor) {\n    contributors[contributor.id] = contributor;\n}\nexports.registerContributor = registerContributor;\n/**\n * Generally it is recommended to use contributor-based architecture instead.\n * This method allows adding a single menu item manually, if needed.\n * @param name\n * @param onClick\n * @param categories\n * @param shouldDisplay\n */\nfunction addMenuItem(name, onClick, categories, shouldDisplay) {\n}\nexports.addMenuItem = addMenuItem;\n/**\n * Generally it is recommended to use contributor-based architecture instead.\n * Deletes all menu items with a given selector. Should almost never be called.\n * Can not delete contributor-based menu items.\n * @param selector\n */\nfunction deleteMenuItems(selector) {\n    //TODO implement\n}\nexports.deleteMenuItems = deleteMenuItems;\n/**\n * Generally it is recommended to use contributor-based architecture instead.\n * Deletes menu item by its selector, name, and optionally categories.\n * Can not delete contributor-based menu items.\n * @param selector\n * @param name\n * @param categories\n */\nfunction deleteMenuItem(selector, name, categories) {\n    //TODO implement\n}\nexports.deleteMenuItem = deleteMenuItem;\nvar contributors = {};\nvar initialized = false;\nvar ContextMenuItemNode = (function () {\n    function ContextMenuItemNode(menuItem, nameOverride) {\n        this.selector = menuItem.selector;\n        if (nameOverride) {\n            this.name = nameOverride;\n        }\n        else {\n            this.name = menuItem.name;\n        }\n        this.categories = menuItem.categories;\n        this.onClick = menuItem.onClick;\n        this.children = [];\n    }\n    return ContextMenuItemNode;\n})();\n/**\n * Selector that were used at least once in the context menu\n * @type {Array}\n */\nvar usedSelectors = [];\nfunction preMenuDisplay() {\n    try {\n        var treeRoots = calculateMenuItemsTree();\n        var nodeSets = {};\n        cleanExistingSets();\n        commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG);\n        treeRoots.forEach(function (node) {\n            var itemSet = nodeSets[node.selector];\n            if (!itemSet) {\n                itemSet = findOrCreateItemSet(node.selector);\n                nodeSets[node.selector] = itemSet;\n            }\n            var menuItem = constructAtomMenuItem(node);\n            itemSet.items.push(menuItem);\n        });\n    }\n    catch (Error) {\n        console.log(Error.message);\n    }\n}\nfunction constructAtomMenuItem(node) {\n    var result = {\n        label: node.name,\n    };\n    if (node.children.length > 0) {\n        result.submenu = [];\n    }\n    else {\n        var commandName = \"api-workbench:\" + node.name;\n        var existingCommands = commandManager.listCommands();\n        commandManager.addCommand(node.selector, commandName, node.onClick, commandManager.DYNAMIC_COMMAND_TAG);\n        result.command = commandName;\n    }\n    node.children.forEach(function (child) {\n        var childMenuItem = constructAtomMenuItem(child);\n        result.submenu.push(childMenuItem);\n    });\n    return result;\n}\nvar DYNAMIC_SET_TAG = \"DYNAMIC_SET_TAG\";\nfunction findOrCreateItemSet(selector) {\n    var existingSet = _.find(atom.contextMenu.itemSets, function (currentSet) {\n        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n    });\n    if (!existingSet) {\n        existingSet = {\n            items: [],\n            selector: selector,\n            specificity: 11,\n            tag: DYNAMIC_SET_TAG\n        };\n        atom.contextMenu.itemSets.push(existingSet);\n        //saving used selector name\n        if (!_.find(usedSelectors, function (name) { return name == selector; })) {\n            usedSelectors.push(selector);\n        }\n    }\n    return existingSet;\n}\nfunction cleanExistingSets() {\n    var existingSets = _.filter(atom.contextMenu.itemSets, function (currentSet) {\n        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n    });\n    existingSets.forEach(function (existingSet) {\n        existingSet.items = [];\n    });\n}\nfunction postMenuDisplay() {\n    //commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG)\n}\nfunction calculateMenuItemsTree() {\n    var result = [];\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        if (contributor.calculationStarted) {\n            contributor.calculationStarted();\n        }\n    }\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        contributor.calculateItems().forEach(function (item) {\n            addItemsTreeNode(result, item);\n        });\n    }\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        if (contributor.calculationFinished) {\n            contributor.calculationFinished();\n        }\n    }\n    return result;\n}\nfunction addItemsTreeNode(roots, item) {\n    var currentList = roots;\n    if (item.categories) {\n        for (var catIndex in item.categories) {\n            var currentSegment = item.categories[catIndex];\n            var existingNode = _.find(currentList, function (node) {\n                return node.name == currentSegment;\n            });\n            if (!existingNode) {\n                existingNode = new ContextMenuItemNode(item, currentSegment);\n                currentList.push(existingNode);\n            }\n            if (!existingNode.children) {\n                currentList = [];\n                existingNode.children = currentList;\n            }\n            else {\n                currentList = existingNode.children;\n            }\n        }\n    }\n    var leafNode = _.find(currentList, function (node) {\n        return node.name == item.name;\n    });\n    if (leafNode) {\n        var index = currentList.indexOf(leafNode, 0);\n        if (index != undefined) {\n            currentList.splice(index, 1);\n        }\n    }\n    leafNode = new ContextMenuItemNode(item);\n    currentList.push(leafNode);\n    //var existingRoot = _.find(roots, currentItem => {\n    //    return item.name == currentItem.name\n    //})\n    //\n    //if (!existingRoot) {\n    //    existingRoot = new ContextMenuItemNode(item);\n    //    roots.push(existingRoot)\n    //}\n    //\n    //if (!item.categories) {\n    //\n    //    return\n    //}\n    //\n    //var currentParent = existingRoot;\n    //\n    //item.categories.forEach(category=>{\n    //\n    //    var existingNode = _.find(currentParent.children, currentItem => {\n    //        return category == currentItem.name\n    //    })\n    //\n    //    if (!existingNode) {\n    //        existingNode = new ContextMenuItemNode(item)\n    //        currentParent.children.push(existingNode)\n    //        return\n    //    }\n    //\n    //    currentParent = existingNode\n    //})\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/contextMenu.js\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar contextMenu = require(\"./contextMenu\");\nvar commandManager = require(\"../quick-commands/command-manager\");\nvar contextActions = require(\"./contextActions\");\nvar path = require('path');\nvar provider = require(\"../suggestion/provider\");\nvar rp = require(\"raml-1-parser\");\nvar search = rp.search;\nvar editorTools = require(\"../editor-tools/editor-tools\");\nfunction registerCommonActions() {\n    //TODO here the common actions should be registered\n}\n/**\n * Must be called once on module initialization\n */\nfunction initialize() {\n    initializeActionSupport();\n    registerCommonActions();\n}\nexports.initialize = initialize;\n/**\n * For those who ignore state calculators approach. Is not recommended to use.\n */\nvar NullCalculator = (function () {\n    function NullCalculator() {\n    }\n    NullCalculator.prototype.calculate = function () {\n    };\n    return NullCalculator;\n})();\nexports.NullCalculator = NullCalculator;\n/**\n * This class calculates current open editor AST state, including the selected node.\n *\n * The state is actually calculated on the global calculation start, and calling \"calculate\"\n * just returns the state. This allows to reuse a single instance in many actions\n * and only perform the actual state calculation once.\n *\n * On reuse please call contextCalculationStarted and contextCalculationFinished methods\n * from respective methods of the state calculator that reuses current one.\n *\n * It is not recommended to inherit the class, instead, reuse the exported instance of the class\n * so that AST parsing is performed once.\n */\nvar GeneralASTStateCalculator = (function () {\n    function GeneralASTStateCalculator() {\n        var _this = this;\n        this.state = null;\n        /**\n         * If present is called before any context calculations are started\n         */\n        this.contextCalculationStarted = function () {\n            if (_this.state == null) {\n                _this.state = _this.calculateState();\n            }\n        };\n        /**\n         * If present is called after all context calculations are finished\n         */\n        this.contextCalculationFinished = function () {\n            //deleting current state\n            _this.state = null;\n        };\n    }\n    /**\n     * Is called to calculate context\n     */\n    GeneralASTStateCalculator.prototype.calculate = function () {\n        //should actually never happened if this class is reused properly\n        if (this.state == null) {\n            this.state = this.calculateState();\n        }\n        return this.state;\n    };\n    GeneralASTStateCalculator.prototype.calculateState = function () {\n        var gotEditorFromOutline = false;\n        var editor = null;\n        if (atom.workspace.getActiveTextEditor()) {\n            editor = atom.workspace.getActiveTextEditor();\n        }\n        else if (editorTools.aquireManager()) {\n            editor = editorTools.aquireManager().getCurrentEditor();\n            gotEditorFromOutline = true;\n        }\n        if (!editor)\n            return null;\n        if (path.extname(editor.getPath()) != '.raml')\n            return null;\n        var request = {\n            editor: editor,\n            bufferPosition: editor.getCursorBufferPosition()\n        };\n        var node = null;\n        if (gotEditorFromOutline) {\n            node = editorTools.aquireManager().getSelectedNode();\n        }\n        else {\n            if (editor.getBuffer()) {\n                var lastPosition = editor.getBuffer().getEndPosition();\n                if (lastPosition.column == request.bufferPosition.column\n                    && lastPosition.row == request.bufferPosition.row) {\n                    return null;\n                }\n                if (request.bufferPosition.row == 0 && request.bufferPosition.column == 0) {\n                    return null;\n                }\n            }\n            node = provider.getAstNode(request, false);\n        }\n        if (!node) {\n            return null;\n        }\n        var offset = request.editor.getBuffer().\n            characterIndexForPosition(request.bufferPosition);\n        var completionKind = search.determineCompletionKind(editor.getBuffer().getText(), offset);\n        return {\n            editor: editor,\n            offset: offset,\n            node: node,\n            completionKind: completionKind\n        };\n    };\n    return GeneralASTStateCalculator;\n})();\nexports.GeneralASTStateCalculator = GeneralASTStateCalculator;\nexports.generalASTStateCalculator = new GeneralASTStateCalculator();\n/**\n * Intended for subclassing version of GeneralASTStateCalculator\n * Override calculate() method, use getGeneralState() to obtain current general AST state\n */\nvar CommonASTStateCalculator = (function () {\n    function CommonASTStateCalculator() {\n        this.contextCalculationStarted = function () {\n            exports.generalASTStateCalculator.contextCalculationStarted();\n        };\n        this.contextCalculationFinished = function () {\n            exports.generalASTStateCalculator.contextCalculationFinished();\n        };\n    }\n    CommonASTStateCalculator.prototype.calculate = function () {\n        return null;\n    };\n    CommonASTStateCalculator.prototype.getGeneralState = function () {\n        return exports.generalASTStateCalculator.calculate();\n    };\n    CommonASTStateCalculator.prototype.getEditor = function () {\n        return editorTools.aquireManager() ? editorTools.aquireManager().getCurrentEditor() : atom.workspace.getActiveTextEditor();\n    };\n    return CommonASTStateCalculator;\n})();\nexports.CommonASTStateCalculator = CommonASTStateCalculator;\nfunction initializeActionSupport() {\n    var editorContextMenuContributor = {\n        id: \"editorContextActionContributor\",\n        calculateItems: function () {\n            var actions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n            if (!actions)\n                return [];\n            var result = [];\n            actions.forEach(function (action) {\n                result.push({\n                    selector: 'atom-text-editor[data-grammar=\"source raml\"],.raml-outline',\n                    name: action.label ? action.label : action.name,\n                    categories: action.category,\n                    onClick: action.onClick\n                });\n            });\n            return result;\n        }\n    };\n    contextMenu.registerContributor(editorContextMenuContributor);\n    var editorCommandContributor = {\n        id: \"editorContextActionContributor\",\n        calculateItems: function () {\n            var actions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n            if (!actions)\n                return [];\n            var result = [];\n            actions.forEach(function (action) {\n                result.push({\n                    selector: 'atom-text-editor[data-grammar=\"source raml\"],.raml-outline',\n                    id: action.label ? action.label : action.name,\n                    callBack: action.onClick\n                });\n            });\n            return result;\n        }\n    };\n    commandManager.registerContributor(editorCommandContributor);\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/commonContextActions.js\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar search = rp.search;\nvar stubs = rp.stubs;\nvar universeHelpers = rp.universeHelpers;\nvar su = rp.schema;\nvar apiModifier = rp.parser.modify;\nvar _ = require(\"underscore\");\nvar UI = require(\"atom-ui-lib\");\nvar xmlutil = require(\"../../util/xmlutil\");\nvar extract = require(\"../dialogs/extractElementsDialog\");\nvar shemagen = require(\"../../util/schemaGenerator\");\nvar def = rp.ds;\nvar move = require(\"../dialogs/moveElementsDialog\");\nvar contextActions = require(\"./contextActions\");\nvar commonContextActions = require(\"./commonContextActions\");\nvar assistUtils = require(\"../dialogs/assist-utils\");\nvar AbstractDialogWithValidation = (function () {\n    function AbstractDialogWithValidation(parentNode, name) {\n        this.parentNode = parentNode;\n        this.name = name;\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    AbstractDialogWithValidation.prototype.validate = function () {\n        return null;\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     */\n    AbstractDialogWithValidation.prototype.performOk = function () {\n    };\n    /**\n     * Indended for subclassing\n     * @param vc - parent section\n     */\n    AbstractDialogWithValidation.prototype.createBody = function (section) {\n    };\n    /**\n     * Call this to display the dialog.\n     */\n    AbstractDialogWithValidation.prototype.show = function () {\n        console.log(\"Original node tree:\");\n        if (this.getParentNode())\n            console.log(this.getParentNode().printDetails());\n        if (!this.getParentNode()) {\n            return;\n        }\n        var mainSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n        this.createValidationIndicator(mainSection);\n        this.createBody(mainSection);\n        this.createButtonBar(mainSection);\n        mainSection.setPercentWidth(100);\n        var html = mainSection.renderUI();\n        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n        this.performValidation();\n    };\n    AbstractDialogWithValidation.prototype.performValidation = function () {\n        var validationMessage = this.validate();\n        if (this.okButton) {\n            if (validationMessage)\n                this.okButton.setDisabled(true);\n            else\n                this.okButton.setDisabled(false);\n        }\n        if (this.errorLabel) {\n            if (validationMessage) {\n                this.errorLabel.setDisplay(true);\n                this.errorLabel.setText(validationMessage);\n            }\n            else {\n                this.errorLabel.setDisplay(false);\n                this.errorLabel.setText(\"\");\n            }\n        }\n    };\n    AbstractDialogWithValidation.prototype.createValidationIndicator = function (vc) {\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(this.errorLabel));\n    };\n    AbstractDialogWithValidation.prototype.saveUnit = function (unit) {\n        var unitPath = unit.absolutePath();\n        var unitText = unit.contents();\n        //first trying to find an opened text editor\n        var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n            var editorPath = editor.getPath();\n            return editorPath == unitPath;\n        });\n        if (openedEditor) {\n            openedEditor.setText(unitText);\n        }\n        else {\n            fs.writeFileSync(unitPath, unitText);\n        }\n    };\n    AbstractDialogWithValidation.prototype.createButtonBar = function (parentPanel) {\n        var _this = this;\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            _this.rootAtomPanel.destroy();\n        }).margin(10, 10));\n        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.performOk();\n            _this.rootAtomPanel.destroy();\n        });\n        this.okButton.setDisabled(true);\n        buttonBar.addChild(this.okButton);\n        parentPanel.addChild(buttonBar);\n    };\n    AbstractDialogWithValidation.prototype.getParentNode = function () {\n        return this.parentNode;\n    };\n    AbstractDialogWithValidation.prototype.getActiveEditor = function () {\n        return assistUtils.getActiveEditor();\n    };\n    AbstractDialogWithValidation.prototype.getNodeId = function (node) {\n        if (node.parent()) {\n            var parentId = this.getNodeId(node.parent());\n            parentId += \".\" + node.name();\n            var sameName = node.parent().directChildren().filter(function (x) { return x.name() == node.name(); });\n            if (sameName.length > 1) {\n                var ind = sameName.indexOf(node);\n                parentId += \"[\" + ind + \"]\";\n            }\n            return parentId;\n        }\n        else if (node.name()) {\n            if (node.definition && node.definition() && node.definition().name() == \"Api\") {\n                //no other way to get rid of a fake Api \"key\"\n                return \"\";\n            }\n            return \".\" + node.name();\n        }\n        return \"\";\n    };\n    AbstractDialogWithValidation.prototype.nodesEqualById = function (node1, node2) {\n        return this.getNodeId(node1) == this.getNodeId(node2);\n    };\n    AbstractDialogWithValidation.prototype.isParentOf = function (potentialParent, potentialChild) {\n        var current = potentialChild.parent();\n        while (current != null) {\n            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n                return true;\n            }\n            current = current.parent();\n        }\n        return false;\n    };\n    return AbstractDialogWithValidation;\n})();\nexports.AbstractDialogWithValidation = AbstractDialogWithValidation;\nvar MoveResourceStateCalculator = (function (_super) {\n    __extends(MoveResourceStateCalculator, _super);\n    function MoveResourceStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    MoveResourceStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return MoveResourceStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar CreateGlobalSchemaStateCalculator = (function (_super) {\n    __extends(CreateGlobalSchemaStateCalculator, _super);\n    function CreateGlobalSchemaStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    CreateGlobalSchemaStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION\n            && generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        //FIXME INFRASTRUCTURE NEEDED\n        if (!universeHelpers.isSchemaProperty(p))\n            return null;\n        var v = attr.value();\n        var targets = search.referenceTargets(p, highLevelNode);\n        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n        if (t)\n            return null;\n        return attr;\n    };\n    return CreateGlobalSchemaStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar ExtractJSONSchemaToTypeDialog = (function (_super) {\n    __extends(ExtractJSONSchemaToTypeDialog, _super);\n    function ExtractJSONSchemaToTypeDialog() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * Indended for subclassing\n     * @param vc - parent section\n     */\n    ExtractJSONSchemaToTypeDialog.prototype.createBody = function (section) {\n        var _this = this;\n        section.addChild(UI.label(\"Type name:\").pad(5, 0));\n        this.typeNameTextField = UI.texfField(\"\", \"NewType\", function (x) {\n            _this.performValidation();\n        });\n        section.addChild(this.typeNameTextField);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ExtractJSONSchemaToTypeDialog.prototype.validate = function () {\n        if (!this.typeNameTextField || !this.typeNameTextField.getBinding()) {\n            return null;\n        }\n        var schemaName = this.typeNameTextField.getBinding().get();\n        if (schemaName.trim().length == 0) {\n            return \"Enter type name\";\n        }\n        return null;\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     */\n    ExtractJSONSchemaToTypeDialog.prototype.performOk = function () {\n        var node = this.getParentNode();\n        var api = node.root();\n        var schema = node.attrValue('schema');\n        node.attr('schema').setValue('');\n        var schemaName = this.typeNameTextField.getBinding().get();\n        var types = su.createSchemaModelGenerator().generateTo(api, schema, schemaName);\n        if (types.length > 0) {\n            node.attrOrCreate('type').setValue(types[0]);\n        }\n        this.saveUnit(api.lowLevel().unit());\n    };\n    return ExtractJSONSchemaToTypeDialog;\n})(AbstractDialogWithValidation);\nexports.ExtractJSONSchemaToTypeDialog = ExtractJSONSchemaToTypeDialog;\nvar CreateGlobalSchemaDialog = (function (_super) {\n    __extends(CreateGlobalSchemaDialog, _super);\n    function CreateGlobalSchemaDialog() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * Indended for subclassing\n     * @param vc - parent section\n     */\n    CreateGlobalSchemaDialog.prototype.createBody = function (section) {\n        var _this = this;\n        section.addChild(UI.label(\"Schema name:\").pad(5, 0));\n        this.schemaNameTextField = UI.texfField(\"\", this.getDefaultSchemaName(), function (x) {\n            _this.performValidation();\n        });\n        section.addChild(this.schemaNameTextField);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    CreateGlobalSchemaDialog.prototype.validate = function () {\n        if (!this.schemaNameTextField || !this.schemaNameTextField.getBinding()) {\n            return null;\n        }\n        var schemaName = this.schemaNameTextField.getBinding().get();\n        if (schemaName.trim().length == 0) {\n            return \"Enter schema name\";\n        }\n        var attr = this.getParentNode();\n        var schemaContent = attr.value();\n        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n        if (fs.existsSync(schemaFilePath)) {\n            return \"Schema file \" + schemaFilePath + \" already exists\";\n        }\n        return null;\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     */\n    CreateGlobalSchemaDialog.prototype.performOk = function () {\n        var schemaName = this.schemaNameTextField.getBinding().get();\n        var attr = this.getParentNode();\n        var schemaContent = attr.value();\n        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n        var root = attr.parent().root();\n        var globalSchemaType = attr.property().range().universe().type(\"GlobalSchema\");\n        var schemaNode = stubs.createStubNode(globalSchemaType, globalSchemaType.universe().type(\"Api\").property(\"schemas\"), schemaName);\n        schemaNode.attrOrCreate(\"value\").setValue(\"!include \" + this.getSchemaRelativePath(schemaName, schemaContent));\n        root.add(schemaNode);\n        attr.setValue(schemaName);\n        this.saveUnit(attr.lowLevel().unit());\n        var schemaDir = path.dirname(schemaFilePath);\n        if (!fs.existsSync(schemaDir)) {\n            fs.mkdirSync(schemaDir);\n        }\n        fs.writeFileSync(schemaFilePath, schemaContent);\n    };\n    CreateGlobalSchemaDialog.prototype.getSchemaFilePath = function (schemaName, schemaContent) {\n        var parentDirectory = path.resolve(path.dirname(this.getActiveEditor().getPath()), \"schemas\");\n        var schemaExtension = this.determineSchemaExtension(schemaContent);\n        var fileName = schemaName + \".\" + schemaExtension;\n        return path.resolve(parentDirectory, fileName);\n    };\n    CreateGlobalSchemaDialog.prototype.getSchemaRelativePath = function (schemaName, schemaContent) {\n        var schemaExtension = this.determineSchemaExtension(schemaContent);\n        var fileName = schemaName + \".\" + schemaExtension;\n        return \"schemas/\" + fileName;\n    };\n    CreateGlobalSchemaDialog.prototype.determineSchemaExtension = function (schemaContent) {\n        var trim = schemaContent.trim();\n        if (trim.indexOf(\"{\") == 0 || trim.indexOf(\"[\") == 0) {\n            return \"json\";\n        }\n        return \"xsd\";\n    };\n    CreateGlobalSchemaDialog.prototype.getDefaultSchemaName = function () {\n        return \"NewSchema\";\n    };\n    return CreateGlobalSchemaDialog;\n})(AbstractDialogWithValidation);\nexports.CreateGlobalSchemaDialog = CreateGlobalSchemaDialog;\nfunction createGlobalSchema(attr) {\n    new CreateGlobalSchemaDialog(attr, \"Create Global Schema\").show();\n}\nexports.createGlobalSchema = createGlobalSchema;\nvar ExpandSignatureStateCalculator = (function (_super) {\n    __extends(ExpandSignatureStateCalculator, _super);\n    function ExpandSignatureStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExpandSignatureStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        return attr;\n    };\n    return ExpandSignatureStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nfunction updateEditor(node) {\n    var ed = assistUtils.getActiveEditor();\n    ed.setText(assistUtils.cleanEmptyLines(node.root().lowLevel().unit().contents()));\n}\nvar getKeyValue = function (offset, txt) {\n    var m = offset;\n    for (var i = offset; i >= 0; i--) {\n        var c = txt.charAt(i);\n        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t') {\n            m = i + 1;\n            break;\n        }\n    }\n    var res = \"\";\n    for (var i = m; i < txt.length; i++) {\n        var c = txt.charAt(i);\n        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t' || c == ':') {\n            break;\n        }\n        res += c;\n    }\n    return res;\n};\nvar CompleteBodyStateCalculator = (function (_super) {\n    __extends(CompleteBodyStateCalculator, _super);\n    function CompleteBodyStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    CompleteBodyStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (universeHelpers.isResponseType(highLevelNode.definition()) ||\n            universeHelpers.isMethodType(highLevelNode.definition())) {\n            var txt = generalState.editor.getText();\n            var res = getKeyValue(generalState.offset, txt);\n            if (res == \"body\") {\n                return highLevelNode;\n            }\n        }\n        if (universeHelpers.isBodyLikeType(highLevelNode.definition())) {\n            if (highLevelNode.elements().length == 0) {\n                return highLevelNode;\n            }\n        }\n        return null;\n    };\n    return CompleteBodyStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nfunction saveExample(r, schp, content) {\n    var ed = assistUtils.getActiveEditor();\n    var sdir = path.resolve(path.dirname(ed.getPath()), path.dirname(schp));\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = path.resolve(path.dirname(ed.getPath()), schp);\n    fs.writeFileSync(shFile, content);\n}\nexports.saveExample = saveExample;\nvar FillBodyDialog = (function () {\n    function FillBodyDialog(h, body, title) {\n        if (title === void 0) { title = \"Fill body\"; }\n        this.h = h;\n        this.body = body;\n        this.title = title;\n        this.name = \"\";\n        this.needXML = true;\n        this.needJSON = true;\n        this.jsexample = '{\\n \"message\":\"Hello world\"\\n}';\n        this.xmlexample = \"\";\n        this.xmlschema = \"\";\n        this.jsschema = \"\";\n    }\n    FillBodyDialog.prototype.extraContent = function (s) {\n    };\n    FillBodyDialog.prototype.updateButtons = function () {\n        if (!this.createButton) {\n            return;\n        }\n        if (this.name.length == 0) {\n            this.createButton.setDisabled(true);\n            this.em.setDisplay(true);\n            this.em.setText(\"Please type name of your payload\");\n            return;\n        }\n        if (this.needJSON) {\n            try {\n                JSON.parse(this.jsexample);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"JSON example is not correct\");\n                return;\n            }\n            try {\n                var so = su.getJSONSchema(this.jsschema, null);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"JSON schema is not correct\");\n                return;\n            }\n        }\n        if (this.needXML) {\n            try {\n                xmlutil(this.xmlexample);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"XML example is not correct\");\n                return;\n            }\n            try {\n                var so = su.getXMLSchema(this.xmlschema);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"XML schema is not correct\");\n                return;\n            }\n        }\n        this.em.setDisplay(false);\n        this.createButton.setDisabled(false);\n    };\n    FillBodyDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        this.em = UI.label(\"Please type name of your payload\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        var section = UI.section(this.title, UI.Icon.BOOK, false, false, this.em, UI.h3(\"Please type name for your payload\")).pad(10, 10);\n        section.addChild(UI.texfField(\"\", this.name, function (x) {\n            _this.name = x.getBinding().get();\n            _this.updateButtons();\n        }));\n        var r1 = UI.checkBox(\"Create XML body\");\n        r1.setValue(this.needXML);\n        r1.getBinding().addListener(function (x) {\n            _this.needXML = r1.getValue();\n            _this.updateButtons();\n        });\n        section.addChild(r1);\n        var r2 = UI.checkBox(\"Create JSON body\");\n        r2.setValue(this.needJSON);\n        r2.getBinding().addListener(function (x) {\n            _this.needJSON = r2.getValue();\n            _this.updateButtons();\n        });\n        section.addChild(r2);\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            zz.destroy();\n        }).margin(10, 10));\n        this.createButton = UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.onOk(zz);\n            zz.destroy();\n        });\n        buttonBar.addChild(this.createButton);\n        var tf = new UI.TabFolder();\n        this.createButton.setDisabled(true);\n        this.createTextSection(tf, \"JSON Example\", \"source.json\", \"jsexample\");\n        this.createTextSection(tf, \"JSON Schema\", \"source.json\", \"jsschema\");\n        this.createTextSection(tf, \"XML Example\", \"text.xml\", \"xmlexample\");\n        this.createTextSection(tf, \"XML Schema\", \"text.xml\", \"xmlschema\");\n        tf.setOnSelected(function () {\n            var c = tf.selectedComponent();\n            var te = c.children()[1];\n            te.setText(_this[c.id()]);\n        });\n        section.addChild(tf);\n        section.addChild(buttonBar);\n        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n    };\n    FillBodyDialog.prototype.createTextSection = function (tf, caption, lang, code) {\n        var _this = this;\n        var hs = UI.vc();\n        hs.setCaption(caption);\n        hs.setId(code);\n        var ts = new UI.AtomEditorElement(\"\", function (x) { return x; });\n        ts.setMini(false);\n        ts.getBinding().addListener(function (x) {\n            _this[code] = ts.getValue();\n            _this.updateButtons();\n        });\n        //ts.setCaption(code)\n        ts.setText(\"\" + this[code]);\n        ts.setCaption(caption);\n        ts.setGrammar(lang);\n        ts.setStyle(\"height\", \"400px\");\n        ts.setStyle(\"border\", \"solid\");\n        ts.setStyle(\"border-width\", \"1px\");\n        hs.addChild(UI.h3(\"Please type your example here:\"));\n        hs.addChild(ts);\n        if (code == 'jsexample') {\n            var b = UI.button(\"Generate JSON schema\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n                try {\n                    var rs = shemagen.generateSchema(_this.jsexample, \"application/json\");\n                    _this.jsschema = rs;\n                    tf.setSelectedIndex(1);\n                }\n                catch (e) {\n                    _this.jsschema = e.message;\n                    tf.setSelectedIndex(1);\n                }\n            });\n            hs.addChild(b.margin(5, 5, 5, 5));\n        }\n        if (code == 'xmlexample') {\n            var b = UI.button(\"Generate JSON example\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n                try {\n                    var rs = xmlutil(_this.xmlexample);\n                    _this.jsexample = JSON.stringify(rs, null, 2);\n                    tf.setSelectedIndex(0);\n                }\n                catch (e) {\n                    _this.jsexample = e.message;\n                    tf.setSelectedIndex(0);\n                }\n            });\n            hs.addChild(b.margin(5, 5, 5, 5));\n        }\n        tf.add(caption, null, hs);\n    };\n    FillBodyDialog.prototype.onOk = function (zz) {\n        var bodyType = this.body.definition().universe().type(\"BodyLike\");\n        if (bodyType) {\n            //RAML 0.8 case\n            var node = this.body;\n            if (universeHelpers.isBodyProperty(node.property())) {\n                node = node.parent();\n            }\n            var type = node.definition();\n            if (this.needJSON) {\n                var body = stubs.createStubNode(bodyType, type.property('name'), \"application/json\");\n                body.createAttr(\"schema\", this.name);\n                body.createAttr(\"example\", \"!include ./examples/\" + this.name + \".json\");\n                node.add(body);\n                assistUtils.createGlobalSchemaFromNameAndContent(this.h.root(), this.name, \"schemas/\" + this.name + \".json\", this.jsschema);\n                saveExample(this.h, \"./examples/\" + this.name + \".json\", this.jsexample);\n            }\n            if (this.needXML) {\n                var body = stubs.createStubNode(bodyType, type.property('name'), \"application/xml\");\n                body.createAttr(\"schema\", this.name + \"-xml\");\n                body.createAttr(\"example\", \"!include ./examples/\" + this.name + \".xml\");\n                node.add(body);\n                var xmlSchemaContents = this.xmlschema;\n                assistUtils.createGlobalSchemaFromNameAndContent(this.h.root(), this.name + \"-xml\", \"schemas/\" + this.name + \".xml\", xmlSchemaContents);\n                saveExample(this.h, \"./examples/\" + this.name + \".xml\", this.xmlexample);\n            }\n        }\n        else {\n            //RAML 1.0 case\n            var response = this.body;\n            if (!universeHelpers.isResponseType(response.property().range())) {\n                console.log(\"Incorrect parent \" + response.printDetails() + \" , expecting response\");\n                return;\n            }\n            var responseWrapper = response.wrapperNode();\n            var bodies = [];\n            if (this.needJSON) {\n                var typeName = \"application/json\";\n                var bodyWrapper = apiModifier.createTypeDeclaration(typeName);\n                apiModifier.setTypeDeclarationSchema(bodyWrapper, this.name);\n                apiModifier.setTypeDeclarationExample(bodyWrapper, \"!include ./examples/\" + this.name + \".json\");\n                assistUtils.createGlobalSchemaFromNameAndContent(this.h.root(), this.name, \"schemas/\" + this.name + \".json\", this.jsschema);\n                saveExample(this.h, \"./examples/\" + this.name + \".json\", this.jsexample);\n                bodies.push(bodyWrapper);\n            }\n            if (this.needXML) {\n                var typeName = \"application/xml\";\n                var bodyWrapper = apiModifier.createTypeDeclaration(typeName);\n                apiModifier.setTypeDeclarationSchema(bodyWrapper, this.name + \"-xml\");\n                apiModifier.setTypeDeclarationExample(bodyWrapper, \"!include ./examples/\" + this.name + \".xml\");\n                var xmlSchemaContents = this.xmlschema;\n                assistUtils.createGlobalSchemaFromNameAndContent(this.h.root(), this.name + \"-xml\", \"schemas/\" + this.name + \".xsd\", xmlSchemaContents);\n                saveExample(this.h, \"./examples/\" + this.name + \".xml\", this.xmlexample);\n                bodies.push(bodyWrapper);\n            }\n            bodies.forEach(function (bodyWrapper) {\n                var foundWrapper = _.find(responseWrapper.body() || [], function (foundWrapper) { return bodyWrapper.name() === foundWrapper.name(); });\n                if (foundWrapper) {\n                    responseWrapper.remove(foundWrapper);\n                }\n                apiModifier.addChild(responseWrapper, bodyWrapper);\n            });\n        }\n        var rs = this.h.lowLevel().unit().contents();\n        assistUtils.getActiveEditor().setText(assistUtils.cleanEmptyLines(rs));\n    };\n    return FillBodyDialog;\n})();\nvar ExtractResourceTypeStateCalculator = (function (_super) {\n    __extends(ExtractResourceTypeStateCalculator, _super);\n    function ExtractResourceTypeStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractResourceTypeStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return ExtractResourceTypeStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar ExtractTraitStateCalculator = (function (_super) {\n    __extends(ExtractTraitStateCalculator, _super);\n    function ExtractTraitStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractTraitStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isMethodType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return ExtractTraitStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar MoveContentStateCalculator = (function (_super) {\n    __extends(MoveContentStateCalculator, _super);\n    function MoveContentStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    MoveContentStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (highLevelNode.children().length == 0)\n            return null;\n        return highLevelNode;\n    };\n    return MoveContentStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar ConvertJsonSchemaToTypeStateCalculator = (function (_super) {\n    __extends(ConvertJsonSchemaToTypeStateCalculator, _super);\n    function ConvertJsonSchemaToTypeStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ConvertJsonSchemaToTypeStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        if (!universeHelpers.isSchemaProperty(p))\n            return null;\n        if (typeof attr.value() != 'string' || attr.value().indexOf(\"{\") == -1) {\n            return null;\n        }\n        return highLevelNode;\n        //var txt=generalState.editor.getText();\n        //var res = getKeyValue(generalState.offset, txt);\n        //if(res != 'schema') return null;\n        //var schema = highLevelNode.attrValue('schema');\n        //if(!schema) return null;\n        //return (schema.length > 0 && schema[0] == '{')? highLevelNode : null;\n        //return true; //res == 'schema'? highLevelNode : null;\n    };\n    return ConvertJsonSchemaToTypeStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar ConvertTypeToJsonSchemaStateCalculator = (function (_super) {\n    __extends(ConvertTypeToJsonSchemaStateCalculator, _super);\n    function ConvertTypeToJsonSchemaStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ConvertTypeToJsonSchemaStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        var txt = generalState.editor.getText();\n        //var res = getKeyValue(generalState.offset, txt);\n        //return (res == 'type')? highLevelNode: null;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        if (!universeHelpers.isTypeProperty(p))\n            return null;\n        return highLevelNode;\n    };\n    return ConvertTypeToJsonSchemaStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar ConvertTypeToJsonSchemaAtTypeStateCalculator = (function (_super) {\n    __extends(ConvertTypeToJsonSchemaAtTypeStateCalculator, _super);\n    function ConvertTypeToJsonSchemaAtTypeStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ConvertTypeToJsonSchemaAtTypeStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var node = generalState.node;\n        //highLevelNode.lowLevel().show('HL');\n        //console.log('node def: ' + node.property().name() + ': ' + node.definition().name() + '; ' + generalState.completionKind);\n        if (generalState.completionKind != search.LocationKind.SEQUENCE_KEY_COPLETION)\n            return null;\n        return universeHelpers.isTypesProperty(node.property()) ? node : null;\n    };\n    return ConvertTypeToJsonSchemaAtTypeStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nfunction indent(line) {\n    var rs = \"\";\n    for (var i = 0; i < line.length; i++) {\n        var c = line[i];\n        if (c == '\\r' || c == '\\n') {\n            continue;\n        }\n        if (c == ' ' || c == '\\t') {\n            rs += c;\n            continue;\n        }\n        break;\n    }\n    return rs;\n}\n//FIXME remove it from here duplication with jsyaml2lowLevel.ts\nfunction stripIndent(text, indent) {\n    var lines = assistUtils.splitOnLines(text);\n    var rs = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (i == 0) {\n            rs.push(lines[0]);\n        }\n        else {\n            rs.push(lines[i].substring(indent.length));\n        }\n    }\n    return rs.join(\"\");\n}\nvar MoveToNewFileDialog = (function () {\n    function MoveToNewFileDialog(node) {\n        this.node = node;\n    }\n    MoveToNewFileDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n        var errorLabel = UI.label(\"Please enter destination file path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        vc.addChild(UI.label(\"Please enter destination path\"));\n        var txt = UI.texfField(\"\", \"\", function (x) {\n            if (!txt) {\n                return;\n            }\n            var errorMessage = null;\n            _this.destination = txt.getBinding().get();\n            if (_this.destination.trim().length == 0) {\n                errorMessage = \"Please enter destination file path\";\n            }\n            else if (!path.extname(_this.destination) || path.extname(_this.destination).trim().length <= 2) {\n                errorMessage = \"Please enter destination file extension\";\n            }\n            else {\n                var dir = path.resolve(path.dirname(assistUtils.getActiveEditor().getPath()), path.dirname(_this.destination));\n                if (!fs.existsSync(dir)) {\n                    errorMessage = \"Parent directory does not exist\";\n                }\n                else {\n                    var st = fs.statSync(dir);\n                    if (!st.isDirectory()) {\n                        errorMessage = \"Parent path is not a directory\";\n                    }\n                    if (!errorMessage) {\n                        var canWrite = true;\n                        try {\n                            fs.accessSync(dir, fs.W_OK);\n                        }\n                        catch (exception) {\n                            canWrite = false;\n                        }\n                        if (!canWrite) {\n                            errorMessage = \"Can't write to specified directory, access denied. Please, check your permissions.\";\n                        }\n                    }\n                }\n            }\n            if (errorMessage) {\n                errorLabel.setDisplay(true);\n                errorLabel.setText(errorMessage);\n                okButton.setDisabled(true);\n            }\n            else {\n                errorLabel.setDisplay(false);\n                okButton.setDisabled(false);\n            }\n        });\n        vc.addChild(UI.vc(txt));\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            zz.destroy();\n        }).margin(10, 10));\n        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            var d = path.resolve(path.dirname(assistUtils.getActiveEditor().getPath()), _this.destination);\n            var dump = _this.node.lowLevel().dump();\n            var ci = assistUtils.splitOnLines(dump);\n            var li = ci.length > 1 ? indent(ci[1]) : indent(ci[0]);\n            dump = dump.substring(_this.node.lowLevel().keyEnd() - _this.node.lowLevel().start() + 1).trim();\n            dump = stripIndent(dump, li);\n            var ramlComment = node.definition().universe().version() === \"RAML10\" ? \"#%RAML 1.0 \" : \"#%RAML 0.8 \";\n            dump = ramlComment + _this.node.definition().nameId() + \"\\n\" + dump;\n            fs.writeFileSync(d, dump);\n            //no we need to replace content of the node with text;\n            var txt = node.lowLevel().unit().contents();\n            var endPart = txt.substring(node.lowLevel().end());\n            var startPart = txt.substring(0, node.lowLevel().keyEnd() + 1);\n            var vl = startPart + \" !include \" + _this.destination + endPart;\n            assistUtils.getActiveEditor().setText(vl);\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return MoveToNewFileDialog;\n})();\nexports.MoveToNewFileDialog = MoveToNewFileDialog;\nvar ExtractLibraryStateCalculator = (function (_super) {\n    __extends(ExtractLibraryStateCalculator, _super);\n    function ExtractLibraryStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractLibraryStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        while (current.parent() != null) {\n            current = current.parent();\n        }\n        return current;\n    };\n    return ExtractLibraryStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar ExtractOverlayStateCalculator = (function (_super) {\n    __extends(ExtractOverlayStateCalculator, _super);\n    function ExtractOverlayStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractOverlayStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        while (current.parent() != null) {\n            current = current.parent();\n        }\n        return current;\n    };\n    return ExtractOverlayStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar ModifyOverlayStateCalculator = (function (_super) {\n    __extends(ModifyOverlayStateCalculator, _super);\n    function ModifyOverlayStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ModifyOverlayStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        while (current.parent() != null) {\n            current = current.parent();\n        }\n        if (current.definition\n            && universeHelpers.isOverlayType(current.definition())) {\n            return current;\n        }\n        return null;\n    };\n    return ModifyOverlayStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar AbstractMoveTypePropertiesCalculator = (function (_super) {\n    __extends(AbstractMoveTypePropertiesCalculator, _super);\n    function AbstractMoveTypePropertiesCalculator() {\n        _super.apply(this, arguments);\n    }\n    AbstractMoveTypePropertiesCalculator.prototype.isTypeNode = function (node) {\n        return node.property\n            && node.property().range\n            && universeHelpers.isTypeDeclarationType(node.property().range())\n            && universeHelpers.isTypesProperty(node.property());\n    };\n    return AbstractMoveTypePropertiesCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar PullUpStateCalculator = (function (_super) {\n    __extends(PullUpStateCalculator, _super);\n    function PullUpStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    PullUpStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        if (!current)\n            return null;\n        while (current.parent() != null) {\n            if (this.isTypeNode(current)) {\n                //so, we're inside the type\n                //but we also want to double check that there are superclasses\n                var superTypes = extract.findUserDefinedSupertypes(current);\n                if (superTypes && superTypes.length > 0)\n                    return current;\n                else\n                    return null;\n            }\n            current = current.parent();\n        }\n        return null;\n    };\n    return PullUpStateCalculator;\n})(AbstractMoveTypePropertiesCalculator);\nvar ExtractSupertypeCalculator = (function (_super) {\n    __extends(ExtractSupertypeCalculator, _super);\n    function ExtractSupertypeCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractSupertypeCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        if (!current)\n            return null;\n        while (current.parent() != null) {\n            if (this.isTypeNode(current)) {\n                //so, we're inside the type\n                //but we also want to double check that there are no superclasses\n                var superTypes = extract.findUserDefinedSupertypes(current);\n                if (!superTypes || superTypes.length == 0)\n                    return current;\n                else\n                    return null;\n            }\n            current = current.parent();\n        }\n        return null;\n    };\n    return ExtractSupertypeCalculator;\n})(AbstractMoveTypePropertiesCalculator);\nvar CommentNodeCalculator = (function (_super) {\n    __extends(CommentNodeCalculator, _super);\n    function CommentNodeCalculator() {\n        _super.apply(this, arguments);\n    }\n    CommentNodeCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        return generalState;\n    };\n    return CommentNodeCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar GenerateExampleCalculator = (function (_super) {\n    __extends(GenerateExampleCalculator, _super);\n    function GenerateExampleCalculator() {\n        _super.apply(this, arguments);\n    }\n    GenerateExampleCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        var txt = generalState.editor.getText();\n        //var res = getKeyValue(generalState.offset, txt);\n        //return (res == 'type')? highLevelNode: null;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        var p = attr.property();\n        if (!universeHelpers.isExampleProperty(p))\n            return null;\n        var typeAttr = highLevelNode.attr('type');\n        if (!typeAttr)\n            return null;\n        var type = typeAttr.value();\n        if (!type)\n            return null;\n        return highLevelNode;\n    };\n    return GenerateExampleCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nfunction findLowLevelNodeByOffset(root, offset) {\n    if ((root.keyStart() > offset || root.valueEnd() < offset) && root.parent()) {\n        return null;\n    }\n    if (root.includedFrom()) {\n        return findLowLevelNodeByOffset(root.includedFrom(), offset);\n    }\n    var children = root.children();\n    for (var key in children) {\n        var child = children[key];\n        var result = findLowLevelNodeByOffset(child, offset);\n        if (result)\n            return result;\n    }\n    return root;\n}\nexports.findLowLevelNodeByOffset = findLowLevelNodeByOffset;\nfunction lastChild(root) {\n    if (root.includedFrom()) {\n        return root.includedFrom();\n    }\n    if (!root.children() || root.children().length === 0) {\n        return root;\n    }\n    return lastChild(root.children().filter(function (child) { return child ? true : false; })[root.children().length - 1]);\n}\nfunction initialize() {\n    contextActions.addAction({\n        name: \"Create global schema\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) { return createGlobalSchema(state); },\n        stateCalculator: new CreateGlobalSchemaStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Move resource\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new move.MoveElementsDialog(state, \"Resource Type\", true).show();\n        },\n        stateCalculator: new MoveResourceStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    //contextActions.addAction({\n    //\n    //    name: \"Expand Signature\",\n    //\n    //    target: contextActions.TARGET_RAML_EDITOR_NODE,\n    //\n    //    category: [\"Refactoring\"],\n    //\n    //    onClick: state=>expandSignature(<hl.IAttribute> state),\n    //\n    //    stateCalculator: new ExpandSignatureStateCalculator(),\n    //\n    //    shouldDisplay: state=>state != null\n    //})\n    contextActions.addAction({\n        name: \"Complete body\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Add new...\"],\n        onClick: function (state) {\n            var h = state;\n            h.lowLevel().show('BODY');\n            new FillBodyDialog(h.parent().parent(), h).show();\n        },\n        stateCalculator: new CompleteBodyStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Resource Type\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractTypesAndTraitsDialog(state, \"Resource Type\", true).show();\n        },\n        stateCalculator: new ExtractResourceTypeStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Trait\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractTypesAndTraitsDialog(state, \"Trait\", false).show();\n        },\n        stateCalculator: new ExtractTraitStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Move content to other file\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new MoveToNewFileDialog(state).show();\n        },\n        stateCalculator: new MoveContentStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Convert JSON schema to type\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new ExtractJSONSchemaToTypeDialog(state, \"Convert JSON schema to type\").show();\n        },\n        stateCalculator: new ConvertJsonSchemaToTypeStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Expand type to JSON schema\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            var node = state;\n            var api = node.root();\n            var type = node.attrValue('type');\n            //console.log('schema: ' + schema);\n            var types = api.elementsOfKind('types');\n            var typeNode = _.find(types, function (y) { return y.name() == type; });\n            if (typeNode) {\n                node.attr('type').setValue('');\n                var obj = su.createModelToSchemaGenerator().generateSchema(typeNode);\n                var text = JSON.stringify(obj, null, 2);\n                node.attrOrCreate('schema').setValue(text);\n                text = api.lowLevel().unit().contents();\n                assistUtils.getActiveEditor().setText(text);\n            }\n        },\n        stateCalculator: new ConvertTypeToJsonSchemaStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Expand type to JSON schema definition\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            var typenode = state;\n            var api = typenode.root();\n            //console.log('generate type ' + typenode.name());\n            var obj = su.createModelToSchemaGenerator().generateSchema(typenode);\n            var schema = JSON.stringify(obj, null, 2);\n            console.log('schema: ' + schema);\n            //schema = textutil.fromMutiLine(schema);\n            var schemaStub = stubs.createStubNoParentPatch(api, 'schemas', typenode.name());\n            schemaStub.attrOrCreate('value').setValue(schema);\n            api.add(schemaStub);\n            var text = api.lowLevel().unit().contents();\n            //console.log('text:\\n' + text);\n            assistUtils.getActiveEditor().setText(text);\n        },\n        stateCalculator: new ConvertTypeToJsonSchemaAtTypeStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Library\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractLibraryDialog(state, \"Extract Library\").show();\n        },\n        stateCalculator: new ExtractLibraryStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Overlay\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) {\n            new extract.ExtractOverlayDialog(state, \"Extract Overlay\").show();\n        },\n        stateCalculator: new ExtractOverlayStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Modify Overlay\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) {\n            new extract.ModifyOverlayDialog(state, \"Modify Overlay\").show();\n        },\n        stateCalculator: new ModifyOverlayStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Pull Up\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.PullUpDialog(state, \"Pull Up\").show();\n        },\n        stateCalculator: new PullUpStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Supertype\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractSupertypeDialog(state, \"Extract Supertype\").show();\n        },\n        stateCalculator: new ExtractSupertypeCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Comment node\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) {\n            var highLevelNode = state.node;\n            if (!highLevelNode.lowLevel())\n                return;\n            var lowLevelNode = findLowLevelNodeByOffset(highLevelNode.lowLevel(), state.offset);\n            if (!lowLevelNode)\n                return;\n            var startOffset = lowLevelNode.keyStart() > -1 ? lowLevelNode.keyStart() : lowLevelNode.start();\n            lowLevelNode = lastChild(lowLevelNode);\n            var endOffset = lowLevelNode.valueEnd() > -1 ? lowLevelNode.valueEnd() : lowLevelNode.end();\n            var buffer = state\n                .editor.getBuffer();\n            var startPosition = buffer.positionForCharacterIndex(startOffset);\n            var startLine = startPosition.row;\n            var endPosition = buffer.positionForCharacterIndex(endOffset);\n            var endLine = endPosition.row;\n            for (var lineNumber = startLine; lineNumber <= endLine; lineNumber++) {\n                var oldRange = buffer.rangeForRow(lineNumber, true);\n                var oldText = buffer.getTextInRange(oldRange);\n                var newText = \"#\" + oldText;\n                buffer.setTextInRange(oldRange, newText);\n            }\n        },\n        stateCalculator: new CommentNodeCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    // contextActions.addAction({\n    //     name: \"Generate example\",\n    //     target: contextActions.TARGET_RAML_EDITOR_NODE,\n    //     category: [\"Code\"],\n    //     onClick: (state)=> {\n    //         var node = <hl.IHighLevelNode>state;\n    //         var api = node.root();\n    //         var typeman = new gu.TypeManager(<wrapper.ApiImpl>api.wrapperNode());\n    //         var type = node.attr('type').value();\n    //         var egen = new genex.ExampleGenerator(typeman);\n    //         var nodetype = node.definition().nameId();\n    //         var proptype = node.property().range().nameId();\n    //         if(nodetype != 'application/json') {\n    //             type = node.name();\n    //         }\n    //         //console.log('node type: ' + nodetype + '; prop type: ' + proptype + ' ==> ' + type);\n    //         var json = egen.generateTypeExpression(type);\n    //         var example = JSON.stringify(json, null, 2);\n    //         node.attrOrCreate('example').setValue(example);\n    //         var text = api.lowLevel().unit().contents();\n    //         //console.log('text:\\n' + text);\n    //         assistUtils.getActiveEditor().setText(text);\n    //         //new extract.ExtractSupertypeDialog(<hl.IHighLevelNode>state, \"Extract Supertype\").show()\n    //     },\n    //     stateCalculator: new GenerateExampleCalculator(),\n    //     shouldDisplay: state=>state != null\n    // });\n}\nexports.initialize = initialize;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/quickFix.js\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = require(\"atom-ui-lib\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom-ui-lib\"\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = require(\"child_process\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"child_process\"\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = require(\"xmlhttprequest\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xmlhttprequest\"\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = require(\"mkdirp\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mkdirp\"\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = require(\"url\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"url\"\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = require(\"raml-1-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-1-parser\"\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = require(\"underscore\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = require(\"raml-suggestions\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-suggestions\"\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = require(\"atom-space-pen-views\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom-space-pen-views\"\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = require(\"raml-1-parser/dist/index\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-1-parser/dist/index\"\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = require(\"basarat-text-buffer\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"basarat-text-buffer\"\n ** module id = 27\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * Created by kor on 22/06/15.\n */\nvar SpacePenViews = require('atom-space-pen-views');\nvar Scrollable = (function (_super) {\n    __extends(Scrollable, _super);\n    function Scrollable() {\n        _super.call(this);\n        this._children = [];\n    }\n    Scrollable.content = function () {\n        var v = this.div({ class: 'scrollpad pane-item padded', tabindex: -1, style: \"overflow:scroll;\" });\n        return v;\n    };\n    Scrollable.prototype.dispose = function () {\n    };\n    Scrollable.prototype.caption = function () { return \"\"; };\n    Scrollable.prototype.scroll = function (top, left) {\n        this.element.scrollTop = top;\n        this.element.scrollLeft = left;\n    };\n    Scrollable.prototype.size = function () {\n        return {\n            top: this.element.scrollTop,\n            left: this.element.scrollLeft,\n            bottom: this.element.scrollTop + this.element.clientHeight,\n            right: this.element.scrollLeft + this.element.clientWidth\n        };\n    };\n    Scrollable.prototype.changed = function () { };\n    Scrollable.prototype.refresh = function () { };\n    Scrollable.prototype.ui = function () {\n        return this.element;\n    };\n    Scrollable.prototype.setParent = function (p) {\n        if (this._parent != null)\n            this._parent.removeChild(this);\n        this._parent = p;\n    };\n    //TODO REMOVE COPY PASTE\n    Scrollable.prototype.addChild = function (child) {\n        child.setParent(this);\n        this._children.push(child);\n        //this.changed();\n    };\n    Scrollable.prototype.removeChild = function (child) {\n        this._children = this._children.filter(function (x) { return x != child; });\n        // this.changed();\n    };\n    Scrollable.prototype.doRender = function () {\n        return this.innerRenderUI();\n    };\n    /**\n     *\n     * @returns not null element;\n     */\n    Scrollable.prototype.selfRender = function () {\n        return document.createElement(\"div\");\n    };\n    Scrollable.prototype.attached = function () {\n        this.html(this.innerRenderUI());\n    };\n    Scrollable.prototype.innerRenderUI = function () {\n        var start = this.selfRender();\n        this._children.forEach(function (x) {\n            var el = x.renderUI();\n            if (el) {\n                start.appendChild(el);\n            }\n        });\n        return start;\n    };\n    Scrollable.prototype.renderUI = function () {\n        return this.element;\n    };\n    Scrollable.prototype.parent = function () {\n        return null;\n    };\n    Scrollable.prototype.children = function () {\n        return this._children;\n    };\n    Scrollable.prototype.isAttached = function () {\n        return true;\n    };\n    return Scrollable;\n})(SpacePenViews.ScrollView);\nexports.Scrollable = Scrollable;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/util/ScrollViewUI.js\n ** module id = 28\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar Workspace = (function () {\n    function Workspace() {\n    }\n    Workspace.prototype.onDidChangeActivePaneItem = function (callback) {\n        return atom.workspace.onDidChangeActivePaneItem(callback);\n    };\n    Workspace.prototype.addModalPanel = function (arg) {\n        return atom.workspace.addModalPanel(arg);\n    };\n    Workspace.prototype.getActiveTextEditor = function () {\n        return atom.workspace.getActiveTextEditor();\n    };\n    Workspace.prototype.getActivePane = function () {\n        return atom.workspace.getActivePane();\n    };\n    Workspace.prototype.getActiveEditor = function () {\n        return atom.workspace.getActiveEditor();\n    };\n    Workspace.prototype.addRightPanel = function (arg) {\n        return atom.workspace.addRightPanel(arg);\n    };\n    Workspace.prototype.paneForItem = function (arg) {\n        return atom.workspace.paneForItem(arg);\n    };\n    Workspace.prototype.getPaneItems = function () {\n        return atom.workspace.getPaneItems();\n    };\n    Workspace.prototype.onDidAddPaneItem = function (callback) {\n        return atom.workspace.onDidAddPaneItem(callback);\n    };\n    Workspace.prototype.onDidDestroyPane = function (callback) {\n        return atom.workspace.onDidDestroyPane(callback);\n    };\n    Workspace.prototype.open = function (path, args) {\n        atom.workspace.open(path, args);\n    };\n    return Workspace;\n})();\nexports.Workspace = Workspace;\nfunction open(pathsToOpen) {\n    atom.open(pathsToOpen);\n}\nexports.open = open;\nexports.workspace = new Workspace();\nvar CommandManager = (function () {\n    function CommandManager() {\n    }\n    CommandManager.prototype.add = function (selector, type, callback) {\n        return atom.commands.add(selector, type, callback);\n    };\n    return CommandManager;\n})();\nexports.CommandManager = CommandManager;\nexports.commands = new CommandManager();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/atomWrapper.js\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar atom = require('../core/atomWrapper');\nvar aspv = require('atom-space-pen-views');\n/*\n * List viewer for commands. accepts confirmation function, label function and key for fuzzy filtering.\n */\nvar SelectListView = (function (_super) {\n    __extends(SelectListView, _super);\n    function SelectListView(_confirmed, label, filterKey) {\n        if (filterKey === void 0) { filterKey = ''; }\n        _super.call(this, []);\n        this._confirmed = _confirmed;\n        this.label = label;\n        this.filterKey = filterKey;\n    }\n    SelectListView.prototype.getFilterKey = function () { return this.filterKey; };\n    SelectListView.prototype.viewForItem = function (item) {\n        return \"<li>\" + this.label(item) + \"</li>\";\n    };\n    SelectListView.prototype.cancel = function () {\n        this.panel.hide();\n        _super.prototype.cancel.call(this);\n    };\n    SelectListView.prototype.hide = function () {\n        if (!this.panel)\n            return;\n        this.panel.hide();\n    };\n    SelectListView.prototype.confirmed = function (item) {\n        this._confirmed(item);\n        this.hide();\n        return this.getSelectedItemView();\n    };\n    SelectListView.prototype.show = function (commands) {\n        this.storeFocusedElement();\n        if (!this.panel)\n            this.panel = atom.workspace.addModalPanel({ item: this });\n        this.setItems(commands);\n        this.panel.show();\n        this.focusFilterEditor();\n    };\n    return SelectListView;\n})(aspv.SelectListView);\nexports.SelectListView = SelectListView;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/quick-commands-ui.js\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar _ = require(\"underscore\");\nexports.TARGET_RAML_EDITOR_NODE = \"TARGET_RAML_EDITOR_NODE\";\nexports.TARGET_RAML_TREE_VIEWER_NODE = \"TARGET_RAML_TREE_VIEWER_NODE\";\n/**\n * Registers an action, which will take part in all engine consumers, like\n * context menu, outline actions and potentially toolbar\n * @param action\n */\nfunction addAction(action) {\n    if (_.find(actions, function (currentAction) {\n        return currentAction.name == action.name;\n    })) {\n        return;\n    }\n    actions.push(action);\n}\nexports.addAction = addAction;\n/**\n * Shortcut for adding simple actions. Not recommended, use addAction() instead to\n * provide state calculator.\n *\n * See IContextDependedAction fields for parameter descriptions.\n * @param name\n * @param target\n * @param onClick\n * @param shouldDisplay\n * @param category\n */\nfunction addSimpleAction(name, category, target, onClick, shouldDisplay) {\n    var newAction = {\n        name: name,\n        target: target,\n        onClick: onClick,\n        shouldDisplay: shouldDisplay,\n        category: category\n    };\n    addAction(newAction);\n}\nexports.addSimpleAction = addSimpleAction;\nvar ExecutableAction = (function () {\n    function ExecutableAction(targetAction, state) {\n        var _this = this;\n        this.name = targetAction.name;\n        this.category = targetAction.category;\n        this.label = targetAction.label;\n        this.target = targetAction.target;\n        this.state = state;\n        this.originalAction = targetAction;\n        this.onClick = function () {\n            _this.originalAction.onClick(_this.state);\n        };\n    }\n    return ExecutableAction;\n})();\n/**\n * Used by consumers to determine the actions to execute\n */\nfunction calculateCurrentActions(target) {\n    var result = [];\n    try {\n        var filteredActions = actions.filter(function (action) {\n            return action.target == target;\n        });\n        filteredActions.forEach(function (action) {\n            if (action.stateCalculator) {\n                if (action.stateCalculator.contextCalculationStarted) {\n                    try {\n                        action.stateCalculator.contextCalculationStarted();\n                    }\n                    catch (Error) {\n                        console.error(Error.message);\n                    }\n                }\n            }\n        });\n        filteredActions.forEach(function (action) {\n            try {\n                var state = null;\n                if (action.stateCalculator) {\n                    state = action.stateCalculator.calculate();\n                }\n                if (action.shouldDisplay) {\n                    if (!action.shouldDisplay(state)) {\n                        return;\n                    }\n                }\n                result.push(new ExecutableAction(action, state));\n            }\n            catch (Error) {\n                console.error(Error.message);\n            }\n        });\n        filteredActions.forEach(function (action) {\n            if (action.stateCalculator) {\n                if (action.stateCalculator.contextCalculationFinished) {\n                    try {\n                        action.stateCalculator.contextCalculationFinished();\n                    }\n                    catch (Error) {\n                        console.error(Error.message);\n                    }\n                }\n            }\n        });\n    }\n    catch (Error) {\n        console.error(Error.message);\n    }\n    return result;\n}\nexports.calculateCurrentActions = calculateCurrentActions;\nfunction getCategorizedActionLabel(action) {\n    if (action.label) {\n        return action.label;\n    }\n    var result = \"api-workbench:\";\n    if (action.category) {\n        action.category.forEach(function (cat) {\n            result = result + cat + \": \";\n        });\n    }\n    result = result + action.name;\n    return result;\n}\nexports.getCategorizedActionLabel = getCategorizedActionLabel;\n/**\n * Must be called once on module startup\n */\n//export function initialize() {\n//    if (initialized) {\n//        return;\n//    }\n//\n//    initialized = true;\n//}\nvar initialized = false;\nvar actions = [];\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/contextActions.js\n ** module id = 31\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar contextActions = require(\"../context-menu/contextActions\");\nvar commonContextActions = require(\"../context-menu/commonContextActions\");\nvar dialogs = require(\"../dialogs/dialogs\");\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar services = rp.ds;\nvar universeHelpers = rp.universeHelpers;\nvar AddNewResourceStateCalculator = (function (_super) {\n    __extends(AddNewResourceStateCalculator, _super);\n    function AddNewResourceStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    AddNewResourceStateCalculator.prototype.calculate = function () {\n        //usually we dont need to check the editor, CommonASTStateCalculator does this for us\n        //but in this case we accept null generalState, so double-checking for opened file\n        var editor = this.getEditor();\n        if (!editor)\n            return null;\n        if (path.extname(editor.getPath()) != '.raml')\n            return null;\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isResourceType(highLevelNode.definition()) &&\n            !universeHelpers.isApiType(highLevelNode.definition()))\n            return null;\n        if (!highLevelNode.lowLevel()) {\n            return null;\n        }\n        return highLevelNode;\n    };\n    return AddNewResourceStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar DeleteCurrentNodeStateCalculator = (function (_super) {\n    __extends(DeleteCurrentNodeStateCalculator, _super);\n    function DeleteCurrentNodeStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    DeleteCurrentNodeStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        if (universeHelpers.isApiType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return DeleteCurrentNodeStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nvar CreateNewAPIStateCalculator = (function (_super) {\n    __extends(CreateNewAPIStateCalculator, _super);\n    function CreateNewAPIStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    CreateNewAPIStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (generalState)\n            return null;\n        var editor = this.getEditor();\n        if (!editor)\n            return null;\n        if (path.extname(editor.getPath()) != '.raml')\n            return null;\n        var text = editor.getText().trim();\n        if (text != \"\")\n            return null;\n        return {};\n    };\n    return CreateNewAPIStateCalculator;\n})(commonContextActions.CommonASTStateCalculator);\nfunction deleteNode(node) {\n    if (!node || !node.parent())\n        return false;\n    var parent = node.parent();\n    editorTools.aquireManager()._view.forEachViewer(function (x) { return x.remove(node); });\n    parent.remove(node);\n    editorTools.aquireManager().updateText(parent.lowLevel());\n}\nfunction getResourceParent(node) {\n    if (!node || !node.property())\n        return null;\n    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n        return node;\n    return getResourceParent(node.parent());\n}\nexports.getResourceParent = getResourceParent;\nfunction getMethodParent(node) {\n    if (!node || !node.property())\n        return null;\n    if ((universeHelpers.isMethodType(node.definition()) || universeHelpers.isTraitType(node.definition())) && !node.definition().getAdapter(services.RAMLService).isUserDefined()) {\n        return node;\n    }\n    return null;\n}\nfunction getParent(node, name) {\n    if (!node || !node.property())\n        return null;\n    if ((node.definition().isAssignableFrom(name))) {\n        return node;\n    }\n    return null;\n}\nfunction getResourceParentOrRoot(node) {\n    var rp = getResourceParent(node);\n    return rp ? rp : editorTools.aquireManager().ast;\n}\nfunction toResource(node) {\n    if (!node || !node.property())\n        return null;\n    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n        return node;\n    return null;\n}\nexports.toResource = toResource;\nfunction registerQuickCommands(cm) {\n    if (!editorTools.aquireManager())\n        editorTools.initEditorTools(false);\n    var commands = [];\n    commands.forEach(function (x) { return x['__module__'] = 'editorTools'; });\n    contextActions.addAction({\n        name: \"Add new resource\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Add new...\"],\n        onClick: function (state) { return dialogs.newResource(editorTools.aquireManager().getSelectedNode()); },\n        stateCalculator: new AddNewResourceStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Delete current node\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) { return deleteNode(editorTools.aquireManager().getSelectedNode()); },\n        stateCalculator: new DeleteCurrentNodeStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Create new API\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Add new...\"],\n        onClick: function (state) { return dialogs.newApi(); },\n        stateCalculator: new CreateNewAPIStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addSimpleAction(\"Add new method\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newMethod(toResource(editorTools.aquireManager().getSelectedNode())); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && toResource(editorTools.aquireManager().getSelectedNode()) != null; });\n    contextActions.addSimpleAction(\"Create new URI Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(toResource(editorTools.aquireManager().getSelectedNode()), \"Create new URI Parameter\", \"uriParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (toResource(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Query Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Query Parameter\", \"queryParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Response Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n    contextActions.addSimpleAction(\"Create new Response Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Response Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n    contextActions.addSimpleAction(\"Create new Property\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\"), \"Create new Property\", \"properties\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\") != null); });\n    contextActions.addSimpleAction(\"Create new Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Response\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Response\", \"responses\", \"200\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n}\nexports.registerQuickCommands = registerQuickCommands;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/code-commands.js\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar UI = require(\"atom-ui-lib\");\nvar SC = require(\"../util/ScrollViewUI\");\nvar CompositeDisposable = UI.CompositeDisposable;\nvar rp = require(\"raml-1-parser\");\nvar universes = rp.universes;\nvar editorTools = require(\"./editor-tools\");\nvar index_1 = require(\"raml-1-parser/dist/index\");\nvar RamlOutline = (function (_super) {\n    __extends(RamlOutline, _super);\n    function RamlOutline() {\n        _super.call(this);\n        this.disposables = new CompositeDisposable();\n        this.fire = true;\n        this.createTree(null);\n        this.addClass('raml-outline');\n        this.addChild(this._rs);\n    }\n    RamlOutline.prototype.createTree = function (p) {\n        var _this = this;\n        this._rs = createTree(p, function (sender) {\n            if (editorTools.aquireManager()._details && sender.selection && sender.selection.elements && _this.fire == true) {\n                if (sender.selection.elements.length > 0 && sender.selection.elements[0]) {\n                    editorTools.aquireManager().setSelectedNode(sender.selection.elements[0]);\n                }\n            }\n        });\n        this._viewers = [0, 1, 2, 3].map(function (i) { return _this._rs.get(i).content; });\n    };\n    RamlOutline.prototype.getTitle = function () { return \"Outline\"; };\n    RamlOutline.prototype.getNodePType = function (node) {\n        while (node.parent() && node.parent().parent()) {\n            node = node.parent();\n        }\n        return getNodeType(node);\n    };\n    RamlOutline.prototype.setSelection = function (node) {\n        //if (this._selectedNode == node) return;\n        this._selectedNode = node;\n        this.fire = false;\n        try {\n            var index = this.getNodePType(node);\n            var viewer = this._viewers[index];\n            if (viewer != null) {\n                viewer.setSelection(node);\n                this._rs.setSelectedIndex(index);\n            }\n        }\n        finally {\n            this.fire = true;\n        }\n    };\n    RamlOutline.prototype.setUnit = function (unit, force) {\n        if (force === void 0) { force = false; }\n        this._children = [];\n        this.createTree(unit);\n        this.addClass('raml-outline');\n        this.addChild(this._rs);\n        this.html(this.innerRenderUI());\n    };\n    RamlOutline.prototype.attach = function () {\n        if (!this._isAttached) {\n            var $this = $(this);\n            $this.html(this._rs.renderUI().outerHTML);\n            this._isAttached = true;\n        }\n    };\n    RamlOutline.prototype.forEachViewer = function (command) {\n        this._viewers.forEach(command);\n    };\n    RamlOutline.prototype.refresh = function () {\n        var unit = this.unit;\n        this.setUnit(null);\n        this.setUnit(unit);\n    };\n    RamlOutline.prototype.destroy = function () {\n        editorTools.aquireManager()._view = null;\n        this._selectedNode = null;\n        this.unit = null;\n        this._viewers = [];\n        this._rs = null;\n        this._children = [];\n        this.disposables.dispose();\n    };\n    return RamlOutline;\n})(SC.Scrollable);\nexports.RamlOutline = RamlOutline;\n/*\n *\n */\nfunction treeSection(input, name, icon, filterFunc, l, opener) {\n    if (opener === void 0) { opener = null; }\n    var v = UI.treeViewerSection(name, icon, input, function (x) { return getChildren(x).filter(function (x) { return filterFunc(x); }); }, new HLRenderer(opener));\n    v.viewer.setBasicLabelFunction(function (x) { return x ? x.name() : ''; });\n    v.viewer.setKeyProvider({\n        key: function (p) {\n            return \"\" + p.lowLevel().start();\n        }\n    });\n    v.viewer.addSelectionListener(l);\n    return v;\n}\nexports.treeSection = treeSection;\nvar HLNodeType;\n(function (HLNodeType) {\n    HLNodeType[HLNodeType[\"Resource\"] = 0] = \"Resource\";\n    HLNodeType[HLNodeType[\"Schema\"] = 1] = \"Schema\";\n    HLNodeType[HLNodeType[\"Type\"] = 2] = \"Type\";\n    HLNodeType[HLNodeType[\"Trait\"] = 3] = \"Trait\";\n    HLNodeType[HLNodeType[\"Unknown\"] = 4] = \"Unknown\";\n})(HLNodeType || (HLNodeType = {}));\nfunction getNodeType(node) {\n    if (isResource(node))\n        return HLNodeType.Resource;\n    else if (isOther(node))\n        return HLNodeType.Trait;\n    else if (isResourceTypeOrTrait(node))\n        return HLNodeType.Type;\n    else if (isSchemaOrType(node))\n        return HLNodeType.Schema;\n    else\n        return HLNodeType.Unknown;\n}\nfunction isResource(p) {\n    return (p.definition().key() === universes.Universe08.Resource || p.definition().key() === universes.Universe10.Resource);\n}\nvar prohibit = {\n    resources: true,\n    schemas: true,\n    types: true,\n    resourceTypes: true,\n    traits: true\n};\nfunction isOther(p) {\n    if (p.property()) {\n        var nm = p.property().nameId();\n        if (prohibit[nm]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isResourceTypeOrTrait(p) {\n    var pc = p.definition().key();\n    return (pc === universes.Universe08.ResourceType\n        || pc === universes.Universe10.ResourceType ||\n        pc === universes.Universe08.Trait\n        ||\n            pc === universes.Universe10.Trait);\n}\nfunction isApi(p) {\n    var pc = p.definition().key();\n    return pc === universes.Universe08.Api || pc === universes.Universe10.Api;\n}\nfunction isDocumentation(p) {\n    var pc = p.definition().key();\n    return (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem);\n}\nfunction isSchemaOrType(p) {\n    var pc = p.definition().key();\n    return (pc === universes.Universe08.GlobalSchema) || (p.property() && p.property().nameId()\n        == universes.Universe10.LibraryBase.properties.types.name);\n}\nfunction getChildren(p) {\n    if (p == null)\n        return [];\n    if (p.isAttr()) {\n        return [];\n    }\n    if (p.isUnknown()) {\n        return [];\n    }\n    var ch = p.children();\n    return ch.filter(function (x) {\n        if (x.isAttr()) {\n            return false;\n        }\n        if (x.isUnknown()) {\n            return false;\n        }\n        var e = x;\n        //return false;\n        return true;\n    });\n}\nfunction keyProvider(node) {\n    if (!node)\n        return null;\n    if (node && !node.parent())\n        return node.name();\n    else\n        return node.name() + \" :: \" + keyProvider(node.parent());\n}\nfunction fullPath(node) {\n    if (node == null)\n        return \"\";\n    else\n        return fullPath(node.parent()) + \"/\" + node.name();\n}\nfunction simpleTree(input, selectionListener, filterFunc, opener) {\n    if (opener === void 0) { opener = null; }\n    var viewer = UI.treeViewer(function (x) {\n        if (x === null) {\n            return [];\n        }\n        if (x.parent() == null) {\n            return getChildren(x).filter(function (x) { return filterFunc(x); });\n        }\n        return getChildren(x);\n    }, new HLRenderer(opener), fullPath);\n    viewer.setBasicLabelFunction(function (x) { return x.name(); });\n    viewer.setKeyProvider({ key: keyProvider });\n    viewer.addSelectionListener(selectionListener);\n    viewer.getBinding().set(input);\n    return viewer;\n}\nexports.simpleTree = simpleTree;\nfunction createTree(p, selectionListener, opener) {\n    if (opener === void 0) { opener = null; }\n    var outline = simpleTree(p, { selectionChanged: selectionListener }, function (x) { return (isResource(x)); }, opener);\n    var schemas = simpleTree(p, { selectionChanged: selectionListener }, isSchemaOrType, opener);\n    var types = simpleTree(p, { selectionChanged: selectionListener }, isResourceTypeOrTrait, opener);\n    var other = simpleTree(p, { selectionChanged: selectionListener }, function (x) { return (isOther(x)); }, opener);\n    var folder = new UI.TabFolder();\n    folder.add(\"Resources\", UI.Icon.SEARCH, outline, 'raml-icon-custom');\n    folder.add(\"Schemas & Types\", UI.Icon.SEARCH, schemas, 'raml-icon-custom');\n    folder.add(\"Resource Types & Traits\", UI.Icon.SEARCH, types, 'raml-icon-custom');\n    folder.add(\"Other\", UI.Icon.SEARCH, other, 'raml-icon-custom');\n    folder.setSelectedIndex(0);\n    folder.setOnSelected(function () {\n        var selectedTab = folder.selectedComponent();\n        if (selectedTab) {\n            var selection = selectedTab.getSelection();\n            if (selection && selection.elements && selection.elements.length > 0) {\n                selectionListener(new UI.SelectionChangedEvent(selectedTab, null, selection));\n                selectedTab.customizePanel(true);\n            }\n        }\n    });\n    return folder;\n}\nexports.createTree = createTree;\nvar HLRenderer = (function () {\n    function HLRenderer(opener) {\n        this.opener = opener;\n    }\n    HLRenderer.prototype.render = function (model) {\n        try {\n            if (model.isAttr()) {\n                var attr = model;\n                return UI.hc(UI.label(attr.name() + \":\" + attr.value()), UI.a(\"\", function (x) {\n                    var p1 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().start());\n                    var p2 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().end());\n                    editorTools.aquireManager().getCurrentEditor().setSelectedBufferRange({ start: p1, end: p1 }, {});\n                }, UI.Icon.ARROW_SMALL_LEFT, null, null));\n            }\n            if (model.isUnknown()) {\n                return UI.label(\"unknown\");\n            }\n            var icon = UI.Icon.DASH;\n            var highLight = UI.TextClasses.NORMAL;\n            var node = model;\n            var pc = node.definition().key();\n            if (pc === universes.Universe08.Resource || pc === universes.Universe10.Resource) {\n                icon = UI.Icon.PRIMITIVE_SQUARE;\n                highLight = UI.TextClasses.HIGHLIGHT;\n            }\n            if (pc === universes.Universe08.Method || pc === universes.Universe10.Method) {\n                icon = UI.Icon.PRIMITIVE_DOT;\n                highLight = UI.TextClasses.WARNING;\n            }\n            if (pc === universes.Universe08.AbstractSecurityScheme || pc === universes.Universe10.AbstractSecurityScheme) {\n                icon = UI.Icon.LOCK;\n                highLight = UI.TextClasses.HIGHLIGHT;\n            }\n            if (pc === universes.Universe08.AbstractSecurityScheme || pc == universes.Universe10.AbstractSecurityScheme) {\n                icon = UI.Icon.FILE_SUBMODULE;\n                highLight = UI.TextClasses.NORMAL;\n            }\n            if (pc == universes.Universe10.TypeDeclaration && index_1.universeHelpers.isAnnotationTypesProperty(node.property())) {\n                icon = UI.Icon.TAG;\n                highLight = UI.TextClasses.HIGHLIGHT;\n            }\n            if (node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name) ||\n                node.definition().isAssignableFrom(universes.Universe08.Parameter.name)) {\n                if (node.property() && node.property().nameId() == universes.Universe10.ObjectTypeDeclaration.properties.properties.name) {\n                    icon = UI.Icon.FILE_BINARY;\n                    highLight = UI.TextClasses.SUCCESS;\n                }\n                else {\n                    icon = UI.Icon.FILE_BINARY;\n                    highLight = UI.TextClasses.SUCCESS;\n                }\n            }\n            var nm = model.name();\n            var hnode = model;\n            if (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem) {\n                icon = UI.Icon.BOOK;\n                var a = hnode.attr(\"title\");\n                if (a) {\n                    nm = a.value();\n                }\n            }\n            var extraText = \"\";\n            var extraClass = UI.TextClasses.NORMAL;\n            var hc = UI.hc(UI.label(nm, icon, highLight));\n            var tp = node.attr(\"type\");\n            if (tp) {\n                var vl = tp.value();\n                if (vl == null) {\n                    vl = \"\";\n                }\n                var sv = \"\";\n                if (typeof vl === \"object\") {\n                    sv = \":\" + vl.valueName();\n                }\n                else {\n                    sv = \":\" + vl;\n                }\n                hc.addChild(UI.label(sv, UI.Icon.NONE, UI.TextClasses.WARNING).margin(2, 0, 0, 0));\n            }\n            if (node.lowLevel().unit() != node.root().lowLevel().unit()) {\n                highLight = UI.TextClasses.SUBTLE;\n                hc.addChild(UI.label(\"(\" + node.lowLevel().unit().path() + \")\", UI.Icon.NONE, highLight).margin(5, 0, 0, 0));\n            }\n            hc.addClass(\"outline\");\n            return hc;\n        }\n        catch (e) {\n            console.log(e);\n            return UI.hc(UI.label(\"Illegal node\", UI.Icon.ARROW_SMALL_LEFT, null, null));\n        }\n    };\n    return HLRenderer;\n})();\nexports.HLRenderer = HLRenderer;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/outline-view.js\n ** module id = 33\n ** module chunks = 0\n **/","var emissary = require('emissary');\nvar Subscriber = emissary.Subscriber;\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar sp = require(\"atom-space-pen-views\");\nvar $ = sp.$;\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View(options) {\n        _super.call(this);\n        this.options = options;\n        this.init();\n    }\n    Object.defineProperty(View.prototype, \"$\", {\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    View.content = function () {\n        throw new Error('Must override the base View static content member');\n    };\n    View.prototype.init = function () { };\n    return View;\n})(sp.View);\nvar ScrollView = (function (_super) {\n    __extends(ScrollView, _super);\n    function ScrollView(options) {\n        _super.call(this);\n        this.options = options;\n        this.init();\n    }\n    Object.defineProperty(ScrollView.prototype, \"$\", {\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScrollView.content = function () {\n        throw new Error('Must override the base View static content member');\n    };\n    ScrollView.prototype.init = function () { };\n    return ScrollView;\n})(sp.ScrollView);\nvar TooltipView = (function (_super) {\n    __extends(TooltipView, _super);\n    function TooltipView(rect) {\n        _super.call(this, rect);\n        this.rect = rect;\n        $(document.body).append(this.$);\n        this.updatePosition();\n    }\n    TooltipView.content = function () {\n        var _this = this;\n        return this.div({ class: 'atom-typescript-tooltip tooltip' }, function () {\n            _this.div({ class: 'tooltip-inner', outlet: 'inner' });\n        });\n    };\n    TooltipView.prototype.updateText = function (text) {\n        this.inner.html(text);\n        this.updatePosition();\n        this.$.fadeTo(300, 1);\n    };\n    TooltipView.prototype.updatePosition = function () {\n        var offset = 10;\n        var left = this.rect.right;\n        var top = this.rect.bottom;\n        var right = undefined;\n        if (left + this.$[0].offsetWidth >= $(document.body).width())\n            left = $(document.body).width() - this.$[0].offsetWidth - offset;\n        //this.$.css({ 'max-width': '500px'})\n        if (left < 0) {\n            this.$.css({ 'white-space': 'pre-wrap' });\n            left = offset;\n            right = offset;\n        }\n        if (top + this.$[0].offsetHeight >= $(document.body).height()) {\n            top = this.rect.top - this.$[0].offsetHeight;\n        }\n        this.$.css({ left: left, top: top });\n    };\n    return TooltipView;\n})(View);\nfunction getFromShadowDom(element, selector) {\n    var el = element[0];\n    var found = el.rootElement.querySelectorAll(selector);\n    return sp.$(found[0]);\n}\nexports.getFromShadowDom = getFromShadowDom;\nfunction getEditorPositionForBufferPosition(editor, bufferPos) {\n    var buffer = editor.getBuffer();\n    return buffer.characterIndexForPosition(bufferPos);\n}\nfunction isAllowedExtension(ext) {\n    return (ext == '.raml' || ext == '.yaml');\n}\nexports.isAllowedExtension = isAllowedExtension;\nfunction attach(editorView, editor) {\n    //console.log(\"Attach\")\n    //console.log(editorView)\n    //var rawView = editorView;\n    //var filePath = editor.getPath();\n    //var filename = path.basename(filePath);\n    //var ext = path.extname(filename);\n    //if (!isAllowedExtension(ext))\n    //    return;\n    //if (!fs.existsSync(filePath)) {\n    //    return;\n    //}\n    //var scroll = getFromShadowDom([editorView], '.scroll-view');\n    //var subscriber = new Subscriber();\n    //var exprTypeTimeout = null;\n    //var exprTypeTooltip = null;\n    //var lastExprTypeBufferPt;\n    //subscriber.subscribe(scroll, 'mousemove', function (e) {\n    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n    //    if (lastExprTypeBufferPt && lastExprTypeBufferPt.isEqual(bufferPt) && exprTypeTooltip)\n    //        return;\n    //    lastExprTypeBufferPt = bufferPt;\n    //    clearExprTypeTimeout();\n    //    exprTypeTimeout = setTimeout(function () { return showExpressionType(e); }, 1000);\n    //});\n    //subscriber.subscribe(scroll, 'mouseout', function (e) { return clearExprTypeTimeout(); });\n    //subscriber.subscribe(scroll, 'keydown', function (e) { return clearExprTypeTimeout(); });\n    //editor.onDidDestroy(function () { return deactivate(); });\n    //function showExpressionType(e) {\n    //    if (exprTypeTooltip)\n    //        return;\n    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n    //    pixelPt.top += editor.displayBuffer.getScrollTop();\n    //    pixelPt.left += editor.displayBuffer.getScrollLeft();\n    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n    //    var curCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column]);\n    //    var nextCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column + 1]);\n    //    if (curCharPixelPt.left >= nextCharPixelPt.left)\n    //        return;\n    //    var offset = editor.getLineHeightInPixels() * 0.7;\n    //    var tooltipRect = {\n    //        left: e.clientX,\n    //        right: e.clientX,\n    //        top: e.clientY - offset,\n    //        bottom: e.clientY + offset\n    //    };\n    //    exprTypeTooltip = new TooltipView(tooltipRect);\n    //    // var position = getEditorPositionForBufferPosition(editor, bufferPt);\n    //    var node=provider.getAstNode({\n    //        editor:editor,\n    //        bufferPosition:bufferPt\n    //    },false);\n    //    if (node) {\n    //        var hl=<hl.IHighLevelNode>node;\n    //        var pos=getEditorPositionForBufferPosition(editor,bufferPt);\n    //        var doc=docHelper.getDocumentation(hl,pos);\n    //        if (doc){\n    //            exprTypeTooltip.updateText(doc);\n    //        }\n    //    }\n    //\n    //}\n    //function deactivate() {\n    //    subscriber.unsubscribe();\n    //    clearExprTypeTimeout();\n    //}\n    //function clearExprTypeTimeout() {\n    //    if (exprTypeTimeout) {\n    //        clearTimeout(exprTypeTimeout);\n    //        exprTypeTimeout = null;\n    //    }\n    //    hideExpressionType();\n    //}\n    //function hideExpressionType() {\n    //    if (!exprTypeTooltip)\n    //        return;\n    //    exprTypeTooltip.$.remove();\n    //    exprTypeTooltip = null;\n    //}\n}\nexports.attach = attach;\nfunction pixelPositionFromMouseEvent(editorView, event) {\n    var clientX = event.clientX, clientY = event.clientY;\n    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n    var top = clientY - linesClientRect.top;\n    var left = clientX - linesClientRect.left;\n    return { top: top, left: left };\n}\nfunction screenPositionFromMouseEvent(editorView, event) {\n    return editorView.getModel().screenPositionForPixelPosition(pixelPositionFromMouseEvent(editorView, event));\n}\nexports.screenPositionFromMouseEvent = screenPositionFromMouseEvent;\nfunction screenPositionFromMouse(editor, event) {\n    var editorView = sp.$(atom.views)[0].getView(editor);\n    var pos = pixelPositionFromMouseEvent(editorView, event);\n    pos.top -= editor.displayBuffer.getScrollTop();\n    pos.left -= editor.displayBuffer.getScrollLeft();\n    var clientRect = editorView.getBoundingClientRect();\n    pos.top += clientRect.top;\n    pos.left += clientRect.left;\n    return pos;\n}\nexports.screenPositionFromMouse = screenPositionFromMouse;\n//export function turnOn()\n//{\n//    (<any>atom.workspace).observeTextEditors(editor=> {\n//        var editorView = (<any>sp.$((<any>atom).views))[0].getView(editor);\n//        attach(editorView, editor);\n//    });\n//}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/tooltip-manager.js\n ** module id = 34\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar hl = require(\"raml-1-parser\");\nvar UI = require(\"atom-ui-lib\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar extract = require(\"./extractElementsDialog\");\nvar assist = require(\"./assist-utils\");\nvar universes = hl.universes;\nvar MoveElementsDialog = (function () {\n    function MoveElementsDialog(node, name, _resourceType) {\n        this.node = node;\n        this.name = name;\n        this._resourceType = _resourceType;\n    }\n    MoveElementsDialog.prototype.getActiveEditor = function () {\n        var activeEditor = atom.workspace.getActiveTextEditor();\n        if (activeEditor) {\n            return activeEditor;\n        }\n        if (editorTools.aquireManager())\n            return editorTools.aquireManager().getCurrentEditor();\n        return null;\n    };\n    MoveElementsDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Move resource \", UI.Icon.GIST_NEW, false, false);\n        var errorLabel = UI.label(\"please select destination resource\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        vc.addChild(UI.label(\"Please select destination resource\"));\n        var el = UI.hc();\n        vc.setPercentWidth(100);\n        el.setPercentWidth(100);\n        var filterFunc = function (x) {\n            if (_this._resourceType) {\n                if (x.definition().key() != universes.Universe08.Resource &&\n                    x.definition().key() != universes.Universe10.Resource) {\n                    return false;\n                }\n                if (x == node || x == node.parent()) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        var universe = node.definition().universe();\n        var v = extract.createSmallSelectionPanel(node.root(), filterFunc, \"400px\", \"100%\");\n        el.addChild(v);\n        vc.addChild(el);\n        v.addSelectionListener({\n            selectionChanged: function (ev) {\n                errorLabel.setDisplay(ev.selection.isEmpty());\n                okButton.setDisabled(ev.selection.isEmpty());\n            }\n        });\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            var target = v.getSelection().elements[0];\n            node.parent().remove(node);\n            target.add(node);\n            var rs = node.lowLevel().unit().contents();\n            _this.getActiveEditor().setText(assist.cleanEmptyLines(rs));\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return MoveElementsDialog;\n})();\nexports.MoveElementsDialog = MoveElementsDialog;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/moveElementsDialog.js\n ** module id = 35\n ** module chunks = 0\n **/","/**\n * Created by kor on 24/07/15.\n */\n/// <reference path=\"../../../typings/main.d.ts\" />\nvar path = require('path');\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar rp = require(\"raml-1-parser\");\nvar project = rp.project;\nfunction ast(editor) {\n    var man = editorTools.aquireManager();\n    if (editorTools.aquireManager()) {\n        if (man.getCurrentEditor() == editor) {\n            return man.ast;\n        }\n    }\n    var p = editor.getPath();\n    var prj = project.createProject(path.dirname(p));\n    var unit = prj.unit(path.basename(p));\n    var text = editor.getBuffer().getText();\n    if (!unit) {\n        return null;\n    }\n    unit.updateContent(text);\n    var ast = unit.highLevel();\n    return ast;\n}\nexports.ast = ast;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/editorManager.js\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar UI = require(\"atom-ui-lib\");\nvar SC = require(\"../util/ScrollViewUI\");\nvar path = require('path');\nvar CompositeDisposable = UI.CompositeDisposable;\nvar hl = require(\"raml-1-parser\");\nvar details = require(\"./details\");\nvar schemaUI = require(\"./schemaUI\");\nvar editorTools = require(\"./editor-tools\");\nvar dialogs = require(\"../dialogs/dialogs\");\nvar fs = require(\"fs\");\nvar universeHelpers = hl.universeHelpers;\nvar RamlDetails = (function (_super) {\n    __extends(RamlDetails, _super);\n    function RamlDetails(allowStructureChanges) {\n        if (allowStructureChanges === void 0) { allowStructureChanges = true; }\n        _super.call(this);\n        this.allowStructureChanges = allowStructureChanges;\n        this.disposables = new CompositeDisposable();\n        this.addClass('raml-details');\n    }\n    RamlDetails.prototype.getTitle = function () {\n        return \"Details\";\n    };\n    RamlDetails.prototype.attached = function () {\n        try {\n            this.element.innerHTML = \"<div></div>\";\n            this._children = [];\n            this.container = UI.vc();\n            this.addChild(this.container);\n            this.ui().appendChild(this.container.ui());\n            _super.prototype.attached.call(this);\n        }\n        catch (e) {\n        }\n    };\n    RamlDetails.prototype.setSchema = function (node) {\n        if (this.wasSchema) {\n            this.schemaView.dispose();\n            this.schemaView = null;\n        }\n        var key = node.attr(\"key\"), value = node.attr(\"value\");\n        var ssto = 12;\n        if (value == null) {\n            this.container.clear();\n            var errLabel = UI.h3(\"Selected schema has incorrect node so cannot be displayed.\");\n            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n            this.container.addChild(errLabel);\n            return;\n        }\n        //FIXME\n        setInterval(function () {\n            if (ssto++ != 12)\n                return;\n            if (value) {\n                value.setValue(schemaText);\n                schemaUI._updatePreview(treeView, schemaText);\n            }\n        }, 100);\n        var schemaText = value.value();\n        this.container.clear();\n        var textView = dialogs.smallEditor(function (e, v) {\n            if (value.lowLevel().includePath()) {\n                try {\n                    var sm = path.dirname(node.lowLevel().unit().absolutePath());\n                    var relative = path.resolve(sm, value.lowLevel().includePath());\n                    if (!value.lowLevel().includeReference()) {\n                        fs.writeFileSync(relative, v);\n                    }\n                }\n                catch (e) {\n                    console.log(e);\n                }\n            }\n            // if (v!=schemaText) textView.setText(schemaText); // read-only variant\n            schemaText = v;\n            ssto = 0;\n        });\n        dialogs._updateEditor(textView, schemaText);\n        var treeView = schemaUI._schemaPreview();\n        schemaUI._updatePreview(treeView, schemaText);\n        var schemaTab = new UI.TabFolder();\n        schemaTab.add(\"Tree view\", UI.Icon.GIT_MERGE, treeView);\n        schemaTab.add(\"Text view\", UI.Icon.FILE_TEXT, textView);\n        this.container.addChild(schemaTab);\n        window['detailsnode'] = node;\n        if (details.oldItem) {\n            details.oldItem.detach();\n            details.oldItem = null;\n        }\n        this.schemaView = textView;\n        this.wasSchema = true;\n    };\n    RamlDetails.prototype.setResource = function (node) {\n        if (this.wasSchema) {\n            this.schemaView.dispose();\n            this.schemaView = null;\n        }\n        this.wasSchema = false;\n        var hnode = node;\n        window[\"detailsnode\"] = hnode;\n        if (hnode == null || hnode.lowLevel() == null)\n            this.displayEmpty();\n        console.log(\"Displaying details for node \" + hnode.name());\n        details.updateDetailsPanel(hnode, this.container, true);\n    };\n    RamlDetails.prototype.update = function () {\n        if (window[\"detailsnode\"]) {\n            this.setResource(window[\"detailsnode\"]);\n        }\n    };\n    RamlDetails.prototype.displayEmpty = function () {\n        this.container.clear();\n        if (!editorTools.aquireManager().ast) {\n            this.container.addChild(UI.h3(\"Our API is fabulously empty\").margin(8, 8, 20, 8));\n            var create = new UI.Button(\"Create new API\", UI.ButtonSizes.LARGE, UI.ButtonHighlights.SUCCESS, UI.Icon.REPO_CLONE, function () { return dialogs.newApi(); });\n            create.margin(8, 8, 20, 0);\n            this.container.addChild(create);\n        }\n    };\n    RamlDetails.prototype.destroy = function () {\n        editorTools.aquireManager()._details = null;\n        this.disposables.dispose();\n        this._node = null;\n        this.container.dispose();\n        this.container = null;\n        window[\"detailsnode\"] = null;\n        this._children = [];\n        if (details.oldItem) {\n            details.oldItem.detach();\n        }\n        if (this.wasSchema) {\n            this.schemaView.dispose();\n            this.schemaView = null;\n        }\n        details.oldItem = null;\n    };\n    RamlDetails.prototype.show = function (node) {\n        if (this._node == node)\n            return;\n        this._node = node;\n        try {\n            if (isSchema(node))\n                this.setSchema(this._node);\n            else\n                this.setResource(node);\n        }\n        catch (e) { }\n    };\n    return RamlDetails;\n})(SC.Scrollable);\nexports.RamlDetails = RamlDetails;\nfunction isSchema(p) {\n    if (!p) {\n        return false;\n    }\n    return universeHelpers.isGlobalSchemaType(p.definition());\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/details-view.js\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar Atom = require('atom');\nvar React = require('react');\nvar SpacePenViews = require('atom-space-pen-views');\nvar pathwatcher = require('../../util/pathwatcherProxy');\nvar extend = require('xtend');\nvar path = require('path');\nvar popsicle = require('popsicle');\nvar AtomUtil = require('../util/atom');\nvar rp = require(\"raml-1-parser\");\nvar Render = require('./render');\nvar CompositeDisposable = Atom.CompositeDisposable;\nfunction template(str, replace, defaults) {\n    return str.replace(/\\{([^{}]+)\\}/g, function (match, key) {\n        if (replace && replace[key] != null) {\n            return replace[key];\n        }\n        if (defaults && defaults[key] != null) {\n            return defaults[key];\n        }\n        return '';\n    });\n}\n/**\n * Export the console view instance which provides rendering and live-updating.\n */\nvar RAMLConsoleView = (function (_super) {\n    __extends(RAMLConsoleView, _super);\n    function RAMLConsoleView(options) {\n        var _this = this;\n        _super.call(this);\n        this.loaded = false;\n        this.isAttached = false;\n        this.isParsing = false;\n        this.disposables = new CompositeDisposable();\n        this.pageState = {};\n        // Track files and editor watchers.\n        this.paths = {};\n        this.editors = {};\n        this.resolver = new ConsoleResolver(function (path) { return _this.readFileSync(path); });\n        this.state = extend({\n            view: {},\n            parameters: {},\n            headers: {},\n            uriParameters: {},\n            baseUriParameters: {},\n            queryParameters: {},\n            bodies: {}\n        }, options.state);\n        this.filename = options.filename;\n        this.editorId = options.editorId;\n        // Handle manually passed in RAML wrapper.\n        if (options.raml) {\n            this.raml = rp.expander.expandTraitsAndResourceTypes(options.raml);\n            this.project = options.raml.highLevel().lowLevel().unit().project().cloneWithResolver(this.resolver);\n            this.loaded = true;\n        }\n    }\n    /**\n     * Atom uses the `content` as the wrapper element.\n     */\n    RAMLConsoleView.content = function () {\n        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n    };\n    RAMLConsoleView.getUriForFilename = function (path) {\n        return 'raml-console://file/' + path;\n    };\n    RAMLConsoleView.getUriForEditor = function (editor) {\n        return 'raml-console://editor/' + editor.id;\n    };\n    RAMLConsoleView.prototype.attached = function () {\n        var _this = this;\n        if (this.isAttached) {\n            return;\n        }\n        this.render();\n        this.isAttached = true;\n        if (this.editorId) {\n            this.resolveEditor(this.editorId);\n        }\n        else if (this.filename) {\n            this.resolveFilename(this.filename);\n        }\n        this.disposables.add(atom.workspace.observeTextEditors(function (editor) {\n            var path = editor.getPath();\n            // Upgrade from file watching to editor watching.\n            if (_this.paths[path]) {\n                _this.watchEditor(editor);\n                _this.stopWatchingPath(path);\n            }\n        }));\n    };\n    RAMLConsoleView.prototype.resolveEditor = function (editorId) {\n        var _this = this;\n        var resolve = function () {\n            _this.editor = AtomUtil.getEditorById(editorId);\n            if (_this.editor) {\n                _this.trigger('title-changed');\n                _this.loadRAML();\n                return;\n            }\n            var view = _this.parents('.pane').view();\n            return view && view.destroyItem(_this);\n        };\n        if (atom.workspace) {\n            resolve();\n        }\n        else {\n            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n        }\n    };\n    RAMLConsoleView.prototype.resolveFilename = function (filename) {\n        var _this = this;\n        var resolve = function () {\n            _this.file = new pathwatcher.File(filename);\n            _this.trigger('title-changed');\n            _this.loadRAML();\n        };\n        if (atom.workspace) {\n            resolve();\n        }\n        else {\n            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n        }\n    };\n    RAMLConsoleView.prototype.readFileSync = function (path) {\n        var editor = AtomUtil.getEditorByPath(path);\n        var contents;\n        if (editor) {\n            contents = editor.getText();\n            this.watchEditor(editor);\n        }\n        else {\n            try {\n                contents = fs.readFileSync(path, 'utf8');\n            }\n            catch (err) {\n                if (err.code === 'ENOENT') {\n                    this.watchForFile(path);\n                    return;\n                }\n                throw err;\n            }\n            this.watchFile(path);\n        }\n        return contents;\n    };\n    RAMLConsoleView.prototype.watchEditor = function (editor) {\n        var _this = this;\n        var path = editor.getPath();\n        if (this.editors[path]) {\n            return;\n        }\n        var disposables = new CompositeDisposable();\n        this.editors[path] = disposables;\n        // Changes can be as simple as updating the cache.\n        disposables.add(editor.onDidStopChanging(function () {\n            _this.updateUnit(path, editor.getText());\n        }));\n        // Callback to dispose of listeners and force an update. This happens\n        // because the updated path or file may not be used by the RAML parser.\n        var cb = function () {\n            _this.stopWatchingEditor(path);\n            _this.updateUnit(path, _this.readFileSync(path));\n        };\n        disposables.add(editor.onDidDestroy(cb));\n        disposables.add(editor.onDidChangePath(cb));\n    };\n    RAMLConsoleView.prototype.getActiveEditor = function () {\n        return atom.workspace.getActiveTextEditor();\n    };\n    RAMLConsoleView.prototype.stopWatchingPath = function (path) {\n        var watcher = this.paths[path];\n        if (watcher) {\n            watcher.close();\n            delete this.paths[path];\n        }\n    };\n    RAMLConsoleView.prototype.stopWatchingEditor = function (path) {\n        var disposables = this.editors[path];\n        if (disposables) {\n            disposables.dispose();\n            delete this.editors[path];\n        }\n    };\n    RAMLConsoleView.prototype.watchFile = function (path) {\n        var _this = this;\n        if (this.paths[path]) {\n            return;\n        }\n        var watcher = pathwatcher.watch(path, function (event) {\n            if (event === 'change') {\n                _this.updateUnit(path, _this.readFileSync(path));\n            }\n            else {\n                _this.stopWatchingPath(path);\n                _this.deleteUnit(path);\n            }\n        });\n        this.paths[path] = watcher;\n    };\n    RAMLConsoleView.prototype.watchForFile = function (filename) {\n        var _this = this;\n        this.watchForPath(filename, function () {\n            _this.updateUnit(filename, _this.readFileSync(filename));\n        });\n    };\n    RAMLConsoleView.prototype.watchForPath = function (filename, cb) {\n        var _this = this;\n        var parent = path.dirname(filename);\n        var watch = function () {\n            var watcher = pathwatcher.watch(parent, function (event, newFilename) {\n                if (event === 'change') {\n                    if (newFilename === filename) {\n                        _this.stopWatchingPath(parent);\n                        cb();\n                    }\n                }\n                else {\n                    _this.watchForPath(parent, watch);\n                    _this.stopWatchingPath(parent);\n                }\n            });\n            _this.paths[parent] = watcher;\n        };\n        try {\n            watch();\n        }\n        catch (e) {\n            this.watchForPath(parent, watch);\n        }\n    };\n    RAMLConsoleView.prototype.stopWatching = function () {\n        var _this = this;\n        Object.keys(this.paths).forEach(function (path) {\n            _this.stopWatchingPath(path);\n        });\n        Object.keys(this.editors).forEach(function (path) {\n            _this.stopWatchingEditor(path);\n        });\n    };\n    RAMLConsoleView.prototype.navigate = function (state) {\n        var view = typeof state === 'string' ? { id: state } : extend(this.state.view, state);\n        // Reset `pageState` before re-render.\n        this.pageState = {};\n        this.setState({ view: view }, function () {\n            // Scroll the view to the top, as if we'd just navigated.\n            document.getElementById('raml-console-view').scrollTop = 0;\n        });\n        this.abortRequest();\n    };\n    /**\n     * Render the UI with React.\n     */\n    RAMLConsoleView.prototype.render = function (cb) {\n        var _this = this;\n        var props = {\n            state: this.state,\n            raml: this.raml,\n            loaded: this.loaded,\n            errors: this.errors,\n            pageState: this.pageState,\n            setParameter: function (group, name, value) { return _this.setParameter(group, name, value); },\n            setState: function (state) { return _this.setState(state); },\n            navigate: function (view) { return _this.navigate(view); },\n            execRequest: function () { return _this.execRequest(); }\n        };\n        React.render(React.createElement(Render.Console, props), this.element, cb);\n    };\n    RAMLConsoleView.prototype.execRequest = function () {\n        var _this = this;\n        this.abortRequest();\n        var baseUri = this.raml.baseUri();\n        var node = this.raml.highLevel().findById(this.state.view.id).wrapperNode();\n        // Remove old request errors.\n        this.setPageState({ requestError: undefined });\n        if (baseUri == null) {\n            this.setPageState({ requestError: 'Unable to execute request, `baseUri` is missing' });\n            return;\n        }\n        var securityScheme = this.state.securityScheme ?\n            this.raml.securitySchemes().filter(function (x) { return x.name() === _this.state.securityScheme; })[0] : undefined;\n        var defaultBaseUriParameters = this.toDefaultParameters(this.raml.allBaseUriParameters());\n        var defaultUriParameters = this.toDefaultParameters(node.parent().allUriParameters());\n        var methodHeaders = node.headers();\n        var methodQuery = node.queryParameters();\n        var url = template(baseUri.value() || '', this.state.baseUriParameters, defaultBaseUriParameters).replace(/\\/$/, '');\n        var path = template(node.parent().completeRelativeUri(), this.state.uriParameters, defaultUriParameters);\n        if (securityScheme) {\n            methodQuery = methodQuery.concat(securityScheme.describedBy().queryParameters());\n            methodHeaders = methodHeaders.concat(securityScheme.describedBy().headers());\n        }\n        this.request = popsicle.request({\n            url: url + path,\n            method: node.method(),\n            headers: extend({ 'User-Agent': 'API Workbench: Console' }, this.usedParameters(this.state.headers, methodHeaders)),\n            query: this.usedParameters(this.state.queryParameters, methodQuery),\n            body: this.state.bodies[this.state.body],\n            use: [\n                popsicle.plugins.headers(),\n                popsicle.plugins.unzip(),\n                popsicle.plugins.concatStream('string')\n            ]\n        });\n        this.request.progress(function () {\n            _this.setPageState({ requestProgress: _this.request.completed });\n        });\n        // Handle request completion.\n        this.request.then(function (response) {\n            _this.setPageState({ requestResponse: response.toJSON(), requestProgress: undefined });\n            _this.request = undefined;\n        }, function (error) {\n            _this.setPageState({ requestError: error.message, requestProgress: undefined });\n            _this.request = undefined;\n        });\n    };\n    RAMLConsoleView.prototype.toDefaultParameters = function (parameters) {\n        var params = {};\n        parameters.forEach(function (parameter) {\n            if (parameter.default()) {\n                params[parameter.name()] = parameter.default();\n            }\n        });\n        return params;\n    };\n    RAMLConsoleView.prototype.usedParameters = function (state, parameters) {\n        var params = {};\n        parameters.forEach(function (param) {\n            if (state[param.name()]) {\n                params[param.name()] = state[param.name()];\n            }\n        });\n        return params;\n    };\n    RAMLConsoleView.prototype.abortRequest = function () {\n        if (this.request) {\n            this.request.abort();\n            this.request = undefined;\n        }\n    };\n    RAMLConsoleView.prototype.updateRAML = function () {\n        this.isParsing = true;\n        try {\n            var baseUnit = this.getUnit(this.getFilename());\n            var errors = baseUnit.ast().errors();\n            this.errors = errors;\n            if (!errors.length) {\n                var originalRoot = baseUnit.highLevel().asElement().wrapperNode();\n                this.raml = rp.expander.expandTraitsAndResourceTypes(originalRoot);\n            }\n        }\n        catch (error) {\n            this.raml = undefined;\n            this.errors = [error];\n        }\n        finally {\n            this.loaded = true;\n            this.isParsing = false;\n            this.render();\n            this.trigger('title-changed');\n        }\n    };\n    RAMLConsoleView.prototype.loadRAML = function () {\n        // Reset all watchers, consider it a fresh parse.\n        this.stopWatching();\n        this.project = rp.project.createProject(path.dirname(this.getFilename()), this.resolver);\n        this.updateRAML();\n    };\n    RAMLConsoleView.prototype.serialize = function () {\n        return {\n            deserializer: 'RAMLConsoleView',\n            filename: this.getFilename(),\n            state: this.state\n        };\n    };\n    RAMLConsoleView.prototype.getFilename = function () {\n        if (this.file) {\n            return this.file.getPath();\n        }\n        if (this.editor) {\n            return this.editor.getPath();\n        }\n    };\n    RAMLConsoleView.prototype.getTitle = function () {\n        var name = 'RAML';\n        if (this.raml && this.raml.title() != null) {\n            name = this.raml.title();\n        }\n        else if (this.file) {\n            name = path.basename(this.getFilename());\n        }\n        else if (this.editor) {\n            name = this.editor.getTitle();\n        }\n        return name + ' Console';\n    };\n    RAMLConsoleView.prototype.destroy = function () {\n        this.stopWatching();\n        this.disposables.dispose();\n        React.unmountComponentAtNode(this.element);\n    };\n    RAMLConsoleView.prototype.setState = function (state, cb) {\n        this.state = extend(this.state, state);\n        this.render(cb);\n    };\n    RAMLConsoleView.prototype.setPageState = function (pageState, cb) {\n        this.pageState = extend(this.pageState, pageState);\n        this.render(cb);\n    };\n    RAMLConsoleView.prototype.setParameter = function (group, name, value) {\n        // TODO(blakeembrey): Use computed properties on TypeScript 1.5+.\n        var state = {};\n        var groupState = extend(this.state[group]);\n        // Remove falsy values from view.\n        if (value) {\n            groupState[name] = value;\n        }\n        else {\n            delete groupState[name];\n        }\n        state[group] = groupState;\n        this.setState(state);\n    };\n    RAMLConsoleView.prototype.getURI = function () {\n        return RAMLConsoleView.getUriForFilename(this.getFilename());\n    };\n    RAMLConsoleView.prototype.getUnit = function (path) {\n        return this.project.unit(path, true);\n    };\n    RAMLConsoleView.prototype.deleteUnit = function (path) {\n        this.project.deleteUnit(path);\n        this.updateRAML();\n    };\n    RAMLConsoleView.prototype.updateUnit = function (path, contents) {\n        this.getUnit(path).updateContent(this.readFileSync(path));\n        this.updateRAML();\n    };\n    return RAMLConsoleView;\n})(SpacePenViews.ScrollView);\nexports.RAMLConsoleView = RAMLConsoleView;\nvar FSResolverImpl = (function () {\n    function FSResolverImpl() {\n    }\n    FSResolverImpl.prototype.content = function (path) {\n        if (!fs.existsSync(path)) {\n            return null;\n        }\n        try {\n            return fs.readFileSync(path).toString();\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    FSResolverImpl.prototype.list = function (path) {\n        return fs.readdirSync(path);\n    };\n    FSResolverImpl.prototype.contentAsync = function (path) {\n        return new Promise(function (resolve, reject) {\n            fs.readFile(path, function (err, data) {\n                if (err != null) {\n                    return reject(err);\n                }\n                var content = data.toString();\n                resolve(content);\n            });\n        });\n    };\n    FSResolverImpl.prototype.listAsync = function (path) {\n        return new Promise(function (reject, resolve) {\n            fs.readdir(path, function (err, files) {\n                if (err != null) {\n                    return reject(err);\n                }\n                resolve(files);\n            });\n        });\n    };\n    return FSResolverImpl;\n})();\nexports.FSResolverImpl = FSResolverImpl;\n/**\n * Create a console resolver class.\n */\nvar ConsoleResolver = (function (_super) {\n    __extends(ConsoleResolver, _super);\n    function ConsoleResolver(readFileSync) {\n        _super.call(this);\n        this.readFileSync = readFileSync;\n    }\n    ConsoleResolver.prototype.content = function (path) {\n        return this.readFileSync(path);\n    };\n    return ConsoleResolver;\n})(FSResolverImpl);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/console/console-view.js\n ** module id = 38\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/main.d.ts\" />\nvar DomParser = require(\"xmldom\");\nfunction xmlToJson(xml) {\n    // Create the return object\n    var obj = {};\n    if (xml.nodeType == 1) {\n        // do attributes\n        if (xml.attributes.length > 0) {\n            for (var j = 0; j < xml.attributes.length; j++) {\n                var attribute = xml.attributes.item(j);\n                obj[\"@\" + attribute.nodeName] = attribute.nodeValue;\n            }\n        }\n    }\n    else if (xml.nodeType == 3) {\n        obj = xml.nodeValue;\n    }\n    // do children\n    if (xml.hasChildNodes()) {\n        for (var i = 0; i < xml.childNodes.length; i++) {\n            var item = xml.childNodes.item(i);\n            var nodeName = item.nodeName;\n            if (nodeName == undefined) {\n                continue;\n            }\n            if (typeof (obj[nodeName]) == \"undefined\") {\n                obj[nodeName] = xmlToJson(item);\n            }\n            else {\n                if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                }\n                obj[nodeName].push(xmlToJson(item));\n            }\n        }\n    }\n    return obj;\n}\n;\nfunction cleanupText(j) {\n    for (var p in j) {\n        if (typeof (j[p]) == \"object\") {\n            for (var k in j[p]) {\n                if (k == '#text') {\n                    var txt = j[p]['#text'];\n                    if (typeof (txt) != 'string') {\n                        txt = txt.join(\"\");\n                    }\n                    txt = txt.trim();\n                    if (txt.length == 0) {\n                        delete j[p]['#text'];\n                    }\n                }\n            }\n            cleanupText(j[p]);\n        }\n    }\n    return j;\n}\nfunction cleanupJson(j) {\n    for (var p in j) {\n        if (typeof (j[p]) == \"object\") {\n            var keys = Object.keys(j[p]);\n            if (keys.length == 1) {\n                if (keys[0] == '#text') {\n                    j[p] = j[p]['#text'];\n                }\n            }\n            cleanupJson(j[p]);\n        }\n    }\n    return j;\n}\nfunction parseXML(value) {\n    var v = new DomParser.DOMParser();\n    if (!value || value.trim().indexOf(\"<<\") == 0)\n        return null;\n    var parsed = v.parseFromString(value);\n    return cleanupJson(cleanupText(xmlToJson(parsed)));\n}\nmodule.exports = parseXML;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/xmlutil.js\n ** module id = 39\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar stubs = rp.stubs;\nvar _ = require(\"underscore\");\nvar provider = require(\"../suggestion/provider\");\nvar UI = require(\"atom-ui-lib\");\nvar outlineView = require(\"../editor-tools/outline-view\");\nvar def = rp.ds;\nvar assist = require(\"./assist-utils\");\nvar yaml = require(\"yaml-ast-parser\");\nvar universeHelpers = rp.universeHelpers;\nvar universeModule = rp.universes;\nvar search = rp.search;\nvar util = require(\"../../util/index\");\nvar ExtractTypesAndTraitsDialog = (function () {\n    function ExtractTypesAndTraitsDialog(node, name, _resourceType) {\n        this.node = node;\n        this.name = name;\n        this._resourceType = _resourceType;\n        this.filters = new NodeFilters();\n    }\n    ExtractTypesAndTraitsDialog.prototype.getActiveEditor = function () {\n        return assist.getActiveEditor();\n    };\n    ExtractTypesAndTraitsDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Extract \" + this.name + \":\", UI.Icon.GIST_NEW, false, false);\n        vc.addChild(UI.label(\"Extracted element name:\").pad(5, 0));\n        var errorLabel = UI.label(\"Please type valid name for \" + this.name, UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        var tf = UI.texfField(\"\", \"\", function (x) {\n            if (!okButton) {\n                return;\n            }\n            var isErr = tf.getBinding().get().trim().length == 0;\n            okButton.setDisabled(isErr);\n            errorLabel.setDisplay(isErr);\n            stub.attr(\"name\").setValue(tf.getBinding().get());\n        });\n        vc.addChild(tf);\n        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n        var el = UI.hc();\n        vc.setPercentWidth(100);\n        el.setPercentWidth(100);\n        var filterFunc = function (x) {\n            if (_this._resourceType) {\n                if (universeHelpers.isResourceType(x.definition())) {\n                    return false;\n                }\n            }\n            if (_.find(_this.filters.removals, function (y) { return x == y; })) {\n                return false;\n            }\n            return true;\n        };\n        var stub = this.createNodeStub(node);\n        var v = createSmallSelectionPanel(node, filterFunc, \"400px\", \"47%\");\n        var v1 = createSmallSelectionPanel(stub, function (x) { return true; }, \"400px\", \"47%\", \"right\");\n        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = v.getSelection().elements;\n            _this.moveRight(z, stub, node, v, v1);\n        });\n        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = v1.getSelection().elements;\n            _this.moveLeft(z, stub, node, v, v1);\n        });\n        var allRight = UI.button(\">>\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = node.elements().filter(function (x) { return filterFunc(x); });\n            _this.moveRight(z, stub, node, v, v1);\n        });\n        var allLeft = UI.button(\"<<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = stub.elements();\n            _this.moveLeft(z, stub, node, v, v1);\n        });\n        el.addChild(UI.vc(moveRight, moveLeft, allRight, allLeft));\n        el.addChild(v);\n        el.addChild(v1);\n        vc.addChild(el);\n        v.addSelectionListener({\n            selectionChanged: function (ev) {\n                var rs = ev.selection.elements;\n                var m = (_.find(rs, function (x) { return x.parent() != node; }) != undefined);\n                moveRight.setDisabled(m || (rs.length == 0));\n            }\n        });\n        v1.addSelectionListener({\n            selectionChanged: function (ev) {\n                var nodesToMove = ev.selection.elements;\n                var unregisteredNode = _.find(nodesToMove, function (nodeToMove) {\n                    var registeredNode = _.find(_this.filters.removals, function (movedNode) { return nodeToMove.id() == movedNode.id(); });\n                    return registeredNode == undefined;\n                }) != undefined;\n                //var m=(_.find(rs, x=>x.parent() != stub)!=undefined )\n                moveLeft.setDisabled(unregisteredNode || (nodesToMove.length == 0));\n            }\n        });\n        moveLeft.setDisabled(true);\n        moveRight.setDisabled(true);\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        var okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.apply(node, stub, tf.getBinding().get());\n            //this.onOk(zz);\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    ExtractTypesAndTraitsDialog.prototype.apply = function (node, stub, newTypeName) {\n        this.filters.removals.forEach(function (x) { return node.remove(x); });\n        var stub2 = this.createNodeStub(node);\n        stub.elements().forEach(function (child) { return stub2.add(child); });\n        stub2.attr(\"name\").setValue(newTypeName);\n        var typeOrTraitValueToReplace = \"_________TEMPORARY_TYPE_OR_TRAIT_VALUE_________\";\n        var replacements = [];\n        var superAttributeName = this._resourceType ?\n            universeModule.Universe10.ResourceType.properties.type.name :\n            universeModule.Universe10.Trait.properties.is.name;\n        var superAttributes = node.attributes(superAttributeName);\n        var superAttrProperty = stub2.definition().property(superAttributeName);\n        if (superAttributes && superAttributes.length > 0) {\n            for (var i = 0; i < superAttributes.length; i++) {\n                var superAttribute = superAttributes[i];\n                var superAttributeLL = superAttribute.lowLevel();\n                var start = superAttributeLL.valueStart();\n                var end = superAttributeLL.valueEnd();\n                if (start <= 0) {\n                    start = superAttributeLL.start();\n                    end = superAttributeLL.end();\n                }\n                var typeOrTraitValueToReplaceWith = superAttributeLL.unit().contents().substr(start, end - start);\n                replacements.push(typeOrTraitValueToReplaceWith);\n            }\n            for (var i = 0; i < superAttributes.length; i++) {\n                var superAttribute = superAttributes[i];\n                node.remove(superAttribute);\n            }\n            var stubAttributeValue = typeOrTraitValueToReplace;\n            if (superAttributes.length > 1) {\n                stubAttributeValue = \"[\" + stubAttributeValue + \"]\";\n            }\n            var stubSuperAttribute = stubs.createAttr(superAttrProperty, stubAttributeValue);\n            stub2.add(stubSuperAttribute);\n            node.resetChildren();\n            stub2.resetChildren();\n        }\n        if (this._resourceType) {\n            node.add(stubs.createAttr(node.definition().property(superAttributeName), stub.name()));\n        }\n        else {\n            node.add(stubs.createAttr(node.definition().property(superAttributeName), \"[\" + stub.name() + \"]\"));\n        }\n        node.root().add(stub2);\n        var cl = node.lowLevel().unit().contents();\n        if (replacements.length == 1) {\n            var totalRepalcement = replacements[0];\n            if (superAttrProperty.isMultiValue()) {\n                totalRepalcement = \"[\" + totalRepalcement + \"]\";\n            }\n            cl = cl.replace(typeOrTraitValueToReplace, totalRepalcement);\n        }\n        else if (replacements.length > 1) {\n            var totalReplacement = \"\";\n            for (var i = 0; i < replacements.length - 1; i++) {\n                totalReplacement += replacements[i] + \", \";\n            }\n            totalReplacement += replacements[replacements.length - 1];\n            cl = cl.replace(typeOrTraitValueToReplace, totalReplacement);\n        }\n        this.getActiveEditor().setText(assist.cleanEmptyLines(cl));\n    };\n    ExtractTypesAndTraitsDialog.prototype.createNodeStub = function (node) {\n        var universe = node.definition().universe();\n        var rtypes = node.root().definition().property(\"resourceTypes\");\n        var traits = node.root().definition().property(\"traits\");\n        var stub = stubs.createStubNode(universe.type(\"ResourceType\"), rtypes);\n        if (!this._resourceType) {\n            stub = stubs.createStubNode(universe.type(\"Trait\"), traits);\n        }\n        return stub;\n    };\n    ExtractTypesAndTraitsDialog.prototype.moveLeft = function (z, stub, node, v, v1) {\n        var _this = this;\n        if (z.length > 0) {\n            z.forEach(function (x) { return _this.filters.removals = _this.filters.removals.filter(function (y) { return y.id() != x.id(); }); });\n            z.forEach(function (x) {\n                stub.remove(x);\n                var k = 0;\n                k++;\n            });\n        }\n        stub.resetChildren();\n        v.setInput(node);\n        v1.setInput(stub);\n    };\n    ExtractTypesAndTraitsDialog.prototype.moveRight = function (z, stub, node, v, v1) {\n        if (z.length > 0) {\n            this.filters.removals = this.filters.removals.concat(z);\n        }\n        z.forEach(function (x) { return stub.add(x.copy()); });\n        stub.resetChildren();\n        v.setInput(node);\n        v1.setInput(stub);\n    };\n    return ExtractTypesAndTraitsDialog;\n})();\nexports.ExtractTypesAndTraitsDialog = ExtractTypesAndTraitsDialog;\nvar NodeFilters = (function () {\n    function NodeFilters() {\n        this.removals = [];\n    }\n    return NodeFilters;\n})();\nfunction createSmallSelectionPanel(node, filter, height, width, float) {\n    if (float === void 0) { float = \"left\"; }\n    var v = createVIewer(node, filter);\n    v.setTagName(\"atom-panel\");\n    v.setStyle(\"width\", width);\n    v.setStyle(\"border\", \"solid\");\n    v.setStyle(\"border-width\", \"1px\");\n    v.setStyle(\"height\", height);\n    v.setStyle(\"overflow\", \"scroll\");\n    if (float) {\n        v.setStyle(\"float\", float);\n    }\n    v.margin(3, 3, 3, 3);\n    return v;\n}\nexports.createSmallSelectionPanel = createSmallSelectionPanel;\nfunction createVIewer(h, filter) {\n    var v = UI.treeViewer(function (x) {\n        return x.elements().filter(function (x) { return filter(x); });\n    }, new outlineView.HLRenderer(function (model) {\n    }));\n    v.setInput(h);\n    return v;\n}\nexports.createVIewer = createVIewer;\nvar AbstractlMoveElementsDialog = (function () {\n    function AbstractlMoveElementsDialog(parentNode, name) {\n        this.parentNode = parentNode;\n        this.name = name;\n        /**\n         * A list of moved nodes.\n         */\n        this.movedNodes = [];\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    AbstractlMoveElementsDialog.prototype.checkNode = function (nodeToFilter) {\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    AbstractlMoveElementsDialog.prototype.validate = function () {\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    AbstractlMoveElementsDialog.prototype.createHeader = function (parentPanel) {\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    AbstractlMoveElementsDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n    };\n    /**\n     * Call this to display the dialog.\n     */\n    AbstractlMoveElementsDialog.prototype.show = function () {\n        console.log(\"Original file tree:\");\n        if (this.getParentNode())\n            console.log(this.getParentNode().printDetails());\n        if (!this.getParentNode()) {\n            return;\n        }\n        var extractSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n        this.stubRoot = this.createStub(this.getParentNode());\n        this.createValidationIndicator(extractSection);\n        this.createHeader(extractSection);\n        this.createPanels(extractSection);\n        this.createButtonBar(extractSection);\n        extractSection.setPercentWidth(100);\n        var html = extractSection.renderUI();\n        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n        this.performValidation();\n    };\n    AbstractlMoveElementsDialog.prototype.performValidation = function () {\n        var validationMessage = this.validate();\n        if (this.okButton) {\n            if (validationMessage)\n                this.okButton.setDisabled(true);\n            else\n                this.okButton.setDisabled(false);\n        }\n        if (this.errorLabel) {\n            if (validationMessage) {\n                this.errorLabel.setDisplay(true);\n                this.errorLabel.setText(validationMessage);\n            }\n            else {\n                this.errorLabel.setDisplay(false);\n                this.errorLabel.setText(\"\");\n            }\n        }\n    };\n    AbstractlMoveElementsDialog.prototype.createValidationIndicator = function (vc) {\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(this.errorLabel));\n    };\n    AbstractlMoveElementsDialog.prototype.getNodeId = function (node) {\n        if (node.parent()) {\n            var parentId = this.getNodeId(node.parent());\n            parentId += \".\" + node.name();\n            var sameName = (node.parent()).asElement().directChildren().filter(function (x) { return x.name() == node.name(); });\n            if (sameName.length > 1) {\n                var ind = sameName.indexOf(node);\n                parentId += \"[\" + ind + \"]\";\n            }\n            return parentId;\n        }\n        else if (node.name()) {\n            if (node.definition && node.definition() && universeHelpers.isApiType(node.definition())) {\n                //no other way to get rid of a fake Api \"key\"\n                return \"\";\n            }\n            return \".\" + node.name();\n        }\n        return \"\";\n    };\n    AbstractlMoveElementsDialog.prototype.nodesEqualById = function (node1, node2) {\n        return this.getNodeId(node1) == this.getNodeId(node2);\n    };\n    /**\n     * The root of the tree, which is being dynamically build from the moved nodes.\n     * The parents of the moved nodes are being copied to the tree, so the temp AST\n     * is complete. The root itself is always a stub (not copy) of the root node provided at the dialog open.\n     */\n    AbstractlMoveElementsDialog.prototype.createMovedNodesTree = function () {\n        //cleaning the current tree by removing all the children of the root\n        //this.stubRoot.children().forEach(x=>(<any>this.stubRoot).remove(x))\n        var _this = this;\n        //instead just re-creating parent stub node\n        this.stubRoot = this.createStub(this.getParentNode());\n        this.movedNodes.forEach(function (movedNode) {\n            //collecting node parents till we meet the dialog root\n            var parents = [];\n            var currentParent = movedNode.parent();\n            while (currentParent) {\n                if (currentParent == _this.getParentNode())\n                    break;\n                parents.push(currentParent);\n                currentParent = currentParent.parent();\n            }\n            parents.reverse();\n            //now creating copies of parents\n            var currentStubPointer = _this.stubRoot;\n            parents.forEach(function (currentParent) {\n                var stubAnalogueOfParent = _.find(currentStubPointer.children(), function (currentStubElement) {\n                    return _this.nodesEqualById(currentStubElement, currentParent);\n                });\n                if (!stubAnalogueOfParent) {\n                    //we did not find an analogue, so we should create one\n                    stubAnalogueOfParent = _this.createStub(currentParent);\n                    //lets add the new parent to the stub hierarchy\n                    currentStubPointer.add(stubAnalogueOfParent);\n                    stubAnalogueOfParent.setParent(currentStubPointer);\n                }\n                currentStubPointer = stubAnalogueOfParent;\n            });\n            //okay, we found or created all parents of the new moved node, lets create the node itself\n            var newNode = _this.createMovedNode(movedNode);\n            /*(<hl.IHighLevelNode>movedNode)*/\n            currentStubPointer.add(newNode);\n            newNode.setParent(currentStubPointer);\n        });\n        console.log(\"New tree moved:\");\n        console.log(this.stubRoot.printDetails());\n    };\n    AbstractlMoveElementsDialog.prototype.createMovedNode = function (originalNode) {\n        return originalNode.copy();\n    };\n    AbstractlMoveElementsDialog.prototype.saveUnit = function (unit) {\n        provider.saveUnit(unit);\n    };\n    AbstractlMoveElementsDialog.prototype.createStub = function (node) {\n        var stub = stubs.createStubNode(node.definition(), node.property(), node.lowLevel().key());\n        //if (node.parent() == null && node.lowLevel().key() == null){\n        //    //cleaning out the fake key\n        //    stub.children().forEach(x=>(<any>stub).remove(x))\n        //}\n        return stub;\n    };\n    AbstractlMoveElementsDialog.prototype.createStubRoot = function (node, type) {\n        var lowLevel = stubs.createMap();\n        var result = stubs.createASTNodeImpl(lowLevel, null, type, null);\n        result.children();\n        return result;\n    };\n    AbstractlMoveElementsDialog.prototype.createPanels = function (vc) {\n        var _this = this;\n        var el = UI.hc();\n        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n        var leftDisplayFilter = function (nodeToCheck) {\n            if (!_this.checkNode(nodeToCheck).display)\n                return false;\n            if (_.find(_this.movedNodes, function (movedNode) {\n                return movedNode == nodeToCheck; /*|| this.isParentOf(nodeToCheck, movedNode)*/\n            }))\n                return false;\n            return true;\n        };\n        this.leftPanel = createSmallSelectionPanel(this.getParentNode(), leftDisplayFilter, \"400px\", \"47%\");\n        var rightDisplayFilter = function (nodeToCheck) {\n            if (!_this.checkNode(nodeToCheck).display)\n                return false;\n            //if (_.find(this.movedNodes, movedNode => movedNode == nodeToCheck)) return false\n            return true;\n        };\n        this.rightPanel = createSmallSelectionPanel(this.stubRoot, rightDisplayFilter, \"400px\", \"47%\", \"right\");\n        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = _this.leftPanel.getSelection().elements;\n            _this.moveRight(z);\n        });\n        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = _this.rightPanel.getSelection().elements;\n            _this.moveLeft(z);\n        });\n        //var allRight=UI.button(\">>\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n        //    var z=this.parentNode.elements().filter(x=>leftFilter(x));\n        //    this.moveRight(z);\n        //});\n        //\n        //var allLeft=UI.button(\"<<\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n        //    var z=stub.elements();\n        //    this.moveLeft(z);\n        //\n        //});\n        el.addChild(UI.vc(moveRight, moveLeft /*,allRight,allLeft*/));\n        el.addChild(this.leftPanel);\n        el.addChild(this.rightPanel);\n        vc.addChild(el);\n        this.leftPanel.addSelectionListener({\n            selectionChanged: function (ev) {\n                var rs = ev.selection.elements;\n                //var m=(_.find(rs, x=>x.parent() != this.getParentNode())!=undefined )\n                moveRight.setDisabled((rs.length == 0));\n            }\n        });\n        this.rightPanel.addSelectionListener({\n            selectionChanged: function (ev) {\n                var rs = ev.selection.elements;\n                //var m=(_.find(rs, x=>x.parent() != this.stubRoot)!=undefined )\n                moveLeft.setDisabled(rs.length == 0);\n            }\n        });\n        moveLeft.setDisabled(true);\n        moveRight.setDisabled(true);\n        el.setPercentWidth(100);\n    };\n    AbstractlMoveElementsDialog.prototype.createButtonBar = function (parentPanel) {\n        var _this = this;\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { _this.rootAtomPanel.destroy(); }).margin(10, 10));\n        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.performOk(_this.movedNodes, _this.stubRoot);\n            _this.rootAtomPanel.destroy();\n        });\n        this.okButton.setDisabled(true);\n        buttonBar.addChild(this.okButton);\n        parentPanel.addChild(buttonBar);\n    };\n    AbstractlMoveElementsDialog.prototype.getParentNode = function () {\n        return this.parentNode;\n    };\n    AbstractlMoveElementsDialog.prototype.isParentOf = function (potentialParent, potentialChild) {\n        var current = potentialChild.parent();\n        while (current != null) {\n            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n                return true;\n            }\n            current = current.parent();\n        }\n        return false;\n    };\n    AbstractlMoveElementsDialog.prototype.mergeTrees = function (sourceTreeRoot, targetTreeRoot, mergeProperties) {\n        var _this = this;\n        if (mergeProperties === void 0) { mergeProperties = false; }\n        if (sourceTreeRoot.directChildren()) {\n            sourceTreeRoot.directChildren().forEach(function (child) {\n                _this.mergeNode(child, targetTreeRoot);\n            });\n        }\n    };\n    AbstractlMoveElementsDialog.prototype.getActiveEditor = function () {\n        return assist.getActiveEditor();\n    };\n    AbstractlMoveElementsDialog.prototype.mergeNode = function (sourceNode, targetParent, mergeProperties) {\n        var _this = this;\n        if (mergeProperties === void 0) { mergeProperties = false; }\n        if (!mergeProperties && !(sourceNode.isElement())) {\n            return;\n        }\n        var targetChildren = targetParent.directChildren();\n        if (!targetChildren) {\n            targetParent.add(sourceNode);\n            sourceNode.setParent(targetParent);\n            return;\n        }\n        var analogueChild = _.find(targetChildren, function (child) {\n            return _this.nodesEqualById(child, sourceNode);\n        });\n        if (!analogueChild) {\n            targetParent.add(sourceNode);\n            sourceNode.setParent(targetParent);\n            return;\n        }\n        if (sourceNode.directChildren()) {\n            sourceNode.directChildren().forEach(function (sourceChild) {\n                return _this.mergeNode(sourceChild, analogueChild);\n            });\n        }\n    };\n    AbstractlMoveElementsDialog.prototype.moveLeft = function (nodesToMove) {\n        var _this = this;\n        if (nodesToMove.length > 0) {\n            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n                if (_.find(nodesToMove, function (nodeToMove) {\n                    //removing the node itself and all of its children subsequently\n                    return _this.nodesEqualById(nodeToMove, currentNode)\n                        || _this.isParentOf(nodeToMove, currentNode);\n                }))\n                    return false;\n                return true;\n            });\n            this.createMovedNodesTree();\n        }\n        this.leftPanel.setInput(this.getParentNode());\n        this.stubRoot.resetChildren();\n        this.rightPanel.setInput(this.stubRoot);\n        this.performValidation();\n    };\n    AbstractlMoveElementsDialog.prototype.moveRight = function (nodesToMove) {\n        var _this = this;\n        if (nodesToMove.length > 0) {\n            //removing from already moved nodes any children of the nodes to move\n            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n                if (_.find(nodesToMove, function (nodeToMove) { return _this.isParentOf(nodeToMove, currentNode); }))\n                    return false;\n                return true;\n            });\n            nodesToMove.forEach(function (x) { return _this.movedNodes.push(x); });\n            //this.movedNodes = this.movedNodes.concat(nodesToMove)\n            this.createMovedNodesTree();\n        }\n        this.leftPanel.setInput(this.getParentNode());\n        this.stubRoot.resetChildren();\n        this.rightPanel.setInput(this.stubRoot);\n        this.performValidation();\n    };\n    return AbstractlMoveElementsDialog;\n})();\nexports.AbstractlMoveElementsDialog = AbstractlMoveElementsDialog;\nvar ExtractLibraryDialog = (function (_super) {\n    __extends(ExtractLibraryDialog, _super);\n    function ExtractLibraryDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    ExtractLibraryDialog.prototype.checkNode = function (nodeToFilter) {\n        var range = null;\n        if (nodeToFilter.property() && nodeToFilter.property().range()) {\n            range = nodeToFilter.property().range();\n        }\n        var prrr = nodeToFilter.property();\n        var blah = universeHelpers.isTypesProperty(prrr);\n        var isTp = universeHelpers.isTypeDeclarationType(range)\n            && blah;\n        if (range &&\n            (universeHelpers.isResourceTypeType(range) ||\n                universeHelpers.isTraitType(range) ||\n                universeHelpers.isGlobalSchemaType(range) ||\n                universeHelpers.isSecuritySchemaType(range) ||\n                isTp)) {\n            return {\n                visitChildren: false,\n                display: true,\n                canBeMoved: true\n            };\n        }\n        return {\n            visitChildren: false,\n            display: false,\n            canBeMoved: false\n        };\n    };\n    ExtractLibraryDialog.prototype.createStub = function (node) {\n        if (node.definition().key() == universeModule.Universe10.Api ||\n            node.definition().key() == universeModule.Universe08.Api) {\n            var universe = rp.ds.getUniverse(\"RAML10\");\n            var nodeClass = universe.type(universeModule.Universe10.Library.name);\n            var stub = this.createStubRoot(node, nodeClass);\n            return stub;\n        }\n        return _super.prototype.createStub.call(this, node);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ExtractLibraryDialog.prototype.validate = function () {\n        if (!this.libraryPath)\n            return null;\n        if (!this.stubRoot)\n            return null;\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        if (!this.libraryNamespace)\n            return null;\n        if (!this.getLibraryQualifier()) {\n            return \"Enter library namespace\";\n        }\n        if (this.getLibraryQualifier().trim().length == 0) {\n            return \"Enter library namespace\";\n        }\n        var originalValue = this.libraryPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return \"Empty library path\";\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return \"Library path should be a RAML file\";\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return \"Library path directory does not exist\";\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return \"Library path parent is not a directory\";\n        }\n        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n        if (fs.existsSync(absolutePath)) {\n            return \"Destination library already exists\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ExtractLibraryDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Library namespace:\").pad(5, 0));\n        this.libraryNamespace = UI.texfField(\"\", this.getDefaultLibraryNamespace(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.libraryNamespace);\n        parentPanel.addChild(UI.label(\"Library path:\").pad(5, 0));\n        this.libraryPath = UI.texfField(\"\", this.generateDefaultLibraryPath(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.libraryPath);\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    ExtractLibraryDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var _this = this;\n        var project = this.createProject();\n        var libraryUnit = this.createLibraryUnit(project);\n        var libraries = search.globalDeclarations(this.getParentNode()).filter(function (found) { return found && found.definition && found.definition().nameId() === universeModule.Universe10.Library.name; });\n        var universe = this.getParentNode().definition().universe();\n        var libraryClass = universe.type(universeModule.Universe10.Library.name);\n        movedNodes.forEach(function (movedNode) {\n            var librariesToExport = libraries.filter(function (library) {\n                return _.find(library.findReferences(), function (reference) { return _this.isParentOf(movedNode, reference); }) ? true : false;\n            });\n            librariesToExport.forEach(function (library) {\n                var currentPath = library.lowLevel()._node.value && library.lowLevel()._node.value.value;\n                if (!currentPath) {\n                    return;\n                }\n                var relativePath;\n                if (isWebPath(currentPath) || path.isAbsolute(currentPath)) {\n                    relativePath = currentPath;\n                }\n                else {\n                    var currentDirectory = path.dirname(_this.getParentNode().lowLevel().unit().absolutePath());\n                    var relativePath = path.relative(path.dirname(libraryUnit.absolutePath()), path.resolve(currentDirectory, currentPath));\n                }\n                var lowLevel = stubs.createMapping(library.lowLevel().key(), \"!include \" + relativePath);\n                var stubLibrary = stubs.createASTNodeImpl(lowLevel, null, libraryClass, null);\n                stubTreeRoot.wrapperNode().addToProp(stubLibrary.wrapperNode(), universeModule.Universe10.FragmentDeclaration.properties.uses.name);\n            });\n        });\n        this.updateLibraryUnit(libraryUnit, stubTreeRoot);\n        this.saveUnit(libraryUnit);\n        var modifiedUnits = [];\n        modifiedUnits.push(this.getParentNode().lowLevel().unit());\n        var libraryQualifier = this.getLibraryQualifier();\n        movedNodes.forEach(function (movedNode) {\n            //changing node references\n            var movedNodeReferences = movedNode.findReferences();\n            if (movedNodeReferences) {\n                movedNodeReferences.forEach(function (reference) {\n                    if (!(reference.isAttr())) {\n                        return;\n                    }\n                    if (_.find(movedNodes, function (movedNode) { return _this.isParentOf(movedNode, reference); })) {\n                        return;\n                    }\n                    var property = reference;\n                    var oldValue = property.value();\n                    if (typeof oldValue != \"string\") {\n                        return;\n                    }\n                    var oldStringValue = oldValue;\n                    var textToReplace = movedNode.name();\n                    var textToReplanceWith = libraryQualifier + \".\" + textToReplace;\n                    var newStringValue = oldStringValue.replace(textToReplace, textToReplanceWith);\n                    property.setValue(newStringValue);\n                    var modifiedPropertyUnit = property.lowLevel().unit();\n                    if (_.find(modifiedUnits, function (modifiedUnit) { return modifiedUnit == modifiedPropertyUnit; })) {\n                        modifiedUnits.push(modifiedPropertyUnit);\n                    }\n                });\n            }\n            //deleting the node itself\n            movedNode.parent().remove(movedNode);\n        });\n        modifiedUnits.forEach(function (modifiedUnit) { return _this.saveUnit(modifiedUnit); });\n        this.addUsesNode(libraryQualifier, this.getLibraryPath());\n    };\n    ExtractLibraryDialog.prototype.generateDefaultLibraryPath = function () {\n        var node = this.getParentNode();\n        var currentFilePath = node.lowLevel().unit().absolutePath();\n        var parent = path.dirname(currentFilePath);\n        return path.resolve(parent, \"NewLibrary.raml\");\n    };\n    ExtractLibraryDialog.prototype.getLibraryName = function () {\n        return this.libraryNamespace.getBinding().get();\n    };\n    ExtractLibraryDialog.prototype.getLibraryQualifier = function () {\n        return this.libraryNamespace.getBinding().get();\n    };\n    ExtractLibraryDialog.prototype.getDefaultLibraryNamespace = function () {\n        return \"NewLibrary\";\n    };\n    ExtractLibraryDialog.prototype.getLibraryPath = function () {\n        var originalValue = this.libraryPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return null;\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return null;\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return null;\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return null;\n        }\n        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n    };\n    ExtractLibraryDialog.prototype.createProject = function () {\n        var targetLibraryPath = this.getLibraryPath();\n        return rp.project.createProject(path.dirname(targetLibraryPath));\n    };\n    ExtractLibraryDialog.prototype.createLibraryUnit = function (project) {\n        var targetLibraryPath = this.getLibraryPath();\n        fs.writeFileSync(targetLibraryPath, \"#%RAML 1.0 Library\\n\");\n        return project.unit(path.basename(targetLibraryPath));\n    };\n    ExtractLibraryDialog.prototype.updateLibraryUnit = function (libraryUnit, stubTreeRoot) {\n        var targetLibraryAst = libraryUnit.highLevel();\n        //adding top-level children from stub AST to the target library AST\n        stubTreeRoot.children().forEach(function (child) {\n            if (!child.getKind()) {\n                return;\n            }\n            targetLibraryAst.add(child);\n        });\n    };\n    ExtractLibraryDialog.prototype.addUsesNode = function (libraryQualifier, fileName) {\n        //TODO this must be done via AST manipulation, but it is impossible atm due to AST bugs\n        var relativePath = path.relative(path.dirname(this.getParentNode().lowLevel().unit().absolutePath()), fileName);\n        var existingFirstUsesNode = _.find(this.getParentNode().children(), function (child) {\n            var childAny = child;\n            return childAny.definition &&\n                universeHelpers.isLibraryType(childAny.definition()) &&\n                childAny.property() &&\n                universeHelpers.isUsesProperty(childAny.property());\n        });\n        var usesMapping = null;\n        var sequenceFound = false;\n        if (existingFirstUsesNode) {\n            var currentNode = existingFirstUsesNode.lowLevel();\n            while (currentNode != null) {\n                if (currentNode.kind() == yaml.Kind.MAPPING\n                    && currentNode.key() == universeModule.Universe10.FragmentDeclaration.properties.uses.name) {\n                    usesMapping = currentNode;\n                    break;\n                }\n                if (currentNode.kind() == yaml.Kind.SEQ) {\n                    sequenceFound = true;\n                }\n                currentNode = currentNode.parent();\n            }\n        }\n        if (usesMapping) {\n            //existing \"uses\" found, inserting there\n            var positionToInsert = usesMapping.keyEnd() + 1;\n            var text = \"\\n  \" + (sequenceFound ? \"- \" : \"\") + libraryQualifier + \": \" + relativePath;\n            this.insertTextToActiveEditor(positionToInsert, text);\n        }\n        else {\n            var titleNode = _.find(this.getParentNode().children(), function (child) {\n                var childAny = child;\n                return childAny.definition &&\n                    universeHelpers.isStringTypeType(childAny.definition()) &&\n                    childAny.property() &&\n                    universeHelpers.isTitleProperty(childAny.property());\n            });\n            if (titleNode) {\n                //title node found, inserting after it\n                var positionToInsert = titleNode.lowLevel().valueEnd();\n                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n                this.insertTextToActiveEditor(positionToInsert, text);\n            }\n            else {\n                //nothing happens, inserting in the end of the file\n                var positionToInsert = this.getParentNode().lowLevel().end();\n                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n                this.insertTextToActiveEditor(positionToInsert, text);\n            }\n        }\n    };\n    ExtractLibraryDialog.prototype.insertTextToActiveEditor = function (positionToInsert, text) {\n        var txt = this.getParentNode().lowLevel().unit().contents();\n        var endPart = txt.substring(positionToInsert);\n        var startPart = txt.substring(0, positionToInsert);\n        var vl = startPart + text + endPart;\n        this.getActiveEditor().setText(vl);\n    };\n    ExtractLibraryDialog.prototype.createUsesNode = function (libraryQualifier, fileName) {\n        var universe = this.getParentNode().definition().universe();\n        var usesProperty = this.getParentNode().root().definition().property(\"uses\");\n        var usesNode = stubs.createStubNode(universe.type(\"Library\"), usesProperty, libraryQualifier);\n        return usesNode;\n    };\n    return ExtractLibraryDialog;\n})(AbstractlMoveElementsDialog);\nexports.ExtractLibraryDialog = ExtractLibraryDialog;\nvar ExtractOverlayDialog = (function (_super) {\n    __extends(ExtractOverlayDialog, _super);\n    function ExtractOverlayDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n    }\n    ExtractOverlayDialog.prototype.createStub = function (node) {\n        if (node.definition().key() == universeModule.Universe10.Api ||\n            node.definition().key() == universeModule.Universe08.Api) {\n            var universe = rp.ds.getUniverse(\"RAML10\");\n            var nodeClass = universe.type(universeModule.Universe10.Overlay.name);\n            var stub = this.createStubRoot(node, nodeClass);\n            return stub;\n        }\n        return _super.prototype.createStub.call(this, node);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    ExtractOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n        //we can move everything\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ExtractOverlayDialog.prototype.validate = function () {\n        if (!this.overlayPath)\n            return null;\n        if (!this.stubRoot)\n            return null;\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        var originalValue = this.overlayPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return \"Empty overlay path\";\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return \"Overlay path should be a RAML file\";\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return \"Overlay path directory does not exist\";\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return \"Overlay path parent is not a directory\";\n        }\n        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n        if (fs.existsSync(absolutePath)) {\n            return \"Destination overlay already exists\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ExtractOverlayDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Overlay path:\").pad(5, 0));\n        this.overlayPath = UI.texfField(\"\", this.generateDefaultOverlayPath(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.overlayPath);\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    ExtractOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var project = this.createProject();\n        var overlayUnit = this.createOverlayUnit(project);\n        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n        var overlayPath = this.getOverlayPath();\n        var originalUnitPath = this.getParentNode().lowLevel().unit().absolutePath();\n        var relativePath = path.relative(path.dirname(overlayPath), originalUnitPath);\n        this.addMasterReference(overlayUnit, relativePath);\n        this.saveUnit(overlayUnit);\n    };\n    ExtractOverlayDialog.prototype.generateDefaultOverlayPath = function () {\n        var node = this.getParentNode();\n        var currentFilePath = node.lowLevel().unit().absolutePath();\n        var parent = path.dirname(currentFilePath);\n        return path.resolve(parent, \"NewOverlay.raml\");\n    };\n    ExtractOverlayDialog.prototype.createProject = function () {\n        var targetOverlayPath = this.getOverlayPath();\n        return rp.project.createProject(path.dirname(targetOverlayPath));\n    };\n    ExtractOverlayDialog.prototype.createOverlayUnit = function (project) {\n        var targetOverlayPath = this.getOverlayPath();\n        fs.writeFileSync(targetOverlayPath, \"#%RAML 1.0 Overlay\\ntitle: Extension\\n\");\n        return project.unit(path.basename(targetOverlayPath));\n    };\n    ExtractOverlayDialog.prototype.updateOverlayUnit = function (overlayUnit, stubTreeRoot) {\n        var targetOverlayAst = overlayUnit.highLevel();\n        //adding top-level children from stub AST to the target overlay AST\n        stubTreeRoot.children().forEach(function (child) {\n            if (!child.getKind()) {\n                return;\n            }\n            targetOverlayAst.add(child);\n        });\n    };\n    ExtractOverlayDialog.prototype.getOverlayPath = function () {\n        var originalValue = this.overlayPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return null;\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return null;\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return null;\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return null;\n        }\n        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n    };\n    ExtractOverlayDialog.prototype.addMasterReference = function (overlayUnit, path) {\n        var targetLibraryAst = overlayUnit.highLevel();\n        var masterRefAttribute = targetLibraryAst.attrOrCreate(universeModule.Universe10.Overlay.properties.extends.name);\n        masterRefAttribute.setValue(path);\n    };\n    ExtractOverlayDialog.prototype.createMovedNode = function (originalNode) {\n        //we do not want to make a complete copy of the moved node.\n        //instead, we want an empty stub\n        return this.createStub(originalNode);\n    };\n    return ExtractOverlayDialog;\n})(AbstractlMoveElementsDialog);\nexports.ExtractOverlayDialog = ExtractOverlayDialog;\nvar ModifyOverlayDialog = (function (_super) {\n    __extends(ModifyOverlayDialog, _super);\n    function ModifyOverlayDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n        this.overlayASTRoot = parentNode;\n        console.log(\"Overlay AST root:\");\n        console.log(this.overlayASTRoot.printDetails());\n        this.masterASTRoot = this.createMasterAST();\n        this.overlayASTLeafNodes = [];\n        this.calculateLeafNodes(this.overlayASTRoot, this.overlayASTLeafNodes);\n    }\n    ModifyOverlayDialog.prototype.getParentNode = function () {\n        return this.masterASTRoot;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    ModifyOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n        var _this = this;\n        //we can move everything except leaf nodes already defined in out AST\n        if (_.find(this.overlayASTLeafNodes, function (currentNode) {\n            return currentNode == nodeToFilter || _this.nodesEqualById(currentNode, nodeToFilter);\n        })) {\n            return {\n                visitChildren: false,\n                display: false,\n                canBeMoved: false\n            };\n        }\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ModifyOverlayDialog.prototype.validate = function () {\n        if (!this.stubRoot)\n            return null;\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ModifyOverlayDialog.prototype.createHeader = function (parentPanel) {\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    ModifyOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var overlayUnit = this.getOverlayUnit();\n        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n        this.saveUnit(overlayUnit);\n    };\n    ModifyOverlayDialog.prototype.createMasterAST = function () {\n        var masterAbsolutePath = this.findMasterAbsolutePath();\n        if (!masterAbsolutePath) {\n            return null;\n        }\n        var project = this.createProject(masterAbsolutePath);\n        var masterUnit = project.unit(path.basename(masterAbsolutePath));\n        return masterUnit.highLevel();\n    };\n    ModifyOverlayDialog.prototype.calculateLeafNodes = function (root, toReportTo) {\n        var _this = this;\n        if (!root)\n            return;\n        var children = root.directChildren() ? root.directChildren() : null;\n        if (root.isElement()) {\n            if (children) {\n                if (!_.find(children, function (child) { return child.isElement(); })) {\n                    toReportTo.push(root);\n                    return;\n                }\n            }\n            else {\n                toReportTo.push(root);\n                return;\n            }\n        }\n        if (children)\n            children.forEach(function (child) { return _this.calculateLeafNodes(child, toReportTo); });\n    };\n    ModifyOverlayDialog.prototype.findMasterAbsolutePath = function () {\n        try {\n            var masterRefAttribute = this.overlayASTRoot.attr(\"masterRef\");\n            if (!masterRefAttribute) {\n                return null;\n            }\n            var reference = masterRefAttribute.value();\n            if (!reference) {\n                return null;\n            }\n            var overlayAbsolutePath = this.getOverlayUnit().absolutePath();\n            var masterAbsolutePath = path.resolve(path.dirname(overlayAbsolutePath), reference);\n            //if (!fs.existsSync(masterAbsolutePath)) {\n            //    return null\n            //}\n            return masterAbsolutePath;\n        }\n        catch (Error) {\n            console.error(Error.message);\n            return null;\n        }\n    };\n    ModifyOverlayDialog.prototype.createProject = function (targetPath) {\n        return rp.project.createProject(path.dirname(targetPath));\n    };\n    ModifyOverlayDialog.prototype.getOverlayUnit = function () {\n        return this.overlayASTRoot.lowLevel().unit();\n    };\n    ModifyOverlayDialog.prototype.updateOverlayUnit = function (libraryUnit, stubTreeRoot) {\n        var targetLibraryAst = libraryUnit.highLevel();\n        //merging the new nodes into existing overlay tree\n        this.mergeTrees(stubTreeRoot, this.overlayASTRoot);\n    };\n    ModifyOverlayDialog.prototype.createMovedNode = function (originalNode) {\n        //we do not want to make a complete copy of the moved node.\n        //instead, we want an empty stub\n        return this.createStub(originalNode);\n    };\n    return ModifyOverlayDialog;\n})(AbstractlMoveElementsDialog);\nexports.ModifyOverlayDialog = ModifyOverlayDialog;\n/**\n * Intended for subclassing, should not be instantiated.\n */\nvar AbstractMoveTypePropertiesDialog = (function (_super) {\n    __extends(AbstractMoveTypePropertiesDialog, _super);\n    function AbstractMoveTypePropertiesDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n        this.sourceType = parentNode;\n    }\n    /**\n     * Intended for overriding, should return the target type.\n     * Will only be called during performOk() execution, so it is assumed that\n     * UI already have required user input before the calowLevel.\n     * @returns {null}\n     */\n    AbstractMoveTypePropertiesDialog.prototype.getTargetType = function () {\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    AbstractMoveTypePropertiesDialog.prototype.checkNode = function (nodeToFilter) {\n        //we can move everything inside the type\n        //and as the type is our root, we can move just everything\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * This particular method should be called in a subclass before or after\n     * its own check, and the results should be joined.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    AbstractMoveTypePropertiesDialog.prototype.validate = function () {\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    AbstractMoveTypePropertiesDialog.prototype.createHeader = function (parentPanel) {\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    AbstractMoveTypePropertiesDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var sourceUnit = this.sourceType.lowLevel().unit();\n        var targetType = this.getTargetType();\n        if (!targetType) {\n            return;\n        }\n        var targetUnit = targetType.lowLevel().unit();\n        this.mergeTrees(stubTreeRoot, targetType);\n        this.movedNodes.forEach(function (movedNode) {\n            movedNode.parent().remove(movedNode);\n        });\n        this.postMerge();\n        this.saveUnit(sourceUnit);\n        if (targetUnit)\n            this.saveUnit(targetUnit);\n    };\n    AbstractMoveTypePropertiesDialog.prototype.postMerge = function () {\n    };\n    return AbstractMoveTypePropertiesDialog;\n})(AbstractlMoveElementsDialog);\nexports.AbstractMoveTypePropertiesDialog = AbstractMoveTypePropertiesDialog;\nfunction findUserDefinedSupertypes(typeNode) {\n    var result = [];\n    var nodeType = typeNode.localType();\n    if (!nodeType || !nodeType.isUserDefined()) {\n        return result;\n    }\n    addUserDefinedSupertypes(nodeType, result);\n    return result;\n}\nexports.findUserDefinedSupertypes = findUserDefinedSupertypes;\nfunction addUserDefinedSupertypes(type, typesToAddTo) {\n    if (!type.isUserDefined()) {\n        return;\n    }\n    var superTypes = (type).superTypes();\n    if (superTypes)\n        superTypes.forEach(function (superType) {\n            if (superType.isUserDefined()) {\n                typesToAddTo.push(superType);\n            }\n            addUserDefinedSupertypes(superType, typesToAddTo);\n        });\n}\nvar PullUpDialog = (function (_super) {\n    __extends(PullUpDialog, _super);\n    function PullUpDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n        this.superTypeNames = [];\n        this.superTypeNames = this.findSuperTypeNames();\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    PullUpDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Select supertype:\").pad(5, 0));\n        var select = new UI.Select(\"\", function (selection) {\n            _this.selectedSuperType = select.getValue();\n        });\n        select.setOptions(this.superTypeNames);\n        select.setValue(this.superTypeNames[0]);\n        this.selectedSuperType = this.superTypeNames[0];\n        parentPanel.addChild(select);\n    };\n    PullUpDialog.prototype.show = function () {\n        //if no supertypes are found, we're not displaying anything\n        //Actually, state calculator should not allow action launching in this case\n        if (this.superTypeNames.length == 0) {\n            return;\n        }\n        _super.prototype.show.call(this);\n    };\n    /**\n     * Intended for overriding, should return the target type.\n     * Will only be called during performOk() execution, so it is assumed that\n     * UI already have required user input before the calowLevel.\n     * @returns {null}\n     */\n    PullUpDialog.prototype.getTargetType = function () {\n        var _this = this;\n        var foundSuperType = _.find(this.superTypes, function (superType) {\n            return superType.nameId() == _this.selectedSuperType;\n        });\n        if (!foundSuperType)\n            return null;\n        return foundSuperType.getAdapter(def.RAMLService).getDeclaringNode();\n    };\n    PullUpDialog.prototype.findSuperTypeNames = function () {\n        var result = [];\n        this.superTypes = findUserDefinedSupertypes(this.sourceType);\n        this.superTypes.forEach(function (superType) {\n            result.push(superType.nameId());\n        });\n        return result;\n    };\n    return PullUpDialog;\n})(AbstractMoveTypePropertiesDialog);\nexports.PullUpDialog = PullUpDialog;\nvar ExtractSupertypeDialog = (function (_super) {\n    __extends(ExtractSupertypeDialog, _super);\n    function ExtractSupertypeDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ExtractSupertypeDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Supertype name:\").pad(5, 0));\n        this.superTypeName = UI.texfField(\"\", this.generateDefaultSupertypeName(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.superTypeName);\n    };\n    /**\n     * Intended for overriding, should return the target type.\n     * Will only be called during performOk() execution, so it is assumed that\n     * UI already have required user input before the calowLevel.\n     * @returns {null}\n     */\n    ExtractSupertypeDialog.prototype.getTargetType = function () {\n        var astRoot = this.sourceType.root();\n        var universe = astRoot.definition().universe();\n        var rtypes = astRoot.root().definition().property(universeModule.Universe10.LibraryBase.properties.types.name);\n        //var typeStub=(<def.NodeClass>universe.getType(\"ObjectField\")).createStubNode(rtypes, this.superTypeName.getBinding().get());\n        var typeWrapper = rp.parser.modify.createObjectTypeDeclaration(this.superTypeName.getBinding().get());\n        var typeStub = typeWrapper.highLevel();\n        this.typeWrapper = typeWrapper;\n        this.astRoot = astRoot;\n        //astRoot.add(typeStub);\n        //var unit = astRoot.lowLevel().unit();\n        //this.saveUnit(unit);\n        //\n        //var newAstRoot = <hl.IHighLevelNode>hl.fromUnit(unit);\n        //this.sourceType = <hl.IHighLevelNode> _.find(newAstRoot.children(), child=>{\n        //    return (<hl.IHighLevelNode>child).property\n        //    && (<hl.IHighLevelNode>child).property().range\n        //    && (<hl.IHighLevelNode>child).property().range().name() == \"DataElement\"\n        //    && (<hl.IHighLevelNode>child).property().name() == \"types\"\n        //    && (<hl.IHighLevelNode>child).name() == this.superTypeName.getBinding().get()\n        //})\n        return typeStub;\n    };\n    ExtractSupertypeDialog.prototype.validate = function () {\n        var superValidate = _super.prototype.validate.call(this);\n        if (superValidate) {\n            return superValidate;\n        }\n        if (!this.superTypeName.getBinding().get() ||\n            this.superTypeName.getBinding().get().trim().length == 0) {\n            return \"Enter supertype name\";\n        }\n        return null;\n    };\n    ExtractSupertypeDialog.prototype.postMerge = function () {\n        this.astRoot.wrapperNode().addToProp(this.typeWrapper, 'types');\n        this.sourceType.attrOrCreate(\"type\").setValue(this.typeWrapper.highLevel().name());\n        //var runtimeDef = this.typeWrapper.highLevel().definition().toRuntime()\n        //(<hlimpl.ASTNodeImpl>this.sourceType).patchType(runtimeDef)\n    };\n    ExtractSupertypeDialog.prototype.generateDefaultSupertypeName = function () {\n        return this.sourceType.name() + \"SuperType\";\n    };\n    return ExtractSupertypeDialog;\n})(AbstractMoveTypePropertiesDialog);\nexports.ExtractSupertypeDialog = ExtractSupertypeDialog;\nfunction isWebPath(str) {\n    if (str == null)\n        return false;\n    return util.stringStartsWith(str, \"http://\") || util.stringStartsWith(str, \"https://\");\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/extractElementsDialog.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * Created by Sviridov on 5/1/2015.\n */\n/// <reference path=\"../../typings/main.d.ts\" />\nvar JsonSchemaGenerator = (function () {\n    function JsonSchemaGenerator() {\n    }\n    JsonSchemaGenerator.prototype.generateSchema = function (obj) {\n        var sch = {};\n        sch['required'] = true;\n        sch['$schema'] = 'http://json-schema.org/draft-03/schema';\n        this.pass(obj, sch);\n        return sch;\n    };\n    JsonSchemaGenerator.prototype.pass = function (value, property) {\n        var valueType = this.detectType(value);\n        property['type'] = valueType;\n        if (!value || value == null) {\n        }\n        else if (Array.isArray(value)) {\n            this.passArray(value, property);\n        }\n        else if (value instanceof Object) {\n            this.passObject(value, property);\n        }\n    };\n    JsonSchemaGenerator.prototype.passObject = function (obj, sch) {\n        var _this = this;\n        Object.keys(obj).forEach(function (x) { return _this.registerProperty(x, obj[x], sch); });\n    };\n    JsonSchemaGenerator.prototype.registerProperty = function (propName, value, sch) {\n        var properties = sch['properties'];\n        if (!properties) {\n            properties = {};\n            sch['properties'] = properties;\n        }\n        var property = properties[propName];\n        if (!property) {\n            property = {};\n            properties[propName] = property;\n        }\n        property['required'] = false;\n        this.pass(value, property);\n    };\n    JsonSchemaGenerator.prototype.passArray = function (array, property) {\n        var _this = this;\n        var items = property['items'];\n        if (!items) {\n            items = [];\n            property['items'] = items;\n        }\n        var l = array.length;\n        var itemSet = [];\n        array.forEach(function (value) {\n            var item = {};\n            _this.pass(value, item);\n            itemSet.push(item);\n        });\n        items.push(itemSet[0]);\n    };\n    JsonSchemaGenerator.prototype.detectType = function (value) {\n        if (Array.isArray(value)) {\n            return 'array';\n        }\n        return typeof value;\n    };\n    return JsonSchemaGenerator;\n})();\nexports.JsonSchemaGenerator = JsonSchemaGenerator;\nfunction generateSchema(text, mediaType) {\n    var generator = new JsonSchemaGenerator();\n    var obj = JSON.parse(text);\n    var schemaObject = generator.generateSchema(obj);\n    var schemaString = JSON.stringify(schemaObject, null, 2);\n    return schemaString;\n}\nexports.generateSchema = generateSchema;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/schemaGenerator.js\n ** module id = 41\n ** module chunks = 0\n **/","module.exports = require(\"emissary\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"emissary\"\n ** module id = 42\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar UI = require(\"atom-ui-lib\");\nvar khttp = require(\"know-your-http-well\");\n/**\n * Created by kor on 13/05/15.\n */\nvar rp = require(\"raml-1-parser\");\nvar path = require('path');\nvar defs = rp.ds;\nvar stubs = rp.stubs;\nvar services = defs;\nvar search = rp.search;\nvar fs = require(\"fs\");\nvar assistUtils = require(\"./assist-utils\");\nvar details2 = require(\"../editor-tools/details2\");\nvar details = require(\"../editor-tools/details\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar schemaUI = require(\"../editor-tools/schemaUI\");\nvar remote = require('remote');\nvar dialog = remote.require('dialog');\nvar pair = require(\"../../util/pair\");\nvar universeModule = rp.universes;\nvar universeHelpers = rp.universeHelpers;\nvar _dialogPanels = [];\nfunction showError(message, details) {\n    dialog.showMessageBox(remote.getCurrentWindow(), { type: 'error', buttons: ['Okay'], title: 'Error', message: message, detail: details });\n}\nexports.showError = showError;\nvar _methodDescriptions = null;\nfunction getMethodDescriptions() {\n    if (!_methodDescriptions) {\n        _methodDescriptions = Object.create(null);\n        var methodsProperty = editorTools.aquireManager().ast.definition().property(universeModule.Universe10.Api.properties.resources.name)\n            .range().property(universeModule.Universe10.ResourceBase.properties.methods.name);\n        var list = methodsProperty.enumOptions();\n        khttp.methods.filter(function (x) { return list.indexOf(x.method.toLowerCase()) > -1; }).forEach(function (method) {\n            var desc = method.description.trim().match(/^\\\"(.*)\\\"$/)[1];\n            _methodDescriptions[method.method.toLowerCase()] = desc ? desc : method.description;\n        });\n    }\n    return _methodDescriptions;\n}\nvar _statusCodeDescriptions = null;\nfunction getStatusCodeDescriptions() {\n    if (!_statusCodeDescriptions) {\n        _statusCodeDescriptions = Object.create(null);\n        khttp.statusCodes.forEach(function (code) {\n            var m, desc = code.description.trim();\n            if (m = desc.match(/^\\\"(.*)\\\"/))\n                desc = m[1];\n            _statusCodeDescriptions[code.code] = desc;\n        });\n        _statusCodeDescriptions['7xx'] = \"is for developer errors.\";\n    }\n    return _statusCodeDescriptions;\n}\nexports.getStatusCodeDescriptions = getStatusCodeDescriptions;\nfunction newApi() {\n    var title = \"\", version = \"\", baseUri = \"\", sample = true, raml1 = true;\n    var tfTitle = new UI.TextField(\"API Title*\", title, function (e, v) { return title = v; });\n    var tfVersion = new UI.TextField(\"Version\", version, function (e, v) { return version = v; });\n    var tfBaseURI = new UI.TextField(\"Base URI\", baseUri, function (e, v) { return baseUri = v; });\n    tfTitle.setTabIndex(100);\n    tfTitle.margin(0, 0, 8, 0);\n    tfVersion.setTabIndex(101);\n    tfVersion.margin(0, 0, 8, 0);\n    tfBaseURI.setTabIndex(102);\n    tfBaseURI.margin(0, 0, 8, 0);\n    var cbSample = new UI.CheckBox(\"Create sample resource\", null, function (e, v) { return sample = v; });\n    cbSample.setValue(sample);\n    var cbRaml1 = new UI.CheckBox(\"Generate 1.0 model\", null, function (e, v) { return raml1 = v; });\n    cbRaml1.setValue(raml1);\n    var panel = UI.section(\"Create new API\", UI.Icon.DASHBOARD, false, false, tfTitle, tfVersion, tfBaseURI, UI.hc(cbSample, cbRaml1).margin(0, 0, 12, 12));\n    _dialog(panel, function () {\n        if (title == '') {\n            showError(\"Cannot create API\", \"Title must not be empty\");\n            return false;\n        }\n        editorTools.aquireManager().setText(assistUtils.createRAMLFile(title, version, baseUri, sample, raml1));\n        return true;\n    }, tfTitle)(this);\n    tfTitle.getActualField().ui().focus();\n}\nexports.newApi = newApi;\nvar typeValues = function (parent) {\n    var isSchema = false;\n    var tp = parent.definition().universe().type(universeModule.Universe10.TypeDeclaration.name);\n    if (!tp) {\n        isSchema = true;\n        tp = parent.definition().universe().type(universeModule.Universe08.BodyLike.name);\n    }\n    var sh = tp.property(universeModule.Universe10.TypeDeclaration.properties.schema.name);\n    var types = [];\n    if (sh) {\n        types = search.enumValues(sh, parent);\n    }\n    return { isSchema: isSchema, types: types };\n};\nfunction newMethod(parent, method) {\n    var mdesc = getMethodDescriptions();\n    var cdesc = getStatusCodeDescriptions();\n    var NO_RESPONCE = \"No response\";\n    var NO_RESPONCE_BT = \"No response body type\";\n    var code = null, bodyType = null;\n    if (method == null)\n        method = \"get\";\n    var mdescLabel = new UI.LabelField();\n    var cdescLabel = new UI.LabelField();\n    [mdescLabel, cdescLabel].forEach(function (x) { return x.addClass('wizard-description'); });\n    mdescLabel.getActualField().margin(0, 0, 18, 8);\n    cdescLabel.getActualField().margin(0, 0, 8, 8);\n    var methodSelect = new UI.SelectField(\"Method:\", function (e, v) {\n        method = v;\n        mdescLabel.setText(\"Method \" + v + \" \" + mdesc[v]);\n    }, null);\n    methodSelect.getActualField().setOptions(Object.keys(mdesc));\n    methodSelect.getActualField().setValue(method, true);\n    var responseSelect = new UI.SelectField(\"Status code:\", function (e, v) {\n        if (v == NO_RESPONCE) {\n            v = null;\n            responseTypeSelect.getActualField().setValue(NO_RESPONCE_BT);\n        }\n        code = v;\n        responseTypeSelect.setDisabled(v == null);\n        cdescLabel.setText(v ? \"Status code \" + v + \" \" + cdesc[v] : '');\n    }, null);\n    responseSelect.getActualField().setOptions([NO_RESPONCE].concat(Object.keys(cdesc)));\n    var responseTypeSelect = new UI.SelectField(\"Generate default response with media type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT) {\n            v = null;\n            typeOfValue.setDisabled(true);\n        }\n        else\n            typeOfValue.setDisabled(false);\n        bodyType = v;\n    }, null);\n    responseTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n    responseTypeSelect.setDisabled(true);\n    responseTypeSelect.margin(0, 0, 0, 12);\n    var realBodyType = null;\n    var bodyTypeSelect = new UI.SelectField(\"Generate default body with media type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT) {\n            v = null;\n            bodyTypeOfValue.setDisabled(true);\n        }\n        else\n            bodyTypeOfValue.setDisabled(false);\n        realBodyType = v;\n    }, null);\n    bodyTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n    bodyTypeSelect.margin(0, 0, 0, 12);\n    var actualType = null;\n    var bodyTypeString = null;\n    var typeOfValue = new UI.SelectField(\"Generate default response body with type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT)\n            v = null;\n        actualType = v;\n    }, null);\n    typeOfValue.setDisabled(true);\n    typeOfValue.margin(0, 0, 0, 12);\n    var __ret = typeValues(parent);\n    var isSchema = __ret.isSchema;\n    var types = __ret.types;\n    if (types) {\n        types = [\"\"].concat(types);\n        typeOfValue.getActualField().setOptions(types);\n    }\n    var bodyTypeOfValue = new UI.SelectField(\"Generate default body with type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT)\n            v = null;\n        bodyTypeString = v;\n    }, null);\n    bodyTypeOfValue.setDisabled(true);\n    bodyTypeOfValue.margin(0, 0, 0, 12);\n    var isSchema = __ret.isSchema;\n    var types = __ret.types;\n    if (types) {\n        types = [\"\"].concat(types);\n        bodyTypeOfValue.getActualField().setOptions(types);\n    }\n    var responseSection = UI.section(\"\");\n    responseSection.addChild(UI.h3(\"Body\"));\n    responseSection.addChild(bodyTypeSelect);\n    responseSection.addChild(bodyTypeOfValue);\n    responseSection.addChild(UI.h3(\"Response\"));\n    responseSection.addChild(responseSelect);\n    responseSection.addChild(cdescLabel);\n    responseSection.addChild(responseTypeSelect);\n    responseSection.addChild(typeOfValue);\n    responseSection.ui();\n    var panel = UI.section(\"Creating a new method\", UI.Icon.CODE, false, false, methodSelect, mdescLabel, responseSection);\n    var __ret = typeValues(parent);\n    //panel.addChild(typeOfValue)\n    _dialog(panel, function () {\n        var oldNode = parent.elementsOfKind('methods').filter(function (el) { return (el.attr('method').value() == method); })[0];\n        if (oldNode) {\n            showError(\"Method \" + method + \" already exists\", \"Node contents will be overwritten\");\n            parent.remove(oldNode);\n        }\n        var methodNode = stubs.createMethodStub(parent, method);\n        if (realBodyType) {\n            var bodyNode = stubs.createBodyStub(methodNode, realBodyType);\n            if (bodyTypeString) {\n                if (isSchema) {\n                    bodyNode.attrOrCreate(\"schema\").setValue(bodyTypeString);\n                }\n                else\n                    bodyNode.attrOrCreate(\"type\").setValue(bodyTypeString);\n            }\n            methodNode.add(bodyNode);\n        }\n        if (code) {\n            var codeNode = stubs.createResponseStub(methodNode, code);\n            methodNode.add(codeNode);\n            if (bodyType) {\n                var bodyNode = stubs.createBodyStub(codeNode, bodyType);\n                if (actualType) {\n                    if (isSchema) {\n                        bodyNode.attrOrCreate(\"schema\").setValue(actualType);\n                    }\n                    else\n                        bodyNode.attrOrCreate(\"type\").setValue(actualType);\n                }\n                codeNode.add(bodyNode);\n            }\n        }\n        parent.add(methodNode);\n        editorTools.updateAndSelect(methodNode);\n        return true;\n    })(this);\n}\nexports.newMethod = newMethod;\nfunction getStringValue(x) {\n    if (typeof x === \"object\")\n        return x.valueName();\n    else\n        return x;\n}\nexports.getStringValue = getStringValue;\nfunction typeEditDialog(name, value, node, onDone) {\n    var typePanel = UI.vc();\n    typePanel.margin(8, 8, 20, 8);\n    var typeProperty = node.definition().property(name);\n    var toPropagate = svMap(node, name);\n    var typeList = editorTools.aquireManager().ast.elementsOfKind(\"resourceType\").map(function (x) { return x.name(); });\n    var typeName = getStringValue(value);\n    var select = new UI.SelectField('Type: ', function (e, v) {\n        if (v == EMPTY_VALUE) {\n            value = \"\";\n            typePanel.clear();\n            typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n            return;\n        }\n        value = rp.utils.genStructuredValue(v, node, typeProperty);\n        var typeNode = ((typeof value) === \"object\") ? value.toHighLevel(editorTools.aquireManager().ast) : null;\n        propagateValues(typeNode, toPropagate);\n        details.updateDetailsPanel(typeNode, typePanel);\n        if (typeNode && typeNode.definition().allProperties().length == 0) {\n            value = v;\n        }\n    });\n    var EMPTY_VALUE = \"(no value)\";\n    select.getActualField().setOptions([EMPTY_VALUE].concat(typeList));\n    select.setPercentWidth(100);\n    if (typeList.indexOf(typeName) < 0) {\n        select.getActualField().setValue(EMPTY_VALUE);\n        if (typeName != \"\")\n            typePanel.addChild(UI.label(\"Type `\" + typeName + \"` does not exists\", null, UI.TextClasses.ERROR).setStyle(\"display\", \"block\"));\n        typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n    }\n    else\n        select.getActualField().setValue(typeName, true);\n    var panel = UI.section(\"Editing type value `\" + name + '`:', UI.Icon.CIRCUIT_BOARD, null, null, select, typePanel);\n    return _dialog(panel, function () { onDone(value); return true; });\n}\nexports.typeEditDialog = typeEditDialog;\nfunction svMap(node, attr) {\n    try {\n        var map = new pair.Map();\n        var values = node.attributes(attr).map(function (x) { return x.value(); }).filter(function (x) { return typeof x === \"object\"; });\n        values.forEach(function (val) { return val.lowLevel().children().forEach(function (c) { return map.set(c.key(), c.value()); }); });\n        return map;\n    }\n    catch (e) {\n        return null;\n    }\n}\nfunction propagateValues(node, map) {\n    if (!node || !map)\n        return;\n    map.pairs().forEach(function (pair) {\n        if (node.definition().property(pair.key))\n            node.attrOrCreate(pair.key).setValue(pair.value);\n    });\n}\nfunction getResourceParent(node) {\n    if (!node || !node.property())\n        return null;\n    if (universeHelpers.isResourcesProperty(node.property()))\n        return node;\n    return getResourceParent(node.parent());\n}\nexports.getResourceParent = getResourceParent;\nfunction enumEditDialog(name, value, onDone) {\n    var _cp = {\n        elements: function (model) { return model; },\n        init: function (viewer) { },\n        dispose: function () { }\n    };\n    var renderer = {\n        render: function (model) { return UI.hc(UI.label(model, UI.Icon.GIT_COMMIT), UI.a(\"\", function (e) {\n            value = value.filter(function (x) { return x != e.id(); });\n            list.remove(e.id());\n        }, UI.Icon.TRASHCAN).pad(8, 8).setId(model)).addClass(\"outline\"); }\n    };\n    var list = new UI.ListView(_cp, renderer);\n    list.setBasicLabelFunction(function (x) { return x; });\n    list.setInput(value, true);\n    var text = UI.texfField(\"\", \"\", function (x) { return x; }).margin(0, 0, 4, 4);\n    text.addKeyPressListener(function (i, e) {\n        if (e.keyCode != 13)\n            return;\n        var b = i.getBinding();\n        var newValue = b.get();\n        b.set(\"\");\n        value.push(newValue);\n        list.setInput(value, true);\n    });\n    var panel = UI.section(\"Editing enum value `\" + name + '`:', UI.Icon.LIST_UNORDERED, null, null, UI.h3(\"List of elements in enum:\").margin(0, 0, 20, 0), list.margin(20, 20), UI.h3(\"Add new element:\").margin(0, 0, 20, 0), text);\n    return _dialog(panel, function () { onDone(value); return true; }, text); //\n}\nexports.enumEditDialog = enumEditDialog;\nfunction calculatesParentURIPath(resource) {\n    var result = resource.attrValue(\"relativeUri\");\n    if (!result)\n        return null;\n    var current = getResourceParent(resource.parent());\n    while (current) {\n        var segment = current.attrValue(\"relativeUri\");\n        if (!segment)\n            return null;\n        result = segment + result;\n        current = getResourceParent(current.parent());\n    }\n    return result;\n}\nfunction newResource(parent) {\n    var uri = \"/\";\n    var uriLable = \"\";\n    var resourceParent = getResourceParent(parent);\n    var parentsPath = null;\n    if (resourceParent) {\n        parentsPath = calculatesParentURIPath(resourceParent);\n        if (parentsPath) {\n            uriLable = parentsPath;\n        }\n    }\n    var uriTF = uriTF = new UI.TextField(uriLable, uri, function (e, v) {\n        uri = v;\n    });\n    uriTF.margin(0, 0, 6, 12);\n    var methods = {};\n    var methodsPanel = UI.vc().margin(0, 0, 0, 12);\n    Object.keys(getMethodDescriptions())\n        .forEach(function (val) {\n        var ch = new UI.CheckBox(val, null, function (x) {\n            if (methods[val]) {\n                delete methods[val];\n            }\n            else {\n                methods[val] = x;\n            }\n        }).addClass(\"checkbox-group\");\n        var hcp = UI.vc().margin(0, 0, 15, 0);\n        hcp.addChild(ch);\n        var desc = val + \":\" + getMethodDescriptions()[val];\n        methodsPanel.addChild(UI.vc(hcp));\n        var label = UI.label(desc, UI.Icon.NONE, UI.TextClasses.SUBTLE).margin(5, 10, -4, 0);\n        methodsPanel.addChild(label);\n    });\n    var node = stubs.createResourceStub(parent, uri);\n    var resourceTypeProp = UI.select(\"type\");\n    var sm = search.globalDeclarations(parent).filter(function (x) { return universeHelpers.isResourceTypeType(x.definition()) && !x.definition().getAdapter(services.RAMLService).isUserDefined(); });\n    var options = sm.map(function (x) { return rp.search.qName(x, parent); });\n    var options = [\"\"].concat(options);\n    resourceTypeProp.setOptions(options);\n    //var resourceTypeProp = details.property2(node, \"type\");\n    var panel = UI.section(\"Creating a new resource\", UI.Icon.BOOK, false, false);\n    panel.addChild(UI.label(\"New resource URI:\"));\n    panel.addChild(uriTF);\n    panel.addChild(UI.label(\"Type:\"));\n    panel.addChild(resourceTypeProp);\n    panel.addChild(UI.label(\"Add additional methods:\").margin(0, 0, 18, 6));\n    panel.addChild(methodsPanel);\n    _dialog(panel, function () {\n        if (uri.indexOf('/') != 0)\n            return false;\n        node.attrOrCreate(\"relativeUri\").setValue(uri);\n        Object.keys(methods).filter(function (x) { return methods[x]; }).forEach(function (method) {\n            var stub = stubs.createMethodStub(node, method);\n            stub.attrOrCreate(\"method\").setValue(method);\n            node.add(stub);\n        });\n        var vl = resourceTypeProp.getValue();\n        if (vl) {\n            node.attrOrCreate(\"type\").setValue(vl);\n        }\n        parent.add(node);\n        editorTools.updateAndSelect(node);\n        return true;\n    }, uriTF, true)(this);\n    uriTF.getActualField().ui().focus();\n    //(<UI.TextField>resourceTypeProp).hideLabel();\n    if (!parentsPath) {\n        uriTF.hideLabel();\n    }\n    else {\n        uriTF.makeLabelNextToField();\n    }\n}\nexports.newResource = newResource;\nfunction newNode(parent, title, property, key) {\n    if (key === void 0) { key = \"key\"; }\n    var name = \"\", type = \"\";\n    if (parent == null) {\n        return;\n    }\n    if (property == \"body\") {\n        key = \"application/json\";\n    }\n    var stub = stubs.createStub(parent, property, key);\n    var item = details2.buildItem(stub, true);\n    item.setTitle(title);\n    var panel = item.render({ showDescription: true });\n    panel.margin(8, 8, 8, 8);\n    _dialog(panel, function () {\n        stub._parent = null;\n        stub.lowLevel()._unit = null;\n        parent.add(stub);\n        editorTools.updateAndSelect(stub);\n        return true;\n    }, null)(this);\n}\nexports.newNode = newNode;\nfunction traitsEditDialog(name, values, node, onDone) {\n    var toPropagate = svMap(node, name);\n    var tabs = new UI.TabFolder();\n    var sel = UI.vc(UI.h3(\"Enabled traits: \")).margin(10, 10, 0, 0);\n    tabs.margin(0, 0, 20, 10);\n    tabs.add(\"Traits\", UI.Icon.FILE_SUBMODULE, sel);\n    var traitProperty = node.definition().property(name);\n    var ui = {};\n    var index = 0;\n    var returnv = node.root().elementsOfKind('traits').map(function (trait) {\n        var traitName = trait.name();\n        var traitValue = rp.utils.genStructuredValue(traitName, node, traitProperty);\n        var traitNode = (typeof traitValue === \"object\") ? traitValue.toHighLevel() : null;\n        if (traitNode && traitNode.definition().allProperties().length == 0)\n            traitValue = traitName;\n        var returnee = {\n            index: index,\n            name: traitName,\n            value: traitValue,\n            enabled: values.filter(function (x) { return getStringValue(x) == traitName; }).length > 0\n        };\n        propagateValues(traitNode, toPropagate);\n        var tcb = UI.checkBox(returnee.name, function (e) {\n            returnee.enabled = tcb.getValue();\n            tabs.toggle(1 + returnee.index, returnee.enabled);\n        });\n        tcb.margin(12, 12);\n        tcb.setValue(returnee.enabled);\n        sel.addChild(tcb);\n        var traitPanel = UI.vc();\n        traitPanel.margin(8, 8, 20, 8);\n        details.updateDetailsPanel(traitNode, traitPanel);\n        tabs.add(traitName, UI.Icon.CIRCUIT_BOARD, traitPanel);\n        tabs.toggle(1 + index, returnee.enabled);\n        index += 1;\n        return returnee;\n    });\n    var panel = UI.section(\"Editing trait value `\" + name + \"`:\", UI.Icon.CIRCUIT_BOARD, null, null, tabs);\n    return _dialog(panel, function () { onDone(returnv); return true; });\n}\nexports.traitsEditDialog = traitsEditDialog;\nfunction getNewSchemaPath(schema) {\n    return path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath()) + '/' + (schema.length > 0 ? schema + '.raml' : \"\");\n}\nfunction schemaText(nameOrValue) {\n    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n    return schema ? schema.value().value() : \"\";\n}\nfunction schemaEditDialog(name, value, onDone) {\n    var NEW_SCHEMA = \"(New Schema)\";\n    var schemas = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }); // list of all available schema names\n    var refValue = schemas.indexOf(value) >= 0;\n    var text = refValue ? _schemaText(value) : value;\n    var sname = refValue ? value : \"\";\n    var timeout = 0;\n    var editor = smallEditor(function (e, v) { timeout = 0; });\n    var preview = schemaUI._schemaPreview();\n    var intervalId = setInterval(function () {\n        if (timeout++ < 5)\n            return;\n        timeout = 0;\n        schemaUI._updatePreview(preview, editor.getValue());\n    }, 100);\n    var select = new UI.SelectField('Select schema: ', function (e, v) {\n        sname = v;\n        text = schemaText(v);\n        _updateEditor(editor, text);\n    });\n    select.getActualField().setOptions([NEW_SCHEMA].concat(schemas));\n    select.setPercentWidth(100);\n    if (refValue)\n        select.getActualField().setValue(sname);\n    _updateEditor(editor, text);\n    var tabs = new UI.TabFolder();\n    tabs.add(\"Write\", UI.Icon.FILE_TEXT, editor);\n    tabs.add(\"Preview\", UI.Icon.GIT_MERGE, preview);\n    var panel = UI.section(\"Editing schema value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, select, tabs);\n    var NoSchema = function () {\n        showError(\"No schema entered\", \"Please enter a valid schema or select one from the list before proceeding.\");\n        return false;\n    };\n    var InvalidSchema = function () {\n        showError(\"Invalid schema\", \"Please fix the errors in the schema before saving it.\");\n        return false;\n    };\n    return _dialog2(panel, [\n        {\n            name: \"Save as reference\",\n            highlight: UI.ButtonHighlights.INFO,\n            action: function () {\n                var newText = editor.getValue();\n                var isChanged = (text != newText);\n                if (!isChanged && sname == NEW_SCHEMA)\n                    return NoSchema();\n                else if (validateSchema(newText) == false)\n                    return InvalidSchema();\n                if (isChanged) {\n                    var res = saveSchema(sname, newText);\n                    if (res) {\n                        onDone(res);\n                        clearInterval(intervalId);\n                        return true;\n                    }\n                    else\n                        return false;\n                }\n                else {\n                    onDone(sname);\n                    clearInterval(intervalId);\n                    return true;\n                }\n            }\n        },\n        {\n            name: \"Save as text\",\n            highlight: UI.ButtonHighlights.WARNING,\n            action: function () {\n                var newText = editor.getValue();\n                var isChanged = (text != newText);\n                if (newText == \"\")\n                    return NoSchema();\n                else if (validateSchema(newText) == false)\n                    return InvalidSchema();\n                select.getActualField().setValue(NEW_SCHEMA);\n                sname = \"Untitled\";\n                onDone(newText);\n                clearInterval(intervalId);\n                return true;\n            }\n        },\n        {\n            name: \"Cancel\",\n            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n            action: function () { clearInterval(intervalId); return true; }\n        }\n    ]);\n}\nexports.schemaEditDialog = schemaEditDialog;\nfunction _updateEditor(editor, value) {\n    var schema = rp.schema.createSchema(value, null);\n    var schemaType = (schema == null || schema.getType == null) ? \"text/plain\" : schema.getType();\n    editor.setGrammar(schemaType);\n    editor.setText(value);\n}\nexports._updateEditor = _updateEditor;\nfunction validateSchema(schema) {\n    return true;\n}\nfunction saveSchema(name, value) {\n    var schema = rp.schema.createSchema(value, null);\n    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n    var projectFolder = path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath());\n    var ext;\n    var filter;\n    switch (schema.getType()) {\n        case 'source.json':\n            filter = [filterJSON];\n            ext = \".json\";\n            break;\n        case 'text.xml':\n            filter = [filterXML];\n            ext = \".xsd\";\n            break;\n        default:\n            filter = [];\n    }\n    var result = dialog.showSaveDialog(remote.getCurrentWindow(), {\n        title: 'Save schema',\n        defaultPath: path.resolve(projectFolder, \"schemas\", name + ext),\n        filters: filter\n    });\n    if (result == null)\n        return null;\n    var fname = path.basename(result);\n    var ename = path.extname(fname);\n    var sname = fname.substr(0, fname.indexOf(ename));\n    var rpath = path.relative(projectFolder, result);\n    if (editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }).indexOf(sname) == -1)\n        assistUtils.createGlobalSchemaFromNameAndContent(editorTools.aquireManager().ast.root(), sname, rpath, value, result);\n    return sname;\n}\nfunction markdown(name, values, onDone) {\n    var editor = new UI.AtomEditorElement(values.join('\\n'), function (e) { });\n    editor.margin(0, 0, 6, 12);\n    editor.setMini(false);\n    editor.setGrammar('source.gfm');\n    var panel = UI.section(\"Editing markdown value `\" + name + '`:', UI.Icon.FILE_TEXT, false, false, UI.h3(\"Please note that lines might be long enough so window would scroll.\").margin(0, 0, 20, 0), editor);\n    return _dialog(panel, function () { onDone(editor.getBinding().get()); return true; }, editor);\n}\nexports.markdown = markdown;\nfunction exampleEditorDialog(name, rpath, value, onDone) {\n    var editor = smallEditor(function (e, v) {\n        if (v.indexOf('xml') > 0)\n            editor.setGrammar('text.xml');\n        else\n            editor.setGrammar('source.json');\n    });\n    editor.setText(value);\n    var projectPath = path.dirname(editorTools.aquireManager().getPath());\n    var refPath = new UI.TextField(\"Referenced from\", rpath, function (e, v) { return rpath = v; }, null, \"No reference path provided\");\n    refPath.addChild(new UI.Button(\"Browse\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.NO_HIGHLIGHT, null, function () {\n        var res = UI.fdUtils.openFileDialogModal(\"Open a reference\", path.resolve(projectPath, rpath), []);\n        if (!res)\n            return;\n        refPath.getActualField().setText(path.relative(projectPath, rpath = res[0]));\n        value = fs.readFileSync(res[0]).toString(\"UTF-8\");\n        editor.setText(value);\n    }).margin(4, 0));\n    var reui = refPath.getActualField().ui();\n    reui.onclick = function (e) {\n        reui.blur();\n        if (reui.nextSibling['onclick'])\n            reui.nextSibling['onclick'](e);\n    };\n    var refFrom = UI.vc(UI.h3(\"Referenced\"));\n    var panel = UI.section(\"Editing example value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, refPath.margin(12, 12, 20, 12), editor.margin(12, 12, 20, 12));\n    return _dialog2(panel, [\n        {\n            name: \"Save as reference\",\n            highlight: UI.ButtonHighlights.INFO,\n            action: function () {\n                var newText = editor.getValue();\n                if ((value != newText)) {\n                    var res = saveExample(path.resolve(projectPath, rpath), newText);\n                    if (res) {\n                        onDone(path.relative(projectPath, res));\n                        return true;\n                    }\n                    else\n                        return false;\n                }\n                else {\n                    onDone(rpath);\n                    return true;\n                }\n            }\n        },\n        {\n            name: \"Save as text\",\n            highlight: UI.ButtonHighlights.WARNING,\n            action: function () { return onDone(editor.getValue()) == undefined || true; }\n        },\n        {\n            name: \"Cancel\",\n            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n            action: function () { return true; }\n        }\n    ]);\n}\nexports.exampleEditorDialog = exampleEditorDialog;\nvar mdp = null;\nfunction _closeDialog() {\n    _dialogPanels.pop();\n    if (_dialogPanels.length == 0)\n        mdp.destroy();\n    else\n        mdp = atom.workspace.addModalPanel({ item: _dialogPanels[_dialogPanels.length - 1].ui() });\n}\nfunction saveExample(filePath, value) {\n    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n    var ext = value.indexOf('xml') < 0 ? 'json' : 'xml';\n    var filename = UI.fdUtils.saveFileDialogModal('Save an example', filePath, [filterJSON, filterXML, filterAll]);\n    if (filename)\n        fs.writeFileSync(filename, value);\n    return filename;\n}\nfunction _dialog2(panel, actions, toFocus, stretch) {\n    if (stretch === void 0) { stretch = false; }\n    var buttonBar = UI.hc().setPercentWidth(100);\n    actions.reverse().forEach(function (a) {\n        var button = UI.button(a.name, UI.ButtonSizes.NORMAL, a.highlight, UI.Icon.NONE, function (x) { if (a.action())\n            _closeDialog(); });\n        if (a.isPrimary) {\n            var st = panel.getBinding().status();\n            if (st) {\n                if (st.code == UI.StatusCode.ERROR) {\n                    button.setDisabled(true);\n                }\n            }\n            panel.getBinding().addStatusListener(function (x) {\n                var st = panel.getBinding().status();\n                if (st) {\n                    if (st.code != UI.StatusCode.ERROR) {\n                        button.setDisabled(false);\n                    }\n                    else {\n                        button.setDisabled(true);\n                    }\n                }\n            });\n        }\n        button.setStyle(\"float\", \"right\")\n            .margin(4, 10);\n        buttonBar.addChild(button);\n    });\n    panel.addChild(buttonBar);\n    var ui = panel.ui();\n    return function (e) {\n        _dialogPanels.push(panel);\n        var eventListener = function () {\n            if (!stretch) {\n                return;\n            }\n            var parent = ui.parentElement;\n            var height = document.body.clientHeight;\n            if (!parent) {\n                return;\n            }\n            var style = window.getComputedStyle(parent);\n            [\"paddingBottom\", \"paddingTop\", \"marginBottom\", \"marginTop\"].forEach(function (property) {\n                height -= parseFloat(style[property] || 0);\n            });\n            ui.style.height = height + \"px\";\n            ui.style.overflowY = \"scroll\";\n        };\n        window.addEventListener('resize', eventListener);\n        mdp = atom.workspace.addModalPanel({ item: ui });\n        mdp.onDidDestroy(function () {\n            window.removeEventListener('resize', eventListener);\n        });\n        eventListener();\n        if (toFocus)\n            toFocus.ui().focus();\n    };\n}\nfunction msg(m) {\n    showError(m, \"\");\n}\nexports.msg = msg;\nfunction smallEditor(onChange) {\n    if (!onChange)\n        onChange = function (e, v) { };\n    var editor = new UI.AtomEditorElement(\"\", onChange);\n    editor.setMini(false);\n    editor.setStyle(\"height\", \"400px\");\n    editor.setStyle(\"border\", \"solid\");\n    editor.setStyle(\"border-width\", \"1px\");\n    return editor;\n}\nexports.smallEditor = smallEditor;\nfunction _schemaText(nameOrValue) {\n    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n    return schema ? schema.value().value() : \"\";\n}\nfunction _dialog(panel, onDone, toFocus, stretch) {\n    if (stretch === void 0) { stretch = false; }\n    return _dialog2(panel, [\n        { name: \"Ok\", isPrimary: true, highlight: UI.ButtonHighlights.PRIMARY, action: onDone },\n        { name: \"Cancel\", highlight: UI.ButtonHighlights.NO_HIGHLIGHT, action: function () { return true; } }\n    ], toFocus, stretch);\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/dialogs.js\n ** module id = 43\n ** module chunks = 0\n **/","module.exports = require(\"react\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 44\n ** module chunks = 0\n **/","module.exports = require(\"xtend\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xtend\"\n ** module id = 45\n ** module chunks = 0\n **/","module.exports = require(\"popsicle\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"popsicle\"\n ** module id = 46\n ** module chunks = 0\n **/","module.exports = require(\"yaml-ast-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"yaml-ast-parser\"\n ** module id = 47\n ** module chunks = 0\n **/","module.exports = require(\"xmldom\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xmldom\"\n ** module id = 48\n ** module chunks = 0\n **/","module.exports = [\n\t{\n\t\t\"id\": 31423945,\n\t\t\"name\": \"AmazonS3\",\n\t\t\"full_name\": \"raml-apis/AmazonS3\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/AmazonS3\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:35Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:35Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:01Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/AmazonS3.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/AmazonS3.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/AmazonS3.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\"homepage\": null,\n\t\t\"size\": 264,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423955,\n\t\t\"name\": \"Box\",\n\t\t\"full_name\": \"raml-apis/Box\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Box\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Box\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Box/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Box/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Box/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Box/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Box/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Box/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Box/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Box/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Box/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Box/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Box/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Box/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Box/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Box/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Box/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Box/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Box/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Box/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Box/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Box/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Box/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Box/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Box/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Box/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Box/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Box/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Box/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Box/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Box/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Box/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Box/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Box/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Box/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Box/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Box/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:41Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:41Z\",\n\t\t\"pushed_at\": \"2015-07-28T23:37:53Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Box.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Box.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Box.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Box\",\n\t\t\"homepage\": null,\n\t\t\"size\": 224,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423957,\n\t\t\"name\": \"Bufferapp\",\n\t\t\"full_name\": \"raml-apis/Bufferapp\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bufferapp\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:42Z\",\n\t\t\"updated_at\": \"2015-02-27T15:08:44Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:27Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Bufferapp.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Bufferapp.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Bufferapp.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\"homepage\": null,\n\t\t\"size\": 172,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423973,\n\t\t\"name\": \"FuelEconomy\",\n\t\t\"full_name\": \"raml-apis/FuelEconomy\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/FuelEconomy\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:49Z\",\n\t\t\"pushed_at\": \"2015-04-04T00:32:59Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/FuelEconomy.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/FuelEconomy.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/FuelEconomy.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\"homepage\": null,\n\t\t\"size\": 172,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423980,\n\t\t\"name\": \"GoogleContacts\",\n\t\t\"full_name\": \"raml-apis/GoogleContacts\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleContacts\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:52Z\",\n\t\t\"updated_at\": \"2015-10-31T15:35:32Z\",\n\t\t\"pushed_at\": \"2015-05-21T12:01:57Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleContacts.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleContacts.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleContacts.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\"homepage\": null,\n\t\t\"size\": 260,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423986,\n\t\t\"name\": \"Instagram\",\n\t\t\"full_name\": \"raml-apis/Instagram\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Instagram\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Instagram/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Instagram/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Instagram/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Instagram/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Instagram/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Instagram/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Instagram/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Instagram/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Instagram/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Instagram/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Instagram/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Instagram/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Instagram/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Instagram/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Instagram/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Instagram/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Instagram/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Instagram/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Instagram/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Instagram/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Instagram/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Instagram/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Instagram/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:56Z\",\n\t\t\"updated_at\": \"2015-09-08T12:55:09Z\",\n\t\t\"pushed_at\": \"2015-10-14T07:16:39Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Instagram.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Instagram.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Instagram.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\"homepage\": null,\n\t\t\"size\": 187,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423979,\n\t\t\"name\": \"GoogleCalendar\",\n\t\t\"full_name\": \"raml-apis/GoogleCalendar\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:51Z\",\n\t\t\"updated_at\": \"2015-02-27T15:09:48Z\",\n\t\t\"pushed_at\": \"2015-05-21T02:57:16Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleCalendar.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\"homepage\": null,\n\t\t\"size\": 252,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423964,\n\t\t\"name\": \"Facebook\",\n\t\t\"full_name\": \"raml-apis/Facebook\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Facebook\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Facebook/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Facebook/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Facebook/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Facebook/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Facebook/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Facebook/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Facebook/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Facebook/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Facebook/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Facebook/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Facebook/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Facebook/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Facebook/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Facebook/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Facebook/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Facebook/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Facebook/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Facebook/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Facebook/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Facebook/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Facebook/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Facebook/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Facebook/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:45Z\",\n\t\t\"updated_at\": \"2015-10-21T23:11:31Z\",\n\t\t\"pushed_at\": \"2015-07-06T13:46:05Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Facebook.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Facebook.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Facebook.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\"homepage\": null,\n\t\t\"size\": 272,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424019,\n\t\t\"name\": \"Stormpath\",\n\t\t\"full_name\": \"raml-apis/Stormpath\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stormpath\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stormpath/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stormpath/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stormpath/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stormpath/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stormpath/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stormpath/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stormpath/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stormpath/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stormpath/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stormpath/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stormpath/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stormpath/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stormpath/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stormpath/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stormpath/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stormpath/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:33Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Stormpath.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Stormpath.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Stormpath.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\"homepage\": null,\n\t\t\"size\": 188,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424034,\n\t\t\"name\": \"XKCD\",\n\t\t\"full_name\": \"raml-apis/XKCD\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/XKCD\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/XKCD/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/XKCD/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/XKCD/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/XKCD/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/XKCD/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/XKCD/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/XKCD/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/XKCD/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/XKCD/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/XKCD/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/XKCD/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/XKCD/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/XKCD/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/XKCD/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/XKCD/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/XKCD/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/XKCD/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/XKCD/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/XKCD/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/XKCD/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/XKCD/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/XKCD/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/XKCD/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:21Z\",\n\t\t\"updated_at\": \"2015-03-09T16:53:13Z\",\n\t\t\"pushed_at\": \"2015-08-07T05:17:33Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/XKCD.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/XKCD.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/XKCD.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\"homepage\": null,\n\t\t\"size\": 148,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424012,\n\t\t\"name\": \"SlideShare\",\n\t\t\"full_name\": \"raml-apis/SlideShare\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/SlideShare\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SlideShare/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SlideShare/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SlideShare/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SlideShare/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SlideShare/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SlideShare/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SlideShare/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SlideShare/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SlideShare/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SlideShare/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SlideShare/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SlideShare/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SlideShare/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SlideShare/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SlideShare/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SlideShare/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:11Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:11Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:13Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/SlideShare.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/SlideShare.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/SlideShare.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424024,\n\t\t\"name\": \"Twilio\",\n\t\t\"full_name\": \"raml-apis/Twilio\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twilio\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twilio/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twilio/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twilio/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twilio/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twilio/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twilio/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twilio/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twilio/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twilio/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twilio/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twilio/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twilio/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twilio/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twilio/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twilio/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twilio/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twilio/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twilio/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twilio/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twilio/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twilio/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twilio/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twilio/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:16Z\",\n\t\t\"updated_at\": \"2015-03-09T16:42:14Z\",\n\t\t\"pushed_at\": \"2015-08-21T10:07:35Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Twilio.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Twilio.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Twilio.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\"homepage\": null,\n\t\t\"size\": 340,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424029,\n\t\t\"name\": \"WeatherUnderground\",\n\t\t\"full_name\": \"raml-apis/WeatherUnderground\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:19Z\",\n\t\t\"updated_at\": \"2015-10-31T15:36:51Z\",\n\t\t\"pushed_at\": \"2015-07-30T15:19:32Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/WeatherUnderground.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\"homepage\": null,\n\t\t\"size\": 248,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424039,\n\t\t\"name\": \"Zuora\",\n\t\t\"full_name\": \"raml-apis/Zuora\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zuora\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zuora/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zuora/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zuora/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zuora/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zuora/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zuora/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zuora/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zuora/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zuora/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zuora/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zuora/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zuora/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zuora/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zuora/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zuora/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zuora/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zuora/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zuora/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zuora/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zuora/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zuora/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zuora/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zuora/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\"updated_at\": \"2015-03-09T16:43:10Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:15:34Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Zuora.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Zuora.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Zuora.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\"homepage\": null,\n\t\t\"size\": 184,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423938,\n\t\t\"name\": \"AccuWeather\",\n\t\t\"full_name\": \"raml-apis/AccuWeather\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/AccuWeather\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:24Z\",\n\t\t\"updated_at\": \"2015-03-09T16:51:18Z\",\n\t\t\"pushed_at\": \"2015-11-06T07:20:20Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/AccuWeather.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/AccuWeather.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/AccuWeather.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\"homepage\": null,\n\t\t\"size\": 278,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424026,\n\t\t\"name\": \"Twitch\",\n\t\t\"full_name\": \"raml-apis/Twitch\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitch\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitch/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitch/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitch/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitch/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitch/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitch/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitch/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitch/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitch/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitch/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitch/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitch/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitch/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitch/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitch/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitch/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitch/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitch/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitch/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitch/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitch/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitch/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitch/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:17Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:17Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:49Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Twitch.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitch.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Twitch.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423975,\n\t\t\"name\": \"Geonames\",\n\t\t\"full_name\": \"raml-apis/Geonames\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Geonames\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Geonames/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Geonames/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Geonames/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Geonames/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Geonames/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Geonames/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Geonames/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Geonames/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Geonames/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Geonames/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Geonames/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Geonames/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Geonames/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Geonames/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Geonames/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Geonames/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Geonames/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Geonames/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Geonames/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Geonames/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Geonames/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Geonames/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Geonames/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\"updated_at\": \"2015-03-16T03:36:21Z\",\n\t\t\"pushed_at\": \"2015-07-24T13:32:52Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Geonames.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Geonames.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Geonames.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\"homepage\": null,\n\t\t\"size\": 248,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 1,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 1,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 34848402,\n\t\t\"name\": \"Uber\",\n\t\t\"full_name\": \"raml-apis/Uber\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\"description\": \"\",\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Uber\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Uber/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Uber/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Uber/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Uber/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Uber/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Uber/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Uber/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Uber/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Uber/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Uber/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Uber/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Uber/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Uber/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Uber/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Uber/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Uber/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Uber/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Uber/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Uber/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Uber/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Uber/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Uber/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Uber/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Uber/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Uber/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Uber/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Uber/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Uber/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Uber/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Uber/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Uber/releases{/id}\",\n\t\t\"created_at\": \"2015-04-30T10:18:59Z\",\n\t\t\"updated_at\": \"2015-04-30T10:18:59Z\",\n\t\t\"pushed_at\": \"2015-10-15T05:35:23Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Uber.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Uber.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Uber.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\"homepage\": null,\n\t\t\"size\": 193,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": true,\n\t\t\"has_wiki\": true,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 3,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 3,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"staging\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423987,\n\t\t\"name\": \"Jira\",\n\t\t\"full_name\": \"raml-apis/Jira\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Jira\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Jira/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Jira/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Jira/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Jira/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Jira/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Jira/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Jira/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Jira/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Jira/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Jira/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Jira/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Jira/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Jira/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Jira/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Jira/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Jira/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Jira/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Jira/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Jira/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Jira/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Jira/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Jira/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Jira/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Jira/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Jira/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Jira/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Jira/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Jira/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Jira/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Jira/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Jira/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:57Z\",\n\t\t\"updated_at\": \"2015-09-30T16:37:10Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:12:56Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Jira.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Jira.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Jira.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\"homepage\": null,\n\t\t\"size\": 240,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424011,\n\t\t\"name\": \"Slack\",\n\t\t\"full_name\": \"raml-apis/Slack\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Slack\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Slack/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Slack/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Slack/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Slack/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Slack/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Slack/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Slack/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Slack/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Slack/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Slack/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Slack/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Slack/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Slack/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Slack/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Slack/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Slack/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Slack/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Slack/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Slack/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Slack/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Slack/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Slack/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Slack/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Slack/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Slack/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Slack/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Slack/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Slack/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Slack/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Slack/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Slack/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:10Z\",\n\t\t\"updated_at\": \"2015-02-27T15:12:05Z\",\n\t\t\"pushed_at\": \"2015-10-14T05:29:57Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Slack.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Slack.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Slack.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\"homepage\": null,\n\t\t\"size\": 237,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423977,\n\t\t\"name\": \"GitHub\",\n\t\t\"full_name\": \"raml-apis/GitHub\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GitHub\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GitHub/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GitHub/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GitHub/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GitHub/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GitHub/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GitHub/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GitHub/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GitHub/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GitHub/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GitHub/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GitHub/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GitHub/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GitHub/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GitHub/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GitHub/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GitHub/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GitHub/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GitHub/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GitHub/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GitHub/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GitHub/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GitHub/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GitHub/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:50Z\",\n\t\t\"updated_at\": \"2015-11-04T16:18:02Z\",\n\t\t\"pushed_at\": \"2015-10-16T09:54:09Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GitHub.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GitHub.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GitHub.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\"homepage\": null,\n\t\t\"size\": 366,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 2,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 2,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423990,\n\t\t\"name\": \"LinkedIn\",\n\t\t\"full_name\": \"raml-apis/LinkedIn\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/LinkedIn\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:59Z\",\n\t\t\"updated_at\": \"2015-02-27T15:11:03Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:13:06Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/LinkedIn.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/LinkedIn.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/LinkedIn.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\"homepage\": null,\n\t\t\"size\": 184,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424036,\n\t\t\"name\": \"Yammer\",\n\t\t\"full_name\": \"raml-apis/Yammer\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Yammer\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Yammer/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Yammer/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Yammer/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Yammer/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Yammer/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Yammer/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Yammer/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Yammer/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Yammer/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Yammer/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Yammer/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Yammer/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Yammer/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Yammer/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Yammer/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Yammer/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Yammer/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Yammer/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Yammer/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Yammer/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Yammer/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Yammer/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Yammer/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:22Z\",\n\t\t\"updated_at\": \"2015-03-09T16:52:23Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:15:18Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Yammer.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Yammer.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Yammer.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\"homepage\": null,\n\t\t\"size\": 168,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423985,\n\t\t\"name\": \"HealthCare\",\n\t\t\"full_name\": \"raml-apis/HealthCare\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/HealthCare\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/HealthCare/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/HealthCare/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/HealthCare/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/HealthCare/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/HealthCare/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/HealthCare/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/HealthCare/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/HealthCare/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/HealthCare/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/HealthCare/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/HealthCare/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/HealthCare/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/HealthCare/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/HealthCare/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/HealthCare/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/HealthCare/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:55Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:55Z\",\n\t\t\"pushed_at\": \"2015-07-30T16:44:45Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/HealthCare.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/HealthCare.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/HealthCare.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\"homepage\": null,\n\t\t\"size\": 200,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423954,\n\t\t\"name\": \"Blogger\",\n\t\t\"full_name\": \"raml-apis/Blogger\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Blogger\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Blogger/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Blogger/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Blogger/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Blogger/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Blogger/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Blogger/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Blogger/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Blogger/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Blogger/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Blogger/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Blogger/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Blogger/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Blogger/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Blogger/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Blogger/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Blogger/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Blogger/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Blogger/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Blogger/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Blogger/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Blogger/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Blogger/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Blogger/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:40Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:40Z\",\n\t\t\"pushed_at\": \"2015-05-28T11:21:49Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Blogger.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Blogger.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Blogger.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\"homepage\": null,\n\t\t\"size\": 200,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 41861038,\n\t\t\"name\": \"SalesforceChatter\",\n\t\t\"full_name\": \"raml-apis/SalesforceChatter\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\"description\": \"\",\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/releases{/id}\",\n\t\t\"created_at\": \"2015-09-03T13:24:46Z\",\n\t\t\"updated_at\": \"2015-09-03T13:36:51Z\",\n\t\t\"pushed_at\": \"2015-10-22T12:08:05Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/SalesforceChatter.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\"homepage\": null,\n\t\t\"size\": 412,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"RAML\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": true,\n\t\t\"has_wiki\": true,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"production\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423959,\n\t\t\"name\": \"Elasticsearch\",\n\t\t\"full_name\": \"raml-apis/Elasticsearch\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Elasticsearch\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:43Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:43Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:32Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Elasticsearch.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Elasticsearch.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Elasticsearch.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\"homepage\": null,\n\t\t\"size\": 228,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423981,\n\t\t\"name\": \"GoogleDrive\",\n\t\t\"full_name\": \"raml-apis/GoogleDrive\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleDrive\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:53Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:53Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:30:50Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleDrive.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleDrive.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleDrive.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\"homepage\": null,\n\t\t\"size\": 268,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424001,\n\t\t\"name\": \"PagerDuty\",\n\t\t\"full_name\": \"raml-apis/PagerDuty\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/PagerDuty\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:04Z\",\n\t\t\"updated_at\": \"2015-03-09T16:43:49Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:37:18Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/PagerDuty.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/PagerDuty.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/PagerDuty.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\"homepage\": null,\n\t\t\"size\": 232,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424037,\n\t\t\"name\": \"Zendesk\",\n\t\t\"full_name\": \"raml-apis/Zendesk\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zendesk\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zendesk/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zendesk/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zendesk/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zendesk/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zendesk/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zendesk/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zendesk/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zendesk/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zendesk/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zendesk/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zendesk/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zendesk/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zendesk/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zendesk/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zendesk/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zendesk/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:23Z\",\n\t\t\"updated_at\": \"2015-03-09T16:51:58Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:15:23Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Zendesk.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Zendesk.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Zendesk.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\"homepage\": null,\n\t\t\"size\": 320,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423982,\n\t\t\"name\": \"GoogleMail\",\n\t\t\"full_name\": \"raml-apis/GoogleMail\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleMail\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:54Z\",\n\t\t\"updated_at\": \"2015-02-27T15:10:17Z\",\n\t\t\"pushed_at\": \"2015-10-15T11:27:34Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleMail.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleMail.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleMail.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\"homepage\": null,\n\t\t\"size\": 208,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423998,\n\t\t\"name\": \"NewRelic\",\n\t\t\"full_name\": \"raml-apis/NewRelic\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/NewRelic\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/NewRelic/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/NewRelic/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/NewRelic/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/NewRelic/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/NewRelic/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/NewRelic/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/NewRelic/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/NewRelic/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/NewRelic/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/NewRelic/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/NewRelic/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/NewRelic/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/NewRelic/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/NewRelic/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/NewRelic/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/NewRelic/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:02Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:02Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:13:24Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/NewRelic.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/NewRelic.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/NewRelic.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\"homepage\": null,\n\t\t\"size\": 248,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424027,\n\t\t\"name\": \"Twitter\",\n\t\t\"full_name\": \"raml-apis/Twitter\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitter\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitter/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitter/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitter/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitter/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitter/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitter/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitter/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitter/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitter/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitter/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitter/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitter/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitter/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitter/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitter/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitter/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitter/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitter/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitter/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitter/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitter/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitter/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitter/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:18Z\",\n\t\t\"updated_at\": \"2015-04-28T22:37:52Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:26:44Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Twitter.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitter.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Twitter.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\"homepage\": null,\n\t\t\"size\": 256,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424038,\n\t\t\"name\": \"Zillow\",\n\t\t\"full_name\": \"raml-apis/Zillow\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zillow\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zillow/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zillow/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zillow/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zillow/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zillow/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zillow/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zillow/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zillow/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zillow/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zillow/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zillow/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zillow/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zillow/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zillow/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zillow/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zillow/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zillow/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zillow/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zillow/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zillow/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zillow/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zillow/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zillow/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\"updated_at\": \"2015-03-09T16:51:44Z\",\n\t\t\"pushed_at\": \"2015-07-24T13:33:15Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Zillow.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Zillow.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Zillow.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\"homepage\": null,\n\t\t\"size\": 232,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 34780551,\n\t\t\"name\": \"FlightStats\",\n\t\t\"full_name\": \"raml-apis/FlightStats\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\"description\": \"\",\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/FlightStats\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FlightStats/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FlightStats/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FlightStats/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FlightStats/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FlightStats/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FlightStats/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FlightStats/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FlightStats/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FlightStats/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FlightStats/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FlightStats/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FlightStats/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FlightStats/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FlightStats/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FlightStats/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FlightStats/releases{/id}\",\n\t\t\"created_at\": \"2015-04-29T08:03:54Z\",\n\t\t\"updated_at\": \"2015-04-29T08:03:54Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:10:56Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/FlightStats.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/FlightStats.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/FlightStats.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\"homepage\": null,\n\t\t\"size\": 460,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": true,\n\t\t\"has_wiki\": true,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"staging\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424005,\n\t\t\"name\": \"PivotalTracker\",\n\t\t\"full_name\": \"raml-apis/PivotalTracker\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/PivotalTracker\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:07Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:07Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:50:22Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/PivotalTracker.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/PivotalTracker.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/PivotalTracker.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\"homepage\": null,\n\t\t\"size\": 196,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424014,\n\t\t\"name\": \"SmartSheet\",\n\t\t\"full_name\": \"raml-apis/SmartSheet\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/SmartSheet\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:12Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:12Z\",\n\t\t\"pushed_at\": \"2015-05-22T15:01:12Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/SmartSheet.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/SmartSheet.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/SmartSheet.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\"homepage\": null,\n\t\t\"size\": 224,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424018,\n\t\t\"name\": \"StackExchange\",\n\t\t\"full_name\": \"raml-apis/StackExchange\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/StackExchange\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/StackExchange/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/StackExchange/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/StackExchange/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/StackExchange/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/StackExchange/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/StackExchange/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/StackExchange/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/StackExchange/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/StackExchange/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/StackExchange/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/StackExchange/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/StackExchange/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/StackExchange/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/StackExchange/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/StackExchange/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/StackExchange/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:28Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/StackExchange.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/StackExchange.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/StackExchange.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424002,\n\t\t\"name\": \"Parse\",\n\t\t\"full_name\": \"raml-apis/Parse\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Parse\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Parse/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Parse/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Parse/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Parse/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Parse/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Parse/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Parse/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Parse/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Parse/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Parse/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Parse/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Parse/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Parse/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Parse/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Parse/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Parse/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Parse/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Parse/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Parse/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Parse/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Parse/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Parse/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Parse/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Parse/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Parse/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Parse/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Parse/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Parse/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Parse/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Parse/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Parse/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:05Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:05Z\",\n\t\t\"pushed_at\": \"2015-07-28T19:32:46Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Parse.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Parse.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Parse.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\"homepage\": null,\n\t\t\"size\": 224,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423952,\n\t\t\"name\": \"Bitly\",\n\t\t\"full_name\": \"raml-apis/Bitly\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bitly\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bitly/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bitly/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bitly/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bitly/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bitly/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bitly/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bitly/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bitly/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bitly/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bitly/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bitly/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bitly/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bitly/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bitly/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bitly/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bitly/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bitly/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bitly/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bitly/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bitly/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bitly/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bitly/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bitly/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\"updated_at\": \"2015-02-27T15:08:16Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:12Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Bitly.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Bitly.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Bitly.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\"homepage\": null,\n\t\t\"size\": 204,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424021,\n\t\t\"name\": \"Stripe\",\n\t\t\"full_name\": \"raml-apis/Stripe\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stripe\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stripe/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stripe/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stripe/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stripe/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stripe/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stripe/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stripe/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stripe/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stripe/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stripe/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stripe/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stripe/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stripe/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stripe/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stripe/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stripe/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stripe/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stripe/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stripe/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stripe/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stripe/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stripe/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stripe/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:15Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:15Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:38Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Stripe.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Stripe.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Stripe.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\"homepage\": null,\n\t\t\"size\": 380,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423951,\n\t\t\"name\": \"AzureTableStorage\",\n\t\t\"full_name\": \"raml-apis/AzureTableStorage\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:39Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:07Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/AzureTableStorage.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\"homepage\": null,\n\t\t\"size\": 152,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424016,\n\t\t\"name\": \"Squareup\",\n\t\t\"full_name\": \"raml-apis/Squareup\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Squareup\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Squareup/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Squareup/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Squareup/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Squareup/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Squareup/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Squareup/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Squareup/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Squareup/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Squareup/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Squareup/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Squareup/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Squareup/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Squareup/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Squareup/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Squareup/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Squareup/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Squareup/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Squareup/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Squareup/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Squareup/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Squareup/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Squareup/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Squareup/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:13Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:13Z\",\n\t\t\"pushed_at\": \"2015-03-16T16:14:08Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Squareup.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Squareup.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Squareup.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\"homepage\": null,\n\t\t\"size\": 176,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424009,\n\t\t\"name\": \"Salesforce\",\n\t\t\"full_name\": \"raml-apis/Salesforce\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Salesforce\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Salesforce/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Salesforce/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Salesforce/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Salesforce/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Salesforce/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Salesforce/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Salesforce/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Salesforce/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Salesforce/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Salesforce/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Salesforce/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Salesforce/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Salesforce/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Salesforce/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Salesforce/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Salesforce/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:09Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:09Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:02Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Salesforce.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Salesforce.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Salesforce.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t}\n];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/config/apiList.json\n ** module id = 49\n ** module chunks = 0\n **/","var rp = require(\"raml-1-parser\");\nvar def = rp.ds;\nvar UI = require(\"atom-ui-lib\");\nvar schemautil = rp.schema;\nvar editorTools = require(\"./editor-tools\");\nvar details2 = require(\"./details2\");\nvar HTTPANDHTTPS = \"HTTP, HTTPS\";\nvar HTTPHTTPS = \"HTTP/HTTPS\";\nexports.nodes = {\n    Api: {\n        properties: [\"title\", \"version\", \"baseUri\", \"mediaType\", \"protocols\"],\n        actions: []\n    },\n    Resource: {\n        properties: [\"relativeUri\", \"displayName\", \"description\", \"is\", \"type\"]\n    },\n    Method: {\n        properties: [\"method\", \"displayName\", \"description\", \"is\", \"type\", \"protocols\", \"securedBy\"]\n    },\n    DataElement: {\n        properties: [\"name\", \"displayName\", \"description\", \"default\", \"required\"]\n    },\n    Response: {\n        properties: [\"code\", \"description\"]\n    }\n};\nexports.filterOut = {\n    properties: [\"location\", \"annotations\", \"repeat\", \"locationKind\", \"signature\"]\n};\n//export function property2(node: hl.IHighLevelNode, name: string, descriptionLabel?: UI.TextElement<any>, updateTextOnDone: boolean = false) {\n//    var pinfo = propertyInfo(node, name);\n//\n//    return property(name, pinfo.required, pinfo.type, pinfo.value, pinfo.values, node, descriptionLabel, updateTextOnDone);\n//}\nvar focusedPropertyName = null;\nvar focusedPosition = -1;\nvar toFocus = null;\nfunction updateDetailsPanel(node, panel, updateTextOnDone) {\n    if (updateTextOnDone === void 0) { updateTextOnDone = false; }\n    panel.clear();\n    var cfg = atom.config;\n    var l = atom.styles.emitter.handlersByEventName;\n    var sadd = [].concat(l['did-add-style-element']);\n    var sremove = [].concat(l['did-remove-style-element']);\n    var schange = [].concat(l['did-update-style-element']);\n    var cfgCh = [].concat(cfg.emitter.handlersByEventName['did-change']);\n    var grammars = atom.grammars.emitter.handlersByEventName;\n    var addGrammar = [].concat(grammars[\"did-add-grammar\"]);\n    var updateGrammar = [].concat(grammars[\"did-update-grammar\"]);\n    var emptyGrammarListeners = [].concat(atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"]);\n    try {\n        var empty = true;\n        var pcmp = function (a, b) {\n            var ap = a.getAdapter(def.RAMLPropertyService).priority(), bp = b.getAdapter(def.RAMLPropertyService).priority();\n            if (ap != bp)\n                return bp - ap;\n            else\n                return a.nameId().localeCompare(b.nameId());\n        };\n        if (false && exports.nodes[node.definition().nameId()] && !node.definition().getAdapter(def.RAMLService).isUserDefined()) {\n            var info = exports.nodes[node.definition().nameId()];\n            info.properties.forEach(function (pn) {\n                try {\n                    //panel.addChild(property2(node, pn, <UI.TextElement<any>> descLabel2, updateTextOnDone));\n                    empty = false;\n                }\n                catch (e) {\n                    console.log(\"Error while updating details panel for node \", node, \"(property \", pn, \"): \", e);\n                }\n            });\n        }\n        else {\n            var item = details2.buildItem(node, false);\n            item.addListener(function (x) {\n                editorTools.aquireManager().updateText(null);\n            });\n            var rend = item.render({});\n            //var oldDispose=rend.dispose;\n            if (exports.oldItem) {\n                exports.oldItem.detach();\n            }\n            exports.oldItem = item;\n            panel.addChild(rend);\n            empty = false;\n        }\n        if (toFocus) {\n            var field = toFocus.getActualField().ui();\n            field.focus();\n            field.getModel().setCursorBufferPosition(focusedPosition);\n            toFocus = null;\n            focusedPosition = null;\n            focusedPropertyName = null;\n        }\n        if (empty) {\n            var errLabel = UI.h3(\"Object `\" + node.name() + \"` has no additional properties.\");\n            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n            panel.addChild(errLabel);\n        }\n        ;\n    }\n    finally {\n        cfg.emitter.handlersByEventName['did-change'] = cfgCh;\n        l['did-add-style-element'] = sadd;\n        l['did-remove-style-element'] = sremove;\n        l['did-update-style-element'] = schange;\n        grammars[\"did-add-grammar\"] = addGrammar;\n        grammars[\"did-update-grammar\"] = updateGrammar;\n        atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"] = emptyGrammarListeners;\n    }\n}\nexports.updateDetailsPanel = updateDetailsPanel;\n//export function property(name: string, required: boolean, type: string, value: string, values: any[], node: hl.IHighLevelNode, descriptionLabel: UI.TextElement<any>, updateText: boolean = false) {\n//    var bonclick = (e)=>{};\n//    var attr = node.attr(name);\n//    var useModalEditor = false;\n//\n//    var tfValue = new UI.BasicBinding(dialogs.getStringValue(value));\n//    var updateViewModel = function(value) {\n//        if (updateText) editorTools.aquireManager().updateText(node.lowLevel());\n//\n//        fire = false;\n//        if (type==\"protocols\"){\n//            if (value==HTTPANDHTTPS){\n//                value=HTTPHTTPS\n//            }\n//        }\n//        tfValue.set(value);\n//        fire = true;\n//    }\n//    var disabledMessage: string = null;\n//    var res;\n//    switch (type) {\n//        case 'markdown':\n//            bonclick = dialogs.markdown(name, values, (newValue) => {\n//                node.attrOrCreate(name).setValue(value = newValue);\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'schema':\n//            bonclick = dialogs.schemaEditDialog(name, values.length > 0 ? values[0] : value, (newValue) => {\n//                node.attrOrCreate(name).setValue(newValue);\n//                if (updateText) editorTools.aquireManager().updateText();\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'schexample':\n//            bonclick = dialogs.exampleEditorDialog(name, values[1], values[0], (newValue) => {\n//                var value = newValue;\n//                if (fs.exists(newValue))\n//                    value = \"!include \" + path.relative(node.lowLevel().unit().path(), newValue);\n//                node.attrOrCreate(name).setValue(value);\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'enum':\n//            bonclick = dialogs.enumEditDialog(name, values, (values)=>{\n//                node.attributes(name).forEach(attr => attr.remove());\n//                values.forEach(val => node.attrOrCreate(name).addValue(val));\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'protocols':\n//            break;\n//        case 'type':\n//            bonclick = dialogs.typeEditDialog(name, value, node, (newValue) => {\n//                node.attrOrCreate(name).setValue(newValue);\n//                updateViewModel(stringView(node, name));\n//            });\n//            if (editorTools.aquireManager().ast.elementsOfKind('resourceTypes').length < 1) disabledMessage = \"No resource types defined\";\n//            else useModalEditor = true;\n//            break;\n//        case 'trait':\n//            bonclick = dialogs.traitsEditDialog(name, values, node, (newTraits) => {\n//                node.attributes(name).forEach(attr => attr.remove());\n//\n//                newTraits\n//                    .filter(trait => trait.enabled)\n//                    .filter(trait => typeof trait.value == \"string\") // FIXME should only be trait => trait.enabled\n//                    .forEach(trait => node.attrOrCreate(name).addValue(trait.value));\n//\n//                updateViewModel(stringView(node, name));\n//            });\n//\n//            useModalEditor = true;\n//            break;\n//        default:\n//    }\n//\n//    var fire = true;\n//    var updateValueDeferred = (newValue)=>{ uvdTimeout = 0; }\n//\n//    if (!useModalEditor && node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node).length > 0 || name == 'code') {\n//        var ores = new UI.SelectField(name + (required ? \"*\" : \"\"), (e, v) => {\n//            if (fire == false) return;\n//            if (v == \"(no value)\") v = \"\";\n//            if (type==\"protocols\"){\n//                node.attributes(name).forEach(attr => attr.remove());\n//                if( v==HTTPHTTPS){\n//                    [\"HTTP\",\"HTTPS\"].forEach(val => node.attrOrCreate(name).addValue(val));\n//                }\n//                else{\n//                    if (v) {\n//                        node.attrOrCreate(name).setValue(v);\n//                    }\n//                }\n//                updateViewModel(stringView(node, name));\n//                return;\n//            }\n//            updateValueDeferred(v);\n//        });\n//        var options = [];\n//        if (name == 'code')\n//            options = Object.keys(dialogs.getStatusCodeDescriptions());\n//        else {\n//            var enumValues = node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node);\n//            options = node.definition().property(name).getAdapter(services.RAMLPropertyService).isKey() ? enumValues : [\"(no value)\"].concat(enumValues);\n//\n//            if (type=='protocols'){\n//                if (tfValue.get()==HTTPANDHTTPS){\n//                    tfValue.set(HTTPHTTPS)\n//                }\n//                options =[\"(no value)\",\"HTTP\",\"HTTPS\",HTTPHTTPS]\n//            }\n//        }\n//\n//        ores.getActualField().setOptions(options);\n//        ores.setBinding(tfValue);\n//\n//        res = ores;\n//    } else {\n//        if (!res) {\n//            res = new UI.TextField(name + (required ? \"*\" : \"\"), tfValue, (e, v)=> {\n//                if (fire == false) return;\n//                if (useModalEditor && res && res.getActualField())\n//                    res.getActualField().setText(value, false); // do not re-call onChange\n//                else\n//                    updateValueDeferred(v);\n//            }, null, editorTools.aquireManager().placeholder ? name + \" has no value\" : '');\n//            if (name == focusedPropertyName) toFocus = res;\n//        }\n//    }\n//    var uvdTimeout = 12;\n//\n//    setInterval(()=>{\n//        if (uvdTimeout++ != 10) return;\n//        var newValue = res.getActualField().getValue();\n//        var attrEx = node.attr(name)\n//        var attr = node.attrOrCreate(name);\n//        attr.setValue(newValue);\n//        if (updateText) {\n//            if (res instanceof UI.TextField) {\n//                focusedPropertyName = name;\n//                focusedPosition = (<any> res.getActualField()).ui().getModel().getCursorBufferPosition();\n//            }\n//            editorTools.aquireManager().updateText(newValue == '' || attr == null ? node.lowLevel() : attr.lowLevel());\n//\n//        }\n//\n//    }, 50);\n//\n//    res.getActualField().addClass(\"ate\").addClass(type).setStyle(\"margin-bottom\", \"0px !important\");\n//    res.margin(0, 0, 0, 6);\n//    if (useModalEditor) {\n//        res.getActualField().ui().addEventListener('focus', (e) => {\n//            bonclick(e);\n//            res.getActualField().ui().blur();\n//        });\n//        res.addChild(UI.button(\"(edit)\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, null, bonclick).margin(4, 0, 0, 0));\n//    } else if (disabledMessage) {\n//        if (editorTools.aquireManager().placeholder) res.getActualField().setPlaceholder(disabledMessage);\n//        res.getActualField().ui().addEventListener('focus', (e) => res.getActualField().ui().blur());\n//    }\n//    if (descriptionLabel) {\n//        res.ui().addEventListener('mouseenter', () => {\n//            descriptionLabel.setStyle(\"opacity\", \"1\")\n//            descriptionLabel.setText(node.definition().property(name).description());\n//        });\n//        res.ui().addEventListener('mouseleave', () => {\n//            descriptionLabel.setStyle(\"opacity\", \"0\");\n//        });\n//    }\n//    return res;\n//}\nfunction getSchemaType(value) {\n    var schema = schemautil.createSchema(value, null);\n    if (!schema || !schema.getType)\n        return \"Invalid\";\n    switch (schema.getType()) {\n        case \"source.json\":\n            return \"JSON\";\n        case \"text.xml\":\n            return \"XML\";\n        default:\n            return \"Unknown type\";\n    }\n}\nfunction getStringValue(x) {\n    if (typeof x === \"object\")\n        return x.valueName();\n    else\n        return x;\n}\nexports.getStringValue = getStringValue;\nfunction propertyInfo(node, name) {\n    var prop = node.definition().property(name);\n    if (prop.isValueProperty() == false)\n        return null;\n    var isMulti = prop.isMultiValue();\n    var required = prop.isRequired();\n    var value;\n    var values = [];\n    var type;\n    var ipath;\n    var rangeName = prop.range().nameId();\n    if (isMulti) {\n        values = node.attributes(name).map(function (x) { return x.value(); });\n        value = values.map(function (x) { return getStringValue(x); }).join(\", \");\n        switch (rangeName) {\n            case \"StringType\":\n                type = 'enum';\n                if (!node.definition().getAdapter(def.RAMLService).isUserDefined() && name == \"protocols\") {\n                    type = \"protocols\";\n                }\n                break;\n            case \"TraitRef\":\n                type = 'trait';\n                break;\n            default:\n                type = 'unknown';\n        }\n    }\n    else {\n        var attr = node.attr(name);\n        value = attr && attr.value() ? attr.value() : \"\";\n        switch (rangeName) {\n            case \"MarkdownString\":\n                type = 'markdown';\n                values = value.split(\"\\n\");\n                value = values[0];\n                break;\n            case \"SchemaString\":\n                type = 'schema';\n                if (value.indexOf(\"\\n\") >= 0) {\n                    values = [value];\n                    value = \"(\" + getSchemaType(value) + \" Schema)\";\n                }\n                break;\n            case \"ExampleString\":\n                type = 'schexample';\n                try {\n                    ipath = attr.lowLevel().includePath();\n                }\n                catch (e) {\n                    ipath = \"\";\n                }\n                values = [value, ipath];\n                value = \"Example\" + (ipath != \"\" ? \" (referenced from \" + ipath + \")\" : \"\");\n                break;\n            case \"ResourceTypeRef\":\n                type = \"type\";\n                break;\n            default:\n                type = 'string';\n        }\n        if (type == \"string\") {\n            if (value.indexOf(\"\\n\") >= 0) {\n                values = value.split(\"\\n\");\n                value = \"(\" + values.length + \" lines) \" + values[0].substring(0, 20) + \" ...\";\n                type = \"multiline\";\n            }\n            if (attr)\n                ipath = attr.lowLevel().includePath();\n            if (ipath) {\n                value = \"(included from \" + ipath + \")\";\n                type = \"include\";\n            }\n        }\n    }\n    var ret = {\n        value: value,\n        values: values,\n        type: type,\n        include: ipath,\n        required: required,\n    };\n    return ret;\n}\nexports.propertyInfo = propertyInfo;\nfunction stringView(node, name) {\n    return getStringValue(propertyInfo(node, name).value);\n}\nexports.stringView = stringView;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/details.js\n ** module id = 50\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar UI = require(\"atom-ui-lib\");\nvar rp = require(\"raml-1-parser\");\nvar Opt = require(\"../../Opt\");\nvar schemautil = rp.schema;\nvar SchemaRenderer = (function () {\n    function SchemaRenderer() {\n    }\n    SchemaRenderer.prototype.render = function (elem) {\n        var icon;\n        var tc;\n        switch (elem.type) {\n            case 'object':\n                icon = UI.Icon.CIRCUIT_BOARD;\n                tc = UI.TextClasses.INFO;\n                break;\n            case 'array':\n                icon = UI.Icon.LIST_UNORDERED;\n                tc = UI.TextClasses.ERROR;\n                break;\n            case 'unspecified':\n                icon = UI.Icon.QUESTION;\n                tc = UI.TextClasses.WARNING;\n                break;\n            default:\n                icon = UI.Icon.CODE;\n                tc = UI.TextClasses.SUCCESS;\n        }\n        return UI.hc(UI.label(elem.name + \": \", icon), UI.label(elem.type, null, tc, null).pad(4, 0));\n    };\n    return SchemaRenderer;\n})();\nexports.SchemaRenderer = SchemaRenderer;\nfunction _schemaPreview() {\n    var hashkey = function (n) {\n        if (n == null)\n            return \"\";\n        return hashkey(n.parent) + \"::[\" + (n.name + \":\" + n.type + \"]\" + (n.children.length > 0 ? \"*\" : \"\"));\n    };\n    var treeViewer = UI.treeViewer(function (x) { return x.children; }, new SchemaRenderer(), function (x) { return x.name + \":\" + x.type; });\n    treeViewer.setComparator(function (x, y) { return x.name == y.name && x.type == y.type; });\n    return treeViewer;\n}\nexports._schemaPreview = _schemaPreview;\nfunction getSchemaTree(name, contents) {\n    if (contents.type instanceof Array)\n        if (contents.type.indexOf('object') >= 0)\n            contents.type = 'object';\n        else if (contents.type.indexOf('array') >= 0)\n            contents.type = 'array';\n    var typeString = contents.type ? (contents.type instanceof Array ? contents.type.join(\"|\") : contents.type).toLowerCase() : 'unspecified';\n    var children = [];\n    if (contents.properties)\n        children = Object.keys(contents.properties).map(function (el) { return getSchemaTree(el, contents.properties[el]); });\n    else if (contents.items)\n        children = contents.items instanceof Array ? contents.items.map(function (el) { return getSchemaTree(\"item\", el); }) : getSchemaTree(\"item\", contents.items);\n    if (children instanceof Array == false)\n        children = [children];\n    var result = {\n        type: typeString,\n        name: name,\n        parent: null,\n        children: children\n    };\n    result.children.forEach(function (x) { return x.parent = result; });\n    return result;\n}\nexports.getSchemaTree = getSchemaTree;\nfunction _updatePreview(treeView, value) {\n    try {\n        var schema = schemautil.createSchema(value, null);\n        if (schema == null || schema.getType == null) {\n            treeView.setInput({}, true);\n            return;\n        }\n        var schemaType = schema.getType();\n        var schemaModel = schemaType == \"source.json\" ? JSON.parse(value) : rootElements(value);\n        var schemaTree = schemaType == \"source.json\" ? getSchemaTree(\"schema\", schemaModel) : getXMLSchemaTree(schemaModel);\n        treeView.setInput(schemaTree, true);\n    }\n    catch (e) {\n        console.log(e);\n    }\n}\nexports._updatePreview = _updatePreview;\nvar jsonix = require('jsonix');\nfunction parseSchema(schema) {\n    var XSD_1_0 = require('w3c-schemas').XSD_1_0;\n    var context = new jsonix.Jsonix.Context([XSD_1_0]);\n    var unmarshaller = context.createUnmarshaller();\n    var schemaObject = unmarshaller.unmarshalString(schema);\n    return schemaObject;\n}\n;\nfunction rootElements(schema) {\n    var schemaObj = parseSchema(schema);\n    return getRootElements(schemaObj);\n}\nvar TypeDescription = (function () {\n    function TypeDescription(owner, _name, _isSimple, _object) {\n        var _this = this;\n        this.owner = owner;\n        this._name = _name;\n        this._isSimple = _isSimple;\n        this._object = _object;\n        this.name = function () { return _this._name; };\n        this.isSimple = function () { return _this._isSimple; };\n        this.object = function () { return _this._object; };\n    }\n    TypeDescription.prototype.isChoice = function () {\n        return this.object && (this.object['choice'] ||\n            (this.object['complexContent'] && this.object['complexContent']['choice']));\n    };\n    TypeDescription.prototype.elements = function () {\n        var _this = this;\n        var elementObjects = [];\n        if (this._object) {\n            elementObjects = this.collectElements(this._object);\n            if (elementObjects.length == 0) {\n                var complexContent = this.object['complexContent'];\n                if (complexContent) {\n                    elementObjects = this.collectElements(complexContent);\n                }\n            }\n        }\n        var result = elementObjects.map(function (x) { return new ElementDescription(_this.owner, x); });\n        return result;\n    };\n    TypeDescription.prototype.attributes = function () {\n        var _this = this;\n        var result = [];\n        var objects = [this._object];\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n            if (!obj) {\n                continue;\n            }\n            if (obj['attributeGroup']) {\n                var attributeGroups = obj['attributeGroup'].filter(function (x) { return x['otherAttributes']; });\n                for (var j = 0; j < attributeGroups.length; j++) {\n                    var groupRef = attributeGroups[j]['otherAttributes']['ref'];\n                    var groupDef = this.owner.attributeGroups[groupRef];\n                    objects.push(groupDef);\n                }\n            }\n            if (obj['attribute']) {\n                obj['attribute'].forEach(function (x) { return result.push(new AttributeDescription(_this.owner, x)); });\n            }\n        }\n        return result;\n    };\n    TypeDescription.prototype.base = function () {\n        if (!this._object) {\n            return Opt.empty();\n        }\n        var baseObj;\n        if (this._object['restriction']) {\n            var restriction = this._object['restriction'];\n            baseObj = restriction['base'];\n        }\n        else if (this._object['complexContent']) {\n            var complexContent = this.object['complexContent'];\n            var resExt = complexContent['restriction'] || complexContent['extension'];\n            if (resExt) {\n                baseObj = resExt['base'];\n            }\n        }\n        if (!baseObj) {\n            return Opt.empty();\n        }\n        var typeName = extractName(baseObj);\n        var isSimple = false;\n        var typeObject;\n        var sType = this.owner.simpleTypes[typeName];\n        if (sType) {\n            typeObject = sType;\n            isSimple = true;\n        }\n        var cType = this.owner.complexTypes[typeName];\n        if (cType) {\n            typeObject = cType;\n        }\n        if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n            if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n                isSimple = true;\n            }\n        }\n        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n        return new Opt(result);\n    };\n    TypeDescription.prototype.getBaseName = function () {\n        var typeOpt = new Opt(this);\n        var result = '';\n        while (typeOpt.isDefined()) {\n            var t = typeOpt.getOrThrow();\n            result = t.name();\n            typeOpt = t.base();\n        }\n        return result;\n    };\n    TypeDescription.prototype.collectElements = function (obj) {\n        var result = [];\n        var containers = [obj['sequence'], obj['any'], obj['choice']];\n        for (var i = 0; i < containers.length; i++) {\n            var x = containers[i];\n            if (!x) {\n                continue;\n            }\n            if (x['group']) {\n                var groups = x['group'].filter(function (gr) { return gr['otherAttributes']; });\n                for (var j = 0; j < groups.length; j++) {\n                    var groupRef = groups[j]['otherAttributes']['ref'];\n                    var groupDef = this.owner.elementGroups[groupRef];\n                    if (groupDef) {\n                        if (groupDef['sequence']) {\n                            containers = containers.concat(groupDef['sequence']);\n                        }\n                        if (groupDef['any']) {\n                            containers = containers.concat(groupDef['any']);\n                        }\n                        if (groupDef['choice']) {\n                            containers = containers.concat(groupDef['choice']);\n                        }\n                    }\n                }\n            }\n            if (x['element']) {\n                result = result.concat(x['element']);\n            }\n            result = result.concat(this.collectElements(x));\n        }\n        return result;\n    };\n    return TypeDescription;\n})();\nvar PropertyDescription = (function () {\n    function PropertyDescription(owner, _object) {\n        var _this = this;\n        this.owner = owner;\n        this._object = _object;\n        this.name = function () { return _this._object['name']; };\n    }\n    PropertyDescription.prototype.type = function () {\n        var typeName;\n        var typeObject;\n        var isSimple = false;\n        if (this._object['type']) {\n            var typeObj = this._object['type'];\n            typeName = extractName(typeObj);\n            var sType = this.owner.simpleTypes[typeName];\n            if (sType) {\n                typeObject = sType;\n                isSimple = true;\n            }\n            var cType = this.owner.complexTypes[typeName];\n            if (cType) {\n                typeObject = cType;\n            }\n            if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n                if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n                    isSimple = true;\n                }\n            }\n        }\n        else if (this._object['complexType']) {\n            typeObject = this._object['complexType'];\n        }\n        else if (this._object['simpleType']) {\n            typeObject = this._object['simpleType'];\n        }\n        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n        return new Opt(result);\n    };\n    PropertyDescription.prototype.optional = function () {\n        throw new Error(\"This method is abstract.\");\n    };\n    PropertyDescription.prototype.isArray = function () {\n        throw new Error(\"This method is abstract.\");\n    };\n    PropertyDescription.prototype.isAttribute = function () {\n        return false;\n    };\n    return PropertyDescription;\n})();\nexports.PropertyDescription = PropertyDescription;\nvar ElementDescription = (function (_super) {\n    __extends(ElementDescription, _super);\n    function ElementDescription(owner, object) {\n        _super.call(this, owner, object);\n    }\n    ElementDescription.prototype.isArray = function () {\n        var otherAttributes = this._object['otherAttributes'];\n        if (!otherAttributes) {\n            return false;\n        }\n        var maxOccurs = otherAttributes['maxOccurs'];\n        if (!maxOccurs) {\n            return false;\n        }\n        if (maxOccurs == 'unbounded') {\n            return true;\n        }\n        try {\n            var mo = parseInt(maxOccurs);\n            return mo > 1;\n        }\n        catch (e) { }\n        return false;\n    };\n    ElementDescription.prototype.optional = function () {\n        var otherAttributes = this._object['otherAttributes'];\n        if (!otherAttributes) {\n            return true;\n        }\n        var minOccurs = otherAttributes['minOccurs'];\n        if (!minOccurs) {\n            return true;\n        }\n        try {\n            var mo = parseInt(minOccurs);\n            return mo == 0;\n        }\n        catch (e) {\n        }\n        return true;\n    };\n    return ElementDescription;\n})(PropertyDescription);\nexports.ElementDescription = ElementDescription;\nfunction extractName(typeObj) {\n    var prefix = typeObj['prefix'];\n    var localPart = typeObj['localPart'];\n    var typeName = prefix + (prefix.length > 0 ? ':' : '') + localPart;\n    return typeName;\n}\n;\nvar AttributeDescription = (function (_super) {\n    __extends(AttributeDescription, _super);\n    function AttributeDescription(owner, object) {\n        _super.call(this, owner, object);\n    }\n    AttributeDescription.prototype.optional = function () {\n        var otherAttributes = this._object['otherAttributes'];\n        if (!otherAttributes) {\n            return false;\n        }\n        var use = otherAttributes['use'];\n        if (!use) {\n            return false;\n        }\n        return use != 'required';\n    };\n    AttributeDescription.prototype.isArray = function () {\n        return false;\n    };\n    AttributeDescription.prototype.isAttribute = function () {\n        return true;\n    };\n    return AttributeDescription;\n})(PropertyDescription);\nexports.AttributeDescription = AttributeDescription;\nfunction getRootElements(obj) {\n    var _this = this;\n    var objValue = obj['value'];\n    var result = [];\n    if (objValue) {\n        var groups = objValue['group'];\n        if (groups) {\n            groups.forEach(function (x) { return _this.elementGroups[x.name] = x; });\n        }\n        var attributeGroups = objValue['attributeGroup'];\n        if (attributeGroups) {\n            attributeGroups.forEach(function (x) { return _this.attributeGroups[x.name] = x; });\n        }\n        var simpleTypes = objValue['simpleType'];\n        if (simpleTypes) {\n            simpleTypes.forEach(function (x) { return _this.simpleTypes[x.name] = x; });\n        }\n        var complexTypes = objValue['complexType'];\n        if (complexTypes) {\n            complexTypes.forEach(function (x) { return _this.complexTypes[x.name] = x; });\n        }\n        var rootElements = objValue['element'];\n        if (rootElements) {\n            result = rootElements.map(function (x) { return new ElementDescription(_this, x); });\n        }\n    }\n    return result;\n}\nvar XSD_2_TS_TYPE_MAP = {\n    \"ENTITIES\": \"string\",\n    \"ENTITY\": \"string\",\n    \"ID\": \"string\",\n    \"IDREF\": \"string\",\n    \"IDREFS\": \"string\",\n    \"language\": \"string\",\n    \"Name\": \"string\",\n    \"NCName\": \"string\",\n    \"NMTOKEN\": \"string\",\n    \"NMTOKENS\": \"string\",\n    \"normalizedString\": \"string\",\n    \"QName\": \"string\",\n    \"string\": \"string\",\n    \"token\": \"string\",\n    \"date\": \"string\",\n    \"dateTime\": \"string\",\n    \"duration\": \"string\",\n    \"gDay\": \"string\",\n    \"gMonth\": \"string\",\n    \"gMonthDay\": \"string\",\n    \"gYear\": \"string\",\n    \"gYearMonth\": \"string\",\n    \"time\": \"string\",\n    \"anyURI\": \"string\",\n    \"base64Binary\": \"string\",\n    \"hexBinary\": \"string\",\n    \"NOTATION\": \"string\",\n    \"boolean\": \"boolean\",\n    \"double\": \"number\",\n    \"float\": \"number\",\n    \"byte\": \"number\",\n    \"decimal\": \"number\",\n    \"int\": \"number\",\n    \"integer\": \"number\",\n    \"long\": \"number\",\n    \"negativeInteger\": \"number\",\n    \"nonNegativeInteger\": \"number\",\n    \"nonPositiveInteger\": \"number\",\n    \"positiveInteger\": \"number\",\n    \"short\": \"number\",\n    \"unsignedLong\": \"number\",\n    \"unsignedInt\": \"number\",\n    \"unsignedShort\": \"number\",\n    \"unsignedByte\": \"number\"\n};\nfunction getTSType(xmltype) {\n    return XSD_2_TS_TYPE_MAP[xmltype];\n}\nexports.getTSType = getTSType;\nfunction getXMLSchemaTree(roots) {\n    var getSType = function (type) {\n        if (!type)\n            return 'Unknown';\n        type = type.substr(type.indexOf(':') + 1);\n        return getTSType(type);\n    };\n    return roots.map(function (root) {\n        var result;\n        var t = root.type().value();\n        if (root.isArray())\n            result = {\n                type: 'Array',\n                name: root.name(),\n                parent: null,\n                children: getXMLSchemaTree(t.elements())\n            };\n        else if (t.isSimple())\n            result = {\n                type: getSType(t.name()),\n                name: root.name(),\n                parent: null,\n                children: []\n            };\n        else\n            result = {\n                type: 'Object',\n                name: root.name(),\n                parent: null,\n                children: getXMLSchemaTree(t.elements())\n            };\n        result.children.forEach(function (x) { return x.parent = result; });\n        return result;\n    });\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/schemaUI.js\n ** module id = 51\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/main.d.ts\" />\nvar File = (function () {\n    function File(path) {\n        this.path = path;\n    }\n    File.prototype.getPath = function () {\n        return this.path;\n    };\n    File.prototype.close = function () { };\n    return File;\n})();\nexports.File = File;\nfunction watch(path, f) {\n    return { close: function () { } };\n}\nexports.watch = watch;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/pathwatcherProxy.js\n ** module id = 52\n ** module chunks = 0\n **/","var mime = require('mime');\nmime.define({\n    'text/xml': ['xml']\n});\nfunction getEditorById(editorId) {\n    var editors = atom.workspace.getTextEditors();\n    for (var i = 0; i < editors.length; i++) {\n        var editor = editors[i];\n        if (String(editor.id) === editorId) {\n            return editor;\n        }\n    }\n}\nexports.getEditorById = getEditorById;\nfunction getEditorByPath(path) {\n    var editors = atom.workspace.getTextEditors();\n    for (var i = 0; i < editors.length; i++) {\n        var editor = editors[i];\n        if (editor.getPath() === path) {\n            return editor;\n        }\n    }\n}\nexports.getEditorByPath = getEditorByPath;\nfunction getGrammerFromMime(mimeType) {\n    if (mimeType == null) {\n        return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n    }\n    var extension = mime.extension(mimeType);\n    var grammars = atom.grammars.getGrammars();\n    for (var i = 0; i < grammars.length; i++) {\n        var grammar = grammars[i];\n        if (grammar.fileTypes.indexOf(extension) > -1) {\n            return grammar;\n        }\n    }\n    return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n}\nexports.getGrammerFromMime = getGrammerFromMime;\n/**\n * Create an Atom text editor instance for syntax highlighting.\n *\n * Source: https://github.com/atom/markdown-preview/blob/6d672aca4cff48420977708c31290018622bb166/lib/renderer.coffee#L102-L126\n */\nfunction codeToEditorElement(code, grammar) {\n    var editorElement = document.createElement('atom-text-editor');\n    editorElement.setAttributeNode(document.createAttribute('gutter-hidden'));\n    editorElement.removeAttribute('tabindex'); // Make read-only.\n    var editor = editorElement.getModel();\n    editor.getDecorations({ class: 'cursor-line', type: 'line' })[0].destroy();\n    editor.setText(code);\n    editor.setGrammar(grammar);\n    return editorElement;\n}\nexports.codeToEditorElement = codeToEditorElement;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/util/atom.js\n ** module id = 53\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar marked = require('marked');\nvar React = require('react');\nvar extend = require('xtend');\nvar classnames = require('classnames');\nvar PureComponent = require('react-pure-render/component');\nvar pretty = require('pretty-data');\nvar rp = require(\"raml-1-parser\");\nvar highLevelAst = rp.hl;\nvar RamlWrapper1 = rp.api10;\nvar RamlWrapper08 = rp.api08;\nvar atomUtil = require('../util/atom');\nvar services = rp.ds;\nvar BULLET_TEXT = '\\u00b7';\nvar METHOD_CLASS_MAP = {\n    'get': 'btn-primary',\n    'get?': 'btn-primary',\n    'post': 'btn-success',\n    'post?': 'btn-success',\n    'delete': 'btn-error',\n    'delete?': 'btn-error',\n    'put': 'btn-warning',\n    'put?': 'btn-warning',\n    'patch': 'btn-info',\n    'patch?': 'btn-info'\n};\n//Methods moved to the parser as: 1) Custom type guards like isApi() for each node interface and 2) RAMLVersion() method for each node.\n//\n// /**\n//  * Returns whether the node is instance of interface by interface name.\n//  * DOES NOT CHECK SUPER INTERFACES!\n//  * @param node\n//  * @param interfaceShortName - interface name, does not include namespace.\n//  * @param ramlVersion - optionally also checks if node belongs to \"RAML10\" or \"RAML08\" RAML.\n//  * @returns {boolean}\n//  */\n// function nodeInstanceOf(node : core.BasicNode, interfaceShortName : string, ramlVersion? : string) : boolean {\n//   var nodeKind = node.kind();\n//\n//   if (nodeKind != interfaceShortName) return false;\n//\n//   if (ramlVersion) {\n//     if (ramlVersion != nodeRAMLVersion(node)) return false;\n//   }\n//\n//   return true;\n// }\n//\n// function nodeInstanceOf10(node : core.BasicNode, interfaceShortName : string) {\n//   return nodeInstanceOf(node, interfaceShortName, \"RAML10\");\n// }\n//\n// function nodeInstanceOf08(node : core.BasicNode, interfaceShortName : string) {\n//   return nodeInstanceOf(node, interfaceShortName, \"RAML08\");\n// }\n//\n// /**\n//  * Returns node version.\n//  * @param node\n//  * @returns {string} : \"RAML10\" for RAML 1.0 and \"RAML08\" for RAML 0.8\n//  */\n// function nodeRAMLVersion(node : core.BasicNode) : string {\n//   return node.highLevel().definition().universe().version();\n// }\n//\nfunction isRAML10(node) {\n    return node.RAMLVersion() == \"RAML10\";\n}\nfunction isRAML08(node) {\n    return node.RAMLVersion() == \"RAML08\";\n}\nvar Console = (function (_super) {\n    __extends(Console, _super);\n    function Console() {\n        _super.apply(this, arguments);\n    }\n    Console.prototype.isSupportedNode = function (node) {\n        return !(RamlWrapper1.isObjectTypeDeclaration(node) ||\n            RamlWrapper1.isResponse(node) ||\n            RamlWrapper1.isTypeDeclaration(node) ||\n            RamlWrapper1.isLibrary(node) ||\n            RamlWrapper1.isSecuritySchemePart(node) ||\n            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n            RamlWrapper08.isResponse(node) ||\n            RamlWrapper08.isSecuritySchemePart(node) ||\n            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n            RamlWrapper08.isOAuth2SecurityScheme(node));\n    };\n    Console.prototype.renderNode = function (node) {\n        var props = extend(this.props, { node: node });\n        if (RamlWrapper1.isTrait(node) ||\n            RamlWrapper08.isTrait(node)) {\n            return React.createElement(Trait, props);\n        }\n        if (RamlWrapper1.isResourceType(node) ||\n            RamlWrapper08.isResourceType(node)) {\n            return React.createElement(ResourceType, props);\n        }\n        if (RamlWrapper1.isAbstractSecurityScheme(node) ||\n            RamlWrapper08.isAbstractSecurityScheme(node) ||\n            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n            RamlWrapper08.isOAuth2SecurityScheme(node)) {\n            return React.createElement(SecurityScheme, props);\n        }\n        if (RamlWrapper1.isResource(node) ||\n            RamlWrapper08.isResource(node)) {\n            return React.createElement(Resource, props);\n        }\n        if (RamlWrapper1.isDocumentationItem(node) ||\n            RamlWrapper08.isDocumentationItem(node)) {\n            return React.createElement(Documentation, props);\n        }\n        if (RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n            return React.createElement(Method, props);\n        }\n        if (RamlWrapper1.isApi(node) || RamlWrapper08.isApi(node) ||\n            RamlWrapper1.isExtension(node) || RamlWrapper1.isOverlay(node)) {\n            return React.createElement(Root, props);\n        }\n        // Psuedo \"404\" in case a view isn't implemented.\n        return React.createElement(Block, null, React.createElement(TitleText, { title: '404' }), React.createElement(Block, null, 'How did you get here? You shouldn\\'t be here! Please ', React.createElement('a', {\n            href: 'https://github.com/mulesoft/api-workbench/issues'\n        }, 'report me'), '.'), React.createElement(Block, null, React.createElement('strong', null, \"Reference: \" + node.wrapperClassName())));\n    };\n    Console.prototype.renderBreadcrumb = function (node, renderedNode) {\n        var _this = this;\n        var parts = [];\n        var nodes = [];\n        var currentNode = node;\n        // Render \"Errors\" as a breadcrumb.\n        if (this.props.errors.length) {\n            parts.push(React.createElement('span', { key: 'errors' }, 'Errors'));\n        }\n        else {\n            do {\n                nodes.unshift(currentNode);\n            } while (currentNode = currentNode.parent());\n            nodes.forEach(function (node, index) {\n                var lastNode = index === nodes.length - 1;\n                if (node.getKind() === highLevelAst.NodeKind.NODE &&\n                    _this.isSupportedNode(node.wrapperNode()) &&\n                    node.wrapperNode() !== renderedNode) {\n                    parts.push(React.createElement('a', {\n                        key: node.id(),\n                        onClick: function () { return _this.props.navigate(node.id()); }\n                    }, getNodeLabel(node)));\n                }\n                else {\n                    parts.push(React.createElement('span', { key: \"value\" + index }, getNodeLabel(node)));\n                }\n                if (!lastNode) {\n                    parts.push(React.createElement('span', { key: \"sep\" + index }, \" \" + BULLET_TEXT + \" \"));\n                }\n            });\n        }\n        return React.createElement(Block, { className: 'padded', style: { margin: 0, flex: '0 0 auto' } }, parts);\n    };\n    Console.prototype.getCurrentNode = function () {\n        var raml = this.props.raml;\n        var state = this.props.state;\n        if (!raml) {\n            return null;\n        }\n        if (state.view.id) {\n            var idNode = raml.highLevel().findById(state.view.id);\n            if (idNode) {\n                return idNode;\n            }\n        }\n        return raml.highLevel();\n    };\n    Console.prototype.wrapBody = function (element) {\n        return React.createElement(Block, {\n            id: 'raml-console-view',\n            className: 'padded',\n            style: {\n                overflow: 'auto',\n                height: '100%'\n            }\n        }, element);\n    };\n    Console.prototype.wrapContent = function (breadcrumb, element) {\n        return React.createElement(Block, { style: { height: '100%', display: 'flex', flexDirection: 'column' } }, breadcrumb, this.wrapBody(element));\n    };\n    Console.prototype.render = function () {\n        if (!this.props.loaded) {\n            return React.createElement(Loading);\n        }\n        var highLevelNode = this.getCurrentNode();\n        if (!highLevelNode) {\n            return React.createElement(Block, null, React.createElement(TitleText, { title: 'Unsupported fragment' }), React.createElement(Block, null, 'This type of fragment is not supported. Only APIs, Overlays and Extensions can be displayed.'));\n        }\n        var node;\n        if (this.props.errors.length) {\n            return this.wrapBody(React.createElement(Errors, { errors: this.props.errors }));\n        }\n        if (!highLevelNode.isElement()) {\n            var referencedNode = highLevelNode.findReferencedValue();\n            if (!referencedNode) {\n                return this.wrapContent(this.renderBreadcrumb(highLevelNode), React.createElement(MissingReference, extend(this.props, { highLevelNode: highLevelNode })));\n            }\n            node = referencedNode.wrapperNode();\n        }\n        else {\n            node = highLevelNode.wrapperNode();\n        }\n        // Traverse upwards to rendered nodes.\n        while (!this.isSupportedNode(node)) {\n            node = node.parent();\n        }\n        return this.wrapContent(this.renderBreadcrumb(highLevelNode, node), this.renderNode(node));\n    };\n    return Console;\n})(PureComponent);\nexports.Console = Console;\nvar Errors = (function (_super) {\n    __extends(Errors, _super);\n    function Errors() {\n        _super.apply(this, arguments);\n    }\n    Errors.prototype.render = function () {\n        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Errors' }), React.createElement('ul', null, this.props.errors.map(function (error, index) {\n            // TODO(blakeembrey): Use `error.mark` to open text editor to issue.\n            return React.createElement('li', { key: index }, error.message);\n        })));\n    };\n    return Errors;\n})(PureComponent);\nvar Root = (function (_super) {\n    __extends(Root, _super);\n    function Root() {\n        _super.apply(this, arguments);\n    }\n    Root.prototype.render = function () {\n        var _this = this;\n        var raml = this.props.node;\n        return React.createElement('div', null, React.createElement(TitleText, { title: raml.title() }), React.createElement(ResourceTypesAndTraits, this.props), raml.documentation().length ? React.createElement(InsetPanel, null, React.createElement('h3', { style: { marginTop: 0 } }, 'Documentation'), React.createElement('ul', null, raml.documentation().map(function (documentation) {\n            var id = documentation.highLevel().id();\n            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, documentation.title()));\n        }))) : null, React.createElement(ResourceChildren, this.props));\n    };\n    return Root;\n})(PureComponent);\nvar MethodButton = (function (_super) {\n    __extends(MethodButton, _super);\n    function MethodButton() {\n        _super.apply(this, arguments);\n    }\n    MethodButton.prototype.render = function () {\n        var _this = this;\n        var verb = this.props.method.method();\n        return React.createElement('div', {\n            onClick: function () { return _this.props.navigate(_this.props.method.highLevel().id()); },\n            className: classnames('btn inline-block', METHOD_CLASS_MAP[verb])\n        }, verb.toUpperCase());\n    };\n    return MethodButton;\n})(PureComponent);\nvar MissingReference = (function (_super) {\n    __extends(MissingReference, _super);\n    function MissingReference() {\n        _super.apply(this, arguments);\n    }\n    MissingReference.prototype.render = function () {\n        var node = this.props.highLevelNode;\n        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Missing Reference' }), 'Unable to resolve reference: ', React.createElement('strong', null, node.id()));\n    };\n    return MissingReference;\n})(PureComponent);\n// class GlobalSchema extends PureComponent<NodeProps<RamlWrapper1.GlobalSchema>, {}> {\n//\n//   render () {\n//     var node = this.props.node\n//\n//     return React.createElement(\n//       Block,\n//       null,\n//       React.createElement(TitleText, { node, title: node.key(), type: 'Schema' }),\n//       React.createElement(Markup, { content: node.value().value(), setState: this.props.setState, state: this.props.state })\n//     )\n//   }\n//\n// }\nvar Loading = (function (_super) {\n    __extends(Loading, _super);\n    function Loading() {\n        _super.apply(this, arguments);\n    }\n    Loading.prototype.render = function () {\n        return React.createElement(Block, null, React.createElement('div', {\n            className: 'loading-spinner-medium inline-block'\n        }), React.createElement('span', {\n            className: 'inline-block'\n        }, 'Loading RAML\\u2026'));\n    };\n    return Loading;\n})(PureComponent);\nvar Trait = (function (_super) {\n    __extends(Trait, _super);\n    function Trait() {\n        _super.apply(this, arguments);\n    }\n    Trait.prototype.render = function () {\n        var node = this.props.node;\n        var references = node.highLevel().findReferences();\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Trait' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractMethod, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n    };\n    return Trait;\n})(PureComponent);\nvar TitleText = (function (_super) {\n    __extends(TitleText, _super);\n    function TitleText() {\n        _super.apply(this, arguments);\n    }\n    TitleText.prototype.render = function () {\n        var title = this.props.title;\n        return React.createElement('h1', { style: { marginTop: 0 } }, this.props.node ? React.createElement(OpenInEditor, { node: this.props.node }, title) : title, this.props.type ? React.createElement('small', null, \" (\" + this.props.type + \")\") : null);\n    };\n    return TitleText;\n})(PureComponent);\nvar SimpleText = (function (_super) {\n    __extends(SimpleText, _super);\n    function SimpleText() {\n        _super.apply(this, arguments);\n    }\n    SimpleText.prototype.render = function () {\n        var text = this.props.text;\n        if (!text) {\n            return null;\n        }\n        return React.createElement(Block, null, React.createElement('strong', null, this.props.title + \": \"), text);\n    };\n    return SimpleText;\n})(PureComponent);\nvar References = (function (_super) {\n    __extends(References, _super);\n    function References() {\n        _super.apply(this, arguments);\n    }\n    References.prototype.formatNode = function (node) {\n        var parts = [];\n        do {\n            parts.unshift(getNodeLabel(node));\n        } while (node = node.parent());\n        return parts.join(\" \" + BULLET_TEXT + \" \");\n    };\n    References.prototype.render = function () {\n        var _this = this;\n        var references = this.props.references;\n        if (!references.length) {\n            return null;\n        }\n        return React.createElement(InsetPanel, null, React.createElement('h3', null, \"References (\" + references.length + \" Found)\"), React.createElement('ul', null, references.map(function (reference) {\n            var id = reference.id();\n            var parent = reference.parent();\n            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(parent.id()); } }, _this.formatNode(parent)));\n        })));\n    };\n    return References;\n})(PureComponent);\nvar AbstractResource = (function (_super) {\n    __extends(AbstractResource, _super);\n    function AbstractResource() {\n        _super.apply(this, arguments);\n    }\n    AbstractResource.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        var navigate = this.props.navigate;\n        var methods = node.methods();\n        var uriParameters = node.uriParameters();\n        return React.createElement(Block, null, React.createElement(ResourceTypesAndTraits, this.props), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), methods.length ? React.createElement(Block, null, methods.map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })) : null, React.createElement(ParametersBlock, { parameters: uriParameters, title: 'URI Parameters', navigate: navigate }));\n    };\n    return AbstractResource;\n})(PureComponent);\nvar ResourceType = (function (_super) {\n    __extends(ResourceType, _super);\n    function ResourceType() {\n        _super.apply(this, arguments);\n    }\n    ResourceType.prototype.render = function () {\n        var node = this.props.node;\n        var references = node.highLevel().findReferences();\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Resource Type' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractResource, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n    };\n    return ResourceType;\n})(PureComponent);\nvar SecurityScheme = (function (_super) {\n    __extends(SecurityScheme, _super);\n    function SecurityScheme() {\n        _super.apply(this, arguments);\n    }\n    SecurityScheme.prototype.render = function () {\n        var node = this.props.node;\n        var references = node.highLevel().findReferences();\n        // TODO(blakeembrey): Render `settings`.\n        var displayName = \"\";\n        if (isRAML08(node)) {\n            displayName = node.name();\n        }\n        else {\n            displayName = node.displayName();\n        }\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Security Scheme' }), React.createElement(SimpleText, { title: 'Type', text: node.type() }), React.createElement(SimpleText, { title: 'Display Name', text: displayName }), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), React.createElement(AbstractMethod, extend(this.props, { node: node.describedBy() })), React.createElement(References, { references: references, navigate: this.props.navigate }));\n    };\n    return SecurityScheme;\n})(PureComponent);\nvar Resource = (function (_super) {\n    __extends(Resource, _super);\n    function Resource() {\n        _super.apply(this, arguments);\n    }\n    Resource.prototype.render = function () {\n        var node = this.props.node;\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.relativeUri().value(), type: 'Resource' }), React.createElement(AbstractResource, this.props), React.createElement(ResourceChildren, this.props));\n    };\n    return Resource;\n})(PureComponent);\nvar ParameterInfo = (function (_super) {\n    __extends(ParameterInfo, _super);\n    function ParameterInfo() {\n        _super.apply(this, arguments);\n    }\n    ParameterInfo.prototype.render = function () {\n        var node = this.props.node;\n        if (node == null) {\n            return null;\n        }\n        var nodeType = node.type();\n        if (!nodeType)\n            nodeType = \"string\";\n        return React.createElement(Block, null, React.createElement(Block, null, React.createElement('span', {\n            key: nodeType,\n            className: 'highlight',\n            style: { marginRight: 5 }\n        }, nodeType)));\n    };\n    return ParameterInfo;\n})(PureComponent);\nvar TypeInfo = (function (_super) {\n    __extends(TypeInfo, _super);\n    function TypeInfo() {\n        _super.apply(this, arguments);\n    }\n    TypeInfo.prototype.hasNamedSuperTypes = function (type) {\n        var superTypes = type.superTypes();\n        if (!superTypes)\n            return false;\n        var namedTypeFound = false;\n        superTypes.forEach(function (superType) {\n            if (superType.nameId() && superType.nameId().indexOf(\"application/\") != 0)\n                namedTypeFound = true;\n        });\n        return namedTypeFound;\n    };\n    TypeInfo.prototype.renderDefinition = function (definition, renderNameId) {\n        return React.createElement(Block, null, \n        // TODO(blakeembrey): Fix `renderNameId` check, currently hacky because\n        // the media type is being printed out sometimes.\n        renderNameId ? React.createElement(Block, null, React.createElement('span', {\n            className: 'highlight'\n        }, definition.nameId())) : null, this.hasNamedSuperTypes(definition) ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Super Types:')), definition.superTypes().map(function (x) {\n            return React.createElement('span', {\n                className: 'highlight',\n                style: { marginRight: 5 }\n            }, x.nameId());\n        })) : null, definition.allProperties().length ? React.createElement(Block, null, React.createElement('h5', null, 'Properties'), definition.allProperties().map(function (property) {\n            return React.createElement(Block, { key: property.nameId() }, React.createElement(Block, null, React.createElement('strong', null, property.nameId()), property.isRequired() ? ' (required)' : ''), React.createElement(Block, null, property.description()));\n        })) : null, definition.hasUnionInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Left: ')), this.renderDefinition(definition.unionInHierarchy().leftType(), true), React.createElement(Block, null, React.createElement('strong', null, 'Right: ')), this.renderDefinition(definition.unionInHierarchy().rightType(), true)) : null, definition.hasArrayInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Item: ')), this.renderDefinition(definition.arrayInHierarchy().componentType(), true)) : null);\n    };\n    TypeInfo.prototype.render = function () {\n        var node = this.props.node;\n        // Array items can be `null`.\n        if (node == null) {\n            return null;\n        }\n        var definition = node.runtimeDefinition();\n        if (definition && definition.hasGenuineUserDefinedTypeInHierarchy()\n            && !definition.isGenuineUserDefinedType()) {\n            definition = definition.genuineUserDefinedTypeInHierarchy();\n        }\n        return React.createElement(Block, null, typeof node.type === 'function' ? React.createElement(Block, null, node.type().map(function (type) {\n            return React.createElement('span', {\n                key: type,\n                className: 'highlight',\n                style: { marginRight: 5 }\n            }, type);\n        })) : null, this.renderDefinition(definition, false));\n    };\n    return TypeInfo;\n})(PureComponent);\nvar ParametersBlock = (function (_super) {\n    __extends(ParametersBlock, _super);\n    function ParametersBlock() {\n        _super.apply(this, arguments);\n    }\n    ParametersBlock.prototype.summary = function (param) {\n        var parts = [];\n        if (RamlWrapper1.isFileTypeDeclaration(param) /*param.wrapperClassName() === 'FileTypeDeclarationImpl'*/) {\n            if (param.fileTypes()) {\n                parts.push(\"fileTypes: \" + param.fileTypes());\n            }\n            if (param.minLength()) {\n                parts.push(\"minLength: \" + param.minLength());\n            }\n            if (param.maxLength()) {\n                parts.push(\"maxLength: \" + param.maxLength());\n            }\n        }\n        if (RamlWrapper1.isIntegerTypeDeclaration(param) /*param.wrapperClassName() === 'IntegerTypeDeclarationImpl'*/) {\n            if (param.minimum() != null) {\n                parts.push(\"minimum: \" + param.minimum());\n            }\n            if (param.maximum() != null) {\n                parts.push(\"maximum: \" + param.maximum());\n            }\n        }\n        if (param.required()) {\n            parts.push('required');\n        }\n        if (param.repeat()) {\n            parts.push('repeat');\n        }\n        return parts.join(', ');\n    };\n    ParametersBlock.prototype.render = function () {\n        var _this = this;\n        if (!this.props.parameters.length) {\n            return null;\n        }\n        var navigate = this.props.navigate;\n        return React.createElement(Block, null, React.createElement('h3', null, this.props.title), this.props.parameters.map(function (parameter) {\n            return React.createElement(Block, { key: parameter.name() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: parameter }, parameter.name())), React.createElement(isRAML10(parameter) ? TypeInfo : ParameterInfo, { node: parameter }), React.createElement(Block, null, React.createElement('strong', null, _this.summary(parameter))), React.createElement(MarkdownBlock, { content: (parameter.description() ? parameter.description().value() : null) }));\n        }));\n    };\n    return ParametersBlock;\n})(PureComponent);\nvar ResourceChildren = (function (_super) {\n    __extends(ResourceChildren, _super);\n    function ResourceChildren() {\n        _super.apply(this, arguments);\n    }\n    ResourceChildren.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        return React.createElement(Block, null, node.resources().map(function (resource) {\n            var id = resource.highLevel().id();\n            var children = resource.resources().length;\n            return React.createElement(InsetPanel, { key: id }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: resource }, resource.completeRelativeUri()), ' ', children ? React.createElement('small', null, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, \"View \" + children + \" more \" + plural(children, 'resource', 'resources'))) : null), React.createElement(MarkdownBlock, {\n                content: (resource.description() ? resource.description().value() : null)\n            }), React.createElement(Block, null, resource.methods().map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })));\n        }));\n    };\n    return ResourceChildren;\n})(PureComponent);\nvar Documentation = (function (_super) {\n    __extends(Documentation, _super);\n    function Documentation() {\n        _super.apply(this, arguments);\n    }\n    Documentation.prototype.render = function () {\n        var node = this.props.node;\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.title(), type: 'Documentation' }), React.createElement(MarkdownBlock, { content: (this.props.node.content() ? this.props.node.content().value() : null) }));\n    };\n    return Documentation;\n})(PureComponent);\nvar AbstractMethod = (function (_super) {\n    __extends(AbstractMethod, _super);\n    function AbstractMethod() {\n        _super.apply(this, arguments);\n    }\n    AbstractMethod.prototype.renderBody = function (body) {\n        // TODO(blakeembrey): Render more properties from `ObjectField`.\n        var parts = [];\n        //link to open body in the editor\n        parts.push(React.createElement('h4', null, React.createElement(OpenInEditor, { node: body }, body.name())));\n        //type block for 1.0 raml\n        if (isRAML10(body)) {\n            parts.push(React.createElement(TypeInfo, { node: body }));\n        }\n        //if there is schema, we render it\n        //TODO for 1.0 case this should be replaced with external type rendering in TypeInfo\n        var schemaPart = this.createSchemaPart(body);\n        if (schemaPart)\n            parts.push(schemaPart);\n        //adding examples if available\n        parts.push(this.createExampleParts(body));\n        return React.createElement(Block, { key: body.name() }, parts);\n    };\n    AbstractMethod.prototype.exampleToString = function (example) {\n        var exampleValue = example.value();\n        if (exampleValue == null)\n            return null;\n        if (typeof (exampleValue) == \"string\") {\n            return exampleValue;\n        }\n        return JSON.stringify(exampleValue, null, 2);\n    };\n    AbstractMethod.prototype.createExampleParts = function (body) {\n        var _this = this;\n        if (isRAML10(body)) {\n            var bodyType = body;\n            var examples = bodyType.examples();\n            if (examples && examples.length > 0) {\n                return examples.map(function (example) {\n                    var exampleName = example.name() ? example.name() : \"Example\";\n                    var displayName = example.displayName() ? example.displayName() : exampleName;\n                    return React.createElement(MarkupBlock, {\n                        key: displayName,\n                        content: _this.exampleToString(example),\n                        title: \"Example\",\n                        name: exampleName,\n                        mime: body.name(),\n                        setState: _this.props.setState,\n                        state: _this.props.state\n                    });\n                });\n            }\n            var singleExampleNode = bodyType.example();\n            var singleExampleContent = singleExampleNode ? this.exampleToString(singleExampleNode) : null;\n            if (singleExampleContent && singleExampleContent != \"null\" && typeof (singleExampleContent) == \"string\") {\n                return [React.createElement(MarkupBlock, {\n                        content: singleExampleContent,\n                        title: 'Example',\n                        mime: body.name(),\n                        setState: this.props.setState,\n                        state: this.props.state\n                    })];\n            }\n        }\n        else if (RamlWrapper08.isBodyLike(body)) {\n            var exampleNode = body.example();\n            if (!exampleNode)\n                return [];\n            var exampleContent = exampleNode.value();\n            if (!exampleContent)\n                return [];\n            return [React.createElement(MarkupBlock, {\n                    content: exampleContent,\n                    title: 'Example',\n                    mime: body.name(),\n                    setState: this.props.setState,\n                    state: this.props.state\n                })];\n        }\n        return [];\n    };\n    AbstractMethod.prototype.createSchemaPart = function (body) {\n        var schemaName = null;\n        var schemaContent = null;\n        if (RamlWrapper08.isBodyLike(body)) {\n            schemaName = body.schema() ? body.schema().value() : \"\";\n            //this is probably not an external scheme reference, but inplace schema.\n            if (!schemaName || schemaName.indexOf(\"{\") != -1 && schemaName.indexOf(\"}\") != -1)\n                schemaName = \"\";\n            schemaContent = body.schemaContent();\n        }\n        else if (isRAML10(body)) {\n            var bodyAsType = body;\n            if (body.runtimeType() && bodyAsType.runtimeType().hasExternalInHierarchy()) {\n                var externalType = bodyAsType.runtimeType().externalInHierarchy();\n                if (externalType) {\n                    schemaName = body.runtimeType().superTypes() != null && body.runtimeType().superTypes().length == 1 &&\n                        body.runtimeType().superTypes()[0].nameId();\n                    schemaContent = externalType.schema();\n                }\n            }\n        }\n        if (schemaContent) {\n            return React.createElement(MarkupBlock, {\n                key: undefined,\n                content: schemaContent,\n                title: 'Schema',\n                mime: body.name(),\n                name: schemaName,\n                setState: this.props.setState,\n                state: this.props.state\n            });\n        }\n        return null;\n    };\n    AbstractMethod.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        var navigate = this.props.navigate;\n        if (!node) {\n            return null;\n        }\n        var methodBodies = node.body();\n        return React.createElement(Block, null, React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), node.queryParameters().length ? React.createElement(InsetPanel, null, React.createElement(ParametersBlock, {\n            parameters: node.queryParameters(),\n            title: 'Query Parameters',\n            navigate: navigate\n        })) : null, React.createElement(ParametersBlock, {\n            parameters: node.headers(),\n            title: 'Headers',\n            navigate: navigate\n        }), methodBodies.length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Body'), methodBodies.map(function (body) { return _this.renderBody(body); })) : null, node.responses().length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Responses'), node.responses().map(function (response) {\n            return React.createElement(Block, { key: response.code().value() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: response.code() }, response.code().value())), React.createElement(MarkdownBlock, { content: (response.description() ? response.description().value() : null) }), React.createElement(ParametersBlock, {\n                parameters: response.headers(),\n                title: 'Headers',\n                navigate: navigate\n            }), response.body().map(function (body) { return _this.renderBody(body); }));\n        })) : null);\n    };\n    return AbstractMethod;\n})(PureComponent);\nvar Method = (function (_super) {\n    __extends(Method, _super);\n    function Method() {\n        _super.apply(this, arguments);\n    }\n    Method.prototype.render = function () {\n        var props = this.props;\n        var node = props.node;\n        var demo = props.state.view.demo;\n        var canDemo = node.parent().wrapperClassName() === 'ResourceImpl';\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.method().toUpperCase(), type: 'Method' }), React.createElement(ResourceTypesAndTraits, props), canDemo ? React.createElement(Block, null, React.createElement('div', {\n            className: 'btn btn-primary',\n            onClick: function () { return props.navigate({ demo: !demo }); }\n        }, demo ? 'Read Documentation' : 'Make an API Request')) : null, canDemo && demo ? React.createElement(MethodDemo, props) : React.createElement(AbstractMethod, props));\n    };\n    return Method;\n})(PureComponent);\nvar MethodDemo = (function (_super) {\n    __extends(MethodDemo, _super);\n    function MethodDemo() {\n        _super.apply(this, arguments);\n    }\n    MethodDemo.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        var method = node.method();\n        var contentType = this.props.state.body;\n        var securityScheme = this.props.state.securityScheme;\n        var progress = this.props.pageState.requestProgress;\n        var bodies = node.body().map(function (x) { return x.name(); });\n        var securitySchemes = node.allSecuredBy().map(function (x) { return x.securityScheme(); });\n        var currentSecurityScheme = securitySchemes.filter(function (x) { return x != null && x.name() === securityScheme; })[0];\n        return React.createElement(Block, null, securitySchemes.length ? React.createElement(Block, null, React.createElement('h3', null, 'Security Scheme'), React.createElement(Block, null, React.createElement('select', {\n            onChange: function (e) { return _this.props.setState({ securityScheme: e.target.value }); },\n            className: 'form-control',\n            value: securityScheme\n        }, securitySchemes.map(function (x) {\n            var name = x != null ? x.name() : 'null';\n            return React.createElement('option', { key: name, value: x == null ? '' : x.name() }, name);\n        }))), currentSecurityScheme ? React.createElement(Block, null, React.createElement(EditParameters, {\n            title: undefined,\n            prefix: \"Security Scheme Query Parameter\",\n            parameters: currentSecurityScheme.describedBy().queryParameters(),\n            values: this.props.state.queryParameters,\n            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n        }), React.createElement(EditParameters, {\n            title: undefined,\n            prefix: \"Security Scheme Header\",\n            parameters: currentSecurityScheme.describedBy().headers(),\n            values: this.props.state.headers,\n            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n        })) : null) : null, React.createElement(EditParameters, {\n            title: 'Base URI Parameters',\n            prefix: undefined,\n            parameters: node.ownerApi().allBaseUriParameters(),\n            values: this.props.state.baseUriParameters,\n            change: function (name, value) { return _this.props.setParameter('baseUriParameters', name, value); }\n        }), null, React.createElement(EditParameters, {\n            title: 'URI Parameters',\n            prefix: undefined,\n            parameters: node.parent().allUriParameters(),\n            values: this.props.state.uriParameters,\n            change: function (name, value) { return _this.props.setParameter('uriParameters', name, value); }\n        }), React.createElement(EditParameters, {\n            title: 'Query Parameters',\n            prefix: undefined,\n            parameters: node.queryParameters(),\n            values: this.props.state.queryParameters,\n            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n        }), React.createElement(EditParameters, {\n            title: 'Headers',\n            prefix: undefined,\n            parameters: node.headers(),\n            values: this.props.state.headers,\n            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n        }), bodies.length ? React.createElement(Block, null, React.createElement('h3', null, 'Body'), React.createElement(Block, null, React.createElement('select', {\n            onChange: function (e) { return _this.props.setState({ body: e.target.value }); },\n            className: 'form-control',\n            value: contentType\n        }, bodies.map(function (x) { return React.createElement('option', { key: x }, x); }))), React.createElement(TextEditor, {\n            mini: false,\n            value: this.props.state.bodies[contentType],\n            onChange: function (body) { return _this.props.setParameter('bodies', contentType, body); }\n        })) : null, React.createElement(Block, null, React.createElement('div', {\n            className: classnames('btn inline-block', METHOD_CLASS_MAP[method]),\n            onClick: function () { return _this.props.execRequest(); }\n        }, method.toUpperCase()), progress == null ? null : React.createElement('progress', {\n            style: { marginLeft: 5 },\n            className: 'inline-block',\n            max: isNaN(progress) ? null : '1',\n            value: isNaN(progress) ? null : String(progress)\n        })), React.createElement(Response, this.props));\n    };\n    return MethodDemo;\n})(PureComponent);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response() {\n        _super.apply(this, arguments);\n    }\n    Response.prototype.render = function () {\n        var error = this.props.pageState.requestError;\n        var response = this.props.pageState.requestResponse;\n        if (error) {\n            return React.createElement(Block, { className: 'text-error' }, error);\n        }\n        if (response) {\n            var mime = getCaseless(response.headers, 'content-type');\n            // readonly: boolean\n            // grammar: any\n            // gutter: boolean\n            // mini: boolean\n            // value: string\n            // placeholder: string\n            // onChange: (value: string) => any\n            return React.createElement(Block, null, React.createElement('h3', null, 'Response'), React.createElement(Block, null, React.createElement('div', null, React.createElement('strong', null, 'Status Code: '), response.status), React.createElement('div', null, React.createElement('strong', null, 'Status Text: '), response.statusText), React.createElement('div', null, React.createElement('strong', null, 'URL: '), response.url)), React.createElement(Block, null, React.createElement('h4', null, 'Headers'), React.createElement(Block, null, response.rawHeaders.map(function (value, index) {\n                if (index % 2 === 0) {\n                    return React.createElement('strong', { key: index }, value + \": \");\n                }\n                return React.createElement('span', { key: index }, value, React.createElement('br'));\n            }))), response.body ? React.createElement(Block, null, React.createElement('h4', null, 'Body'), React.createElement(Markup, {\n                content: response.body,\n                mime: mime,\n                setState: this.props.setState,\n                state: this.props.state\n            })) : null);\n        }\n        return null;\n    };\n    return Response;\n})(PureComponent);\nvar EditParameters = (function (_super) {\n    __extends(EditParameters, _super);\n    function EditParameters() {\n        _super.apply(this, arguments);\n    }\n    EditParameters.prototype.render = function () {\n        var _this = this;\n        var values = this.props.values || {};\n        var params = this.props.parameters;\n        if (!params.length) {\n            return null;\n        }\n        return React.createElement(Block, null, this.props.title ? React.createElement('h3', {\n            className: 'sub-title'\n        }, this.props.title) : null, params.map(function (parameter) {\n            var name = parameter.name();\n            var input;\n            var value = values[name];\n            var label = _this.props.prefix == null ? name : _this.props.prefix + \": \" + name;\n            input = React.createElement(TextEditor, {\n                mini: true,\n                value: value,\n                placeholder: parameter.default(),\n                onChange: function (value) { return _this.props.change(name, value); }\n            });\n            // if (definition.enum().getOrElse([]).length === 0) {\n            //   input = React.createElement(TextEditor, {\n            //     value: currentValue,\n            //     placeholder: definition.default().getOrElse(''),\n            //     onChange: (value: string) => this.props.change(name, value)\n            //   })\n            // } else {\n            //   input = React.createElement(\n            //     'select',\n            //     {\n            //       onChange: (e) => this.props.change(name, e.target.value),\n            //       className: 'form-control',\n            //       value: currentValue\n            //     },\n            //     definition.required() ? null : React.createElement('option'),\n            //     definition.enum().getOrElse([])\n            //       .filter((value) => value !== '')\n            //       .map((value, index) => {\n            //         return React.createElement('option', {\n            //           value: String(value),\n            //           key: index\n            //         }, String(value))\n            //       })\n            //   )\n            // }\n            return React.createElement(Block, { key: name }, React.createElement('label', null, label, parameter.required() ? ' *' : ''), input);\n        }));\n    };\n    return EditParameters;\n})(PureComponent);\nvar TextEditor = (function (_super) {\n    __extends(TextEditor, _super);\n    function TextEditor() {\n        _super.apply(this, arguments);\n    }\n    TextEditor.prototype.componentDidMount = function () {\n        var editor = this.editor = document.createElement('atom-text-editor');\n        this.updateModel(this.props);\n        this.refs.container.getDOMNode().appendChild(editor);\n    };\n    TextEditor.prototype.updateModel = function (props) {\n        var editor = this.editor;\n        var model = editor.getModel();\n        this.cleanup();\n        model.setMini(props.mini);\n        model.setPlaceholderText(props.placeholder);\n        model.setGrammar(props.grammar);\n        model.setText(props.value || '');\n        if (props.readonly) {\n            editor.removeAttribute('tabindex');\n        }\n        else {\n            editor.setAttribute('tabindex', '0');\n        }\n        if (props.gutter === false) {\n            editor.setAttribute('gutter-hidden', '');\n        }\n        else {\n            editor.removeAttribute('gutter-hidden');\n        }\n        if (props.onChange) {\n            this.disposable = model.onDidChange(function () {\n                props.onChange(model.getText());\n            });\n        }\n    };\n    TextEditor.prototype.cleanup = function () {\n        if (this.disposable) {\n            this.disposable.dispose();\n            this.disposable = null;\n        }\n    };\n    TextEditor.prototype.componentWillUnmount = function () {\n        this.cleanup();\n    };\n    TextEditor.prototype.componentDidUpdate = function () {\n        this.updateModel(this.props);\n    };\n    TextEditor.prototype.render = function () {\n        return React.createElement('div', { ref: 'container' });\n    };\n    return TextEditor;\n})(PureComponent);\nvar MarkupBlock = (function (_super) {\n    __extends(MarkupBlock, _super);\n    function MarkupBlock() {\n        _super.apply(this, arguments);\n        this.state = { visible: false };\n    }\n    MarkupBlock.prototype.render = function () {\n        var _this = this;\n        if (!this.props.content) {\n            return null;\n        }\n        var visible = this.state.visible;\n        return React.createElement(Block, { key: this.props.key }, React.createElement('a', { onClick: function () { return _this.setState({ visible: !visible }); } }, (visible ? 'Hide' : 'Show') + \" \" + this.props.title), this.props.name ? \" (\" + this.props.name + \")\" : null, visible ? React.createElement('div', { style: { marginTop: 5 } }, React.createElement(Markup, this.props)) : null);\n    };\n    return MarkupBlock;\n})(PureComponent);\nvar Markup = (function (_super) {\n    __extends(Markup, _super);\n    function Markup() {\n        _super.apply(this, arguments);\n    }\n    Markup.prototype.render = function () {\n        var _this = this;\n        var grammar = atomUtil.getGrammerFromMime(this.props.mime);\n        var content = this.props.content;\n        var isXml = grammar.fileTypes.indexOf('xml') > -1;\n        var isJson = grammar.fileTypes.indexOf('json') > -1;\n        var isCss = grammar.fileTypes.indexOf('css') > -1;\n        var canPrettify = isXml || isJson || isCss;\n        if (this.props.state.pretty) {\n            try {\n                if (isXml) {\n                    content = pretty.pd.xml(content);\n                }\n                else if (isJson) {\n                    content = pretty.pd.json(content);\n                }\n                else if (isCss) {\n                    content = pretty.pd.css(content);\n                }\n            }\n            catch (e) {\n            }\n        }\n        return React.createElement(Block, null, React.createElement(TextEditor, {\n            value: content,\n            grammar: grammar,\n            readonly: true\n        }), canPrettify ? React.createElement(Block, null, React.createElement('label', null, React.createElement('input', {\n            type: 'checkbox',\n            onChange: function (e) { return _this.props.setState({ pretty: e.target.checked }); },\n            checked: this.props.state.pretty,\n            style: { marginRight: 5 }\n        }), React.createElement('span', null, 'Pretty data'))) : null);\n    };\n    return Markup;\n})(PureComponent);\nvar NavigateLabel = (function (_super) {\n    __extends(NavigateLabel, _super);\n    function NavigateLabel() {\n        _super.apply(this, arguments);\n    }\n    NavigateLabel.prototype.getName = function (node) {\n        var value = node.value();\n        return typeof value === 'string' ? value : value.valueName();\n    };\n    NavigateLabel.prototype.render = function () {\n        var node = this.props.node;\n        // Ignore empty node values.\n        if (node.value() == null) {\n            return null;\n        }\n        var navigate = this.props.navigate;\n        var title = this.props.title;\n        var id = node.highLevel().id();\n        return React.createElement('span', {\n            className: 'highlight',\n            style: {\n                margin: '0 5px 5px 0',\n                cursor: 'pointer',\n                display: 'inline-block'\n            },\n            onClick: function () { return navigate(id); }\n        }, React.createElement('strong', null, title + \": \"), this.getName(node));\n    };\n    return NavigateLabel;\n})(PureComponent);\nvar ResourceTypesAndTraits = (function (_super) {\n    __extends(ResourceTypesAndTraits, _super);\n    function ResourceTypesAndTraits() {\n        _super.apply(this, arguments);\n    }\n    ResourceTypesAndTraits.prototype.render = function () {\n        var types = [];\n        var node = this.props.node;\n        var navigate = this.props.navigate;\n        if ((RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node))\n            && node.type()) {\n            types.push(React.createElement(\"NavigateLabel\", { title: 'Type', key: 'type', node: node.type(), navigate: navigate }));\n        }\n        if (RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node)\n            || RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n            node.is().forEach(function (is, index) {\n                types.push(React.createElement(\"NavigateLabel\", { title: 'Trait', key: \"is:\" + index, node: is, navigate: navigate }));\n            });\n        }\n        node.securedBy().forEach(function (securedBy, index) {\n            types.push(React.createElement(\"NavigateLabel\", { title: 'Secured By', key: \"securedBy:\" + index, node: securedBy, navigate: navigate }));\n        });\n        return React.createElement(Block, null, types);\n    };\n    return ResourceTypesAndTraits;\n})(PureComponent);\nvar Block = (function (_super) {\n    __extends(Block, _super);\n    function Block() {\n        _super.apply(this, arguments);\n    }\n    Block.prototype.render = function () {\n        return React.createElement('div', extend(this.props, {\n            className: classnames(this.props.className, 'block')\n        }), this.props.children);\n    };\n    return Block;\n})(PureComponent);\nvar InsetPanel = (function (_super) {\n    __extends(InsetPanel, _super);\n    function InsetPanel() {\n        _super.apply(this, arguments);\n    }\n    InsetPanel.prototype.render = function () {\n        return React.createElement(Block, null, React.createElement('atom-panel', null, React.createElement('div', { className: 'padded' }, this.props.children)));\n    };\n    return InsetPanel;\n})(PureComponent);\nvar Icon = (function (_super) {\n    __extends(Icon, _super);\n    function Icon() {\n        _super.apply(this, arguments);\n    }\n    Icon.prototype.render = function () {\n        return React.createElement('i', {\n            className: classnames('icon icon-' + this.props.name, this.props.className)\n        });\n    };\n    return Icon;\n})(PureComponent);\nvar OpenInEditor = (function (_super) {\n    __extends(OpenInEditor, _super);\n    function OpenInEditor() {\n        _super.apply(this, arguments);\n    }\n    OpenInEditor.prototype.openInEditor = function (node) {\n        var editors = atom.workspace.getTextEditors();\n        var path = node.unit().absolutePath();\n        var start = node.start();\n        // TODO(blakeembrey): Review logic if atom/atom#9258 lands.\n        function resolve(editor) {\n            var position = editor.getBuffer().positionForCharacterIndex(start);\n            editor.setCursorBufferPosition(position);\n        }\n        var split;\n        // Split is disabled for the console, just open it without any bells.\n        if (atom.config.get('api-workbench.openConsoleInSplitPane')) {\n            // Attempt to render onto the preferred side of the console.\n            var panes = atom.workspace.getPanes();\n            var activePane = atom.workspace.getActivePane();\n            if (panes.length === 1) {\n                split = 'left';\n                activePane.splitLeft({});\n            }\n            else {\n                split = activePane === panes[0] ? 'right' : 'left';\n            }\n        }\n        atom.workspace.open(path, { searchAllPanes: true, split: split }).then(resolve);\n    };\n    OpenInEditor.prototype.render = function () {\n        var _this = this;\n        var lowLevel = this.props.node.highLevel().lowLevel();\n        var hasUnit = lowLevel.unit() != null;\n        if (!hasUnit) {\n            return React.createElement('span', null, this.props.children);\n        }\n        return React.createElement('a', {\n            onClick: function () { return _this.openInEditor(lowLevel); }\n        }, this.props.children);\n    };\n    return OpenInEditor;\n})(PureComponent);\nvar MarkdownBlock = (function (_super) {\n    __extends(MarkdownBlock, _super);\n    function MarkdownBlock() {\n        _super.apply(this, arguments);\n    }\n    MarkdownBlock.prototype.render = function () {\n        var content = this.props.content;\n        if (content == null) {\n            return null;\n        }\n        return React.createElement(Block, { dangerouslySetInnerHTML: { __html: marked(content) } });\n    };\n    return MarkdownBlock;\n})(PureComponent);\nfunction plural(count, singular, plural) {\n    return count === 1 ? singular : plural;\n}\nfunction getCaseless(obj, key) {\n    var keys = Object.keys(obj);\n    var match = key.toLowerCase();\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i].toLowerCase() === match) {\n            return obj[keys[i]];\n        }\n    }\n}\nfunction getNodeLabel(node) {\n    var name = node.getKind() === highLevelAst.NodeKind.ATTRIBUTE ? node.value() : node.name();\n    if (typeof name !== 'string') {\n        name = name.valueName();\n    }\n    if (!name && node.getKind() === highLevelAst.NodeKind.NODE) {\n        var wrapper = node.wrapperNode();\n        if (RamlWrapper1.isDocumentationItem(wrapper) ||\n            RamlWrapper08.isDocumentationItem(wrapper)) {\n            return wrapper.title();\n        }\n        if (RamlWrapper1.isApi(wrapper) || RamlWrapper08.isApi(wrapper) ||\n            RamlWrapper1.isExtension(wrapper) || RamlWrapper1.isOverlay(wrapper)) {\n            return 'Home';\n        }\n    }\n    return name;\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/console/render.js\n ** module id = 54\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/main.d.ts\" />\nvar _ = require(\"underscore\");\nvar Opt = require(\"../Opt\");\nexports.defined = function (x) { return (x !== null) && (x !== undefined); };\n/**\n * Arrays of Objects are common in RAML08.\n * @param x\n * @returns {{}}\n */\nfunction flattenArrayOfObjects(x) {\n    var res = {};\n    x.forEach(function (v) { return Object.keys(v).forEach(function (k) { return res[k] = v[k]; }); });\n    return res;\n}\nexports.flattenArrayOfObjects = flattenArrayOfObjects;\nfunction find(xs, f) {\n    return new Opt(_.find(xs || [], f));\n}\nexports.find = find;\nexports.isInstance = function (v, C) { return (v instanceof C) ? [v] : []; };\nexports.ifInstanceOf = function (v, C, f) { return (v instanceof C) ? f(v) : null; };\nfunction toTuples(map) {\n    return Object.keys(map).map(function (k) { return [k, map[k]]; });\n}\nexports.toTuples = toTuples;\nfunction fromTuples(tuples) {\n    var obj = {};\n    tuples.forEach(function (x) { return obj[x[0]] = x[1]; });\n    return obj;\n}\nexports.fromTuples = fromTuples;\nexports.collectInstancesOf = function (xs, C) { return tap([], function (res) { return xs.forEach(function (v) { return exports.ifInstanceOf(v, C, function (x) { return res.push(x); }); }); }); };\nexports.collectInstancesOfInMap = function (map, C) {\n    return Object.keys(map).map(function (k) { return [k, map[k]]; }).filter(function (x) { return x[1] instanceof C; }).map(function (x) { return x; });\n};\nexports.asArray = function (v) { return exports.defined(v) ? ((v instanceof Array) ? v : [v]) : []; };\nexports.shallowCopy = function (obj) { return tap({}, function (copy) { return Object.keys(obj).forEach(function (k) { return copy[k] = obj[k]; }); }); };\nexports.flatMap = function (xs, f) { return exports.flatten(xs.map(f)); };\nexports.flatten = function (xss) { return Array.prototype.concat.apply([], xss); };\nexports.takeWhile = function (xs, f) { return tap([], function (res) {\n    for (var i = 0; i < xs.length; i++) {\n        if (!f(xs[i]))\n            break;\n        res.push(xs[i]);\n    }\n}); };\nfunction tap(v, f) {\n    f(v);\n    return v;\n}\nexports.tap = tap;\nfunction kv(obj, iter) {\n    if (typeof obj === 'object')\n        Object.keys(obj).forEach(function (k) { return iter(k, obj[k]); });\n}\nexports.kv = kv;\nfunction indexed(objects, key, delKey) {\n    if (delKey === void 0) { delKey = false; }\n    var obj = {};\n    objects.forEach(function (original) {\n        var copy = exports.shallowCopy(original);\n        if (delKey)\n            delete copy[key];\n        obj[original[key]] = copy;\n    });\n    return obj;\n}\nexports.indexed = indexed;\nfunction stringEndsWith(str, search) {\n    var dif = str.length - search.length;\n    return dif >= 0 && str.lastIndexOf(search) === dif;\n}\nexports.stringEndsWith = stringEndsWith;\nfunction stringStartsWith(str, search) {\n    return str.length - search.length >= 0 && str.substring(0, search.length) === search;\n}\nexports.stringStartsWith = stringStartsWith;\nfunction lazypropkeyfilter(k) {\n    return k[k.length - 1] == \"_\"; // ends with underscore\n}\nexports.lazypropkeyfilter = lazypropkeyfilter;\nfunction lazyprop(obj, key, func) {\n    var result, ready = false;\n    obj[key] = function () {\n        if (!ready) {\n            ready = true;\n            result = func.apply(obj);\n        }\n        return result;\n    };\n}\nfunction lazyprops(obj, keyfilter) {\n    if (keyfilter === void 0) { keyfilter = lazypropkeyfilter; }\n    for (var k in obj) {\n        if (keyfilter(k)) {\n            exports.ifInstanceOf(obj[k], Function, function (vf) { return (vf.length === 0) ? lazyprop(obj, k, vf) : null; });\n        }\n    }\n}\nexports.lazyprops = lazyprops;\nfunction iff(v, f) {\n    if (v !== undefined)\n        f(v);\n}\nexports.iff = iff;\nfunction isRAMLUrl(str) {\n    if (typeof str !== 'string' || str == '')\n        return false;\n    return stringEndsWith(str, \".raml\");\n}\nexports.isRAMLUrl = isRAMLUrl;\nfunction getAllRequiredExternalModulesFromCode(code) {\n    var match;\n    var mods = [];\n    // both quoting styles\n    var r1 = new RegExp(\"require\\\\('([^']+)'\\\\)\", \"gi\");\n    while (match = r1.exec(code)) {\n        mods.push(match[1]);\n    }\n    var r2 = new RegExp('require\\\\(\"([^\"]+)\"\\\\)', \"gi\");\n    while (match = r2.exec(code)) {\n        mods.push(match[1]);\n    }\n    mods = _.unique(mods).filter(function (x) { return x != \"\"; });\n    mods.sort();\n    return mods;\n}\nexports.getAllRequiredExternalModulesFromCode = getAllRequiredExternalModulesFromCode;\nexports.serial = (function () { var i = 0; return function () { return i++; }; })();\nfunction isEssential(arg) {\n    return typeof arg !== 'undefined' && arg != null;\n}\nexports.isEssential = isEssential;\nfunction firstToUpper(q) {\n    if (q.length == 0) {\n        return q;\n    }\n    return q.charAt(0).toUpperCase() + q.substr(1);\n}\nexports.firstToUpper = firstToUpper;\nfunction updateObject(source, target, addNewFields) {\n    if (addNewFields === void 0) { addNewFields = false; }\n    var keySet = Object.keys(target);\n    if (addNewFields) {\n        var map = {};\n        keySet.forEach(function (x) { return map[x] = true; });\n        Object.keys(source).forEach(function (x) { return map[x] = true; });\n        keySet = Object.keys(map);\n    }\n    keySet.forEach(function (x) {\n        var value = source[x];\n        if (value instanceof Object) {\n            if (!target[x]) {\n                target[x] = {};\n            }\n            updateObject(value, target[x], true);\n        }\n        else if (value != undefined) {\n            target[x] = source[x];\n        }\n    });\n}\nexports.updateObject = updateObject;\n;\n/**\n * In 'str' replace all occurences of 'map' keys to their values.\n */\nfunction replaceMap(str, map) {\n    Object.keys(map).forEach(function (x) { return str = replace(str, x, map[x]); });\n    return str;\n}\nexports.replaceMap = replaceMap;\n/**\n * Replace all occurences of 'x' in 'str' to 'r' without thinking if 'x' can be passed without\n * escaping as argument to RegExp constructor\n */\nfunction replace(str, x, r) {\n    var result = '';\n    var prev = 0;\n    for (var i = str.indexOf(x); i < str.length && i >= 0; i = str.indexOf(x, prev)) {\n        result += str.substring(prev, i);\n        result += r;\n        prev = i + x.length;\n    }\n    result += str.substring(prev, str.length);\n    return result;\n}\nexports.replace = replace;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/index.js\n ** module id = 55\n ** module chunks = 0\n **/","module.exports = require(\"know-your-http-well\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"know-your-http-well\"\n ** module id = 56\n ** module chunks = 0\n **/","module.exports = require(\"remote\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"remote\"\n ** module id = 57\n ** module chunks = 0\n **/","module.exports = require(\"jsonix\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jsonix\"\n ** module id = 58\n ** module chunks = 0\n **/","module.exports = require(\"w3c-schemas\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"w3c-schemas\"\n ** module id = 59\n ** module chunks = 0\n **/","module.exports = require(\"mime\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mime\"\n ** module id = 60\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar rp = require(\"raml-1-parser\");\nvar def = rp.ds;\nvar search = rp.search;\nvar _ = require(\"underscore\");\nvar provider = require(\"../suggestion/provider\");\nvar UI = require(\"atom-ui-lib\");\nvar contextActions = require(\"../context-menu/contextActions\");\nvar suggestions = require(\"./suggestions-panel\");\nvar universe = rp.universes;\nvar universehelpers = rp.universeHelpers;\nvar typeDisplay = require(\"./typeDisplay\");\nvar defaultValues = require('./default-values');\nvar resourceRegistry = rp.utils;\nvar Item = (function () {\n    function Item(_title, description) {\n        if (description === void 0) { description = \"\"; }\n        this._title = _title;\n        this.description = description;\n        this.listeners = [];\n    }\n    Item.prototype.needsSeparateLabel = function () {\n        return false;\n    };\n    Item.prototype.detach = function () {\n        this.dispose();\n        this.children().forEach(function (x) { return x.detach(); });\n    };\n    Item.prototype.addListener = function (r) {\n        this.listeners.push(r);\n    };\n    Item.prototype.removeListener = function (r) {\n        this.listeners = this.listeners.filter(function (x) { return x != r; });\n    };\n    Item.prototype.add = function (i) {\n        throw new Error(\"Not supported\");\n    };\n    Item.prototype.root = function () {\n        if (this.parent) {\n            return this.parent.root();\n        }\n        return this;\n    };\n    Item.prototype.title = function () {\n        return this._title;\n    };\n    Item.prototype.children = function () {\n        return [];\n    };\n    Item.prototype.setDescription = function (desc) {\n        this.description = desc;\n    };\n    Item.prototype.setTitle = function (t) {\n        this._title = t;\n    };\n    Item.prototype.render = function (r) {\n        if (r === void 0) { r = {}; }\n        throw new Error(\"Not Implemented\");\n    };\n    Item.prototype.item = function (name) {\n        return null;\n    };\n    Item.prototype.setError = function (text) {\n    };\n    Item.prototype.clearErrors = function () {\n    };\n    return Item;\n})();\nexports.Item = Item;\nvar TypeDisplayItem = (function (_super) {\n    __extends(TypeDisplayItem, _super);\n    function TypeDisplayItem(node) {\n        _super.call(this, \"Type\", \"\");\n        this.node = node;\n    }\n    TypeDisplayItem.prototype.render = function (r) {\n        return typeDisplay.render(this.node);\n    };\n    TypeDisplayItem.prototype.dispose = function () {\n    };\n    return TypeDisplayItem;\n})(Item);\nexports.TypeDisplayItem = TypeDisplayItem;\nvar Category = (function (_super) {\n    __extends(Category, _super);\n    function Category() {\n        _super.apply(this, arguments);\n        this._children = [];\n    }\n    Category.prototype.add = function (i) {\n        i.parent = this;\n        this._children.push(i);\n    };\n    Category.prototype.children = function () {\n        return this._children;\n    };\n    Category.prototype.plainChildren = function () {\n        return this._children.filter(function (x) { return !(x instanceof Category); });\n    };\n    Category.prototype.categories = function () {\n        return this._children.filter(function (x) { return (x instanceof Category); });\n    };\n    Category.prototype.item = function (name) {\n        var it;\n        this._children.forEach(function (x) {\n            if (x.title() == name) {\n                it = x;\n            }\n            var rr = x.item(name);\n            if (rr) {\n                it = rr;\n            }\n        });\n        return it;\n    };\n    Category.prototype.render = function (r) {\n        var _this = this;\n        if (r === void 0) { r = {}; }\n        var section = this.createSection(r);\n        this._result = section;\n        if (this.description && r.showDescription) {\n            this.descriptionLabel = UI.label(this.description);\n            section.addChild(this.descriptionLabel);\n        }\n        this.contributeTop(section);\n        this.plainChildren().forEach(function (x) { return _this.addChild(section, x); });\n        var wrappedChild = this.createWrappedChild(section);\n        this.subCategories = wrappedChild;\n        var cats = this.categories();\n        var remap = {};\n        cats.forEach(function (x) { return remap[x.title()] = x; });\n        var newCats = [];\n        if (remap[\"General\"]) {\n            newCats.push(remap[\"General\"]);\n            delete remap[\"General\"];\n        }\n        if (remap[\"Facets\"]) {\n            newCats.push(remap[\"Facets\"]);\n            delete remap[\"Facets\"];\n        }\n        for (var c in remap) {\n            newCats.push(remap[c]);\n        }\n        newCats.forEach(function (x) { return _this.addChild(wrappedChild, x); });\n        return section;\n    };\n    Category.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        this._result.dispose();\n    };\n    Category.prototype.createSection = function (r) {\n        if (r.showHeader) {\n            return new UI.Section(UI.h3(this.title()), false);\n        }\n        var pnl = new UI.Panel();\n        pnl.setCaption(this.title());\n        return pnl;\n    };\n    Category.prototype.createWrappedChild = function (section) {\n        return section;\n    };\n    Category.prototype.addChild = function (section, item) {\n        var child = item.render();\n        if (section instanceof UI.TabFolder) {\n            var tf = section;\n            tf.add(child.caption(), UI.Icon.NONE, child);\n        }\n        else {\n            if (item.needsSeparateLabel()) {\n                var firstLabel = UI.label(item.title());\n                firstLabel.margin(0, 5, 0, 0);\n                section.addChild(firstLabel);\n                section.addChild(UI.label(item.description));\n            }\n            section.addChild(child);\n        }\n    };\n    Category.prototype.contributeTop = function (section) {\n    };\n    Category.prototype.dispose = function () {\n    };\n    Category.prototype.setError = function (text) {\n    };\n    Category.prototype.clearErrors = function () {\n        this._children.forEach(function (x) { return x.clearErrors(); });\n    };\n    Category.prototype.update = function (i) {\n    };\n    return Category;\n})(Item);\nvar lastSelectedCaption;\nvar inRender = false;\nvar TopLevelNode = (function (_super) {\n    __extends(TopLevelNode, _super);\n    function TopLevelNode(node) {\n        _super.call(this, node.definition().nameId(), node.definition().description());\n        this.node = node;\n        this.ep = null;\n    }\n    TopLevelNode.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        this._result.dispose();\n    };\n    TopLevelNode.prototype.createWrappedChild = function (section) {\n        var tf = new UI.TabFolder();\n        tf.setOnSelected(function () {\n            if (!inRender) {\n                lastSelectedCaption = (tf.selectedComponent().caption());\n            }\n        });\n        section.addChild(tf);\n        return tf;\n    };\n    TopLevelNode.prototype.subCategoryByNameOrCreate = function (name) {\n        var item = _.find(this.children(), function (x) { return x.title() == name; });\n        if (!item) {\n            var rs = new Category(name);\n            this.add(rs);\n            return rs;\n        }\n        return item;\n    };\n    TopLevelNode.prototype.addItemToCategory = function (name, it) {\n        if (name == null) {\n            this._children.push(it);\n            it.parent = this;\n            return;\n        }\n        this.subCategoryByNameOrCreate(name).add(it);\n    };\n    TopLevelNode.prototype.contributeTop = function (section) {\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n        this.ep = UI.hc(this.errorLabel);\n        this.ep.setDisplay(false);\n        section.addChild(this.ep);\n    };\n    TopLevelNode.prototype.render = function (r) {\n        if (r === void 0) { r = {}; }\n        inRender = true;\n        try {\n            var result = _super.prototype.render.call(this, r);\n            this._options = r;\n            this._panel = result;\n            var tf = this.subCategories;\n            for (var n = 0; n < tf.tabsCount(); n++) {\n                var item = tf.get(n);\n                if (item.header == lastSelectedCaption) {\n                    tf.setSelectedIndex(n);\n                    return result;\n                }\n            }\n            var documentation = \"\";\n            if (this.node.property()) {\n                documentation = this.node.property().description();\n            }\n            else {\n                documentation = this.node.definition().description();\n            }\n            if (documentation.length && !r.showDescription) {\n                result.addChild(UI.html(\"<hr/>\"));\n                result.addChild(UI.label(documentation, UI.Icon.INBOX, UI.TextClasses.SUBTLE));\n            }\n            this.update(this);\n            return result;\n        }\n        finally {\n            inRender = false;\n        }\n    };\n    TopLevelNode.prototype.dispose = function () {\n        this.node = null;\n    };\n    TopLevelNode.prototype.update = function (i) {\n        var _this = this;\n        //this.listeners.forEach(x=>x(i));\n        if (!this._panel) {\n            return;\n        }\n        if (i instanceof PropertyEditorInfo) {\n            var prInfo = i;\n            if (prInfo.property.getAdapter(def.RAMLPropertyService).isTypeExpr() || prInfo.property.isDescriminator()) {\n                rp.utils.updateType(this.node);\n                var extras = this.item(\"Facets\");\n                if (extras && extras._result) {\n                    extras._result.clear();\n                }\n                var item = buildItem(this.node, false);\n                var newExtras = item.item(\"Facets\");\n                if (newExtras) {\n                    if (extras && extras._result) {\n                        extras._children = newExtras._children;\n                        extras._children.forEach(function (x) { return x.parent = extras; });\n                        if (extras._children.length > 0) {\n                            extras._result.setDisplay(true);\n                        }\n                        newExtras.children().forEach(function (x) {\n                            extras._result.addChild(x.render(_this._options));\n                        });\n                    }\n                    else {\n                        this._children.push(newExtras);\n                        if (this._panel) {\n                            this._panel.addChild(newExtras.render(this._options));\n                        }\n                    }\n                }\n                else {\n                    if (extras && extras._result) {\n                        extras._result.setDisplay(false);\n                    }\n                }\n            }\n        }\n        var kp = null;\n        this.node.definition().allProperties().forEach(function (x) {\n            if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n                kp = x;\n            }\n        });\n        if (kp) {\n            var keyItem = this.item(kp.nameId());\n            if (keyItem) {\n                var m = keyItem.fld;\n                var vl = m.getBinding().get();\n                if ((!vl) || vl.trim().length == 0) {\n                    this._panel.getBinding().setStatus(UI.errorStatus(\"\"));\n                }\n                else {\n                    this._panel.getBinding().setStatus(UI.okStatus());\n                }\n            }\n        }\n        var errors = this.node.errors();\n        this.clearErrors();\n        this.ep.setDisplay(false);\n        if (!resourceRegistry.hasAsyncRequests() && errors && errors.length > 0) {\n            var notFound = [];\n            errors.forEach(function (error) {\n                if (error.extras && error.extras.length > 0) {\n                    error = error.extras[0];\n                }\n                var item = _this.item(error.node.name());\n                if (item) {\n                    item.setError(error.message);\n                }\n                else {\n                    notFound.push(error);\n                }\n            });\n            if (notFound.length > 0) {\n                this.errorLabel.setIcon(UI.Icon.BUG);\n                var et = notFound.map(function (x) { return x.node.name() + \":\" + x.message; }).join(\",\");\n                if (et.length > 100) {\n                    et = et.substring(0, 100) + \"...\";\n                }\n                this.errorLabel.setText(et);\n                this.ep.setDisplay(true);\n            }\n            else {\n                this.ep.setDisplay(false);\n            }\n        }\n    };\n    return TopLevelNode;\n})(Category);\nvar CheckBox2 = (function (_super) {\n    __extends(CheckBox2, _super);\n    function CheckBox2() {\n        _super.apply(this, arguments);\n    }\n    CheckBox2.prototype.setLabelWidth = function (n) {\n        this.setStyle(\"margin-left\", (n + 2) + \"ch\");\n    };\n    return CheckBox2;\n})(UI.CheckBox);\nvar PropertyEditorInfo = (function (_super) {\n    __extends(PropertyEditorInfo, _super);\n    function PropertyEditorInfo(property, node) {\n        var _this = this;\n        _super.call(this, property.nameId(), property.description());\n        this.property = property;\n        this.node = node;\n        this.rendered = false;\n        this.update = function (newValue, oldValue) {\n            if (!_this.rendered) {\n                return;\n            }\n            _this.fromEditorToModel(newValue, oldValue);\n        };\n    }\n    PropertyEditorInfo.prototype.dispose = function () {\n        this.property = null;\n        this.node = null;\n        this.fld.getBinding().removeListener(this.update);\n    };\n    PropertyEditorInfo.prototype.getDefaultValue = function () {\n        return defaultValues.getDefaultValue(this.node, this.property);\n    };\n    PropertyEditorInfo.prototype.hasDefault = function () {\n        return defaultValues.hasDefault(this.property);\n    };\n    PropertyEditorInfo.prototype.clearErrors = function () {\n        this.setError(null);\n    };\n    PropertyEditorInfo.prototype.setError = function (text) {\n        if (text) {\n            this.errorLabel.setText(text);\n            this.errorLabel.setDisplay(true);\n        }\n        else {\n            if (this.errorLabel) {\n                this.errorLabel.setDisplay(false);\n            }\n        }\n    };\n    PropertyEditorInfo.prototype.fromEditorToModel = function (newValue, oldValue) {\n        var field = this.fld;\n        var vl = this.toLocalValue(field.getBinding().get());\n        if (vl == null) {\n            vl = \"\";\n        }\n        if (vl === true) {\n            vl = \"true\";\n        }\n        if (vl === false) {\n            vl = \"\";\n        }\n        var attr = this.node.attr(this.property.nameId());\n        var av = \"\";\n        if (attr) {\n            var l = this.toLocalValue(this.toUIValue(attr.value()));\n            if (l) {\n                av = \"\" + l;\n            }\n        }\n        if (av == vl) {\n            return;\n        }\n        if (vl.length > 0) {\n            if (attr && attr.lowLevel().includePath()) {\n                var path = attr.lowLevel().includePath();\n                var actualUnit = attr.lowLevel().unit().resolve(path);\n                if (actualUnit) {\n                    var apath = actualUnit.absolutePath();\n                    fs.writeFileSync(apath, vl);\n                }\n                return;\n            }\n            if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n                return;\n            }\n            attr = this.node.attrOrCreate(this.property.nameId());\n            attr.setValue(\"\" + vl);\n        }\n        else {\n            if (attr) {\n                if (!this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n                    attr.remove();\n                }\n            }\n        }\n        if (attr.lowLevel() && attr.lowLevel().unit() && attr.lowLevel().unit() != this.node.lowLevel().unit()) {\n            provider.saveUnit(attr.lowLevel().unit());\n        }\n        var root = this.root();\n        if (root) {\n            root.update(this);\n        }\n    };\n    PropertyEditorInfo.prototype.toLocalValue = function (inputValue) {\n        return inputValue;\n    };\n    PropertyEditorInfo.prototype.toUIValue = function (value) {\n        return value;\n    };\n    PropertyEditorInfo.prototype.fromModelToEditor = function () {\n        var attr = this.node.attr(this.property.nameId());\n        if (attr || this.hasDefault()) {\n            var val = attr ? attr.value() : this.getDefaultValue();\n            if (val == null) {\n                val = \"\";\n            }\n            this.fld.getBinding().set(this.toUIValue(\"\" + val));\n        }\n    };\n    PropertyEditorInfo.prototype.render = function () {\n        var container = new UI.WrapPanel();\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n        this.errorLabel.setDisplay(false);\n        this.errorLabel.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n        var field = this.createField();\n        this.fld = field;\n        field.getBinding().addListener(this.update);\n        container.setCaption(this.title());\n        this.fromModelToEditor();\n        container.addChild(field);\n        var attr = this.node.attr(this.property.nameId());\n        if (attr) {\n            var val = attr.value();\n        }\n        var np = this.property.valueDocProvider();\n        if (np) {\n            var ac = np(val);\n            if (ac == null) {\n                ac = \"\";\n            }\n            var lbl = UI.label(ac, UI.Icon.INFO, UI.TextClasses.SUBTLE);\n            if (!ac) {\n                lbl.setDisplay(false);\n            }\n            container.addChild(lbl);\n            field.getBinding().addListener(function (x) {\n                var newDoc = np(field.getBinding().get());\n                if (!newDoc) {\n                    newDoc = \"\";\n                }\n                lbl.setText(newDoc);\n                lbl.setDisplay(newDoc.length > 0);\n            });\n            lbl.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n        }\n        if (attr && attr.lowLevel().includePath()) {\n            container.addChild(UI.label(\"Included from \" + attr.lowLevel().includePath(), UI.Icon.INFO, UI.TextClasses.SUBTLE));\n        }\n        //container.addChild(this.descLabel)\n        container.addChild(this.errorLabel);\n        this.rendered = true;\n        return container;\n    };\n    PropertyEditorInfo.prototype.createField = function () {\n        return UI.texfField(this.needsSeparateLabel() ? \"\" : this.property.nameId(), \"\", function (x) { });\n    };\n    return PropertyEditorInfo;\n})(Item);\nvar SimpleMultiEditor = (function (_super) {\n    __extends(SimpleMultiEditor, _super);\n    function SimpleMultiEditor() {\n        _super.apply(this, arguments);\n    }\n    SimpleMultiEditor.prototype.fromEditorToModel = function () {\n        var field = this.fld;\n        var vl = field.getBinding().get();\n        if (vl == null) {\n            vl = \"\";\n        }\n        var attrs = this.node.attributes(this.property.nameId());\n        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n        if (av == vl) {\n            return;\n        }\n        var ww = vl.split(\",\");\n        var vl = ww.filter(function (x) { return x.trim().length > 0; }).map(function (x) { return x.trim(); });\n        if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n            return;\n        }\n        var attribute = this.node.attrOrCreate(this.property.nameId());\n        attribute.setValues(vl);\n        var root = this.root();\n        if (root) {\n            root.update(this);\n        }\n    };\n    SimpleMultiEditor.prototype.fromModelToEditor = function () {\n        var attrs = this.node.attributes(this.property.nameId());\n        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n        this.fld.getBinding().set(av);\n    };\n    return SimpleMultiEditor;\n})(PropertyEditorInfo);\nfunction escapeValue(v) {\n    if (v.length > 0) {\n        if (v.charAt(0) == \"'\") {\n            return '\"' + v + '\"';\n        }\n        if (v.charAt(0) == '\"') {\n            return '\"' + v + '\"';\n        }\n    }\n    if (v.indexOf(' ') != -1 || v.indexOf(',') != -1) {\n        if (v.indexOf('\"') == -1) {\n            return '\"' + v + '\"';\n        }\n        if (v.indexOf(\"'\") == -1) {\n            return \"'\" + v + \"'\";\n        }\n    }\n    return v;\n}\nvar CheckBoxField = (function (_super) {\n    __extends(CheckBoxField, _super);\n    function CheckBoxField() {\n        _super.apply(this, arguments);\n    }\n    CheckBoxField.prototype.createField = function () {\n        return new CheckBox2(this.property.nameId(), UI.Icon.NONE, function (x) { });\n    };\n    CheckBoxField.prototype.toUIValue = function (value) {\n        if (!value) {\n            return false;\n        }\n        if (value === true || value.trim() === 'true') {\n            return true;\n        }\n        return false;\n    };\n    CheckBoxField.prototype.toLocalValue = function (value) {\n        return value + \"\";\n    };\n    return CheckBoxField;\n})(PropertyEditorInfo);\nvar ActionsItem = (function (_super) {\n    __extends(ActionsItem, _super);\n    function ActionsItem(node) {\n        _super.call(this, \"Actions\", \"\");\n        this.node = node;\n    }\n    ActionsItem.prototype.render = function (r) {\n        return suggestions.generateSuggestionsPanel(this.node);\n    };\n    ActionsItem.prototype.dispose = function () {\n        this.node = null;\n    };\n    return ActionsItem;\n})(Item);\nvar ContextActionsItem = (function (_super) {\n    __extends(ContextActionsItem, _super);\n    function ContextActionsItem(node, name, actions) {\n        _super.call(this, name, \"\");\n        this.actions = actions;\n    }\n    ContextActionsItem.prototype.dispose = function () {\n    };\n    ContextActionsItem.prototype.render = function (r) {\n        var result = UI.hc();\n        result.addChild(UI.h3(this.title()));\n        this.actions.forEach(function (x) {\n            result.addChild(UI.button(x.name, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.CHECKLIST, function (a) { return x.onClick(); }).margin(3, 3, 3, 3));\n        });\n        return result;\n    };\n    return ContextActionsItem;\n})(Item);\nvar MarkdownFieldUI = (function (_super) {\n    __extends(MarkdownFieldUI, _super);\n    function MarkdownFieldUI(text, onchange) {\n        _super.call(this, text, onchange);\n        this.margin(0, 0, 6, 12);\n        this.setMini(false);\n        this.setStyle(\"min-height\", \"100px\");\n        //this.setStyle(\"max-height\",\"200px\");\n        this.setStyle(\"border\", \"solid\");\n        this.setStyle(\"border-width\", \"1px\");\n        this.setStyle(\"border-radius\", \"2px\");\n        this.setStyle(\"font-size\", \"1.15em\");\n        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n        this.setGrammar('source.gfm');\n    }\n    MarkdownFieldUI.prototype.setLabelWidth = function () {\n    };\n    MarkdownFieldUI.prototype.setLabelHeight = function () {\n    };\n    MarkdownFieldUI.prototype.setRequired = function (v) {\n    };\n    return MarkdownFieldUI;\n})(UI.AtomEditorElement);\nvar XMLField = (function (_super) {\n    __extends(XMLField, _super);\n    function XMLField(text, onchange) {\n        _super.call(this, text, onchange);\n        this.margin(0, 0, 6, 12);\n        this.setMini(false);\n        this.setStyle(\"min-height\", \"100px\");\n        //this.setStyle(\"max-height\",\"200px\");\n        this.setStyle(\"border\", \"solid\");\n        this.setStyle(\"border-width\", \"1px\");\n        this.setStyle(\"border-radius\", \"2px\");\n        this.setStyle(\"font-size\", \"1.15em\");\n        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n        this.setGrammar('text.xml');\n    }\n    XMLField.prototype.setLabelWidth = function () {\n    };\n    XMLField.prototype.setLabelHeight = function () {\n    };\n    XMLField.prototype.setRequired = function (v) {\n    };\n    return XMLField;\n})(UI.AtomEditorElement);\nvar JSONField = (function (_super) {\n    __extends(JSONField, _super);\n    function JSONField(text, onchange) {\n        _super.call(this, text, onchange);\n        this.margin(0, 0, 6, 12);\n        this.setMini(false);\n        this.setStyle(\"min-height\", \"100px\");\n        //this.setStyle(\"max-height\",\"200px\");\n        this.setStyle(\"border\", \"solid\");\n        this.setStyle(\"border-width\", \"1px\");\n        this.setStyle(\"border-radius\", \"2px\");\n        this.setStyle(\"font-size\", \"1.15em\");\n        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n        this.setGrammar('source.json');\n    }\n    JSONField.prototype.setLabelWidth = function () {\n    };\n    JSONField.prototype.setLabelHeight = function () {\n    };\n    JSONField.prototype.setRequired = function (v) {\n    };\n    return JSONField;\n})(UI.AtomEditorElement);\nvar MarkdownField = (function (_super) {\n    __extends(MarkdownField, _super);\n    function MarkdownField() {\n        _super.apply(this, arguments);\n    }\n    MarkdownField.prototype.createField = function () {\n        var editor = new MarkdownFieldUI(\"\", function (x) { });\n        return editor;\n    };\n    MarkdownField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    return MarkdownField;\n})(PropertyEditorInfo);\nvar ExampleField = (function (_super) {\n    __extends(ExampleField, _super);\n    function ExampleField(property, node, text, title) {\n        _super.call(this, property, node);\n        this.property = property;\n        this.node = node;\n        this.text = text;\n        this.setDescription(\"\");\n        if (title)\n            this.setTitle(title);\n    }\n    ExampleField.prototype.createField = function () {\n        var editor = new JSONField(this.text, function (x) { });\n        return editor;\n    };\n    ExampleField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    ExampleField.prototype.fromModelToEditor = function () {\n    };\n    ExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n    };\n    return ExampleField;\n})(PropertyEditorInfo);\nvar XMLExampleField = (function (_super) {\n    __extends(XMLExampleField, _super);\n    function XMLExampleField(property, node, text, title) {\n        _super.call(this, property, node);\n        this.property = property;\n        this.node = node;\n        this.text = text;\n        this.setDescription(\"\");\n        if (title)\n            this.setTitle(title);\n    }\n    XMLExampleField.prototype.createField = function () {\n        var editor = new XMLField(this.text, function (x) { });\n        return editor;\n    };\n    XMLExampleField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    XMLExampleField.prototype.fromModelToEditor = function () {\n    };\n    XMLExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n    };\n    return XMLExampleField;\n})(PropertyEditorInfo);\nvar XMLSchemaField = (function (_super) {\n    __extends(XMLSchemaField, _super);\n    function XMLSchemaField() {\n        _super.apply(this, arguments);\n    }\n    XMLSchemaField.prototype.createField = function () {\n        var editor = new XMLField(\"\", function (x) { });\n        return editor;\n    };\n    XMLSchemaField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    return XMLSchemaField;\n})(PropertyEditorInfo);\nvar JSONSchemaField = (function (_super) {\n    __extends(JSONSchemaField, _super);\n    function JSONSchemaField() {\n        _super.apply(this, arguments);\n    }\n    JSONSchemaField.prototype.createField = function () {\n        var editor = new JSONField(\"\", function (x) { });\n        return editor;\n    };\n    JSONSchemaField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    return JSONSchemaField;\n})(PropertyEditorInfo);\nvar SelectBox = (function (_super) {\n    __extends(SelectBox, _super);\n    function SelectBox() {\n        _super.apply(this, arguments);\n    }\n    SelectBox.prototype.createField = function () {\n        var options = valueOptions(this.property, this.node);\n        var a = this.node.attr(this.property.nameId());\n        if (a) {\n            if (!_.find(options, function (x) { return x == a.value(); })) {\n                options.push(a.value());\n            }\n        }\n        if (!this.property.isRequired() && !this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n            options = [\"\"].concat(options);\n        }\n        var select = new UI.SelectField(this.property.nameId(), function (x) { }, \"\", UI.Icon.NONE, options);\n        select.getActualField().setOptions(options);\n        // select.clearUI();\n        return select;\n    };\n    return SelectBox;\n})(PropertyEditorInfo);\nvar TypeSelectBox = (function (_super) {\n    __extends(TypeSelectBox, _super);\n    function TypeSelectBox() {\n        _super.apply(this, arguments);\n    }\n    TypeSelectBox.prototype.fromEditorToModel = function (newValue, oldValue) {\n        //current implementation only allows changing the facets of certain types for safety\n        //TODO change this to arbitrary facets (remove type filtering)\n        var _this = this;\n        var oldNames = [];\n        var savedAttrs = [];\n        if (newValue && oldValue) {\n            try {\n                this.node.definition().allSuperTypes().forEach(function (superType) {\n                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n                        _this.addTypeFacets(superType, oldNames);\n                    }\n                });\n                savedAttrs = [].concat(this.node.attrs());\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n        _super.prototype.fromEditorToModel.call(this);\n        if (newValue && oldValue) {\n            try {\n                //collecting facets allowed to remove\n                var currentUniverse = this.node.definition().universe();\n                var names = [];\n                this.node.definition().allSuperTypes().forEach(function (superType) {\n                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n                        _this.addTypeFacets(superType, names);\n                    }\n                });\n                if (oldNames.length > 0 && names.length > 0) {\n                    savedAttrs.forEach(function (attribute) {\n                        if (_.find(oldNames, function (facetName) { return facetName == attribute.name(); })\n                            && !_.find(names, function (facetName) { return facetName == attribute.name(); })) {\n                            _this.node.remove(attribute);\n                        }\n                    });\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n    TypeSelectBox.prototype.isAllowedTypeToReplaceFacets = function (currentTypeDef) {\n        return currentTypeDef.key() == universe.Universe10.StringTypeDeclaration ||\n            currentTypeDef.key() == universe.Universe10.BooleanTypeDeclaration ||\n            currentTypeDef.key() == universe.Universe10.NumberTypeDeclaration ||\n            currentTypeDef.key() == universe.Universe10.IntegerTypeDeclaration;\n    };\n    TypeSelectBox.prototype.addTypeFacets = function (currentTypeDef, names) {\n        currentTypeDef.properties().map(function (property) { return property.nameId(); }).forEach(function (name) { return names.push(name); });\n    };\n    return TypeSelectBox;\n})(SelectBox);\nvar TreeField = (function (_super) {\n    __extends(TreeField, _super);\n    function TreeField(input, caption) {\n        _super.call(this);\n        this.input = input;\n        var rend = {\n            render: function (n) {\n                var key = n.key();\n                var value = n.value();\n                if (typeof value === 'number') {\n                    value = \"\" + value;\n                }\n                if (typeof value != 'string') {\n                    value = \"\";\n                }\n                if (value.length > 30) {\n                    value = value.substring(0, 20) + \"...\";\n                }\n                if (!key && value) {\n                    key = value;\n                    value = \"\";\n                }\n                var res = UI.label(key, UI.Icon.CIRCUIT_BOARD, UI.TextClasses.HIGHLIGHT);\n                value = UI.label(value ? (\":\" + value) : \"\", UI.Icon.NONE, UI.TextClasses.SUCCESS);\n                var result = UI.hc(res, value);\n                return result;\n            }\n        };\n        var viewer = UI.treeViewer(function (x) { return x.children(); }, rend, function (x) { return x.key(); });\n        var inputV = {\n            children: function () {\n                return [input];\n            }\n        };\n        viewer.setInput(inputV);\n        this.addChild(UI.label(caption));\n        this.addChild(viewer);\n    }\n    TreeField.prototype.setLabelWidth = function () {\n    };\n    TreeField.prototype.setLabelHeight = function () {\n    };\n    TreeField.prototype.setRequired = function (v) {\n    };\n    return TreeField;\n})(UI.Panel);\nvar StructuredField = (function (_super) {\n    __extends(StructuredField, _super);\n    function StructuredField(pr, node, stvalue) {\n        _super.call(this, pr, node);\n        this.stvalue = stvalue;\n    }\n    StructuredField.prototype.createField = function () {\n        var tm = new TreeField(this.stvalue.lowLevel(), this.title() + \":\");\n        return tm;\n    };\n    return StructuredField;\n})(PropertyEditorInfo);\nvar LowLevelTreeField = (function (_super) {\n    __extends(LowLevelTreeField, _super);\n    function LowLevelTreeField(pr, node, lowLevel, title) {\n        _super.call(this, pr, node);\n        this.lowLevel = lowLevel;\n        if (title)\n            this.setTitle(title);\n    }\n    LowLevelTreeField.prototype.createField = function () {\n        var tm = new TreeField(this.lowLevel, this.title() + \":\");\n        return tm;\n    };\n    return LowLevelTreeField;\n})(PropertyEditorInfo);\nfunction category(p, node) {\n    if (p.getAdapter(def.RAMLPropertyService).isKey() || p.isRequired()) {\n        return null;\n    }\n    if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n        if (universehelpers.isDocumentationProperty(p) ||\n            universehelpers.isUsageProperty(p) ||\n            universehelpers.isDescriptionProperty(p) ||\n            universehelpers.isDisplayNameProperty(p) ||\n            universehelpers.isTitleProperty(p)) {\n            return \"Documentation\";\n        }\n        if (universehelpers.isAnnotationsProperty(p) ||\n            universehelpers.isIsProperty(p) ||\n            universehelpers.isSecuredByProperty(p) ||\n            (universehelpers.isTypeProperty(p) && !p.getAdapter(def.RAMLPropertyService).isTypeExpr())) {\n            return \"References\";\n        }\n        if (universehelpers.isProtocolsProperty(p)) {\n            return \"General\";\n        }\n    }\n    if (universehelpers.isTypeProperty(p)) {\n        if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n            return null;\n        }\n    }\n    if (node.property()) {\n        if (p.domain() && p.domain() != node.property().range()) {\n            return \"Facets\";\n        }\n    }\n    return \"General\";\n}\nvar valueOptions = function (x, node) {\n    var vls = search.enumValues(x, node);\n    if (universehelpers.isNameProperty(x)) {\n        if (node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n            if (node.property() && universehelpers.isBodyProperty(node.property())) {\n                if (!(node.property() instanceof def.UserDefinedProp)) {\n                    if (node.parent() &&\n                        universehelpers.isMethodType(node.parent().definition())) {\n                        return [\"application/json\", \"application/xml\", \"multipart/form-data\", \"application/x-www-form-urlencoded\"];\n                    }\n                    return [\"application/json\", \"application/xml\"];\n                }\n            }\n        }\n    }\n    if ((!vls) || vls.length == 0) {\n        var sug = x.suggester();\n        if (sug) {\n            vls = sug(node);\n        }\n        if ((!vls) || vls.length == 0) {\n            vls = x.getOftenKeys();\n        }\n    }\n    return _.unique(vls);\n};\nfunction addExampleControl(property, node, exampleElement, example, container) {\n    if (example.isYAML()) {\n        container.addItemToCategory(category(property, node), new LowLevelTreeField(property, node, exampleElement.lowLevel(), example.name()));\n    }\n    else if (example.isJSONString()) {\n        container.addItemToCategory(category(property, node), new ExampleField(property, node, example.asString(), example.name()));\n    }\n    else if (example.isXMLString()) {\n        container.addItemToCategory(category(property, node), new XMLExampleField(property, node, example.asString(), example.name()));\n    }\n}\nfunction buildItem(node, dialog) {\n    rp.utils.updateType(node);\n    var props = node.propertiesAllowedToUse();\n    var result = new TopLevelNode(node);\n    if (node.property() && node.property().description()) {\n        result.setDescription(node.property().description());\n    }\n    var isFragment = false;\n    if (node.definition() && !node.parent()) {\n        var fragmentName = rp.utils.getFragmentDefenitionName(node);\n        var superTypes = node.definition().allSuperTypes();\n        superTypes.push(node.definition());\n        superTypes.forEach(function (superType) {\n            if (superType.nameId && superType.nameId() === fragmentName) {\n                isFragment = true;\n            }\n        });\n    }\n    props = props.filter(function (x) {\n        if (isFragment && universehelpers.isNameProperty(x)) {\n            return false;\n        }\n        if ((universehelpers.isNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n            return false;\n        }\n        if ((universehelpers.isDisplayNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n            return false;\n        }\n        return true;\n    });\n    props = props.sort(function (x, y) {\n        if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n            return -1;\n        }\n        if (y.getAdapter(def.RAMLPropertyService).isKey()) {\n            return 1;\n        }\n        if (x.nameId() < y.nameId()) {\n            return -1;\n        }\n        return 1;\n    });\n    props.forEach(function (x) {\n        if (x.isValueProperty()) {\n            //\n            if (universehelpers.isAnnotationsProperty(x)) {\n                //we ban annotations from appearing as we can not provide the editing\n                //with this mechanism\n                return;\n            }\n            if (universehelpers.isBooleanTypeType(x.range())) {\n                return;\n            }\n            if (universehelpers.isMarkdownStringType(x.range())) {\n                return;\n            }\n            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/json\"){\n            //     result.addItemToCategory(category(x,node), new ExampleField(x, node));\n            //     return;\n            // }\n            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/xml\"){\n            //     result.addItemToCategory(category(x,node), new XMLExampleField(x, node));\n            //     return;\n            // }\n            var nm = node.attr(x.nameId());\n            if (nm && typeof nm.value() === \"object\") {\n                result.addItemToCategory(category(x, node), new StructuredField(x, node, nm.value()));\n                return;\n            }\n            if (x.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n                var nm = node.attr(x.nameId());\n                if (nm) {\n                    var vl = nm.value();\n                    if (vl.trim().charAt(0) == '{') {\n                        result.addItemToCategory(category(x, node), new JSONSchemaField(x, node));\n                        return;\n                    }\n                    if (vl.trim().charAt(0) == '<') {\n                        result.addItemToCategory(category(x, node), new XMLSchemaField(x, node));\n                        return;\n                    }\n                }\n            }\n            if (universehelpers.isSchemaProperty(x)\n                && x.domain() && x.domain().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n                return;\n            }\n            var vls = valueOptions(x, node);\n            if (vls && vls.length > 0 && ((x.domain() && x.domain().getAdapter(def.RAMLService).isUserDefined()))) {\n                if (universehelpers.isTypeProperty(x) &&\n                    node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n                    result.addItemToCategory(category(x, node), new TypeSelectBox(x, node));\n                }\n                else {\n                    result.addItemToCategory(category(x, node), new SelectBox(x, node));\n                }\n            }\n            else {\n                if (x.isMultiValue()) {\n                    result.addItemToCategory(category(x, node), new SimpleMultiEditor(x, node));\n                }\n                else {\n                    result.addItemToCategory(category(x, node), new PropertyEditorInfo(x, node));\n                }\n            }\n        }\n    });\n    props.forEach(function (x) {\n        if (x.isValueProperty()) {\n            if (universehelpers.isBooleanTypeType(x.range())) {\n                result.addItemToCategory(category(x, node), new CheckBoxField(x, node));\n            }\n        }\n    });\n    props.forEach(function (x) {\n        if (x.isValueProperty()) {\n            if (universehelpers.isMarkdownStringType(x.range())) {\n                result.addItemToCategory(category(x, node), new MarkdownField(x, node));\n            }\n        }\n    });\n    if (universehelpers.isTypeDeclarationSibling(node.definition())) {\n        props.forEach(function (x) {\n            if (universehelpers.isExampleProperty(x)) {\n                var exampleElement = node.element(universe.Universe10.TypeDeclaration.properties.example.name);\n                if (exampleElement) {\n                    var examples = node.localType().examples();\n                    if (examples && examples.length == 1) {\n                        var example = examples[0];\n                        addExampleControl(x, node, exampleElement, example, result);\n                    }\n                }\n            }\n            else if (universehelpers.isExamplesProperty(x)) {\n                var exampleElements = node.elementsOfKind(universe.Universe10.TypeDeclaration.properties.examples.name);\n                if (exampleElements && exampleElements.length > 0) {\n                    var examples = node.localType().examples();\n                    exampleElements.forEach(function (exampleElement) {\n                        var exampleElementName = exampleElement.attrValue(universe.Universe10.ExampleSpec.properties.name.name);\n                        if (exampleElementName) {\n                            var example = _.find(examples, function (currentExample) { return currentExample.name() == exampleElementName; });\n                            if (example) {\n                                addExampleControl(x, node, exampleElement, example, result);\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n    if (!dialog) {\n        result.addItemToCategory(\"Palette\", new ActionsItem(node));\n        var visibleActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n        var cats = _.groupBy(visibleActions, function (x) { return x.category.join(\"/\"); });\n        for (var cat in cats) {\n            result.addItemToCategory(\"Palette\", new ContextActionsItem(node, cat, cats[cat]));\n        }\n    }\n    if (node.definition().getAdapter(def.RAMLService).isUserDefined() || node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n        result.addItemToCategory(\"Type\", new TypeDisplayItem(node));\n    }\n    return result;\n}\nexports.buildItem = buildItem;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/details2.js\n ** module id = 61\n ** module chunks = 0\n **/","var KeyValuePair = (function () {\n    function KeyValuePair() {\n    }\n    return KeyValuePair;\n})();\nexports.KeyValuePair = KeyValuePair;\nvar Map = (function () {\n    function Map(ms) {\n        var _this = this;\n        if (ms === void 0) { ms = []; }\n        this.mappings = [];\n        ms.forEach(function (m) { return _this.mappings.push(m); });\n    }\n    Map.prototype.volume = function () { return this.mappings.length; };\n    Map.prototype.pairs = function () { return [].concat(this.mappings); };\n    Map.prototype.set = function (key, value) {\n        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n        if (pairs.length == 0)\n            this.mappings.push({ key: key, value: value });\n        else\n            pairs[0].value = value;\n    };\n    Map.prototype.get = function (key) {\n        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n        return (pairs.length == 0) ? null : pairs[0].value;\n    };\n    Map.prototype.map = function (callbackfn) {\n        return this.mappings.map(function (x) { return x.value; }).map(callbackfn);\n    };\n    Map.prototype.forEach = function (callbackfn) {\n        this.mappings.map(function (x) { return x.value; }).forEach(callbackfn);\n    };\n    Map.prototype.filter = function (callbackfn) {\n        return this.mappings.map(function (x) { return x.value; }).filter(callbackfn);\n    };\n    return Map;\n})();\nexports.Map = Map;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/pair.js\n ** module id = 62\n ** module chunks = 0\n **/","/// <reference path=\"../typings/main.d.ts\" />\nvar invariant = require('invariant');\nvar exists = function (v) { return (v != null); };\nvar globalEmptyOpt;\nvar Opt = (function () {\n    function Opt(_value) {\n        var _this = this;\n        this._value = _value;\n        this._isDefined = false;\n        this._isEmpty = true;\n        this._arr = undefined;\n        this.getOrThrow = function () {\n            invariant(_this._isDefined, 'Opt is empty. Use `Opt#getOrElse` or check `Opt#isDefined`.');\n            return _this._value;\n        };\n        this.value = function () { return _this._value; };\n        this.isDefined = function () { return _this._isDefined; };\n        this.isEmpty = function () { return _this._isEmpty; };\n        this.toArray = function () { return _this._arr || (_this._arr = _this._isDefined ? [_this._value] : []); };\n        this.getOrElse = function (v) { return _this._isDefined ? _this._value : v; };\n        this.getOrElseF = function (v) { return _this._isDefined ? _this._value : v(); };\n        this.map = function (f) { return _this._isEmpty ? Opt.empty() : new Opt(f(_this._value)); };\n        this.flatMap = function (f) { return _this.map(f).getOrElse(Opt.empty()); };\n        this.equals = function (other) {\n            invariant(other instanceof Opt, 'Expected other to be an `Opt`, but got `%s`', typeof other);\n            return (_this._isDefined === other.isDefined()) && (_this._value === other.value());\n        };\n        if (exists(this._value)) {\n            this._isDefined = true;\n            this._isEmpty = false;\n        }\n    }\n    Opt.prototype.forEach = function (fn) {\n        if (this.isDefined()) {\n            fn(this._value);\n        }\n    };\n    /**\n     * You can always create an empty option by hand just by calling new Opt<T>()\n     * but calling this method will return a global instance instead of allocating a new one each time\n     */\n    Opt.empty = function () { return (globalEmptyOpt || (globalEmptyOpt = new Opt())); };\n    return Opt;\n})();\nmodule.exports = Opt;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Opt.js\n ** module id = 63\n ** module chunks = 0\n **/","module.exports = require(\"marked\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"marked\"\n ** module id = 64\n ** module chunks = 0\n **/","module.exports = require(\"classnames\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"classnames\"\n ** module id = 65\n ** module chunks = 0\n **/","module.exports = require(\"react-pure-render/component\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react-pure-render/component\"\n ** module id = 66\n ** module chunks = 0\n **/","module.exports = require(\"pretty-data\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"pretty-data\"\n ** module id = 67\n ** module chunks = 0\n **/","module.exports = require(\"invariant\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"invariant\"\n ** module id = 68\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar UI = require(\"atom-ui-lib\");\nvar hl = require(\"raml-1-parser\");\nvar universes = hl.universes;\nvar stubs = hl.stubs;\nvar _ = require(\"underscore\");\nvar ds = hl.ds;\nvar editorTools = require(\"./editor-tools\");\nvar Inserter = (function () {\n    function Inserter(value, property, node) {\n        this.value = value;\n        this.property = property;\n        this.node = node;\n    }\n    Inserter.prototype.insert = function () {\n        var rn = this.property.range();\n        var key = this.value;\n        if (this.property.nameId() == universes.Universe10.Method.properties.body.name) {\n            key = \"application/json\";\n        }\n        if (this.property.nameId() == universes.Universe10.MethodBase.properties.responses.name) {\n            key = \"200\";\n        }\n        //TODO we need to take care of keys globally, including collections\n        //if (this.property.nameId() == universes.Universe10.TypeDeclaration.properties.xml.name\n        //    && this.node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name)) {\n        //    key = universes.Universe10.XMLSerializationHints.properties.name.name;\n        //}\n        var newNode = stubs.createStubNode(rn, this.property, key);\n        editorTools.aquireManager()._cleanOutline = true;\n        //this is a hack TODO FIX ME we should remove it after we will fix partial reconcile on outline\n        this.node.add(newNode);\n        editorTools.aquireManager().patchCurrentNode(this.node);\n    };\n    return Inserter;\n})();\nfunction generateSuggestionsPanel(node) {\n    var cm = node.definition().allProperties();\n    var result = UI.vc();\n    var hc = UI.hc();\n    result.addChild(UI.h3(\"Insertions and Delete: \"));\n    result.addChild(hc);\n    cm.forEach(function (x) {\n        if (x.isValueProperty()) {\n            return;\n        }\n        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n            return;\n        }\n        if (_.find(node.lowLevel().children(), function (y) { return y.key() == x.nameId(); })) {\n            return;\n        }\n        if (node.lowLevel().includesContents()) {\n            return;\n        }\n        var inserter = new Inserter(\"\", x, node);\n        hc.addChild(UI.button(x.nameId(), UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.INFO, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n    });\n    cm.forEach(function (x) {\n        if (x.isValueProperty()) {\n            return;\n        }\n        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n            var enums = x.enumOptions();\n            if (enums) {\n                enums.forEach(function (y) {\n                    if (_.find(node.lowLevel().children(), function (z) { return z.key() == y; })) {\n                        return;\n                    }\n                    if (node.lowLevel().includesContents()) {\n                        return;\n                    }\n                    var inserter = new Inserter(y, x, node);\n                    hc.addChild(UI.button(y, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.WARNING, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n                });\n            }\n            return;\n        }\n    });\n    hc.addChild(UI.button(\"Delete\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.ERROR, UI.Icon.NONE, function (x) { return node.parent().remove(node); }).margin(3, 3, 3, 3));\n    return result;\n}\nexports.generateSuggestionsPanel = generateSuggestionsPanel;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/suggestions-panel.js\n ** module id = 69\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar _ = require(\"underscore\");\nvar UI = require(\"atom-ui-lib\");\nvar hl = require(\"raml-1-parser\");\nvar def = hl.ds;\nfunction findBuiltInValueType(type) {\n    if (type.isValueType() && type.isBuiltIn())\n        return type;\n    var superTypes = type.allSuperTypes();\n    if (superTypes == null || superTypes.length == 0)\n        return null;\n    return _.find(superTypes, function (superType) { return (superType.isValueType() && superType.isBuiltIn()); });\n}\nfunction getValueTypeDisplayName(type) {\n    var builtinValueType = findBuiltInValueType(type);\n    if (!builtinValueType)\n        type.nameId() ? type.nameId() : \"\";\n    if (builtinValueType.nameId() == \"StringType\") {\n        return \"string\";\n    }\n    else if (builtinValueType.nameId() == \"AnyType\") {\n        return \"any\";\n    }\n    else if (builtinValueType.nameId() == \"NumberType\") {\n        return \"number\";\n    }\n    else if (builtinValueType.nameId() == \"IntegerType\") {\n        return \"integer\";\n    }\n    else if (builtinValueType.nameId() == \"NullType\") {\n        return \"null\";\n    }\n    else if (builtinValueType.nameId() == \"TimeOnlyType\") {\n        return \"time-only\";\n    }\n    else if (builtinValueType.nameId() == \"DateOnlyType\") {\n        return \"date-only\";\n    }\n    else if (builtinValueType.nameId() == \"DateTimeOnlyType\") {\n        return \"datetime-only\";\n    }\n    else if (builtinValueType.nameId() == \"DateTimeType\") {\n        return \"datetime\";\n    }\n    else if (builtinValueType.nameId() == \"FileType\") {\n        return \"file\";\n    }\n    else if (builtinValueType.nameId() == \"BooleanType\") {\n        return \"boolean\";\n    }\n    else if (builtinValueType.nameId() == \"AnnotationTarget\") {\n        return \"annotation target\";\n    }\n    return builtinValueType.nameId() ? builtinValueType.nameId() : \"\";\n}\nfunction getTypeDisplayName(type) {\n    if (type == null)\n        return \"\";\n    if (type.isValueType()) {\n        return getValueTypeDisplayName(type);\n    }\n    else if (type.hasArrayInHierarchy()) {\n        var componentType = type.arrayInHierarchy().componentType();\n        if (componentType && componentType.nameId()) {\n            return getTypeDisplayName(componentType) + \"[]\";\n        }\n        else {\n            return \"array\";\n        }\n    }\n    else if (type.hasUnionInHierarchy()) {\n        var asUnion = type.unionInHierarchy();\n        return getTypeDisplayName(asUnion.leftType()) +\n            \" | \" + getTypeDisplayName(asUnion.rightType());\n    }\n    return type.nameId() ? type.nameId() : \"\";\n}\nexports.getTypeDisplayName = getTypeDisplayName;\nvar renderType = function (definition) {\n    var result = UI.vc();\n    result.addChild(UI.label(\"definition:\" + getTypeDisplayName(definition)));\n    var elements = definition.properties();\n    var superTypes = definition.superTypes();\n    if (superTypes) {\n        result.addChild(UI.h3(\"Super types:\"));\n        definition.allSuperTypes().forEach(function (x) {\n            result.addChild(UI.hc(UI.label(getTypeDisplayName(x), UI.Icon.TAG)));\n        });\n    }\n    var rf = definition.getAdapter(def.RAMLService).getRepresentationOf();\n    if (rf) {\n        var facets = rf.getFixedFacets();\n        if (Object.keys(facets).length > 0) {\n            result.addChild(UI.h3(\"All facets\"));\n            Object.keys(facets).forEach(function (x) {\n                result.addChild(UI.label(x + \":\" + facets[x].value()));\n            });\n        }\n    }\n    if (elements && elements.length > 0) {\n        result.addChild(UI.h3(\"All properties\"));\n        elements.forEach(function (property) {\n            var propertyName = property.nameId();\n            if (!property.isRequired()) {\n                propertyName += \"?\";\n            }\n            result.addChild(UI.hc(UI.label(propertyName, UI.Icon.LINK), UI.label(\": \" + getTypeDisplayName(property.range()), UI.Icon.NONE, UI.TextClasses.WARNING)));\n        });\n    }\n    if (definition.hasArrayInHierarchy()) {\n        result.addChild(UI.h3(\"Component type:\"));\n        result.addChild(renderType(definition.arrayInHierarchy().componentType()));\n    }\n    if (definition.hasUnionInHierarchy()) {\n        result.addChild(UI.h3(\"Union type:\"));\n        result.addChild(UI.h3(\"Left:\"));\n        result.addChild(renderType(definition.unionInHierarchy().leftType()));\n        result.addChild(UI.h3(\"Right:\"));\n        result.addChild(renderType(definition.unionInHierarchy().rightType()));\n    }\n    return result;\n};\nfunction render(node) {\n    var wn = node.wrapperNode();\n    var definition = wn.highLevel().localType();\n    return renderType(definition);\n}\nexports.render = render;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/typeDisplay.js\n ** module id = 70\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar hl = require(\"raml-1-parser\");\nvar ds = hl.ds;\nvar universe = ds.universesInfo;\nfunction getDefaultValue(node, property) {\n    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n        return node.name().indexOf(\"?\") == node.name().length - 1;\n    }\n}\nexports.getDefaultValue = getDefaultValue;\nfunction hasDefault(property) {\n    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n        return true;\n    }\n    return false;\n}\nexports.hasDefault = hasDefault;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/default-values.js\n ** module id = 71\n ** module chunks = 0\n **/"],"sourceRoot":""}