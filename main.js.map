{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap 0d689a03426ee56a5570","webpack:///./src/atom/main.js","webpack:///external \"atom\"","webpack:///external \"atom-package-deps\"","webpack:///./src/atom/console/index.js","webpack:///./src/atom/popular-apis/popular-apis.js","webpack:///./src/atom/editor-tools/editor-tools.js","webpack:///./src/atom/quick-commands/quick-commands.js","webpack:///./src/atom/suggestion/provider.js","webpack:///./src/atom/quick-outline/quick-outline.js","webpack:///./src/atom/dialogs/assist-utils.js","webpack:///./src/atom/core/linter-ui.js","webpack:///./src/atom/quick-commands/command-manager.js","webpack:///./src/atom/context-menu/contextMenu.js","webpack:///./src/atom/context-menu/commonContextActions.js","webpack:///./src/atom/context-menu/quickFix.js","webpack:///./src/atom/context-menu/actions.js","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"atom-ui-lib\"","webpack:///external \"child_process\"","webpack:///external \"xmlhttprequest\"","webpack:///external \"mkdirp\"","webpack:///external \"url\"","webpack:///external \"raml-actions\"","webpack:///external \"raml-1-parser\"","webpack:///external \"atom-space-pen-views\"","webpack:///external \"underscore\"","webpack:///external \"raml-suggestions\"","webpack:///external \"basarat-text-buffer\"","webpack:///external \"raml-1-parser/dist/index\"","webpack:///./src/atom/util/ScrollViewUI.js","webpack:///./src/atom/core/atomWrapper.js","webpack:///./src/atom/quick-commands/quick-commands-ui.js","webpack:///./src/atom/quick-commands/code-commands.js","webpack:///./src/atom/editor-tools/outline-view.js","webpack:///./src/atom/core/tooltip-manager.js","webpack:///./src/atom/core/editorManager.js","webpack:///./src/atom/dialogs/extractElementsDialog.js","webpack:///./src/atom/dialogs/moveElementsDialog.js","webpack:///./src/util/xmlutil.js","webpack:///./src/util/schemaGenerator.js","webpack:///./src/atom/editor-tools/details-view.js","webpack:///./src/atom/console/console-view.js","webpack:///external \"yaml-ast-parser\"","webpack:///external \"emissary\"","webpack:///external \"xmldom\"","webpack:///external \"react\"","webpack:///external \"xtend\"","webpack:///external \"popsicle\"","webpack:///./src/atom/dialogs/dialogs.js","webpack:///./src/util/index.js","webpack:///./src/util/config/apiList.json","webpack:///./src/atom/editor-tools/details.js","webpack:///./src/atom/editor-tools/schemaUI.js","webpack:///./src/util/pathwatcherProxy.js","webpack:///./src/atom/util/atom.js","webpack:///./src/atom/console/render.js","webpack:///external \"know-your-http-well\"","webpack:///external \"remote\"","webpack:///external \"jsonix\"","webpack:///external \"w3c-schemas\"","webpack:///./src/atom/editor-tools/details2.js","webpack:///./src/util/pair.js","webpack:///external \"mime\"","webpack:///./src/Opt.js","webpack:///external \"marked\"","webpack:///external \"classnames\"","webpack:///external \"react-pure-render/component\"","webpack:///external \"pretty-data\"","webpack:///external \"invariant\"","webpack:///./src/atom/editor-tools/suggestions-panel.js","webpack:///./src/atom/editor-tools/typeDisplay.js","webpack:///./src/atom/editor-tools/default-values.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","package_entry_point","Console","apiList","editorTools","quickCommands","provider","quickOutline","decl","linterUI","CompositeDisposable","commandManager","contextMenu","commonContextActions","quickFixActions","actions","activate","state","install","then","subscriptions","add","atom","commands","api-workbench:popular-apis","showPopularApis","api-workbench:editor-tools","initEditorTools","api-workbench:console","toggle","api-workbench:go-to-definition","gotoDeclaration","api-workbench:find-usages","findUsages","api-workbench:quick-outline","show","api-workbench:quick-commands","showCommands","api-workbench:rename","renameRAMLElement","api-workbench:new-project","newProject","api-workbench:select-node","select","workspace","addOpener","opener","initialize","registerCommands","register","getProvider","provideLinter","consumeLinter","linterApi","initEditorObservers","deactivate","dispose","config","grammars","type","default","openConsoleInSplitPane","require","createConsoleView","opts","ConsoleView","RAMLConsoleView","isConsoleView","obj","getActivePaneItem","destroyActivePaneItem","editor","getActiveTextEditor","notifications","addInfo","get","indexOf","getGrammar","scopeName","removeConsoleForEditor","addConsoleForEditor","uri","getUriForEditor","previewPane","paneForURI","destroyItem","itemForURI","open","addConsoleForFile","filename","getUriForFilename","result","url","parse","protocol","host","pathname","err","decodeURI","substr","editorId","shouldSplit","getWorkspaceOptions","activatePane","searchAllPanes","split","undefined","openView","raml","pane","getActivePane","item","findOrCreateRightmostSibling","itemOpened","activateItem","Promise","resolve","workspaceOptions","view","setState","deserializers","name","deserialize","buildXHR","x","XMLHttpRequestConstructor","execProcess","logEnabled","console","log","messageBefore","logObj","childProcess","execSync","callPath","cwd","wrkDir","encoding","stdio","messageAfter","toString","trim","length","maxLogLength","substring","Math","min","onError","errLogEnabled","messageError","message","gitInstalled","errorOccured","ExecConfig","fileDialogUtils","getHome","info","callBack","section","UI","Icon","BOOK","buttonBar","hc","setPercentWidth","setStyle","addChild","label","okButton","button","ButtonSizes","NORMAL","ButtonHighlights","SUCCESS","NONE","destroy","addModalPanel","renderUI","cloneRepo","repo","dir","branch","defaultBranch","extractRepoName","mkdirp","sync","ok","error","repoPath","lastIndexOf","doSplit","RamlOutline","SplitDirections","RIGHT","__extends","this","d","b","__","constructor","hasOwnProperty","prototype","Object","create","path","fs","SC","fdUtils","XMLHttpRequest","_super","apply","arguments","disposables","getTitle","load","reposLink","sec","xhr","html","outer","home","apiListData","secHC","sett","a","openFolderDialog","newVal","setText","SETTINGS","TextClasses","HighLightClasses","HIGHLIGHT","branchLink","prompt","y","GIT_BRANCH","margin","l","list","uiLabel","REPO","pad","buttonCallback","existsSync","mkdirSync","git_url","output","pathsToOpen","uiButton","EXTRA_SMALL","attached","_isAttached","Scrollable","display","manager","EditorManager","editorToolsStatus","opened","aquireManager","updateAndSelect","node","_view","refresh","updateText","selectNode","value","newPane","BOTTOM","splitDown","TOP","splitUp","LEFT","splitLeft","splitRight","addItem","rp","project","detailsView","outlineView","_this","_initialized","updateCount","outlineCount","fire","_cleanOutline","performanceDebug","placeholder","window","onDidChangeActivePaneItem","e","updateEverything","addAutoCloseListener","getPath","currentEditor","getCurrentEditor","internalScheduleUpdateViews","count","setTimeout","updateViews","scheduleViewsUpdate","internalScheduleOutlineUpdate","updateOutline","scheduleOutlineUpdate","onDidDestroyPane","evt","edcount","getPaneItems","filter","ast","unit","_currentNode","global","cleanCache","paneForItem","_details","getOrCreateView","setUnit","getDetails","RamlDetails","updateDetails","update","reparseAST","_path","prj","getBuffer","createProject","dirname","setCachedUnitContent","basename","getText","addTextChangeListener","delta","cm","offset","end","replacementLength","text","buffer","start","positionForCharacterIndex","endPosition","setTextInRange","highLevel","isETPane","items","getItems","aw","fpane","pos","contents","setCursorBufferPosition","hnode","lowLevel","pth","extname","patched","addListenersToEditor","characterIndexForPosition","getCursorBufferPosition","positionUpdated","cedit","onDidChange","t0","Date","getMilliseconds","t1","getLastCursor","onDidChangePosition","addListenersOnMove","movingPane","onDidAddPaneItem","event","moveItemToPane","setActiveItem","patchCurrentNode","n","getCurrentNode","setSelectedNode","unitPath","absolutePath","parent","anode","findById","posStart","getSelectedNode","cNode","ds","setSelection","d1","newPosition","currentPosition","findElementAtOffset","CommandManager","cc","registerQuickCommands","et","qcui","contextActions","QuickCommand","title","command","priority","when","registerAsAtomCommand","target","atomCommand","disposed","unregister","panel","SelectListView","cmd","qcmd","atomTarget","predicate","joinedCommands","commandId","getDynamicCommands","forEach","currentCommand","keys","map","key","sort","currentActions","calculateCurrentActions","TARGET_RAML_EDITOR_NODE","action","convertedQuickCommand","onClick","push","onDidInsertSuggestion","triggerPosition","suggestion","annotation","txt","i","charAt","newPos","insert","replacementPrefix","extra","getSuggestions","request","editorState","AtomEditorState","suggestions","suggest","FSProvider","getAstNode","clearLastChar","allowNull","bufferPosition","kind","search","determineCompletionKind","LocationKind","KEY_COMPLETION","ilevel","oldOfffset","pm","astNode","attr","_","find","attrs","at","property","isKey","saveUnit","unitText","openedEditor","getTextEditors","editorPath","writeFileSync","selector","disableForSelector","filterSuggestions","inclusionPriority","excludeLowerPriority","contentDirName","content","contentPath","dirName","childPath","exists","checkPath","contextPath","relativePath","isDirectory","dirPath","stat","statSync","readDir","readdirSync","existsAsync","readDirAsync","readdir","isDirectoryAsync","stats","textEditor","getBaseName","getOffset","showQuickOutline","QuickOutlineDialog","ed","filePath","ext","tooltipManager","isAllowedExtension","outline","_editor","extraContent","s","zz","nodeToSelect","vc","createTree","root","selection","elements","setDisabled","model","setCursorScreenPosition","addClass","cancel","buttonSimple","PRIMARY","tabIndex","onkeypress","keyCode","focus","createGlobalSchema","r","t","range","universe","sc","stubs","createStubNode","attrOrCreate","setValue","sdir","shFile","createGlobalSchemaFromNameAndContent","schp","index_1","universeHelpers","isRAML10Node","createGlobalSchemaFromNameAndContent10","isRAML08Node","createGlobalSchemaFromNameAndContent08","createSchemaFile","schemaPath","getActiveEditor","definition","universes","Universe10","TypeDeclaration","Api","properties","types","Universe08","GlobalSchema","schemas","saveExample","createRAMLFile","version","baseUri","sample","raml1","apiLines","typesLines","resourceLines","concat","join","NewProjectDialog","splitOnLines","lines","match","cleanEmptyLines","rs","stripIndent","indent","line","activeEditor","moveOut","h","MoveToNewFileDialog","VALUE_COMPLETION","hlnode","getAdapter","services","RAMLPropertyService","targets","referenceTargets","findUsagesImpl","reverse","ua","asAttr","RAMLService","getKeyProp","nameId","SEQUENCE_KEY_COPLETION","oldValue","attrValue","renameInProperty","contentToReplace","replaceWith","oldPropertyValue","structuredValue","oldPropertyStringValue","valueName","convertedHighLevel","toHighLevel","found","isAnnotationType","prop","getKey","attribute","newValue","replace","newPropertyStringValue","setKey","up","def","UserDefinedProp","withRange","StringType","withFromParentKey","getDeclaringNode","createASTPropImpl","setSelectedBufferRange","f","updateContent","results","query","sv","setInput","SearchResultView","addBottomPanel","findDeclaration","toLowerCase","openLowLevelNode","SpacePenViews","apititle","_raml1","_defStructure","_createSampleResource","sourceValue","generateDefaultProjectParentFolder","validateProjectLocation","toValidate","errorStatus","parentDirectory","okStatus","validateTitle","h3","Panel","LayoutType","BLOCK","statusLabel","ERROR","slf","CustomField","setDisplay","code","StatusCode","projectLocationInput","texfField","getBinding","addValidator","addListener","st","setIcon","BUG","titleStatusLabel","titleStatusMessage","titleTextField","status","r1","checkBox","getValue","r2","r3","NO_HIGHLIGHT","onOk","createIfNotExist","ps","GIST_NEW","errorLabel","destination","isError","dump","ci","li","keyEnd","endPart","startPart","vl","_result","isAttached","div","class","tabindex","SEARCH","p1","getLowLevelStart","res","openPropertyNode","SUBTLE","row","SMALL","ScrollView","p2","getLowLevelEnd","column","linterApiProxy","rr","addLoadCallback","relint","observeTextEditors","lintersToDestroy","linter","destroyLinter","deleteMessages","deleteLinter","setupLinterCallback","callback","linterCallback","removeLinterCallback","execLinterCallback","lint","actualLint","hasAsyncRequests","isRAMLUnit","getTime","editorManager","Acceptor","tab","trace","gatherValidationErrors","l1","combErrors","warnings","errors","validate","utils","TextBuffer","grammarScopes","scope","lintOnFly","extName","lowerCase","getEditorLinter","setMessages","onDidDestroy","original","JSON","stringify","newKey","tr","mes","ms","primaryUnit","buffers","accept","issue","transformIssue","issueType","isWarning","issuesArray","extras","issues","convertParserIssue","iType","buf","acceptUnique","PointOfViewValidationAcceptorImpl","addCommand","tag","listCommands","disposable","commandInfo","commandIdToCommandInfo","tagCommands","tagToCommands","deleteUnmanagedCommand","registeredCommands","selectorBasedListenersByCommandName","deleteManagedCommand","infoIndex","currentInfo","index","splice","deleteCommandsByTag","commandName","initialized","packages","activatePackage","listener","prePanelDisplay","listenersArray","sequenceNumber","Error","registerContributor","contributor","contributors","DYNAMIC_COMMAND_TAG","contributorId","calculationStarted","calculateItems","calculationFinished","originalShowForEvent","showForEvent","preMenuDisplay","postMenuDisplay","treeRoots","calculateMenuItemsTree","nodeSets","cleanExistingSets","itemSet","findOrCreateItemSet","menuItem","constructAtomMenuItem","children","submenu","child","childMenuItem","existingSet","itemSets","currentSet","DYNAMIC_SET_TAG","specificity","usedSelectors","existingSets","initializeActionSupport","intializeStandardActions","initializeActionBasedMenu","editorCommandContributor","editorProvider","gotEditorFromOutline","setEditorProvider","astProvider","getASTRoot","lastPosition","getEndPosition","setASTProvider","astModifier","deleteNode","forEachViewer","remove","resetChildren","setASTModifier","hlConv","CreateGlobalSchemaDialog","addAction","category","stateCalculator","CreateGlobalSchemaStateCalculator","shouldDisplay","move","MoveElementsDialog","MoveResourceStateCalculator","extract","ExtractTypesAndTraitsDialog","ExtractResourceTypeStateCalculator","ExtractTraitStateCalculator","ExtractJSONSchemaToTypeDialog","ConvertJsonSchemaToTypeStateCalculator","ExtractLibraryDialog","ExtractLibraryStateCalculator","ExtractOverlayDialog","ExtractOverlayStateCalculator","ModifyOverlayDialog","ModifyOverlayStateCalculator","PullUpDialog","PullUpStateCalculator","ExtractSupertypeDialog","ExtractSupertypeCalculator","parser","su","schema","assistUtils","AbstractDialogWithValidation","parentNode","performOk","createBody","getParentNode","printDetails","mainSection","createValidationIndicator","createButtonBar","rootAtomPanel","performValidation","validationMessage","parentPanel","getNodeId","parentId","sameName","directChildren","ind","nodesEqualById","node1","node2","isParentOf","potentialParent","potentialChild","current","calculate","generalState","getGeneralState","completionKind","highLevelNode","isResourceType","CommonASTStateCalculator","isSchemaProperty","typeNameTextField","schemaName","api","createSchemaModelGenerator","generateTo","schemaNameTextField","getDefaultSchemaName","schemaContent","schemaFilePath","getSchemaFilePath","globalSchemaType","schemaNode","getSchemaRelativePath","schemaDir","schemaExtension","determineSchemaExtension","fileName","ExpandSignatureStateCalculator","isMethodType","MoveContentStateCalculator","isOverlayType","AbstractMoveTypePropertiesCalculator","isTypeNode","isTypeDeclarationType","isTypesProperty","superTypes","findUserDefinedSupertypes","GenerateExampleCalculator","isExampleProperty","typeAttr","uiActions","registerMoveContentsAction","uiFinishedCallback","registerCompleteBodyAction","FillBodyDialog","xmlutil","shemagen","errorMessage","canWrite","accessSync","W_OK","exception","needXML","needJSON","jsexample","xmlexample","xmlschema","jsschema","updateButtons","createButton","em","getJSONSchema","getXMLSchema","tf","TabFolder","createTextSection","setOnSelected","selectedComponent","te","caption","lang","hs","setCaption","setId","ts","AtomEditorElement","setMini","setGrammar","generateSchema","setSelectedIndex","uiState","_children","v","style","scroll","top","left","element","scrollTop","scrollLeft","size","bottom","clientHeight","right","clientWidth","changed","ui","setParent","_parent","removeChild","doRender","innerRenderUI","selfRender","document","createElement","el","appendChild","Workspace","arg","addRightPanel","args","aspv","_confirmed","filterKey","getFilterKey","viewForItem","hide","confirmed","getSelectedItemView","storeFocusedElement","setItems","focusFilterEditor","getResourceParent","isResourcesProperty","isResourceTypesProperty","isResourceTypeType","getMethodParent","isTraitType","isUserDefined","getParent","isAssignableFrom","toResource","dialogs","newResource","AddNewResourceStateCalculator","newApi","CreateNewAPIStateCalculator","addSimpleAction","newMethod","newNode","getEditor","isApiType","treeSection","input","icon","filterFunc","treeViewerSection","getChildren","HLRenderer","viewer","setBasicLabelFunction","setKeyProvider","addSelectionListener","getNodeType","isResource","HLNodeType","Resource","isOther","Trait","isResourceTypeOrTrait","Type","isSchemaOrType","Schema","Unknown","nm","prohibit","pc","ResourceType","LibraryBase","isAttr","isUnknown","ch","keyProvider","fullPath","simpleTree","selectionListener","treeViewer","set","selectionChanged","other","folder","selectedTab","getSelection","SelectionChangedEvent","customizePanel","_rs","sender","_viewers","getNodePType","_selectedNode","force","attach","$this","$","outerHTML","resources","resourceTypes","traits","render","ARROW_SMALL_LEFT","DASH","highLight","PRIMITIVE_SQUARE","Method","PRIMITIVE_DOT","WARNING","AbstractSecurityScheme","LOCK","FILE_SUBMODULE","isAnnotationTypesProperty","TAG","Parameter","ObjectTypeDeclaration","FILE_BINARY","DocumentationItem","tp","getFromShadowDom","rootElement","querySelectorAll","sp","editorView","pixelPositionFromMouseEvent","clientX","clientY","linesClientRect","getBoundingClientRect","screenPositionFromMouseEvent","getModel","screenPositionForPixelPosition","screenPositionFromMouse","views","getView","displayBuffer","getScrollTop","getScrollLeft","clientRect","emissary","Subscriber","View","options","init","defineProperty","enumerable","configurable","TooltipView","rect","body","append","updatePosition","outlet","inner","fadeTo","offsetWidth","width","css","white-space","offsetHeight","height","man","createSmallSelectionPanel","float","createVIewer","setTagName","typeNode","nodeType","localType","addUserDefinedSupertypes","typesToAddTo","superType","isWebPath","str","util","stringStartsWith","assist","yaml","universeModule","_resourceType","filters","NodeFilters","isErr","stub","removals","createNodeStub","v1","moveRight","z","moveLeft","allRight","allLeft","ev","nodesToMove","unregisteredNode","nodeToMove","registeredNode","movedNode","newTypeName","stub2","typeOrTraitValueToReplace","replacements","superAttributeName","is","superAttributes","attributes","superAttrProperty","superAttribute","superAttributeLL","valueStart","valueEnd","typeOrTraitValueToReplaceWith","stubAttributeValue","stubSuperAttribute","createAttr","cl","totalRepalcement","isMultiValue","totalReplacement","rtypes","k","copy","AbstractlMoveElementsDialog","movedNodes","checkNode","nodeToFilter","visitChildren","canBeMoved","createHeader","stubTreeRoot","extractSection","stubRoot","createStub","createPanels","asElement","createMovedNodesTree","parents","currentParent","currentStubPointer","stubAnalogueOfParent","currentStubElement","createMovedNode","originalNode","createStubRoot","createMap","createASTNodeImpl","leftDisplayFilter","nodeToCheck","leftPanel","rightDisplayFilter","rightPanel","mergeTrees","sourceTreeRoot","targetTreeRoot","mergeProperties","mergeNode","sourceNode","targetParent","isElement","targetChildren","analogueChild","sourceChild","currentNode","prrr","blah","isTp","isGlobalSchemaType","isSecuritySchemaType","getUniverse","nodeClass","Library","libraryPath","libraryNamespace","getLibraryQualifier","originalValue","trimmed","getDefaultLibraryNamespace","generateDefaultLibraryPath","libraryUnit","createLibraryUnit","libraries","globalDeclarations","libraryClass","librariesToExport","library","findReferences","reference","currentPath","_node","isAbsolute","currentDirectory","relative","createMapping","stubLibrary","wrapperNode","addToProp","FragmentDeclaration","uses","updateLibraryUnit","modifiedUnits","libraryQualifier","movedNodeReferences","oldStringValue","textToReplace","textToReplanceWith","newStringValue","modifiedPropertyUnit","modifiedUnit","addUsesNode","getLibraryPath","currentFilePath","getLibraryName","targetLibraryPath","targetLibraryAst","getKind","existingFirstUsesNode","childAny","isLibraryType","isUsesProperty","usesMapping","sequenceFound","Kind","MAPPING","SEQ","positionToInsert","insertTextToActiveEditor","titleNode","isStringTypeType","isTitleProperty","createUsesNode","usesProperty","usesNode","Overlay","overlayPath","generateDefaultOverlayPath","overlayUnit","createOverlayUnit","updateOverlayUnit","getOverlayPath","originalUnitPath","addMasterReference","targetOverlayPath","targetOverlayAst","masterRefAttribute","overlayASTRoot","masterASTRoot","createMasterAST","overlayASTLeafNodes","calculateLeafNodes","getOverlayUnit","masterAbsolutePath","findMasterAbsolutePath","masterUnit","toReportTo","overlayAbsolutePath","targetPath","AbstractMoveTypePropertiesDialog","sourceType","getTargetType","sourceUnit","targetType","targetUnit","postMerge","superTypeNames","findSuperTypeNames","Select","selectedSuperType","setOptions","foundSuperType","superTypeName","generateDefaultSupertypeName","astRoot","typeWrapper","modify","createObjectTypeDeclaration","typeStub","superValidate","hl","isEmpty","xmlToJson","xml","j","nodeName","nodeValue","hasChildNodes","childNodes","old","cleanupText","cleanupJson","parseXML","DomParser","DOMParser","parsed","parseFromString","mediaType","generator","JsonSchemaGenerator","schemaObject","schemaString","sch","pass","valueType","detectType","Array","isArray","passArray","passObject","registerProperty","propName","array","isSchema","details","schemaUI","allowStructureChanges","innerHTML","container","setSchema","wasSchema","schemaView","ssto","clear","errLabel","applyStyling","setInterval","schemaText","_updatePreview","treeView","textView","smallEditor","includePath","sm","includeReference","_updateEditor","_schemaPreview","schemaTab","GIT_MERGE","FILE_TEXT","oldItem","detach","setResource","displayEmpty","updateDetailsPanel","Button","LARGE","REPO_CLONE","template","defaults","Atom","React","pathwatcher","extend","popsicle","AtomUtil","Render","isParsing","pageState","paths","editors","resolver","ConsoleResolver","readFileSync","parameters","headers","uriParameters","baseUriParameters","queryParameters","bodies","expander","expandTraitsAndResourceTypes","cloneWithResolver","resolveEditor","resolveFilename","watchEditor","stopWatchingPath","getEditorById","trigger","loadRAML","onDidActivateInitialPackages","file","File","getEditorByPath","watchForFile","watchFile","onDidStopChanging","updateUnit","cb","stopWatchingEditor","onDidChangePath","watcher","close","watch","deleteUnit","watchForPath","newFilename","stopWatching","navigate","getElementById","abortRequest","props","setParameter","group","execRequest","setPageState","requestError","securityScheme","securitySchemes","defaultBaseUriParameters","toDefaultParameters","allBaseUriParameters","defaultUriParameters","allUriParameters","methodHeaders","methodQuery","completeRelativeUri","describedBy","method","User-Agent","usedParameters","use","plugins","unzip","concatStream","progress","requestProgress","completed","response","requestResponse","toJSON","params","parameter","param","abort","updateRAML","baseUnit","getUnit","getFilename","originalRoot","serialize","deserializer","unmountComponentAtNode","groupState","getURI","FSResolverImpl","contentAsync","reject","readFile","data","listAsync","files","showError","dialog","showMessageBox","remote","getCurrentWindow","buttons","detail","getMethodDescriptions","_methodDescriptions","methodsProperty","ResourceBase","methods","enumOptions","khttp","desc","description","getStatusCodeDescriptions","_statusCodeDescriptions","statusCodes","tfTitle","TextField","tfVersion","tfBaseURI","setTabIndex","cbSample","CheckBox","cbRaml1","DASHBOARD","_dialog","getActualField","mdesc","cdesc","NO_RESPONCE","NO_RESPONCE_BT","bodyType","mdescLabel","LabelField","cdescLabel","methodSelect","SelectField","responseSelect","responseTypeSelect","typeOfValue","realBodyType","bodyTypeSelect","bodyTypeOfValue","actualType","bodyTypeString","__ret","typeValues","responseSection","CODE","oldNode","elementsOfKind","methodNode","createMethodStub","bodyNode","createBodyStub","codeNode","createResponseStub","getStringValue","typeEditDialog","onDone","typePanel","typeProperty","toPropagate","svMap","typeList","typeName","EMPTY_VALUE","genStructuredValue","propagateValues","allProperties","CIRCUIT_BOARD","pair","Map","values","val","pairs","enumEditDialog","_cp","renderer","GIT_COMMIT","TRASHCAN","ListView","addKeyPressListener","LIST_UNORDERED","calculatesParentURIPath","resource","segment","uriLable","resourceParent","parentsPath","uriTF","methodsPanel","hcp","createResourceStub","resourceTypeProp","qName","makeLabelNextToField","hideLabel","details2","buildItem","setTitle","showDescription","_unit","traitsEditDialog","tabs","sel","traitProperty","returnv","trait","traitName","traitValue","traitNode","returnee","enabled","tcb","traitPanel","nameOrValue","schemaEditDialog","NEW_SCHEMA","refValue","_schemaText","sname","timeout","preview","intervalId","MICROSCOPE","NoSchema","InvalidSchema","_dialog2","highlight","INFO","newText","isChanged","validateSchema","saveSchema","clearInterval","createSchema","schemaType","getType","filterJSON","extensions","filterXML","projectFolder","showSaveDialog","defaultPath","fname","ename","rpath","markdown","exampleEditorDialog","projectPath","refPath","openFileDialogModal","reui","onclick","blur","nextSibling","_closeDialog","_dialogPanels","pop","mdp","filterAll","saveFileDialogModal","toFocus","stretch","isPrimary","addStatusListener","eventListener","parentElement","getComputedStyle","parseFloat","overflowY","addEventListener","removeEventListener","msg","onChange","defs","BodyLike","sh","enumValues","flattenArrayOfObjects","xs","Opt","toTuples","fromTuples","tuples","tap","kv","iter","indexed","objects","delKey","shallowCopy","stringEndsWith","dif","lazypropkeyfilter","lazyprop","func","ready","lazyprops","keyfilter","ifInstanceOf","Function","vf","iff","isRAMLUrl","getAllRequiredExternalModulesFromCode","mods","RegExp","exec","unique","isEssential","firstToUpper","q","toUpperCase","updateObject","source","addNewFields","keySet","replaceMap","prev","defined","isInstance","C","collectInstancesOf","collectInstancesOfInMap","asArray","flatMap","flatten","xss","takeWhile","serial","full_name","owner","login","avatar_url","gravatar_id","html_url","followers_url","following_url","gists_url","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","site_admin","private","fork","forks_url","keys_url","collaborators_url","teams_url","hooks_url","issue_events_url","assignees_url","branches_url","tags_url","blobs_url","git_tags_url","git_refs_url","trees_url","statuses_url","languages_url","stargazers_url","contributors_url","subscribers_url","subscription_url","commits_url","git_commits_url","comments_url","issue_comment_url","contents_url","compare_url","merges_url","archive_url","downloads_url","issues_url","pulls_url","milestones_url","notifications_url","labels_url","releases_url","created_at","updated_at","pushed_at","ssh_url","clone_url","svn_url","homepage","stargazers_count","watchers_count","language","has_issues","has_downloads","has_wiki","has_pages","forks_count","mirror_url","open_issues_count","forks","open_issues","watchers","default_branch","permissions","admin","pull","updateTextOnDone","cfg","styles","emitter","handlersByEventName","sadd","sremove","schange","cfgCh","addGrammar","updateGrammar","emptyGrammarListeners","nullGrammar","empty","rend","field","focusedPosition","focusedPropertyName","getSchemaType","schemautil","propertyInfo","isValueProperty","ipath","isMulti","required","isRequired","rangeName","ret","include","stringView","nodes","DataElement","Response","filterOut","SchemaRenderer","setComparator","getSchemaTree","typeString","schemaModel","rootElements","schemaTree","getXMLSchemaTree","parseSchema","XSD_1_0","context","jsonix","Jsonix","Context","unmarshaller","createUnmarshaller","unmarshalString","schemaObj","getRootElements","extractName","typeObj","prefix","localPart","objValue","groups","elementGroups","attributeGroups","simpleTypes","complexTypes","ElementDescription","getTSType","xmltype","XSD_2_TS_TYPE_MAP","roots","getSType","isSimple","elem","tc","QUESTION","TypeDescription","_name","_isSimple","_object","object","isChoice","elementObjects","collectElements","complexContent","groupRef","groupDef","AttributeDescription","base","baseObj","restriction","resExt","typeObject","sType","cType","typeOpt","isDefined","getOrThrow","containers","gr","PropertyDescription","optional","isAttribute","otherAttributes","maxOccurs","mo","parseInt","minOccurs","ENTITIES","ENTITY","ID","IDREF","IDREFS","Name","NCName","NMTOKEN","NMTOKENS","normalizedString","QName","string","token","date","dateTime","duration","gDay","gMonth","gMonthDay","gYear","gYearMonth","time","anyURI","base64Binary","hexBinary","NOTATION","boolean","double","byte","decimal","int","integer","long","negativeInteger","nonNegativeInteger","nonPositiveInteger","positiveInteger","short","unsignedLong","unsignedInt","unsignedShort","unsignedByte","String","getGrammerFromMime","mimeType","grammarsByScopeName","extension","mime","getGrammars","grammar","fileTypes","codeToEditorElement","editorElement","setAttributeNode","createAttribute","removeAttribute","getDecorations","define","text/xml","isRAML10","RAMLVersion","isRAML08","plural","singular","getCaseless","getNodeLabel","highLevelAst","NodeKind","ATTRIBUTE","NODE","wrapper","RamlWrapper1","isDocumentationItem","RamlWrapper08","isApi","isExtension","isOverlay","isXML","isJSON","localParameters","baseUriParams","ownerApi","absoluteUriParameters","condition","marked","classnames","PureComponent","pretty","api10","api08","atomUtil","BULLET_TEXT","METHOD_CLASS_MAP","get?","post","post?","delete","delete?","put","put?","patch","patch?","isSupportedNode","isObjectTypeDeclaration","isResponse","isTypeDeclaration","isLibrary","isSecuritySchemePart","isOAuth1SecurityScheme","isOAuth2SecurityScheme","renderNode","isTrait","isAbstractSecurityScheme","SecurityScheme","Documentation","isMethod","Root","Block","TitleText","href","wrapperClassName","renderBreadcrumb","renderedNode","parts","unshift","lastNode","className","flex","idNode","wrapBody","overflow","wrapContent","breadcrumb","flexDirection","Loading","Errors","referencedNode","findReferencedValue","MissingReference","ResourceTypesAndTraits","documentation","InsetPanel","marginTop","ResourceChildren","MethodButton","verb","references","SimpleText","usage","AbstractMethod","References","OpenInEditor","formatNode","AbstractResource","MarkdownBlock","ParametersBlock","displayName","relativeUri","ParameterInfo","marginRight","TypeInfo","hasNamedSuperTypes","namedTypeFound","renderDefinition","renderNameId","hasUnionInHierarchy","unionInHierarchy","leftType","rightType","hasArrayInHierarchy","arrayInHierarchy","componentType","runtimeDefinition","hasGenuineUserDefinedTypeInHierarchy","isGenuineUserDefinedType","genuineUserDefinedTypeInHierarchy","summary","isFileTypeDeclaration","minLength","maxLength","isIntegerTypeDeclaration","minimum","maximum","renderBody","schemaPart","createSchemaPart","createExampleParts","exampleToString","example","exampleValue","runtimeType","examples","exampleName","MarkupBlock","asString","isBodyLike","exampleNode","exampleContent","bodyAsType","hasExternalInHierarchy","externalType","externalInHierarchy","methodBodies","responses","demo","canDemo","MethodDemo","contentType","allSecuredBy","currentSecurityScheme","EditParameters","change","TextEditor","mini","marginLeft","max","isNaN","statusText","rawHeaders","Markup","componentDidMount","updateModel","refs","getDOMNode","cleanup","setPlaceholderText","readonly","setAttribute","gutter","position","cursors","getBufferPosition","setBufferPosition","componentWillUnmount","componentDidUpdate","ref","visible","isXml","isJson","isCss","canPrettify","pd","json","checked","NavigateLabel","getName","cursor","securedBy","openInEditor","panes","getPanes","activePane","hasUnit","dangerouslySetInnerHTML","__html","escapeValue","domain","universehelpers","isDocumentationProperty","isUsageProperty","isDescriptionProperty","isDisplayNameProperty","isAnnotationsProperty","isIsProperty","isSecuredByProperty","isTypeProperty","isTypeExpr","isProtocolsProperty","addExampleControl","exampleElement","isYAML","addItemToCategory","LowLevelTreeField","isJSONString","ExampleField","isXMLString","XMLExampleField","updateType","propertiesAllowedToUse","TopLevelNode","setDescription","isFragment","fragmentName","getFragmentDefenitionName","allSuperTypes","isNameProperty","isBooleanTypeType","isMarkdownStringType","StructuredField","inheritedContent","JSONSchemaField","XMLSchemaField","vls","valueOptions","TypeSelectBox","SelectBox","SimpleMultiEditor","PropertyEditorInfo","CheckBoxField","MarkdownField","isTypeDeclarationSibling","isExamplesProperty","exampleElements","exampleElementName","ExampleSpec","currentExample","ActionsItem","visibleActions","cats","groupBy","cat","ContextActionsItem","TypeDisplayItem","associatedType","isExternal","typeDisplay","defaultValues","resourceRegistry","Item","_title","listeners","needsSeparateLabel","removeListener","setError","clearErrors","lastSelectedCaption","Category","plainChildren","categories","it","createSection","descriptionLabel","contributeTop","wrappedChild","createWrappedChild","subCategories","remap","newCats","showHeader","Section","pnl","firstLabel","inRender","ep","subCategoryByNameOrCreate","_options","_panel","tabsCount","header","INBOX","prInfo","isDescriminator","newExtras","kp","keyItem","fld","setStatus","parsedType","exampleMeta","metaInfo","meta","validateObject","validateSelf","getAnnotationTypeRegistry","getErrors","createIssue","notFound","CheckBox2","setLabelWidth","rendered","fromEditorToModel","getDefaultValue","hasDefault","toLocalValue","av","toUIValue","actualUnit","apath","inputValue","fromModelToEditor","WrapPanel","createField","np","valueDocProvider","ac","lbl","newDoc","ww","setValues","generateSuggestionsPanel","CHECKLIST","MarkdownFieldUI","onchange","setLabelHeight","setRequired","XMLField","JSONField","oldNames","savedAttrs","isAllowedTypeToReplaceFacets","addTypeFacets","names","facetName","currentTypeDef","StringTypeDeclaration","BooleanTypeDeclaration","NumberTypeDeclaration","IntegerTypeDeclaration","TreeField","inputV","pr","stvalue","tm","isBodyProperty","sug","suggester","getOftenKeys","KeyValuePair","mappings","volume","callbackfn","globalEmptyOpt","invariant","_value","_isDefined","_isEmpty","_arr","toArray","getOrElse","getOrElseF","equals","fn","isMerged","includesContents","inserter","Inserter","enums","rn","MethodBase","findBuiltInValueType","isValueType","isBuiltIn","getValueTypeDisplayName","builtinValueType","getTypeDisplayName","asUnion","wn","renderType","rf","getRepresentationOf","facets","getFixedFacets","propertyName","LINK","universesInfo"],"mappings":"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","file":"main.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar Console = __webpack_require__(3);\n\tvar apiList = __webpack_require__(4);\n\tvar editorTools = __webpack_require__(5);\n\tvar quickCommands = __webpack_require__(6);\n\tvar provider = __webpack_require__(7);\n\tvar quickOutline = __webpack_require__(8);\n\tvar decl = __webpack_require__(9);\n\tvar linterUI = __webpack_require__(10);\n\tvar CompositeDisposable = __webpack_require__(1).CompositeDisposable;\n\tvar commandManager = __webpack_require__(11);\n\tvar contextMenu = __webpack_require__(12);\n\tvar commonContextActions = __webpack_require__(13);\n\tvar quickFixActions = __webpack_require__(14);\n\tvar actions = __webpack_require__(15);\n\tvar package_entry_point;\n\t(function (package_entry_point) {\n\t    var subscriptions = new CompositeDisposable();\n\t    function activate(state) {\n\t        __webpack_require__(2).install('api-workbench', true)\n\t            .then(function () {\n\t            subscriptions.add(atom.commands.add('atom-workspace', {\n\t                'api-workbench:popular-apis': apiList.showPopularApis,\n\t                'api-workbench:editor-tools': editorTools.initEditorTools,\n\t                'api-workbench:console': Console.toggle,\n\t                'api-workbench:go-to-definition': decl.gotoDeclaration,\n\t                'api-workbench:find-usages': decl.findUsages,\n\t                'api-workbench:quick-outline': quickOutline.show,\n\t                'api-workbench:quick-commands': quickCommands.showCommands,\n\t                'api-workbench:rename': decl.renameRAMLElement,\n\t                'api-workbench:new-project': decl.newProject,\n\t                'api-workbench:select-node': decl.select\n\t            }));\n\t            subscriptions.add(atom.workspace.addOpener(Console.opener));\n\t            //subscriptions.add(atom.workspace.addOpener(RamlScriptReport.opener))\n\t            commandManager.initialize();\n\t            contextMenu.initialize();\n\t            commonContextActions.initialize();\n\t            quickCommands.registerCommands();\n\t            quickFixActions.initialize();\n\t            actions.register();\n\t            editorTools.initEditorTools();\n\t        });\n\t    }\n\t    package_entry_point.activate = activate;\n\t    function getProvider() {\n\t        return provider;\n\t    }\n\t    package_entry_point.getProvider = getProvider;\n\t    function provideLinter() {\n\t        return linterUI;\n\t    }\n\t    package_entry_point.provideLinter = provideLinter;\n\t    function consumeLinter(linterApi) {\n\t        subscriptions.add(linterUI.initEditorObservers(linterApi));\n\t    }\n\t    package_entry_point.consumeLinter = consumeLinter;\n\t    function deactivate() {\n\t        subscriptions.dispose();\n\t    }\n\t    package_entry_point.deactivate = deactivate;\n\t    package_entry_point.config = {\n\t        grammars: {\n\t            type: 'array',\n\t            default: [\n\t                'source.raml'\n\t            ]\n\t        },\n\t        openConsoleInSplitPane: {\n\t            type: 'boolean',\n\t            default: true\n\t        }\n\t    };\n\t})(package_entry_point || (package_entry_point = {}));\n\tmodule.exports = package_entry_point;\n\t\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom-package-deps\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar url = __webpack_require__(22);\n\tvar ConsoleView = __webpack_require__(42);\n\tatom.deserializers.add({\n\t    name: 'RAMLConsoleView',\n\t    deserialize: function (state) {\n\t        if (state) {\n\t            return createConsoleView(state);\n\t        }\n\t    }\n\t});\n\tfunction createConsoleView(opts) {\n\t    return new ConsoleView.RAMLConsoleView(opts);\n\t}\n\texports.createConsoleView = createConsoleView;\n\tfunction isConsoleView(obj) {\n\t    return obj instanceof ConsoleView.RAMLConsoleView;\n\t}\n\texports.isConsoleView = isConsoleView;\n\tfunction toggle() {\n\t    if (isConsoleView(atom.workspace.getActivePaneItem())) {\n\t        atom.workspace.destroyActivePaneItem();\n\t        return;\n\t    }\n\t    var editor = atom.workspace.getActiveTextEditor();\n\t    if (!editor) {\n\t        atom.notifications.addInfo('The API Console can only be opened when focused on a RAML file editor.');\n\t        return;\n\t    }\n\t    var grammars = atom.config.get('api-workbench.grammars') || [];\n\t    if (grammars.indexOf(editor.getGrammar().scopeName) === -1) {\n\t        atom.notifications.addInfo('The API Console can only be opened with focus on a RAML file.');\n\t        return;\n\t    }\n\t    if (!removeConsoleForEditor(editor)) {\n\t        addConsoleForEditor(editor);\n\t        return;\n\t    }\n\t}\n\texports.toggle = toggle;\n\tfunction removeConsoleForEditor(editor) {\n\t    var uri = ConsoleView.RAMLConsoleView.getUriForEditor(editor);\n\t    var previewPane = atom.workspace.paneForURI(uri);\n\t    if (previewPane) {\n\t        previewPane.destroyItem(previewPane.itemForURI(uri));\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\texports.removeConsoleForEditor = removeConsoleForEditor;\n\tfunction addConsoleForEditor(editor, state) {\n\t    return open(ConsoleView.RAMLConsoleView.getUriForEditor(editor), state);\n\t}\n\texports.addConsoleForEditor = addConsoleForEditor;\n\tfunction addConsoleForFile(filename, state) {\n\t    return open(ConsoleView.RAMLConsoleView.getUriForFilename(filename), state);\n\t}\n\texports.addConsoleForFile = addConsoleForFile;\n\tfunction opener(uri) {\n\t    try {\n\t        var result = url.parse(uri);\n\t        var protocol = result.protocol;\n\t        var host = result.host;\n\t        var pathname = result.pathname;\n\t    }\n\t    catch (err) {\n\t        return;\n\t    }\n\t    if (protocol !== 'raml-console:') {\n\t        return;\n\t    }\n\t    try {\n\t        pathname = decodeURI(pathname || '').substr(1);\n\t    }\n\t    catch (err) {\n\t        return;\n\t    }\n\t    if (host === 'editor') {\n\t        return createConsoleView({ editorId: pathname });\n\t    }\n\t    return createConsoleView({ filename: pathname });\n\t}\n\texports.opener = opener;\n\tfunction shouldSplit() {\n\t    return atom.config.get('api-workbench.openConsoleInSplitPane');\n\t}\n\tfunction getWorkspaceOptions() {\n\t    return {\n\t        activatePane: false,\n\t        searchAllPanes: true,\n\t        split: shouldSplit() ? 'right' : undefined\n\t    };\n\t}\n\tfunction openView(raml, state) {\n\t    var pane = atom.workspace.getActivePane();\n\t    var item = createConsoleView({ raml: raml, state: state });\n\t    // TODO(blakeembrey): Fix RAML instance passed in, RAML 0.8 interface is dead.\n\t    if (shouldSplit()) {\n\t        pane = pane.findOrCreateRightmostSibling();\n\t    }\n\t    atom.workspace.itemOpened(item);\n\t    pane.activateItem(item);\n\t    return Promise.resolve(item);\n\t}\n\texports.openView = openView;\n\tfunction open(uri, state) {\n\t    var workspaceOptions = getWorkspaceOptions();\n\t    var previousActivePane = atom.workspace.getActivePane();\n\t    return atom.workspace.open(uri, workspaceOptions)\n\t        .then(function (view) {\n\t        view.setState(state);\n\t        return view;\n\t    });\n\t}\n\t\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar path = __webpack_require__(16);\n\tvar fs = __webpack_require__(17);\n\tvar UI = __webpack_require__(18);\n\tvar SC = __webpack_require__(30);\n\tvar editorTools = __webpack_require__(5);\n\tvar childProcess = __webpack_require__(19);\n\tvar atom = __webpack_require__(31);\n\tvar fileDialogUtils = UI.fdUtils;\n\tvar XMLHttpRequestConstructor = __webpack_require__(20).XMLHttpRequest;\n\tvar mkdirp = __webpack_require__(21);\n\tvar defaultBranch = \"production\";\n\tfunction buildXHR() {\n\t    var x = new XMLHttpRequestConstructor;\n\t    return x;\n\t}\n\tvar ExecConfig = (function () {\n\t    function ExecConfig() {\n\t        this.callPath = null;\n\t        this.wrkDir = null;\n\t        this.logEnabled = false;\n\t        this.errLogEnabled = true;\n\t        this.messageBefore = '';\n\t        this.messageAfter = '';\n\t        this.messageError = '';\n\t        this.maxLogLength = -1;\n\t        this.onError = null;\n\t    }\n\t    return ExecConfig;\n\t})();\n\tfunction execProcess(config) {\n\t    try {\n\t        if (config.logEnabled) {\n\t            console.log(config.messageBefore);\n\t        }\n\t        var logObj = childProcess.execSync(config.callPath, {\n\t            cwd: config.wrkDir,\n\t            encoding: 'utf8',\n\t            stdio: [0, 1, 2]\n\t        });\n\t        if (config.logEnabled) {\n\t            console.log(config.messageAfter);\n\t            if (logObj) {\n\t                var log = logObj.toString();\n\t                if (log.trim().length > 0) {\n\t                    if (config.maxLogLength < 0) {\n\t                        console.log(log);\n\t                    }\n\t                    else if (config.maxLogLength > 0) {\n\t                        console.log(log.substring(0, Math.min(config.maxLogLength, log.length)));\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    catch (err) {\n\t        if (config.onError) {\n\t            config.onError(err);\n\t        }\n\t        if (config.errLogEnabled) {\n\t            console.log(config.messageError);\n\t            console.log(err.message);\n\t        }\n\t    }\n\t}\n\tfunction branches(repoName, cb) {\n\t    var xhr = buildXHR();\n\t    var reposLink = 'https://api.github.com/repos/raml-apis/' + repoName + '/branches';\n\t    xhr.open(\"GET\", reposLink);\n\t    xhr.onload = function () {\n\t        var data = JSON.parse(xhr.responseText);\n\t        cb(data);\n\t    };\n\t    xhr.send();\n\t}\n\tfunction gitInstalled() {\n\t    var errorOccured = false;\n\t    var config = new ExecConfig();\n\t    config.callPath = 'git version';\n\t    config.wrkDir = fileDialogUtils.getHome();\n\t    config.logEnabled = true;\n\t    config.messageError = 'Git launch failed';\n\t    config.onError = function () {\n\t        errorOccured = true;\n\t    };\n\t    execProcess(config);\n\t    return !errorOccured;\n\t}\n\texports.gitInstalled = gitInstalled;\n\tvar RamlOutline = (function (_super) {\n\t    __extends(RamlOutline, _super);\n\t    function RamlOutline() {\n\t        _super.apply(this, arguments);\n\t        this.disposables = new UI.CompositeDisposable();\n\t    }\n\t    RamlOutline.prototype.getTitle = function () {\n\t        return \"RAML Apis\";\n\t    };\n\t    RamlOutline.prototype.load = function () {\n\t        var reposLink = 'https://api.github.com/orgs/raml-apis/repos?per_page=200';\n\t        var sec = UI.section(\"RAML Apis\");\n\t        var xhr = buildXHR();\n\t        sec.addChild(UI.label(\"loading...\"));\n\t        this.html(sec.renderUI());\n\t        xhr.open(\"GET\", reposLink);\n\t        var outer = this;\n\t        var home = fileDialogUtils.getHome();\n\t        var dir = path.resolve(home, \"apis\");\n\t        var apiListData = __webpack_require__(51);\n\t        var secHC = UI.hc();\n\t        var sett = UI.a(\"Cloning to: \" + dir + \"(click to change)\", function (x) {\n\t            fileDialogUtils.openFolderDialog(\"Please enter new path to clone\", function (newVal) {\n\t                dir = newVal;\n\t                sett.setText(\"Cloning to: \" + dir + \"(click to change)\");\n\t            }, true, dir);\n\t        }, UI.Icon.SETTINGS, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n\t        secHC.addChild(sett);\n\t        var branchLink = UI.a(\"\" + defaultBranch, function (x) {\n\t            UI.prompt(\"Please enter name of the branch\", function (y) {\n\t                defaultBranch = y;\n\t                branchLink.setText(y);\n\t            }, defaultBranch);\n\t        }, UI.Icon.GIT_BRANCH, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n\t        branchLink.margin(10, 0);\n\t        var l = UI.list(apiListData, function (x) {\n\t            var uiLabel = UI.label(x.name, UI.Icon.REPO, UI.TextClasses.HIGHLIGHT, UI.HighLightClasses.NONE).pad(10, 10);\n\t            var buttonCallback = function () {\n\t                if (!fs.existsSync(dir)) {\n\t                    fs.mkdirSync(dir);\n\t                }\n\t                var ok = cloneRepo(x.git_url, dir);\n\t                if (ok) {\n\t                    var output = path.resolve(dir, x.name);\n\t                    if (!fs.existsSync(dir)) {\n\t                        fs.mkdirSync(dir);\n\t                    }\n\t                    var a = path.resolve(output, \"api.raml\");\n\t                    if (!fs.existsSync(a)) {\n\t                        a = path.resolve(output, x.name + \".raml\");\n\t                    }\n\t                    if (fs.existsSync(a)) {\n\t                        atom.open({ pathsToOpen: [output, a] });\n\t                    }\n\t                    else {\n\t                        atom.open({ pathsToOpen: [output] });\n\t                    }\n\t                }\n\t            };\n\t            var uiButton = UI.button(\"clone\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, buttonCallback);\n\t            return UI.hc(uiLabel, uiButton);\n\t        });\n\t        secHC.addChild(l);\n\t        outer.html(secHC.renderUI());\n\t    };\n\t    RamlOutline.prototype.attached = function () {\n\t        if (this._isAttached) {\n\t            return;\n\t        }\n\t        this.load();\n\t        this._isAttached = true;\n\t    };\n\t    RamlOutline.prototype.destroy = function () {\n\t        this.disposables.dispose();\n\t    };\n\t    return RamlOutline;\n\t})(SC.Scrollable);\n\tfunction info(name, callBack) {\n\t    var pane = null;\n\t    var section = UI.section(name, UI.Icon.BOOK, false, false);\n\t    var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t    buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t    var okButton = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t        pane.destroy();\n\t    });\n\t    buttonBar.addChild(okButton);\n\t    section.addChild(buttonBar);\n\t    pane = atom.workspace.addModalPanel({\n\t        item: section.renderUI()\n\t    });\n\t}\n\texports.info = info;\n\tfunction cloneRepo(repo, dir, branch) {\n\t    if (branch === void 0) { branch = null; }\n\t    if (!branch) {\n\t        branch = defaultBranch;\n\t    }\n\t    var repoName = extractRepoName(repo);\n\t    mkdirp.sync(dir);\n\t    var ok = true;\n\t    var config = new ExecConfig();\n\t    config.callPath = 'git clone --branch ' + branch + ' \"' + repo + '\"';\n\t    config.wrkDir = dir;\n\t    config.logEnabled = true;\n\t    config.messageBefore = 'Cloning GIT repository: ' + repo;\n\t    config.messageAfter = 'Cloning complete: ' + repo;\n\t    config.messageError = 'Cloning failed: ' + repo;\n\t    config.onError = function (error) {\n\t        ok = false;\n\t        info(error.message, function () { return null; });\n\t    };\n\t    execProcess(config);\n\t    return ok;\n\t}\n\tfunction extractRepoName(repoPath) {\n\t    return repoPath.substring(repoPath.lastIndexOf('/') + 1, repoPath.lastIndexOf('.'));\n\t}\n\tfunction showPopularApis() {\n\t    if (!gitInstalled()) {\n\t        info(\"GIT is required to clone APIs. Please install GIT.\", function (x) { });\n\t        return;\n\t    }\n\t    editorTools.doSplit(new RamlOutline(), editorTools.SplitDirections.RIGHT);\n\t}\n\texports.showPopularApis = showPopularApis;\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar path = __webpack_require__(16);\n\tvar atom = __webpack_require__(31);\n\tvar rp = __webpack_require__(24);\n\tvar project = rp.project;\n\tvar detailsView = __webpack_require__(41);\n\tvar outlineView = __webpack_require__(34);\n\tvar _bmc = 0;\n\tfunction benchmark(func) {\n\t    var t0 = new Date().getTime();\n\t    if (_bmc != 0 && func)\n\t        console.log(func + \" took \" + (t0 - _bmc) + \" miliseconds.\");\n\t    _bmc = t0;\n\t}\n\tvar EditorManager = (function () {\n\t    function EditorManager(display) {\n\t        var _this = this;\n\t        if (display === void 0) { display = true; }\n\t        this._initialized = false;\n\t        this.updateCount = 0;\n\t        this.outlineCount = 0;\n\t        this.fire = true;\n\t        this.opened = false;\n\t        this._cleanOutline = false;\n\t        this.performanceDebug = true;\n\t        this.placeholder = false;\n\t        manager = window[\"manager\"] = this;\n\t        atom.workspace.onDidChangeActivePaneItem(function (e) { return _this.updateEverything(display); });\n\t        this.updateEverything(display);\n\t        this.addAutoCloseListener();\n\t    }\n\t    EditorManager.prototype.getPath = function () {\n\t        console.log(\"ETM::GetPath\");\n\t        return this.currentEditor ? this.currentEditor.getPath() : null;\n\t    };\n\t    EditorManager.prototype.getCurrentEditor = function () { return this.currentEditor; };\n\t    EditorManager.prototype.internalScheduleUpdateViews = function (count) {\n\t        var _this = this;\n\t        this.updateCount = count;\n\t        setTimeout(function () {\n\t            if (_this.updateCount == count) {\n\t                _this.updateViews();\n\t            }\n\t        }, 500);\n\t    };\n\t    EditorManager.prototype.scheduleViewsUpdate = function () {\n\t        if (this.fire) {\n\t            this.internalScheduleUpdateViews(this.updateCount + 1);\n\t        }\n\t    };\n\t    EditorManager.prototype.internalScheduleOutlineUpdate = function (count) {\n\t        var _this = this;\n\t        this.outlineCount = count;\n\t        setTimeout(function () {\n\t            if (_this.outlineCount == count) {\n\t                _this.updateOutline();\n\t            }\n\t        }, 500);\n\t    };\n\t    EditorManager.prototype.scheduleOutlineUpdate = function () {\n\t        this.internalScheduleOutlineUpdate(this.outlineCount + 1);\n\t    };\n\t    EditorManager.prototype.addAutoCloseListener = function () {\n\t        var _this = this;\n\t        atom.workspace.onDidDestroyPane(function (evt) {\n\t            try {\n\t                var edcount = atom.workspace.getPaneItems().filter(function (e) {\n\t                    return e['softTabs'] != undefined;\n\t                }).length;\n\t                if (edcount == 0) {\n\t                    _this.ast = null;\n\t                    _this.unit = null;\n\t                    _this._currentNode = null;\n\t                    _this.currentEditor = null;\n\t                    global.cleanCache();\n\t                    if (atom.workspace.paneForItem(_this._view))\n\t                        atom.workspace.paneForItem(_this._view).destroy();\n\t                    if (atom.workspace.paneForItem(_this._details))\n\t                        atom.workspace.paneForItem(_this._details).destroy();\n\t                    _this.opened = false;\n\t                }\n\t            }\n\t            catch (e) {\n\t                //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n\t                console.log(e);\n\t            }\n\t        });\n\t    };\n\t    EditorManager.prototype.getOrCreateView = function () {\n\t        if (!this._view) {\n\t            this._view = new outlineView.RamlOutline();\n\t            if (this.ast) {\n\t                this._view.setUnit(this.ast);\n\t            }\n\t        }\n\t        return this._view;\n\t    };\n\t    EditorManager.prototype.getDetails = function () {\n\t        if (!this._details)\n\t            this._details = new detailsView.RamlDetails();\n\t        return this._details;\n\t    };\n\t    EditorManager.prototype.updateDetails = function () {\n\t        this.getDetails().update();\n\t    };\n\t    EditorManager.prototype.reparseAST = function () {\n\t        var _this = this;\n\t        if (this.currentEditor) {\n\t            var _path = this.currentEditor.getPath();\n\t            var bf = this.currentEditor.getBuffer();\n\t            var prj = project.createProject(path.dirname(_path));\n\t            var unit = prj.setCachedUnitContent(path.basename(_path), this.currentEditor.getBuffer().getText());\n\t            unit.project().addTextChangeListener(function (delta) {\n\t                if (delta.unit != unit) {\n\t                    return;\n\t                }\n\t                var cm = delta.offset;\n\t                var end = delta.replacementLength;\n\t                var text = delta.text;\n\t                var buffer = _this.currentEditor.getBuffer();\n\t                var start = buffer.positionForCharacterIndex(cm);\n\t                var endPosition = buffer.positionForCharacterIndex(cm + end);\n\t                try {\n\t                    _this.fire = false;\n\t                    buffer.setTextInRange({ start: start, end: endPosition }, text);\n\t                    _this.scheduleOutlineUpdate();\n\t                }\n\t                finally {\n\t                    _this.fire = true;\n\t                }\n\t            });\n\t            this.ast = unit.highLevel();\n\t            this.unit = unit;\n\t        }\n\t    };\n\t    EditorManager.prototype.isETPane = function (pane) {\n\t        if (!this._view) {\n\t            return;\n\t        }\n\t        var items = pane.getItems();\n\t        return (items.indexOf(this.getDetails()) >= 0 || items.indexOf(this._view) >= 0);\n\t    };\n\t    EditorManager.prototype.display = function () {\n\t        console.log(\"ETM::Display\");\n\t        var aw = atom.workspace;\n\t        var fpane = atom.workspace.paneForItem(this.getCurrentEditor());\n\t        if (!fpane)\n\t            return;\n\t        if (!aw.paneForItem(this.getOrCreateView()))\n\t            doSplit(this.getOrCreateView());\n\t        if (!aw.paneForItem(manager.getDetails()))\n\t            doSplit(this.getDetails(), SplitDirections.BOTTOM);\n\t        this.opened = true;\n\t    };\n\t    EditorManager.prototype.updateText = function (node) {\n\t        this.fire = false;\n\t        var editor = this.currentEditor;\n\t        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n\t        editor.setText(this.unit.contents());\n\t        this.fire = true;\n\t        if (pos)\n\t            editor.setCursorBufferPosition(pos);\n\t    };\n\t    EditorManager.prototype.selectNode = function (hnode) {\n\t        var node = hnode.lowLevel();\n\t        if (!node)\n\t            return;\n\t        var editor = this.currentEditor;\n\t        if (!editor)\n\t            return;\n\t        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n\t        if (pos)\n\t            editor.setCursorBufferPosition(pos);\n\t    };\n\t    EditorManager.prototype.updateEverything = function (display) {\n\t        if (display === void 0) { display = true; }\n\t        var editor = atom.workspace.getActiveTextEditor();\n\t        if (!editor || this.currentEditor == editor)\n\t            return;\n\t        var pth = editor.getPath();\n\t        if (!pth || path.extname(pth) != \".raml\")\n\t            return;\n\t        this.currentEditor = editor;\n\t        if (this.opened == false && display)\n\t            this.display();\n\t        if (!editor.patched) {\n\t            this.addListenersToEditor(editor);\n\t        }\n\t        this.reparseAST();\n\t        var pos = editor.getBuffer().characterIndexForPosition(editor.getCursorBufferPosition());\n\t        this.positionUpdated(pos);\n\t        this.scheduleViewsUpdate();\n\t    };\n\t    EditorManager.prototype.addListenersToEditor = function (cedit) {\n\t        var _this = this;\n\t        var buffer = cedit.getBuffer();\n\t        buffer.onDidChange(function (x) {\n\t            try {\n\t                var t0 = new Date().getMilliseconds();\n\t                _this.reparseAST();\n\t                var pos = buffer.characterIndexForPosition(cedit.getCursorBufferPosition());\n\t                _this.positionUpdated(pos);\n\t                _this.scheduleViewsUpdate();\n\t                var t1 = new Date().getMilliseconds();\n\t                if (_this.performanceDebug) {\n\t                    console.log(\"Change take:\" + (t1 - t0));\n\t                }\n\t            }\n\t            catch (e) {\n\t                console.log(e);\n\t            }\n\t        });\n\t        //updating ast node on position change\n\t        cedit.getLastCursor().onDidChangePosition(function (x) {\n\t            if (!_this.fire)\n\t                return;\n\t            _this.positionUpdated(buffer.characterIndexForPosition(cedit.getCursorBufferPosition()));\n\t            _this.scheduleViewsUpdate();\n\t        });\n\t        this.addListenersOnMove(cedit);\n\t        this.currentEditor.patched = true;\n\t    };\n\t    EditorManager.prototype.addListenersOnMove = function (cedit) {\n\t        var _this = this;\n\t        var movingPane = false;\n\t        atom.workspace.onDidAddPaneItem(function (event) {\n\t            if (movingPane || _this.isETPane(event.pane) == false || event.item == _this.getOrCreateView() || event.item == _this.getDetails())\n\t                return event;\n\t            setTimeout(function () {\n\t                try {\n\t                    var fpane = atom.workspace.paneForItem(cedit);\n\t                    if (fpane) {\n\t                        movingPane = true;\n\t                        event.pane.moveItemToPane(event.item, fpane, null);\n\t                        movingPane = false;\n\t                        fpane.setActiveItem(event.item);\n\t                        fpane.activate();\n\t                    }\n\t                }\n\t                catch (e) {\n\t                    //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n\t                    console.log(e);\n\t                }\n\t            }, 18);\n\t        });\n\t    };\n\t    //_selectedNode: hl.IHighLevelNode;\n\t    EditorManager.prototype.patchCurrentNode = function (n) {\n\t        this._currentNode = n;\n\t    };\n\t    EditorManager.prototype.getCurrentNode = function () {\n\t        if (this._currentNode == null)\n\t            return this._currentNode = this.ast;\n\t        else\n\t            return this._currentNode;\n\t    };\n\t    EditorManager.prototype.setSelectedNode = function (node) {\n\t        //this._selectedNode = node;\n\t        if (this.unit) {\n\t            var unitPath = this.unit.absolutePath();\n\t            while (node.lowLevel().unit().absolutePath() != unitPath) {\n\t                if (!node.parent()) {\n\t                    break;\n\t                }\n\t                else {\n\t                    node = node.parent();\n\t                }\n\t            }\n\t        }\n\t        var id = node.id();\n\t        var anode = this.ast.findById(id);\n\t        if (anode) {\n\t            node = anode;\n\t        }\n\t        if (this._details) {\n\t            this._details.show(node);\n\t        }\n\t        var editor = this.getCurrentEditor();\n\t        if (editor) {\n\t            this.fire = false;\n\t            try {\n\t                var buffer = editor.getBuffer();\n\t                var posStart = buffer.positionForCharacterIndex(node.lowLevel().start());\n\t                var posEnd = buffer.positionForCharacterIndex(node.lowLevel().end());\n\t                editor.setCursorBufferPosition(posStart);\n\t                this.positionUpdated(buffer.characterIndexForPosition(editor.getCursorBufferPosition()));\n\t            }\n\t            finally {\n\t                this.fire = true;\n\t            }\n\t        }\n\t    };\n\t    EditorManager.prototype.getSelectedNode = function () {\n\t        return this.getCurrentNode();\n\t        //else return this._selectedNode;\n\t    };\n\t    EditorManager.prototype.setText = function (text) {\n\t        console.log(\"ETM::SetText\");\n\t        var editor = this.currentEditor;\n\t        if (editor == null)\n\t            return;\n\t        editor.setText(text);\n\t    };\n\t    EditorManager.prototype.updateViews = function () {\n\t        var cNode = this.getCurrentNode();\n\t        var ds = new Date().getMilliseconds();\n\t        if (this._details) {\n\t            this.getDetails().show(cNode);\n\t        }\n\t        if (this._view) {\n\t            this.getOrCreateView().setUnit(manager.ast);\n\t            this.getOrCreateView().setSelection(cNode);\n\t        }\n\t        var d1 = new Date().getMilliseconds();\n\t        if (this.performanceDebug) {\n\t            console.log(\"Views update:\" + (d1 - ds));\n\t        }\n\t    };\n\t    EditorManager.prototype.updateOutline = function () {\n\t        var cNode = this.getCurrentNode();\n\t        var ds = new Date().getMilliseconds();\n\t        if (this._view) {\n\t            this.getOrCreateView().setUnit(manager.ast);\n\t            this.getOrCreateView().setSelection(cNode);\n\t        }\n\t        var d1 = new Date().getMilliseconds();\n\t        if (this.performanceDebug) {\n\t            console.log(\"Outline update:\" + (d1 - ds));\n\t        }\n\t    };\n\t    EditorManager.prototype.positionUpdated = function (newPosition) {\n\t        this.currentPosition = newPosition;\n\t        if (this.ast) {\n\t            this._currentNode = this.ast.findElementAtOffset(this.currentPosition);\n\t        }\n\t    };\n\t    return EditorManager;\n\t})();\n\tvar manager = null;\n\tfunction initEditorTools(display) {\n\t    if (display === void 0) { display = true; }\n\t    if (manager == null)\n\t        manager = new EditorManager(display);\n\t    else if (display)\n\t        manager.display();\n\t}\n\texports.initEditorTools = initEditorTools;\n\tfunction editorToolsStatus() {\n\t    return manager != null && manager.opened;\n\t}\n\texports.editorToolsStatus = editorToolsStatus;\n\tfunction aquireManager() {\n\t    if (!manager) {\n\t        manager = new EditorManager(true);\n\t    }\n\t    return manager;\n\t}\n\texports.aquireManager = aquireManager;\n\tfunction updateAndSelect(node) {\n\t    if (aquireManager()._view) {\n\t        aquireManager()._view.refresh();\n\t    }\n\t    aquireManager().updateText();\n\t    aquireManager().selectNode(node);\n\t}\n\texports.updateAndSelect = updateAndSelect;\n\t(function (SplitDirections) {\n\t    SplitDirections[SplitDirections[\"RIGHT\"] = 0] = \"RIGHT\";\n\t    SplitDirections[SplitDirections[\"LEFT\"] = 1] = \"LEFT\";\n\t    SplitDirections[SplitDirections[\"TOP\"] = 2] = \"TOP\";\n\t    SplitDirections[SplitDirections[\"BOTTOM\"] = 3] = \"BOTTOM\";\n\t})(exports.SplitDirections || (exports.SplitDirections = {}));\n\tvar SplitDirections = exports.SplitDirections;\n\tfunction doSplit(value, dir) {\n\t    if (dir === void 0) { dir = SplitDirections.RIGHT; }\n\t    var newPane = null;\n\t    switch (dir) {\n\t        case SplitDirections.BOTTOM:\n\t            newPane = atom.workspace.getActivePane().splitDown({});\n\t            break;\n\t        case SplitDirections.TOP:\n\t            newPane = atom.workspace.getActivePane().splitUp({});\n\t            break;\n\t        case SplitDirections.LEFT:\n\t            newPane = atom.workspace.getActivePane().splitLeft({});\n\t            break;\n\t        case SplitDirections.RIGHT:\n\t            newPane = atom.workspace.getActivePane().splitRight({});\n\t            break;\n\t    }\n\t    newPane.addItem(value, 0);\n\t    return newPane;\n\t}\n\texports.doSplit = doSplit;\n\t\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar qcui = __webpack_require__(32);\n\tvar atom = __webpack_require__(31);\n\tvar contextActions = __webpack_require__(23);\n\tvar cc = __webpack_require__(33);\n\tvar et = __webpack_require__(5);\n\t/*\n\t * Quick command is a command object that stores command info, body and filtering function\n\t */\n\tvar QuickCommand = (function () {\n\t    function QuickCommand(id, title, command, priority, when) {\n\t        this.id = id;\n\t        this.title = title;\n\t        this.command = command;\n\t        this.priority = priority;\n\t        this.when = when;\n\t    }\n\t    QuickCommand.prototype.registerAsAtomCommand = function (target) {\n\t        if (this.atomCommand && this.atomCommand.disposed == false)\n\t            this.atomCommand.dispose();\n\t        this.atomCommand = atom.commands.add(target, this.id, this.command);\n\t    };\n\t    QuickCommand.prototype.dispose = function () {\n\t        if (this.atomCommand && this.atomCommand.disposed == false)\n\t            this.atomCommand.dispose();\n\t        cm.unregister(this);\n\t    };\n\t    return QuickCommand;\n\t})();\n\texports.QuickCommand = QuickCommand;\n\t/*\n\t * Command manager manages quick commands.\n\t * All quick commands should be registered here.\n\t * For usage example, see registerCommands\n\t */\n\tvar CommandManager = (function () {\n\t    function CommandManager() {\n\t        this.commands = {};\n\t        this.panel = new qcui.SelectListView(function (command) { return command.command(); }, function (command) { return command.title; }, 'title');\n\t    }\n\t    CommandManager.prototype.register = function (cmd) {\n\t        if (this.commands[cmd.id] != null)\n\t            this.unregister(cmd.id);\n\t        this.commands[cmd.id] = cmd;\n\t        return cmd;\n\t    };\n\t    CommandManager.prototype.unregister = function (cmd) {\n\t        if (typeof (cmd) == \"string\")\n\t            this.unregister(this.commands[cmd]);\n\t        var qcmd = cmd;\n\t        if (qcmd == null)\n\t            return null;\n\t        delete this.commands[qcmd.id];\n\t        return qcmd;\n\t    };\n\t    CommandManager.prototype.add = function (id, title, command, when, priority, atomTarget) {\n\t        var cmd = new QuickCommand(id, title, command, priority ? priority : 0, when ? when : function () { return true; });\n\t        if (atomTarget)\n\t            cmd.registerAsAtomCommand(atomTarget);\n\t        this.register(cmd);\n\t        return cmd;\n\t    };\n\t    CommandManager.prototype.show = function (predicate) {\n\t        var joinedCommands = {};\n\t        for (var commandId in this.commands) {\n\t            joinedCommands[commandId] = this.commands[commandId];\n\t        }\n\t        this.getDynamicCommands().forEach(function (currentCommand) {\n\t            joinedCommands[currentCommand.id] = currentCommand;\n\t        });\n\t        var list = Object.keys(joinedCommands)\n\t            .map(function (key) { return joinedCommands[key]; })\n\t            .sort(function (a, b) { return b.priority - a.priority; })\n\t            .filter(function (cmd) { return cmd.when(); });\n\t        if (predicate)\n\t            list = list.filter(predicate);\n\t        this.panel.show(list);\n\t    };\n\t    CommandManager.prototype.getDynamicCommands = function () {\n\t        var result = [];\n\t        var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t        currentActions.forEach(function (action) {\n\t            var convertedQuickCommand = new QuickCommand(action.name, action.label ? action.label : action.name, action.onClick, 1, function () { return true; });\n\t            var cmd = convertedQuickCommand;\n\t            cmd['__module__'] = 'editorTools';\n\t            result.push(convertedQuickCommand);\n\t        });\n\t        return result;\n\t    };\n\t    return CommandManager;\n\t})();\n\texports.CommandManager = CommandManager;\n\tvar cm;\n\t/*\n\t * Always return working copy of manager.\n\t */\n\tfunction manager() {\n\t    if (!cm)\n\t        cm = new CommandManager();\n\t    return cm;\n\t}\n\texports.manager = manager;\n\t/*\n\t * function for RAML -> Show Quick Commands (^Q)\n\t */\n\tfunction showCommands() {\n\t    manager().show();\n\t}\n\texports.showCommands = showCommands;\n\t/*\n\t * registerCommands is called at the plugin initialization for registering global commands\n\t */\n\tfunction registerCommands() {\n\t    cc.registerQuickCommands(manager());\n\t    cm.add('api-workbench:editor-tools', 'Show Editor Tools', function () { return et.initEditorTools(); }, function () { return et.editorToolsStatus() == false; });\n\t}\n\texports.registerCommands = registerCommands;\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar fs = __webpack_require__(17);\n\tvar path = __webpack_require__(16);\n\tvar rp = __webpack_require__(24);\n\tvar search = rp.search;\n\tvar _ = __webpack_require__(26);\n\tvar suggestions = __webpack_require__(27);\n\texports.selector = '.source.raml';\n\texports.disableForSelector = '.text.html .comment';\n\texports.filterSuggestions = true;\n\texports.inclusionPriority = 1;\n\texports.excludeLowerPriority = true;\n\tvar editorTools = __webpack_require__(5);\n\tfunction onDidInsertSuggestion(event) {\n\t    var offset = event.editor.getBuffer().characterIndexForPosition(event.triggerPosition);\n\t    if (event.suggestion.annotation) {\n\t        var txt = event.editor.getBuffer().getText();\n\t        for (var i = offset; i < txt.length; i++) {\n\t            var c = txt.charAt(i);\n\t            if (c == ')') {\n\t                offset = i + 1;\n\t                break;\n\t            }\n\t            if (c == '\\r' || c == '\\n') {\n\t                return;\n\t            }\n\t        }\n\t        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t        event.editor.getBuffer().insert(newPos, ':');\n\t        return;\n\t    }\n\t    if ((event.suggestion.replacementPrefix && event.suggestion.extra) || event.suggestion.extra == \"%\") {\n\t        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset - event.suggestion.replacementPrefix.length);\n\t        event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t    }\n\t    else {\n\t        //This actually looks exactly like a previous case but typing it as a separate case for now TODO\n\t        if (event.suggestion.extra == \" \") {\n\t            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t        }\n\t        //FIXME\n\t        if (event.suggestion.extra == \" { \") {\n\t            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t        }\n\t        if (event.suggestion.extra && event.suggestion.extra.indexOf(\"!include\") != -1) {\n\t            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t        }\n\t    }\n\t}\n\texports.onDidInsertSuggestion = onDidInsertSuggestion;\n\tvar FSProvider = (function () {\n\t    function FSProvider() {\n\t    }\n\t    FSProvider.prototype.contentDirName = function (content) {\n\t        var contentPath = content.getPath();\n\t        return path.dirname(contentPath);\n\t    };\n\t    FSProvider.prototype.dirName = function (childPath) {\n\t        return path.dirname(childPath);\n\t    };\n\t    FSProvider.prototype.exists = function (checkPath) {\n\t        return fs.existsSync(checkPath);\n\t    };\n\t    FSProvider.prototype.resolve = function (contextPath, relativePath) {\n\t        return path.resolve(contextPath, relativePath);\n\t    };\n\t    FSProvider.prototype.isDirectory = function (dirPath) {\n\t        var stat = fs.statSync(dirPath);\n\t        return stat && stat.isDirectory();\n\t    };\n\t    FSProvider.prototype.readDir = function (dirPath) {\n\t        return fs.readdirSync(dirPath);\n\t    };\n\t    FSProvider.prototype.existsAsync = function (path) {\n\t        return new Promise(function (resolve) {\n\t            fs.exists(path, function (result) { resolve(result); });\n\t        });\n\t    };\n\t    /**\n\t     * Returns directory content list.\n\t     * @param fullPath\n\t     */\n\t    FSProvider.prototype.readDirAsync = function (path) {\n\t        return new Promise(function (resolve) {\n\t            fs.readdir(path, function (err, result) { resolve(result); });\n\t        });\n\t    };\n\t    /**\n\t     * Check whether the path points to a directory.\n\t     * @param fullPath\n\t     */\n\t    FSProvider.prototype.isDirectoryAsync = function (path) {\n\t        return new Promise(function (resolve) {\n\t            fs.stat(path, function (err, stats) { resolve(stats.isDirectory()); });\n\t        });\n\t    };\n\t    return FSProvider;\n\t})();\n\tvar AtomEditorState = (function () {\n\t    function AtomEditorState(textEditor, request) {\n\t        this.request = request;\n\t        this.textEditor = textEditor;\n\t    }\n\t    AtomEditorState.prototype.getText = function () {\n\t        return this.textEditor.getBuffer().getText();\n\t    };\n\t    AtomEditorState.prototype.getPath = function () {\n\t        return this.textEditor.getPath();\n\t    };\n\t    AtomEditorState.prototype.getBaseName = function () {\n\t        return path.basename(this.getPath());\n\t    };\n\t    AtomEditorState.prototype.getOffset = function () {\n\t        return this.request.editor.getBuffer().characterIndexForPosition(this.request.bufferPosition);\n\t    };\n\t    return AtomEditorState;\n\t})();\n\tfunction getSuggestions(request) {\n\t    var t0 = new Date().getMilliseconds();\n\t    try {\n\t        var editorState = new AtomEditorState(request.editor, request);\n\t        return suggestions.suggest(editorState, new FSProvider());\n\t    }\n\t    finally {\n\t        if (editorTools.aquireManager()) {\n\t            var m = editorTools.aquireManager();\n\t            if (m.performanceDebug) {\n\t                var t1 = new Date().getMilliseconds();\n\t                console.log(\"Completion calc:\" + (t1 - t0));\n\t            }\n\t        }\n\t    }\n\t}\n\texports.getSuggestions = getSuggestions;\n\tfunction getAstNode(request, clearLastChar, allowNull) {\n\t    if (clearLastChar === void 0) { clearLastChar = true; }\n\t    if (allowNull === void 0) { allowNull = true; }\n\t    var p = request.editor.getPath();\n\t    var prj = rp.project.createProject(path.dirname(p));\n\t    var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t    var text = request.editor.getBuffer().getText();\n\t    var kind = search.determineCompletionKind(text, offset);\n\t    if (kind == search.LocationKind.KEY_COMPLETION && clearLastChar) {\n\t        var pos = offset > 0 ? offset - 1 : offset;\n\t        for (var i = pos; i > 0; i--) {\n\t            var c = text[i];\n\t            if (c == '\\r' || c == '\\n') {\n\t                break;\n\t            }\n\t            else {\n\t                if (c == ' ' || c == '\\t') {\n\t                    ilevel++;\n\t                }\n\t            }\n\t        }\n\t        var oldOfffset = offset;\n\t        text = text.substring(0, oldOfffset) + \"k:\" + text.substring(oldOfffset);\n\t    }\n\t    var ilevel = 0;\n\t    var unit = prj.setCachedUnitContent(path.basename(p), text);\n\t    var ast = unit.highLevel();\n\t    var cm = offset;\n\t    for (var pm = offset - 1; pm >= 0; pm--) {\n\t        var c = text[pm];\n\t        //if (c==' '||c=='\\t'||c=='\\r'||c=='\\n'){\n\t        //    cm=pm-1;\n\t        //    continue;\n\t        //}\n\t        if (c == ' ' || c == '\\t') {\n\t            cm = pm - 1;\n\t            continue;\n\t        }\n\t        break;\n\t    }\n\t    var astNode = ast.findElementAtOffset(cm);\n\t    if (astNode && astNode.parent() == null) {\n\t        if (ilevel > 0 && kind == search.LocationKind.KEY_COMPLETION) {\n\t            var attr = _.find(astNode.attrs(), function (attr) {\n\t                var at = attr;\n\t                return at.lowLevel().start() < offset && at.lowLevel().end() >= offset && !at.property().isKey();\n\t            });\n\t            if (!attr) {\n\t                if (allowNull) {\n\t                    return null;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if (!allowNull && !astNode) {\n\t        return ast;\n\t    }\n\t    return astNode;\n\t}\n\texports.getAstNode = getAstNode;\n\tfunction saveUnit(unit) {\n\t    var unitPath = unit.absolutePath();\n\t    var unitText = unit.contents();\n\t    //first trying to find an opened text editor\n\t    var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n\t        var editorPath = editor.getPath();\n\t        return editorPath == unitPath;\n\t    });\n\t    if (openedEditor) {\n\t        openedEditor.setText(unitText);\n\t    }\n\t    else {\n\t        fs.writeFileSync(unitPath, unitText);\n\t    }\n\t}\n\texports.saveUnit = saveUnit;\n\t\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar path = __webpack_require__(16);\n\tvar fs = __webpack_require__(17);\n\tvar atom_space_pen_views_1 = __webpack_require__(25);\n\tvar provider = __webpack_require__(7);\n\tvar tooltipManager = __webpack_require__(35);\n\tvar UI = __webpack_require__(18);\n\tvar outline = __webpack_require__(34);\n\tvar editorTools = __webpack_require__(5);\n\tvar QuickOutlineDialog = (function () {\n\t    function QuickOutlineDialog(_editor) {\n\t        this._editor = _editor;\n\t    }\n\t    QuickOutlineDialog.prototype.extraContent = function (s) {\n\t    };\n\t    QuickOutlineDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var nodeToSelect = null;\n\t        var node = provider.getAstNode({ bufferPosition: this._editor.getCursorBufferPosition(), editor: this._editor }, false, false);\n\t        var vc = UI.section(\"Quick outline:\");\n\t        var section = outline.createTree(node.root(), function (x) {\n\t            if (x.selection) {\n\t                if (x.selection.elements.length > 0) {\n\t                    nodeToSelect = x.selection.elements[0];\n\t                    ok.setDisabled(false);\n\t                    return;\n\t                }\n\t            }\n\t            ok.setDisabled(true);\n\t        }, function (model) {\n\t            var editor = _this._editor;\n\t            var buffer = editor.getBuffer();\n\t            var posStart = buffer.positionForCharacterIndex(model.lowLevel().start());\n\t            editor.setCursorScreenPosition(posStart);\n\t            zz.destroy();\n\t        });\n\t        section.setStyle(\"max-height\", \"800px\");\n\t        section.addClass(\"tree-view-scroller\");\n\t        vc.addChild(section);\n\t        var cancel = UI.buttonSimple(\"Cancel\", function (x) { zz.destroy(); }, UI.Icon.NONE);\n\t        cancel.setStyle(\"float\", \"right\")\n\t            .margin(4, 10);\n\t        var ok = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) {\n\t            if (nodeToSelect) {\n\t                editorTools.aquireManager().setSelectedNode(nodeToSelect);\n\t            }\n\t            zz.destroy();\n\t        });\n\t        ok.setStyle(\"float\", \"right\")\n\t            .margin(4, 10);\n\t        ok.setDisabled(true);\n\t        vc.addChild(ok);\n\t        vc.addChild(cancel);\n\t        var html = vc.renderUI();\n\t        html.tabIndex = 0;\n\t        html.onkeypress = function (x) {\n\t            if (x.keyCode == 27) {\n\t                zz.destroy();\n\t            }\n\t        };\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return QuickOutlineDialog;\n\t})();\n\tfunction showQuickOutline(editor) {\n\t    new QuickOutlineDialog(editor).show();\n\t}\n\tfunction pixelPositionFromMouseEvent(editorView) {\n\t    var clientX = 0, clientY = 0;\n\t    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n\t    var top = clientY - linesClientRect.top;\n\t    var left = clientX - linesClientRect.left;\n\t    return { top: top, left: left };\n\t}\n\tfunction getFromShadowDom(element, selector) {\n\t    var el = element[0];\n\t    var found = el.rootElement.querySelectorAll(selector);\n\t    return atom_space_pen_views_1.$(found[0]);\n\t}\n\tfunction show() {\n\t    var ed = atom.workspace.getActiveTextEditor();\n\t    if (!ed) {\n\t        return;\n\t    }\n\t    var filePath = ed.getPath();\n\t    var filename = path.basename(filePath);\n\t    var ext = path.extname(filename);\n\t    if (!tooltipManager.isAllowedExtension(ext))\n\t        return;\n\t    if (!fs.existsSync(filePath)) {\n\t        return;\n\t    }\n\t    showQuickOutline(ed);\n\t}\n\texports.show = show;\n\t\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(17);\n\tvar path = __webpack_require__(16);\n\tvar rp = __webpack_require__(24);\n\tvar stubs = rp.stubs;\n\tvar universes = rp.universes;\n\tvar search = rp.search;\n\tvar _ = __webpack_require__(26);\n\tvar provider = __webpack_require__(7);\n\tvar UI = __webpack_require__(18);\n\tvar SpacePenViews = __webpack_require__(25);\n\tvar def = rp.ds;\n\tvar services = def;\n\tvar editorTools = __webpack_require__(5);\n\tvar index_1 = __webpack_require__(29);\n\tfunction createGlobalSchema(attr) {\n\t    var r = attr.parent().root();\n\t    var t = attr.property().range().universe().type(\"GlobalSchema\");\n\t    var sc = stubs.createStubNode(t, t.universe().type(\"Api\").property(\"schemas\"), \"\" + attr.value());\n\t    sc.attrOrCreate(\"value\").setValue(\"!include \" + \"schemas/\" + attr.value() + \".json\");\n\t    r.add(sc);\n\t    var ed = atom.workspace.getActiveTextEditor();\n\t    ed.getBuffer().setText(r.lowLevel().unit().contents());\n\t    var sdir = path.resolve(path.dirname(ed.getPath()), \"schemas\");\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = path.resolve(sdir, attr.value() + \".json\");\n\t    fs.writeFileSync(shFile, \"\\n{\\n  \\\"$schema\\\" : \\\"http://json-schema.org/draft-04/schema\\\" ,\\n  \\\"type\\\" : \\\"object\\\" ,\\n  \\\"properties\\\" : {\\n   }\\n}\\n\");\n\t    atom.workspace.open(shFile, {});\n\t}\n\texports.createGlobalSchema = createGlobalSchema;\n\tfunction createGlobalSchemaFromNameAndContent(root, name, schp, content, absolutePath) {\n\t    if (index_1.universeHelpers.isRAML10Node(root)) {\n\t        createGlobalSchemaFromNameAndContent10(root, name, schp, content, absolutePath);\n\t    }\n\t    else if (index_1.universeHelpers.isRAML08Node(root)) {\n\t        createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath);\n\t    }\n\t}\n\texports.createGlobalSchemaFromNameAndContent = createGlobalSchemaFromNameAndContent;\n\tfunction createSchemaFile(content, schemaPath, absolutePath) {\n\t    var ed = getActiveEditor();\n\t    var sdir = absolutePath ? path.dirname(absolutePath) : path.resolve(path.dirname(ed.getPath()), path.dirname(schemaPath));\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = absolutePath ? absolutePath : path.resolve(path.dirname(ed.getPath()), schemaPath);\n\t    fs.writeFileSync(shFile, content);\n\t}\n\tfunction createGlobalSchemaFromNameAndContent10(root, name, schemaPath, content, absolutePath) {\n\t    var t = root.definition().universe().type(universes.Universe10.TypeDeclaration.name);\n\t    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe10.Api.name).property(universes.Universe10.Api.properties.types.name), \"\" + name);\n\t    sc.attrOrCreate(universes.Universe10.TypeDeclaration.properties.type.name).setValue(\"!include \" + schemaPath);\n\t    root.add(sc);\n\t    createSchemaFile(content, schemaPath, absolutePath);\n\t}\n\texports.createGlobalSchemaFromNameAndContent10 = createGlobalSchemaFromNameAndContent10;\n\tfunction createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath) {\n\t    var t = root.definition().universe().type(universes.Universe08.GlobalSchema.name);\n\t    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe08.Api.name).property(universes.Universe08.Api.properties.schemas.name), \"\" + name);\n\t    sc.attrOrCreate(universes.Universe08.GlobalSchema.properties.value.name).setValue(\"!include \" + schp);\n\t    root.add(sc);\n\t    createSchemaFile(content, schp, absolutePath);\n\t}\n\texports.createGlobalSchemaFromNameAndContent08 = createGlobalSchemaFromNameAndContent08;\n\tfunction saveExample(r, schp, content) {\n\t    var ed = getActiveEditor();\n\t    var sdir = path.resolve(path.dirname(ed.getPath()), path.dirname(schp));\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = path.resolve(path.dirname(ed.getPath()), schp);\n\t    fs.writeFileSync(shFile, content);\n\t}\n\texports.saveExample = saveExample;\n\tvar NewProjectDialog = (function () {\n\t    function NewProjectDialog(title) {\n\t        if (title === void 0) { title = \"Create RAML Project\"; }\n\t        this.title = title;\n\t        this.apititle = \"New API\";\n\t        this.version = \"v1\";\n\t        this.baseUri = \"http://api.samplehost.com\";\n\t        this._raml1 = true;\n\t        this._defStructure = true;\n\t        this._createSampleResource = true;\n\t        this.sourceValue = path.resolve(this.generateDefaultProjectParentFolder(), \"newRamlProject\");\n\t    }\n\t    NewProjectDialog.prototype.generateDefaultProjectParentFolder = function () {\n\t        return UI.fdUtils.getHome();\n\t    };\n\t    NewProjectDialog.prototype.extraContent = function (s) {\n\t    };\n\t    NewProjectDialog.prototype.validateProjectLocation = function (value) {\n\t        var toValidate = value ? value.trim() : \"\";\n\t        if (!toValidate) {\n\t            return UI.errorStatus(\"Path should't be empty\");\n\t        }\n\t        var parentDirectory = path.dirname(toValidate);\n\t        if (!parentDirectory || parentDirectory == \".\")\n\t            return UI.errorStatus(\"Can not find path parent\");\n\t        if (!fs.existsSync(parentDirectory))\n\t            return UI.errorStatus(\"Parent directory does not exist\");\n\t        return UI.okStatus();\n\t    };\n\t    NewProjectDialog.prototype.validateTitle = function (value) {\n\t        var toValidate = value ? value.trim() : \"\";\n\t        if (!toValidate || toValidate.length < 1) {\n\t            return UI.errorStatus(\"Title field is required\");\n\t        }\n\t        return UI.okStatus();\n\t    };\n\t    NewProjectDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var section = UI.section(this.title, UI.Icon.BOOK, false, false, UI.h3(\"Please select location to place your project:\")).pad(10, 10);\n\t        var panel = new UI.Panel(UI.LayoutType.BLOCK);\n\t        var statusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n\t        var slf = new UI.CustomField(\"\", statusLabel, function (x) { return x; });\n\t        slf.setDisplay(this.validateProjectLocation(this.sourceValue).code == UI.StatusCode.ERROR);\n\t        panel.addChild(slf);\n\t        var projectLocationInput = UI.texfField(\"\", this.sourceValue, function (x) { return _this.sourceValue = x.getBinding().get(); });\n\t        projectLocationInput.getBinding().addValidator(function () { return _this.validateProjectLocation(_this.sourceValue); });\n\t        projectLocationInput.setStyle(\"width\", \"400px\");\n\t        projectLocationInput.getBinding().addListener(function (value) {\n\t            //var st = projectLocationInput.getBinding().status()\n\t            var st = _this.validateProjectLocation(value);\n\t            if (st.code != UI.StatusCode.ERROR) {\n\t                //this.updateUI(q, x)\n\t                statusLabel.setText(\"\");\n\t                statusLabel.setIcon(UI.Icon.NONE);\n\t                slf.setDisplay(false);\n\t            }\n\t            else {\n\t                statusLabel.setText(st.message);\n\t                statusLabel.setIcon(UI.Icon.BUG);\n\t                slf.setDisplay(true);\n\t            }\n\t        });\n\t        panel.addChild(\n\t        //UI.hc(\n\t        projectLocationInput);\n\t        panel.addChild(UI.h3(\"Title of your API:\"));\n\t        var titleStatusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n\t        var titleStatusMessage = new UI.CustomField(\"\", titleStatusLabel, function (x) { return x; });\n\t        titleStatusMessage.setDisplay(false);\n\t        panel.addChild(titleStatusMessage);\n\t        var titleTextField = UI.texfField(\"\", this.apititle, function (x) { return _this.apititle = x.getBinding().get(); });\n\t        titleTextField.getBinding().addValidator(function () { return _this.validateTitle(_this.apititle); });\n\t        titleTextField.getBinding().addListener(function (value) {\n\t            var status = _this.validateTitle(value);\n\t            if (status.code !== UI.StatusCode.ERROR) {\n\t                titleStatusLabel.setText(\"\");\n\t                titleStatusLabel.setIcon(UI.Icon.NONE);\n\t                titleStatusMessage.setDisplay(false);\n\t            }\n\t            else {\n\t                titleStatusLabel.setText(status.message);\n\t                titleStatusLabel.setIcon(UI.Icon.BUG);\n\t                titleStatusMessage.setDisplay(true);\n\t            }\n\t        });\n\t        panel.addChild(titleTextField);\n\t        panel.addChild(UI.h3(\"Version of your API\"));\n\t        panel.addChild(UI.texfField(\"\", this.version, function (x) { return _this.version = x.getBinding().get(); }));\n\t        panel.addChild(UI.h3(\"Base URI of your API\"));\n\t        panel.addChild(UI.texfField(\"\", this.baseUri, function (x) { return _this.baseUri = x.getBinding().get(); }));\n\t        section.addChild(panel);\n\t        var r1 = UI.checkBox(\"Use RAML 1.0\");\n\t        r1.setValue(this._raml1);\n\t        r1.getBinding().addListener(function (x) { return _this._raml1 = r1.getValue(); });\n\t        section.addChild(r1);\n\t        var r2 = UI.checkBox(\"Create default directory structure\");\n\t        r2.setValue(this._defStructure);\n\t        r2.getBinding().addListener(function (x) { return _this._defStructure = r2.getValue(); });\n\t        section.addChild(r2);\n\t        var r3 = UI.checkBox(\"Create sample resource and method\");\n\t        r3.setValue(this._createSampleResource);\n\t        r3.getBinding().addListener(function (x) { return _this._createSampleResource = r3.getValue(); });\n\t        section.addChild(r3);\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        buttonBar.addChild(UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            if (_this.validateTitle(_this.apititle).code === UI.StatusCode.ERROR) {\n\t                return;\n\t            }\n\t            if (_this.validateProjectLocation(_this.sourceValue).code === UI.StatusCode.ERROR) {\n\t                return;\n\t            }\n\t            _this.onOk(zz);\n\t            zz.destroy();\n\t        }));\n\t        section.addChild(buttonBar);\n\t        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n\t    };\n\t    NewProjectDialog.prototype.createIfNotExist = function (p) {\n\t        var ps = path.resolve(this.sourceValue, p);\n\t        if (!fs.existsSync(ps)) {\n\t            fs.mkdirSync(ps);\n\t        }\n\t    };\n\t    NewProjectDialog.prototype.onOk = function (zz) {\n\t        if (!fs.existsSync(this.sourceValue)) {\n\t            fs.mkdirSync(this.sourceValue);\n\t        }\n\t        if (this._defStructure) {\n\t            this.createIfNotExist(\"schemas\");\n\t            this.createIfNotExist(\"examples\");\n\t            this.createIfNotExist(\"traits\");\n\t            this.createIfNotExist(\"resourceTypes\");\n\t            this.createIfNotExist(\"securitySchemes\");\n\t            this.createIfNotExist(\"documentation\");\n\t            if (this._raml1) {\n\t                this.createIfNotExist(\"notebooks\");\n\t                this.createIfNotExist(\"scripts\");\n\t            }\n\t        }\n\t        var content = createRAMLFile(this.apititle, this.version, this.baseUri, this._createSampleResource, this._raml1);\n\t        var ps = path.resolve(this.sourceValue, \"api.raml\");\n\t        fs.writeFileSync(ps, content);\n\t        atom.open({ pathsToOpen: [this.sourceValue, ps] });\n\t    };\n\t    return NewProjectDialog;\n\t})();\n\tfunction createRAMLFile(title, version, baseUri, sample, raml1) {\n\t    if (sample === void 0) { sample = true; }\n\t    if (raml1 === void 0) { raml1 = true; }\n\t    var apiLines = [(raml1 ? \"#%RAML 1.0\" : \"#%RAML 0.8\"), (\"title: \" + title)];\n\t    if (version)\n\t        apiLines.push(\"version: \" + version);\n\t    if (baseUri)\n\t        apiLines.push(\"baseUri: \" + baseUri);\n\t    var typesLines = [\n\t        'types:',\n\t        '  TestType:',\n\t        '    type: object',\n\t        '    properties:',\n\t        '      id: number',\n\t        '      optional?: string',\n\t        '      expanded:',\n\t        '        type: object',\n\t        '        properties:',\n\t        '          count: number'\n\t    ], resourceLines = [\n\t        '/helloWorld:',\n\t        '  get:',\n\t        '    responses:',\n\t        '      200:',\n\t        '        body:',\n\t        '          application/json:',\n\t        '            example: |',\n\t        '              {',\n\t        '                \"message\" : \"Hello World\"',\n\t        '              }'\n\t    ];\n\t    var result = apiLines;\n\t    if (sample) {\n\t        if (raml1)\n\t            result = result.concat(typesLines);\n\t        result = result.concat(resourceLines);\n\t    }\n\t    return result.join('\\n') + '\\n';\n\t}\n\texports.createRAMLFile = createRAMLFile;\n\tfunction newProject() {\n\t    new NewProjectDialog().show();\n\t}\n\texports.newProject = newProject;\n\t// export function moveResource(h:hl.IHighLevelNode){\n\t//     new move.MoveElementsDialog(h, \"Resource Type\",true).show()\n\t// }\n\tfunction splitOnLines(text) {\n\t    var lines = text.match(/^.*((\\r\\n|\\n|\\r)|$)/gm);\n\t    return lines;\n\t}\n\texports.splitOnLines = splitOnLines;\n\tfunction cleanEmptyLines(text) {\n\t    var lines = splitOnLines(text);\n\t    var rs = [];\n\t    for (var i = 0; i < lines.length; i++) {\n\t        if (lines[i].trim().length > 0) {\n\t            rs.push(lines[i]);\n\t        }\n\t    }\n\t    return rs.join(\"\");\n\t}\n\texports.cleanEmptyLines = cleanEmptyLines;\n\t//FIXME remove it from here duplication with jsyaml2lowLevel.ts\n\tfunction stripIndent(text, indent) {\n\t    var lines = splitOnLines(text);\n\t    var rs = [];\n\t    for (var i = 0; i < lines.length; i++) {\n\t        if (i == 0) {\n\t            rs.push(lines[0]);\n\t        }\n\t        else {\n\t            rs.push(lines[i].substring(indent.length));\n\t        }\n\t    }\n\t    return rs.join(\"\");\n\t}\n\tvar leadingIndent = function (node, text) {\n\t    var leading = \"\";\n\t    var pos = node.start() - 1;\n\t    while (pos > 0) {\n\t        var ch = text[pos];\n\t        if (ch == '\\r' || ch == '\\n')\n\t            break;\n\t        leading = ch + leading;\n\t        pos--;\n\t    }\n\t    return leading;\n\t};\n\tfunction indent(line) {\n\t    var rs = \"\";\n\t    for (var i = 0; i < line.length; i++) {\n\t        var c = line[i];\n\t        if (c == '\\r' || c == '\\n') {\n\t            continue;\n\t        }\n\t        if (c == ' ' || c == '\\t') {\n\t            rs += c;\n\t            continue;\n\t        }\n\t        break;\n\t    }\n\t    return rs;\n\t}\n\tfunction getActiveEditor() {\n\t    var activeEditor = atom.workspace.getActiveTextEditor();\n\t    if (activeEditor) {\n\t        return activeEditor;\n\t    }\n\t    if (editorTools.aquireManager())\n\t        return editorTools.aquireManager().getCurrentEditor();\n\t    return null;\n\t}\n\texports.getActiveEditor = getActiveEditor;\n\tvar MoveToNewFileDialog = (function () {\n\t    function MoveToNewFileDialog(node) {\n\t        this.node = node;\n\t    }\n\t    MoveToNewFileDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n\t        var errorLabel = UI.label(\"please enter correct destination path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        vc.addChild(UI.label(\"Please enter destination path\"));\n\t        var txt = UI.texfField(\"\", \"\", function (x) {\n\t            if (!txt) {\n\t                return;\n\t            }\n\t            _this.destination = txt.getBinding().get();\n\t            var isError = _this.destination.trim().length == 0;\n\t            if (!isError) {\n\t                if (path.extname(_this.destination) != '.raml') {\n\t                    isError = true;\n\t                }\n\t            }\n\t            if (!isError) {\n\t                var dir = path.resolve(path.dirname(getActiveEditor().getPath()), path.dirname(_this.destination));\n\t                if (!fs.existsSync(dir)) {\n\t                    isError = true;\n\t                }\n\t                else {\n\t                    var st = fs.statSync(dir);\n\t                    if (!st.isDirectory()) {\n\t                        isError = true;\n\t                    }\n\t                }\n\t            }\n\t            errorLabel.setDisplay(isError);\n\t            okButton.setDisabled(isError);\n\t        });\n\t        vc.addChild(UI.vc(txt));\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            var d = path.resolve(path.dirname(getActiveEditor().getPath()), _this.destination);\n\t            var dump = _this.node.lowLevel().dump();\n\t            var ci = splitOnLines(dump);\n\t            var li = ci.length > 1 ? indent(ci[1]) : indent(ci[0]);\n\t            dump = dump.substring(_this.node.lowLevel().keyEnd() - _this.node.lowLevel().start() + 1).trim();\n\t            dump = stripIndent(dump, li);\n\t            dump = \"#%RAML 0.8 \" + _this.node.definition().nameId() + \"\\n\" + dump;\n\t            fs.writeFileSync(d, dump);\n\t            //no we need to replace content of the node with text;\n\t            var txt = node.lowLevel().unit().contents();\n\t            var endPart = txt.substring(node.lowLevel().end());\n\t            var startPart = txt.substring(0, node.lowLevel().keyEnd() + 1);\n\t            var vl = startPart + \" !include \" + _this.destination + endPart;\n\t            getActiveEditor().setText(vl);\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return MoveToNewFileDialog;\n\t})();\n\texports.MoveToNewFileDialog = MoveToNewFileDialog;\n\tfunction moveOut(h) {\n\t    new MoveToNewFileDialog(h).show();\n\t}\n\texports.moveOut = moveOut;\n\tfunction renameRAMLElement() {\n\t    var ed = getActiveEditor();\n\t    var quickFixes = [];\n\t    if (ed) {\n\t        if (path.extname(ed.getPath()) == '.raml') {\n\t            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t            var node = provider.getAstNode(request, false);\n\t            if (!node) {\n\t                return;\n\t            }\n\t            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t            var kind = search.determineCompletionKind(ed.getBuffer().getText(), offset);\n\t            if (kind == search.LocationKind.VALUE_COMPLETION) {\n\t                var hlnode = node;\n\t                var attr = _.find(hlnode.attrs(), function (x) { return x.lowLevel().start() < offset && x.lowLevel().end() >= offset && !x.property().getAdapter(services.RAMLPropertyService).isKey(); });\n\t                if (attr) {\n\t                    if (attr.value()) {\n\t                        var p = attr.property();\n\t                        //FIXME INFRASTRUCTURE NEEDED\n\t                        var v = attr.value();\n\t                        var targets = search.referenceTargets(p, hlnode);\n\t                        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n\t                        if (t) {\n\t                            UI.prompt(\"New name for \" + attr.value(), function (newVal) {\n\t                                findUsagesImpl(function (n, r) {\n\t                                    //todo update nodes\n\t                                    r.reverse().forEach(function (x) {\n\t                                        var ua = x;\n\t                                        ua.asAttr().setValue(newVal);\n\t                                    });\n\t                                    n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n\t                                    var ed = getActiveEditor();\n\t                                    ed.getBuffer().setText(n.lowLevel().unit().contents());\n\t                                });\n\t                            }, attr.value());\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (kind == search.LocationKind.KEY_COMPLETION || kind == search.LocationKind.SEQUENCE_KEY_COPLETION) {\n\t                var hlnode = node;\n\t                UI.prompt(\"New name for \" + hlnode.name(), function (newVal) {\n\t                    findUsagesImpl(function (n, r) {\n\t                        var oldValue = n.attrValue(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId());\n\t                        //todo update nodes\n\t                        r.reverse().forEach(function (x) {\n\t                            var ua = x;\n\t                            renameInProperty(ua.asAttr(), oldValue, newVal);\n\t                        });\n\t                        n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n\t                        var ed = getActiveEditor();\n\t                        ed.getBuffer().setText(n.lowLevel().unit().contents());\n\t                    });\n\t                }, hlnode.name());\n\t            }\n\t        }\n\t    }\n\t}\n\texports.renameRAMLElement = renameRAMLElement;\n\tfunction renameInProperty(property, contentToReplace, replaceWith) {\n\t    var oldPropertyValue = property.value();\n\t    if (typeof oldPropertyValue == 'string') {\n\t        var oldPropertyStringValue = oldPropertyValue;\n\t        var newPropertyStringValue = oldPropertyStringValue.replace(contentToReplace, replaceWith);\n\t        property.setValue(newPropertyStringValue);\n\t        if (oldPropertyStringValue.indexOf(contentToReplace) == -1) {\n\t            if (property.name().indexOf(contentToReplace) != -1) {\n\t                var newValue = property.name().replace(contentToReplace, replaceWith);\n\t                property.setKey(newValue);\n\t            }\n\t        }\n\t        return;\n\t    }\n\t    else if (oldPropertyValue && (typeof oldPropertyValue === \"object\")) {\n\t        var structuredValue = oldPropertyValue;\n\t        var oldPropertyStringValue = structuredValue.valueName();\n\t        if (oldPropertyStringValue.indexOf(contentToReplace) != -1) {\n\t            var convertedHighLevel = structuredValue.toHighLevel();\n\t            if (convertedHighLevel) {\n\t                var found = false;\n\t                if (convertedHighLevel.definition().isAnnotationType()) {\n\t                    var prop = getKey(convertedHighLevel.definition(), structuredValue.lowLevel());\n\t                    prop.setValue(\"(\" + replaceWith + \")\");\n\t                    return;\n\t                }\n\t                convertedHighLevel.attrs().forEach(function (attribute) {\n\t                    if (attribute.property().getAdapter(services.RAMLPropertyService).isKey()) {\n\t                        var oldValue = attribute.value();\n\t                        if (typeof oldValue == 'string') {\n\t                            found = true;\n\t                            var newValue = oldValue.replace(contentToReplace, replaceWith);\n\t                            attribute.setValue(newValue);\n\t                        }\n\t                    }\n\t                });\n\t                return;\n\t            }\n\t        }\n\t    }\n\t    //default case\n\t    property.setValue(replaceWith);\n\t}\n\tfunction getKey(t, n) {\n\t    var up = new def.UserDefinedProp(\"name\", null);\n\t    //up.withDomain(this);\n\t    up.withRange(this.universe().type(universes.Universe10.StringType.name));\n\t    up.withFromParentKey(true);\n\t    var node = t.getAdapter(services.RAMLService).getDeclaringNode();\n\t    //node:ll.ILowLevelASTNode, parent:hl.IHighLevelNode, private _def:hl.IValueTypeDefinition, private _prop:hl.IProperty, private fromKey:boolean = false\n\t    return stubs.createASTPropImpl(n, node, up.range(), up, true);\n\t    //rs.push(up);\n\t}\n\tvar getKeyValue = function (offset, txt) {\n\t    var m = offset;\n\t    for (var i = offset; i >= 0; i--) {\n\t        var c = txt.charAt(i);\n\t        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t') {\n\t            m = i + 1;\n\t            break;\n\t        }\n\t    }\n\t    var res = \"\";\n\t    for (var i = m; m < txt.length; i++) {\n\t        var c = txt.charAt(i);\n\t        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t' || c == ':') {\n\t            break;\n\t        }\n\t        res += c;\n\t    }\n\t    return res;\n\t};\n\tfunction select() {\n\t    var ed = getActiveEditor();\n\t    var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t    var node = provider.getAstNode(request, false);\n\t    if (!node) {\n\t        return;\n\t    }\n\t    var start = ed.getBuffer().positionForCharacterIndex(node.lowLevel().start());\n\t    var end = ed.getBuffer().positionForCharacterIndex(node.lowLevel().end());\n\t    ed.setSelectedBufferRange({ start: start, end: end }, {});\n\t}\n\texports.select = select;\n\t//export function expandSignature(attr:hl.IAttribute){\n\t//    var tr=signature.convertToTrait(signature.parse(attr));\n\t//    //console.log('trait:\\n' + tr.highLevel().lowLevel().dump());\n\t//    var res = attr.parent();\n\t//    //pr.remove(attr); // incorrect usage!!! remove attributes as below\n\t//    attr.remove();\n\t//    tr.highLevel().elements().forEach(x=>{\n\t//        res.add(<any>x)\n\t//    });\n\t//    var ed=getActiveEditor();\n\t//    ed.setText(attr.root().lowLevel().unit().contents());\n\t//}\n\tfunction findUsagesImpl(f) {\n\t    if (f === void 0) { f = display; }\n\t    var ed = getActiveEditor();\n\t    if (ed) {\n\t        if (path.extname(ed.getPath()) == '.raml') {\n\t            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t            var p = request.editor.getPath();\n\t            var prj = rp.project.createProject(path.dirname(p));\n\t            var unit = prj.unit(path.basename(p));\n\t            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t            var text = request.editor.getBuffer().getText();\n\t            unit.updateContent(text);\n\t            var decl = search.findUsages(unit, offset);\n\t            if (decl.node) {\n\t                f(decl.node, decl.results);\n\t            }\n\t        }\n\t    }\n\t}\n\texports.findUsagesImpl = findUsagesImpl;\n\tfunction findUsages() {\n\t    findUsagesImpl(display);\n\t}\n\texports.findUsages = findUsages;\n\tvar SearchResultView = (function (_super) {\n\t    __extends(SearchResultView, _super);\n\t    function SearchResultView(query, _result) {\n\t        _super.call(this);\n\t        this.query = query;\n\t        this._result = _result;\n\t        this.isAttached = false;\n\t    }\n\t    SearchResultView.prototype.initialize = function () {\n\t        _super.prototype.initialize.apply(this, arguments);\n\t        return true;\n\t    };\n\t    SearchResultView.content = function () {\n\t        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n\t    };\n\t    SearchResultView.prototype.attached = function () {\n\t        if (this.isAttached) {\n\t            return;\n\t        }\n\t        this.load();\n\t        this.isAttached = true;\n\t    };\n\t    SearchResultView.prototype.setInput = function (query, _result) {\n\t        this.query = query;\n\t        this._result = _result;\n\t        this.load();\n\t    };\n\t    SearchResultView.prototype.load = function () {\n\t        var _this = this;\n\t        var section = UI.section(\"Find usages for \" + this.query, UI.Icon.SEARCH);\n\t        var view = UI.list(this._result, function (x) {\n\t            var p1 = getActiveEditor().getBuffer().positionForCharacterIndex(x.getLowLevelStart());\n\t            var res = UI.hc(UI.a(x.id(), function (y) {\n\t                openPropertyNode(getActiveEditor(), x);\n\t            }), UI.label(x.lowLevel().unit().path() + \" line:\", UI.Icon.NONE, UI.TextClasses.SUBTLE).pad(5, 5), UI.label(\"\" + p1.row, UI.Icon.NONE, UI.TextClasses.SUCCESS));\n\t            return res;\n\t        });\n\t        view.setStyle(\"max-height\", \"400px\");\n\t        section.addChild(view);\n\t        section.addChild(UI.button(\"Close\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) { _this.panel.destroy(); sv = null; }));\n\t        this.html(section.renderUI());\n\t    };\n\t    return SearchResultView;\n\t})(SpacePenViews.ScrollView);\n\tvar sv;\n\tfunction display(query, n) {\n\t    if (sv) {\n\t        sv.setInput(query.name(), n);\n\t    }\n\t    else {\n\t        sv = new SearchResultView(query.name() + \":\" + query.definition().nameId(), n);\n\t        sv.panel = atom.workspace.addBottomPanel({ item: sv });\n\t    }\n\t}\n\t//TODO REFACTOR COMMON LOGIC TO COFE\n\tvar openPropertyNode = function (ed, t) {\n\t    var p1 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelStart());\n\t    var p2 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelEnd());\n\t    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n\t};\n\t//TODO REFACTOR COMMON LOGIC TO COFE\n\tvar openNode = function (ed, t) {\n\t    openLowLevelNode(ed, t.lowLevel());\n\t};\n\t//TODO REFACTOR COMMON LOGIC TO COFE\n\tvar openLowLevelNode = function (ed, t) {\n\t    if (t.unit().absolutePath() != ed.getPath()) {\n\t        atom.workspace.open(t.unit().absolutePath(), {}).then(function (x) {\n\t            ed = getActiveEditor();\n\t            openLowLevelNode(ed, t);\n\t        });\n\t        return;\n\t    }\n\t    var p1 = ed.getBuffer().positionForCharacterIndex(t.start());\n\t    var p2 = ed.getBuffer().positionForCharacterIndex(t.end());\n\t    p2.column = p1.column + t.key() ? t.key().length : 0;\n\t    p2.row = p1.row;\n\t    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n\t};\n\tfunction gotoDeclaration() {\n\t    var ed = getActiveEditor();\n\t    if (ed) {\n\t        if (path.extname(ed.getPath()) == '.raml') {\n\t            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t            var p = request.editor.getPath();\n\t            var prj = rp.project.createProject(path.dirname(p));\n\t            var unit = prj.unit(path.basename(p));\n\t            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t            var text = request.editor.getBuffer().getText();\n\t            unit.updateContent(text);\n\t            var decl = search.findDeclaration(unit, offset);\n\t            if (decl) {\n\t                if (!decl.absolutePath) {\n\t                    openLowLevelNode(ed, decl.lowLevel());\n\t                }\n\t                else {\n\t                    var absolutePath = decl.absolutePath();\n\t                    if (absolutePath && absolutePath.toLowerCase().indexOf('http') === 0) {\n\t                        return;\n\t                    }\n\t                    atom.workspace.open(absolutePath, {});\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\texports.gotoDeclaration = gotoDeclaration;\n\t\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar path = __webpack_require__(16);\n\tvar rp = __webpack_require__(24);\n\tvar utils = rp.utils;\n\tvar rr = rp.utils;\n\tvar TextBuffer = __webpack_require__(28);\n\tvar editorManager = __webpack_require__(36);\n\tvar editorTools = __webpack_require__(5);\n\texports.grammarScopes = ['source.raml'];\n\texports.scope = 'file';\n\texports.lintOnFly = true;\n\tvar lintersToDestroy = [];\n\tvar linterApiProxy = {};\n\tvar relint = function (editor) {\n\t    var editorPath = editor.getPath && editor.getPath();\n\t    var extName = editorPath && path.extname(editorPath);\n\t    var lowerCase = extName && extName.toLowerCase();\n\t    var linter = linterApiProxy.getEditorLinter(editor);\n\t    lintersToDestroy.push(linter);\n\t    if (lowerCase === '.raml' || lowerCase === '.yaml') {\n\t        var res = lint(editor);\n\t        if (!rr.hasAsyncRequests()) {\n\t            linterApiProxy.setMessages(linter, res);\n\t            console.log(\"Messages: \" + res.length);\n\t        }\n\t        setupLinterCallback(editor, function () { return linterApiProxy.deleteMessages(linter); });\n\t        linter.onDidDestroy(function () {\n\t            removeLinterCallback(editor);\n\t        });\n\t        editor.onDidDestroy(function () {\n\t            destroyLinter(linterApiProxy, linter);\n\t        });\n\t    }\n\t};\n\tfunction initEditorObservers(linterApi) {\n\t    linterApiProxy = linterApi;\n\t    rr.addLoadCallback(function (x) {\n\t        atom.workspace.getTextEditors().forEach(function (x) { return relint(x); });\n\t        var manager = editorTools.aquireManager();\n\t        if (manager) {\n\t            manager.updateDetails();\n\t        }\n\t    });\n\t    atom.workspace.observeTextEditors(relint);\n\t    return {\n\t        dispose: function () {\n\t            lintersToDestroy.forEach(function (linter) {\n\t                destroyLinter(linterApi, linter);\n\t            });\n\t        }\n\t    };\n\t}\n\texports.initEditorObservers = initEditorObservers;\n\tfunction destroyLinter(linterApi, linter) {\n\t    linterApi.deleteMessages(linter);\n\t    linterApi.deleteLinter(linter);\n\t}\n\t;\n\tfunction setupLinterCallback(editor, callback) {\n\t    editor.linterCallback = callback;\n\t}\n\tfunction removeLinterCallback(editor) {\n\t    editor.linterCallback = null;\n\t}\n\tfunction execLinterCallback(editor) {\n\t    if (editor.linterCallback) {\n\t        editor.linterCallback();\n\t        removeLinterCallback(editor);\n\t    }\n\t}\n\tfunction lint(textEditor) {\n\t    var result = actualLint(textEditor);\n\t    if (rr.hasAsyncRequests()) {\n\t        return [];\n\t    }\n\t    return result;\n\t}\n\texports.lint = lint;\n\tfunction isRAMLUnit(editor) {\n\t    var contents = editor.getBuffer().getText();\n\t    return contents.match(/^\\s*#%RAML\\s+(\\d\\.\\d)\\s*(\\w*)\\s*$/m);\n\t}\n\tvar combErrors = function (result) {\n\t    var map = {};\n\t    result.forEach(function (x) {\n\t        var original = JSON.parse(JSON.stringify(x));\n\t        original.trace = null;\n\t        var newKey = JSON.stringify(original);\n\t        var tr = map[newKey];\n\t        if (tr) {\n\t            tr.push(x);\n\t        }\n\t        else {\n\t            map[newKey] = [x];\n\t        }\n\t    });\n\t    var rs = [];\n\t    for (var i in map) {\n\t        var mes = JSON.parse(i);\n\t        mes.trace = [];\n\t        var ms = map[i];\n\t        ms.forEach(function (x) {\n\t            if (x.trace) {\n\t                mes.trace = mes.trace.concat(x.trace);\n\t            }\n\t        });\n\t        mes.trace = combErrors(mes.trace);\n\t        rs.push(mes);\n\t    }\n\t    return rs;\n\t};\n\tfunction actualLint(textEditor) {\n\t    execLinterCallback(textEditor);\n\t    if (rr.hasAsyncRequests()) {\n\t        return [];\n\t    }\n\t    if (!isRAMLUnit(textEditor))\n\t        return [];\n\t    var l = new Date().getTime();\n\t    var astNode = editorManager.ast(textEditor);\n\t    if (astNode == null) {\n\t        return [];\n\t    }\n\t    var result = [];\n\t    var acceptor = new Acceptor(textEditor, result, astNode.root());\n\t    var c = astNode.lowLevel() ? astNode.lowLevel().unit().contents() : \"\";\n\t    var tab = 0;\n\t    while (true) {\n\t        var tab = c.indexOf('\\t', tab);\n\t        if (tab != -1) {\n\t            var p1 = textEditor.getBuffer().positionForCharacterIndex(tab);\n\t            var p2 = textEditor.getBuffer().positionForCharacterIndex(tab + 1);\n\t            var t = \"Using tabs  can lead to unpredictable results\";\n\t            var message = {\n\t                type: (\"Warning\"),\n\t                filePath: textEditor.getPath(),\n\t                text: t,\n\t                trace: [],\n\t                range: [[p1.row, p1.column], [p2.row, p2.column]]\n\t            };\n\t            result.push(message);\n\t            tab++;\n\t        }\n\t        else {\n\t            break;\n\t        }\n\t    }\n\t    if (!astNode.lowLevel()) {\n\t        return [];\n\t    }\n\t    gatherValidationErrors(astNode, result, textEditor);\n\t    var l1 = new Date().getTime();\n\t    var rs = combErrors(result);\n\t    if (editorTools.aquireManager()) {\n\t        if (editorTools.aquireManager().performanceDebug) {\n\t            console.log(\"Linting took:\" + (l1 - l));\n\t        }\n\t    }\n\t    var warnings = 0;\n\t    return rs.filter(function (x) {\n\t        return x;\n\t    })\n\t        .filter(function (x) {\n\t        if (x.type === \"Warning\") {\n\t            if (warnings >= 20) {\n\t                return false;\n\t            }\n\t            warnings++;\n\t        }\n\t        return x;\n\t    });\n\t}\n\tvar Acceptor = (function (_super) {\n\t    __extends(Acceptor, _super);\n\t    function Acceptor(editor, errors, primaryUnit) {\n\t        _super.call(this, errors, primaryUnit);\n\t        this.editor = editor;\n\t        this.buffers = {};\n\t    }\n\t    Acceptor.prototype.accept = function (issue) {\n\t        var _this = this;\n\t        if (!issue) {\n\t            return;\n\t        }\n\t        this.transformIssue(issue);\n\t        var issueType = issue.isWarning ? \"Warning\" : 'Error';\n\t        var issuesArray = [];\n\t        while (issue) {\n\t            issuesArray.push(issue);\n\t            if (issue.extras && issue.extras.length > 0) {\n\t                issue = issue.extras[0];\n\t            }\n\t            else {\n\t                issue = null;\n\t            }\n\t        }\n\t        var issues = issuesArray.reverse().map(function (x) {\n\t            var result = _this.convertParserIssue(x, issueType);\n\t            issueType = \"Trace\";\n\t            return result;\n\t        });\n\t        for (var i = 0; i < issues.length - 1; i++) {\n\t            issues[0].trace.push(issues[i + 1]);\n\t        }\n\t        var message = issues[0];\n\t        this.errors.push(message);\n\t    };\n\t    Acceptor.prototype.convertParserIssue = function (x, iType) {\n\t        var t = x.message;\n\t        var buf = this.editor.getBuffer();\n\t        var ps = x.path;\n\t        if (x.unit) {\n\t            ps = x.unit.absolutePath();\n\t        }\n\t        if (ps) {\n\t            if (this.buffers[ps]) {\n\t                buf = this.buffers[ps];\n\t            }\n\t            else {\n\t                buf = new TextBuffer(x.unit.contents());\n\t                this.buffers[ps] = buf;\n\t            }\n\t        }\n\t        var p1 = buf.positionForCharacterIndex(x.start);\n\t        var p2 = buf.positionForCharacterIndex(x.end);\n\t        var trace = {\n\t            type: iType,\n\t            filePath: x.path ? ps : this.editor.getPath(),\n\t            text: t,\n\t            range: [[p1.row, p1.column], [p2.row, p2.column]],\n\t            trace: [],\n\t        };\n\t        return trace;\n\t    };\n\t    Acceptor.prototype.acceptUnique = function (issue) {\n\t        this.accept(issue);\n\t    };\n\t    Acceptor.prototype.end = function () {\n\t    };\n\t    return Acceptor;\n\t})(utils.PointOfViewValidationAcceptorImpl);\n\tfunction gatherValidationErrors(astNode, errors, editor) {\n\t    if (astNode) {\n\t        astNode.validate(new Acceptor(editor, errors, astNode.root()));\n\t    }\n\t}\n\t\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar _ = __webpack_require__(26);\n\texports.DYNAMIC_COMMAND_TAG = \"DYNAMIC_COMMAND_TAG\";\n\tvar commandIdToCommandInfo = {};\n\tvar tagToCommands = {};\n\t/**\n\t * Adds new managed command\n\t * @param selector - command CSS selector\n\t * @param id - command id. Must be unique across the managed commands.\n\t * @param callBack - called on command invocation\n\t * @param tag - optional action tag allowing to perform batch operations\n\t */\n\tfunction addCommand(selector, id, callBack, tag) {\n\t    if (_.find(listCommands(), function (commandId) {\n\t        if (commandId == id) {\n\t            return true;\n\t        }\n\t        return false;\n\t    })) {\n\t        return;\n\t    }\n\t    var disposable = atom.commands.add(selector, id, callBack);\n\t    var commandInfo = {\n\t        commandId: id,\n\t        tag: tag,\n\t        disposable: disposable\n\t    };\n\t    commandIdToCommandInfo[id] = commandInfo;\n\t    if (tag) {\n\t        var tagCommands = tagToCommands[tag];\n\t        if (!tagCommands) {\n\t            tagCommands = [];\n\t            tagToCommands[tag] = tagCommands;\n\t        }\n\t        tagCommands.push(commandInfo);\n\t    }\n\t}\n\texports.addCommand = addCommand;\n\t/**\n\t * Deletes unmanaged command.\n\t * Generally, should not be called for managed actions, use the managed\n\t * version instead.\n\t * @param id - command id\n\t */\n\tfunction deleteUnmanagedCommand(id) {\n\t    atom.commands.registeredCommands[id] = null;\n\t    atom.commands.selectorBasedListenersByCommandName[id] = null;\n\t}\n\texports.deleteUnmanagedCommand = deleteUnmanagedCommand;\n\t/**\n\t * Deletes managed action by id\n\t * @param id\n\t */\n\tfunction deleteManagedCommand(id) {\n\t    var commandInfo = commandIdToCommandInfo[id];\n\t    if (!commandInfo)\n\t        return;\n\t    commandInfo.disposable.dispose();\n\t    delete commandIdToCommandInfo[id];\n\t    if (commandInfo.tag) {\n\t        var tagCommands = tagToCommands[commandInfo.tag];\n\t        if (!tagCommands)\n\t            return;\n\t        var infoIndex = -1;\n\t        _.find(tagCommands, function (currentInfo, index) {\n\t            if (currentInfo.commandId == id) {\n\t                infoIndex = index;\n\t                return true;\n\t            }\n\t            return false;\n\t        });\n\t        if (infoIndex != -1)\n\t            tagCommands.splice(infoIndex, 1);\n\t    }\n\t}\n\texports.deleteManagedCommand = deleteManagedCommand;\n\t/**\n\t * Deletes all managed commands tagged the the specific tag\n\t * @param tag\n\t */\n\tfunction deleteCommandsByTag(tag) {\n\t    var tagCommands = tagToCommands[tag];\n\t    if (!tagCommands)\n\t        return;\n\t    for (var index in tagCommands) {\n\t        var currentInfo = tagCommands[index];\n\t        currentInfo.disposable.dispose();\n\t        delete commandIdToCommandInfo[currentInfo.commandId];\n\t    }\n\t    delete tagToCommands[tag];\n\t}\n\texports.deleteCommandsByTag = deleteCommandsByTag;\n\t/**\n\t * Lists all commands, both managed and unmanaged.\n\t * @returns {string[]}\n\t */\n\tfunction listCommands() {\n\t    var result = [];\n\t    for (var commandName in atom.commands.selectorBasedListenersByCommandName) {\n\t        result.push(commandName);\n\t    }\n\t    return result;\n\t}\n\texports.listCommands = listCommands;\n\tvar initialized = false;\n\tfunction initialize() {\n\t    if (initialized)\n\t        return;\n\t    initialized = true;\n\t    try {\n\t        //forcing command palette to register itself\n\t        atom.packages.activatePackage('command-palette');\n\t        //registering our own listener to command palette's command\n\t        var listener = function () {\n\t            prePanelDisplay();\n\t        };\n\t        listener.commandManager = true;\n\t        atom.commands.add('atom-workspace', 'command-palette:toggle', listener);\n\t        ////and now swapping those listeners, so our one is called first\n\t        //var listenersArray = (<any>atom.commands.selectorBasedListenersByCommandName)\n\t        //    [\"command-palette:toggle\"]\n\t        //listenersArray.splice(0,0,listenersArray[1])\n\t        //listenersArray.splice(1, 1)\n\t        var listenersArray = atom.commands.selectorBasedListenersByCommandName[\"command-palette:toggle\"];\n\t        listenersArray.forEach(function (listener) {\n\t            if (listener.callback.commandManager) {\n\t                listener.sequenceNumber = 100500000;\n\t            }\n\t        });\n\t    }\n\t    catch (Error) {\n\t        console.error(Error.message);\n\t    }\n\t}\n\texports.initialize = initialize;\n\tvar contributors = {};\n\tfunction registerContributor(contributor) {\n\t    contributors[contributor.id] = contributor;\n\t}\n\texports.registerContributor = registerContributor;\n\tfunction prePanelDisplay() {\n\t    deleteCommandsByTag(exports.DYNAMIC_COMMAND_TAG);\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        if (contributor.calculationStarted) {\n\t            contributor.calculationStarted();\n\t        }\n\t    }\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        contributor.calculateItems().forEach(function (item) {\n\t            addCommand(item.selector, \"api-workbench:\" + item.id, item.callBack, exports.DYNAMIC_COMMAND_TAG);\n\t        });\n\t    }\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        if (contributor.calculationFinished) {\n\t            contributor.calculationFinished();\n\t        }\n\t    }\n\t}\n\t\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar actions = __webpack_require__(23);\n\tvar _ = __webpack_require__(26);\n\tvar commandManager = __webpack_require__(11);\n\tvar originalShowForEvent;\n\t/**\n\t * Must be called first, at startup, before the module is used.\n\t */\n\tfunction initialize() {\n\t    if (initialized) {\n\t        return;\n\t    }\n\t    initialized = true;\n\t    originalShowForEvent = atom.contextMenu.constructor.prototype.showForEvent;\n\t    atom.contextMenu.constructor.prototype.showForEvent = function (event) {\n\t        preMenuDisplay();\n\t        originalShowForEvent.apply(atom.contextMenu, [event]);\n\t        postMenuDisplay();\n\t    };\n\t}\n\texports.initialize = initialize;\n\tvar initialized = false;\n\tfunction preMenuDisplay() {\n\t    try {\n\t        var treeRoots = actions.calculateMenuItemsTree();\n\t        var nodeSets = {};\n\t        cleanExistingSets();\n\t        commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG);\n\t        treeRoots.forEach(function (node) {\n\t            var itemSet = nodeSets[node.selector];\n\t            if (!itemSet) {\n\t                itemSet = findOrCreateItemSet(node.selector);\n\t                nodeSets[node.selector] = itemSet;\n\t            }\n\t            var menuItem = constructAtomMenuItem(node);\n\t            itemSet.items.push(menuItem);\n\t        });\n\t    }\n\t    catch (Error) {\n\t        console.log(Error.message);\n\t    }\n\t}\n\tfunction constructAtomMenuItem(node) {\n\t    var result = {\n\t        label: node.name,\n\t    };\n\t    if (node.children.length > 0) {\n\t        result.submenu = [];\n\t    }\n\t    else {\n\t        var commandName = \"api-workbench:\" + node.name;\n\t        var existingCommands = commandManager.listCommands();\n\t        commandManager.addCommand(node.selector, commandName, node.onClick, commandManager.DYNAMIC_COMMAND_TAG);\n\t        result.command = commandName;\n\t    }\n\t    node.children.forEach(function (child) {\n\t        var childMenuItem = constructAtomMenuItem(child);\n\t        result.submenu.push(childMenuItem);\n\t    });\n\t    return result;\n\t}\n\tvar DYNAMIC_SET_TAG = \"DYNAMIC_SET_TAG\";\n\t/**\n\t * Selector that were used at least once in the context menu\n\t * @type {Array}\n\t */\n\tvar usedSelectors = [];\n\tfunction findOrCreateItemSet(selector) {\n\t    var existingSet = _.find(atom.contextMenu.itemSets, function (currentSet) {\n\t        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n\t    });\n\t    if (!existingSet) {\n\t        existingSet = {\n\t            items: [],\n\t            selector: selector,\n\t            specificity: 11,\n\t            tag: DYNAMIC_SET_TAG\n\t        };\n\t        atom.contextMenu.itemSets.push(existingSet);\n\t        //saving used selector name\n\t        if (!_.find(usedSelectors, function (name) { return name == selector; })) {\n\t            usedSelectors.push(selector);\n\t        }\n\t    }\n\t    return existingSet;\n\t}\n\tfunction cleanExistingSets() {\n\t    var existingSets = _.filter(atom.contextMenu.itemSets, function (currentSet) {\n\t        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n\t    });\n\t    existingSets.forEach(function (existingSet) {\n\t        existingSet.items = [];\n\t    });\n\t}\n\tfunction postMenuDisplay() {\n\t    //commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG)\n\t}\n\t\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar commandManager = __webpack_require__(11);\n\tvar contextActions = __webpack_require__(23);\n\tvar path = __webpack_require__(16);\n\tvar provider = __webpack_require__(7);\n\tvar editorTools = __webpack_require__(5);\n\tfunction initializeActionSupport() {\n\t    contextActions.intializeStandardActions();\n\t    contextActions.initializeActionBasedMenu('atom-text-editor[data-grammar=\"source raml\"],.raml-outline');\n\t    var editorCommandContributor = {\n\t        id: \"editorContextActionContributor\",\n\t        calculateItems: function () {\n\t            var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t            if (!currentActions)\n\t                return [];\n\t            var result = [];\n\t            currentActions.forEach(function (action) {\n\t                result.push({\n\t                    selector: 'atom-text-editor[data-grammar=\"source raml\"],.raml-outline',\n\t                    id: action.label ? action.label : action.name,\n\t                    callBack: action.onClick\n\t                });\n\t            });\n\t            return result;\n\t        }\n\t    };\n\t    commandManager.registerContributor(editorCommandContributor);\n\t}\n\tfunction initialize() {\n\t    var editorProvider = {\n\t        getCurrentEditor: function () {\n\t            var gotEditorFromOutline = false;\n\t            var editor = null;\n\t            if (atom.workspace.getActiveTextEditor()) {\n\t                editor = atom.workspace.getActiveTextEditor();\n\t            }\n\t            else if (editorTools.aquireManager()) {\n\t                editor = editorTools.aquireManager().getCurrentEditor();\n\t                gotEditorFromOutline = true;\n\t            }\n\t            return editor;\n\t        }\n\t    };\n\t    contextActions.setEditorProvider(editorProvider);\n\t    var astProvider = {\n\t        getASTRoot: function () {\n\t            return this.getSelectedNode().root();\n\t        },\n\t        getSelectedNode: function () {\n\t            var editor = null;\n\t            var gotEditorFromOutline = false;\n\t            if (editorTools.aquireManager()) {\n\t                editor = editorTools.aquireManager().getCurrentEditor();\n\t                gotEditorFromOutline = true;\n\t            }\n\t            if (!editor && atom.workspace.getActiveTextEditor()) {\n\t                editor = atom.workspace.getActiveTextEditor();\n\t            }\n\t            if (!editor)\n\t                return null;\n\t            if (path.extname(editor.getPath()) != '.raml')\n\t                return null;\n\t            var request = {\n\t                editor: editor,\n\t                bufferPosition: editor.getCursorBufferPosition()\n\t            };\n\t            var node = null;\n\t            if (gotEditorFromOutline) {\n\t                node = editorTools.aquireManager().getSelectedNode();\n\t            }\n\t            else {\n\t                if (editor.getBuffer()) {\n\t                    var lastPosition = editor.getBuffer().getEndPosition();\n\t                    if (lastPosition.column == request.bufferPosition.column\n\t                        && lastPosition.row == request.bufferPosition.row) {\n\t                        return null;\n\t                    }\n\t                    if (request.bufferPosition.row == 0 && request.bufferPosition.column == 0) {\n\t                        return null;\n\t                    }\n\t                }\n\t                node = provider.getAstNode(request, false);\n\t            }\n\t            return node;\n\t        }\n\t    };\n\t    contextActions.setASTProvider(astProvider);\n\t    var astModifier = {\n\t        deleteNode: function (node) {\n\t            var editorManager = editorTools.aquireManager();\n\t            if (editorManager && editorManager._view) {\n\t                editorManager._view.forEachViewer(function (x) { return x.remove(node); });\n\t            }\n\t            var parent = node.parent();\n\t            if (parent) {\n\t                parent.remove(node);\n\t                parent.resetChildren();\n\t            }\n\t        },\n\t        updateText: function (node) {\n\t            var editorManager = editorTools.aquireManager();\n\t            if (editorManager) {\n\t                editorManager.updateText(node);\n\t            }\n\t        }\n\t    };\n\t    contextActions.setASTModifier(astModifier);\n\t    initializeActionSupport();\n\t}\n\texports.initialize = initialize;\n\t\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(17);\n\tvar path = __webpack_require__(16);\n\tvar contextActions = __webpack_require__(23);\n\tvar rp = contextActions.parser;\n\tvar search = rp.search;\n\tvar stubs = rp.stubs;\n\tvar universeHelpers = rp.universeHelpers;\n\tvar su = rp.schema;\n\tvar _ = __webpack_require__(26);\n\tvar UI = __webpack_require__(18);\n\tvar extract = __webpack_require__(37);\n\tvar def = rp.ds;\n\tvar move = __webpack_require__(38);\n\tvar assistUtils = __webpack_require__(9);\n\t/**\n\t * For unknown reason, compiler cant merge highlevel coming from raml-1-parser direct import\n\t * and the one coming from actions, so we need to convert manually.\n\t * @param node\n\t */\n\tfunction hlConv(node) {\n\t    return node;\n\t}\n\tvar AbstractDialogWithValidation = (function () {\n\t    function AbstractDialogWithValidation(parentNode, name) {\n\t        this.parentNode = parentNode;\n\t        this.name = name;\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    AbstractDialogWithValidation.prototype.validate = function () {\n\t        return null;\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     */\n\t    AbstractDialogWithValidation.prototype.performOk = function () {\n\t    };\n\t    /**\n\t     * Indended for subclassing\n\t     * @param vc - parent section\n\t     */\n\t    AbstractDialogWithValidation.prototype.createBody = function (section) {\n\t    };\n\t    /**\n\t     * Call this to display the dialog.\n\t     */\n\t    AbstractDialogWithValidation.prototype.show = function () {\n\t        console.log(\"Original node tree:\");\n\t        if (this.getParentNode())\n\t            console.log(this.getParentNode().printDetails());\n\t        if (!this.getParentNode()) {\n\t            return;\n\t        }\n\t        var mainSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n\t        this.createValidationIndicator(mainSection);\n\t        this.createBody(mainSection);\n\t        this.createButtonBar(mainSection);\n\t        mainSection.setPercentWidth(100);\n\t        var html = mainSection.renderUI();\n\t        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t        this.performValidation();\n\t    };\n\t    AbstractDialogWithValidation.prototype.performValidation = function () {\n\t        var validationMessage = this.validate();\n\t        if (this.okButton) {\n\t            if (validationMessage)\n\t                this.okButton.setDisabled(true);\n\t            else\n\t                this.okButton.setDisabled(false);\n\t        }\n\t        if (this.errorLabel) {\n\t            if (validationMessage) {\n\t                this.errorLabel.setDisplay(true);\n\t                this.errorLabel.setText(validationMessage);\n\t            }\n\t            else {\n\t                this.errorLabel.setDisplay(false);\n\t                this.errorLabel.setText(\"\");\n\t            }\n\t        }\n\t    };\n\t    AbstractDialogWithValidation.prototype.createValidationIndicator = function (vc) {\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(this.errorLabel));\n\t    };\n\t    AbstractDialogWithValidation.prototype.saveUnit = function (unit) {\n\t        var unitPath = unit.absolutePath();\n\t        var unitText = unit.contents();\n\t        //first trying to find an opened text editor\n\t        var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n\t            var editorPath = editor.getPath();\n\t            return editorPath == unitPath;\n\t        });\n\t        if (openedEditor) {\n\t            openedEditor.setText(unitText);\n\t        }\n\t        else {\n\t            fs.writeFileSync(unitPath, unitText);\n\t        }\n\t    };\n\t    AbstractDialogWithValidation.prototype.createButtonBar = function (parentPanel) {\n\t        var _this = this;\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            _this.rootAtomPanel.destroy();\n\t        }).margin(10, 10));\n\t        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.performOk();\n\t            _this.rootAtomPanel.destroy();\n\t        });\n\t        this.okButton.setDisabled(true);\n\t        buttonBar.addChild(this.okButton);\n\t        parentPanel.addChild(buttonBar);\n\t    };\n\t    AbstractDialogWithValidation.prototype.getParentNode = function () {\n\t        return this.parentNode;\n\t    };\n\t    AbstractDialogWithValidation.prototype.getActiveEditor = function () {\n\t        return assistUtils.getActiveEditor();\n\t    };\n\t    AbstractDialogWithValidation.prototype.getNodeId = function (node) {\n\t        if (node.parent()) {\n\t            var parentId = this.getNodeId(node.parent());\n\t            parentId += \".\" + node.name();\n\t            var sameName = node.parent().directChildren().filter(function (x) { return x.name() == node.name(); });\n\t            if (sameName.length > 1) {\n\t                var ind = sameName.indexOf(node);\n\t                parentId += \"[\" + ind + \"]\";\n\t            }\n\t            return parentId;\n\t        }\n\t        else if (node.name()) {\n\t            if (node.definition && node.definition() && node.definition().name() == \"Api\") {\n\t                //no other way to get rid of a fake Api \"key\"\n\t                return \"\";\n\t            }\n\t            return \".\" + node.name();\n\t        }\n\t        return \"\";\n\t    };\n\t    AbstractDialogWithValidation.prototype.nodesEqualById = function (node1, node2) {\n\t        return this.getNodeId(node1) == this.getNodeId(node2);\n\t    };\n\t    AbstractDialogWithValidation.prototype.isParentOf = function (potentialParent, potentialChild) {\n\t        var current = potentialChild.parent();\n\t        while (current != null) {\n\t            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n\t                return true;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return false;\n\t    };\n\t    return AbstractDialogWithValidation;\n\t})();\n\texports.AbstractDialogWithValidation = AbstractDialogWithValidation;\n\tvar MoveResourceStateCalculator = (function (_super) {\n\t    __extends(MoveResourceStateCalculator, _super);\n\t    function MoveResourceStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MoveResourceStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return MoveResourceStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar CreateGlobalSchemaStateCalculator = (function (_super) {\n\t    __extends(CreateGlobalSchemaStateCalculator, _super);\n\t    function CreateGlobalSchemaStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CreateGlobalSchemaStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        //FIXME INFRASTRUCTURE NEEDED\n\t        if (!universeHelpers.isSchemaProperty(p))\n\t            return null;\n\t        var v = attr.value();\n\t        var targets = search.referenceTargets(p, highLevelNode);\n\t        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n\t        if (t)\n\t            return null;\n\t        return attr;\n\t    };\n\t    return CreateGlobalSchemaStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar ExtractJSONSchemaToTypeDialog = (function (_super) {\n\t    __extends(ExtractJSONSchemaToTypeDialog, _super);\n\t    function ExtractJSONSchemaToTypeDialog() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    /**\n\t     * Indended for subclassing\n\t     * @param vc - parent section\n\t     */\n\t    ExtractJSONSchemaToTypeDialog.prototype.createBody = function (section) {\n\t        var _this = this;\n\t        section.addChild(UI.label(\"Type name:\").pad(5, 0));\n\t        this.typeNameTextField = UI.texfField(\"\", \"NewType\", function (x) {\n\t            _this.performValidation();\n\t        });\n\t        section.addChild(this.typeNameTextField);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ExtractJSONSchemaToTypeDialog.prototype.validate = function () {\n\t        if (!this.typeNameTextField || !this.typeNameTextField.getBinding()) {\n\t            return null;\n\t        }\n\t        var schemaName = this.typeNameTextField.getBinding().get();\n\t        if (schemaName.trim().length == 0) {\n\t            return \"Enter type name\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     */\n\t    ExtractJSONSchemaToTypeDialog.prototype.performOk = function () {\n\t        var node = this.getParentNode();\n\t        var api = node.root();\n\t        var schema = node.attrValue('schema');\n\t        node.attr('schema').setValue('');\n\t        var schemaName = this.typeNameTextField.getBinding().get();\n\t        var types = su.createSchemaModelGenerator().generateTo(api, schema, schemaName);\n\t        if (types.length > 0) {\n\t            node.attrOrCreate('type').setValue(types[0]);\n\t        }\n\t        this.saveUnit(api.lowLevel().unit());\n\t    };\n\t    return ExtractJSONSchemaToTypeDialog;\n\t})(AbstractDialogWithValidation);\n\texports.ExtractJSONSchemaToTypeDialog = ExtractJSONSchemaToTypeDialog;\n\tvar CreateGlobalSchemaDialog = (function (_super) {\n\t    __extends(CreateGlobalSchemaDialog, _super);\n\t    function CreateGlobalSchemaDialog() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    /**\n\t     * Indended for subclassing\n\t     * @param vc - parent section\n\t     */\n\t    CreateGlobalSchemaDialog.prototype.createBody = function (section) {\n\t        var _this = this;\n\t        section.addChild(UI.label(\"Schema name:\").pad(5, 0));\n\t        this.schemaNameTextField = UI.texfField(\"\", this.getDefaultSchemaName(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        section.addChild(this.schemaNameTextField);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    CreateGlobalSchemaDialog.prototype.validate = function () {\n\t        if (!this.schemaNameTextField || !this.schemaNameTextField.getBinding()) {\n\t            return null;\n\t        }\n\t        var schemaName = this.schemaNameTextField.getBinding().get();\n\t        if (schemaName.trim().length == 0) {\n\t            return \"Enter schema name\";\n\t        }\n\t        var attr = this.getParentNode();\n\t        var schemaContent = attr.value();\n\t        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n\t        if (fs.existsSync(schemaFilePath)) {\n\t            return \"Schema file \" + schemaFilePath + \" already exists\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     */\n\t    CreateGlobalSchemaDialog.prototype.performOk = function () {\n\t        var schemaName = this.schemaNameTextField.getBinding().get();\n\t        var attr = this.getParentNode();\n\t        var schemaContent = attr.value();\n\t        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n\t        var root = attr.parent().root();\n\t        var globalSchemaType = attr.property().range().universe().type(\"GlobalSchema\");\n\t        var schemaNode = stubs.createStubNode(globalSchemaType, globalSchemaType.universe().type(\"Api\").property(\"schemas\"), schemaName);\n\t        schemaNode.attrOrCreate(\"value\").setValue(\"!include \" + this.getSchemaRelativePath(schemaName, schemaContent));\n\t        root.add(schemaNode);\n\t        attr.setValue(schemaName);\n\t        this.saveUnit(attr.lowLevel().unit());\n\t        var schemaDir = path.dirname(schemaFilePath);\n\t        if (!fs.existsSync(schemaDir)) {\n\t            fs.mkdirSync(schemaDir);\n\t        }\n\t        fs.writeFileSync(schemaFilePath, schemaContent);\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.getSchemaFilePath = function (schemaName, schemaContent) {\n\t        var parentDirectory = path.resolve(path.dirname(this.getActiveEditor().getPath()), \"schemas\");\n\t        var schemaExtension = this.determineSchemaExtension(schemaContent);\n\t        var fileName = schemaName + \".\" + schemaExtension;\n\t        return path.resolve(parentDirectory, fileName);\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.getSchemaRelativePath = function (schemaName, schemaContent) {\n\t        var schemaExtension = this.determineSchemaExtension(schemaContent);\n\t        var fileName = schemaName + \".\" + schemaExtension;\n\t        return \"schemas/\" + fileName;\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.determineSchemaExtension = function (schemaContent) {\n\t        var trim = schemaContent.trim();\n\t        if (trim.indexOf(\"{\") == 0 || trim.indexOf(\"[\") == 0) {\n\t            return \"json\";\n\t        }\n\t        return \"xsd\";\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.getDefaultSchemaName = function () {\n\t        return \"NewSchema\";\n\t    };\n\t    return CreateGlobalSchemaDialog;\n\t})(AbstractDialogWithValidation);\n\texports.CreateGlobalSchemaDialog = CreateGlobalSchemaDialog;\n\tfunction createGlobalSchema(attr) {\n\t    new CreateGlobalSchemaDialog(attr, \"Create Global Schema\").show();\n\t}\n\texports.createGlobalSchema = createGlobalSchema;\n\tvar ExpandSignatureStateCalculator = (function (_super) {\n\t    __extends(ExpandSignatureStateCalculator, _super);\n\t    function ExpandSignatureStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExpandSignatureStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        return attr;\n\t    };\n\t    return ExpandSignatureStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tfunction updateEditor(node) {\n\t    var ed = assistUtils.getActiveEditor();\n\t    ed.setText(assistUtils.cleanEmptyLines(node.root().lowLevel().unit().contents()));\n\t}\n\tvar ExtractResourceTypeStateCalculator = (function (_super) {\n\t    __extends(ExtractResourceTypeStateCalculator, _super);\n\t    function ExtractResourceTypeStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractResourceTypeStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return ExtractResourceTypeStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar ExtractTraitStateCalculator = (function (_super) {\n\t    __extends(ExtractTraitStateCalculator, _super);\n\t    function ExtractTraitStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractTraitStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isMethodType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return ExtractTraitStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar MoveContentStateCalculator = (function (_super) {\n\t    __extends(MoveContentStateCalculator, _super);\n\t    function MoveContentStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MoveContentStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (highLevelNode.children().length == 0)\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return MoveContentStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar ConvertJsonSchemaToTypeStateCalculator = (function (_super) {\n\t    __extends(ConvertJsonSchemaToTypeStateCalculator, _super);\n\t    function ConvertJsonSchemaToTypeStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ConvertJsonSchemaToTypeStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        if (!universeHelpers.isSchemaProperty(p))\n\t            return null;\n\t        if (typeof attr.value() != 'string' || attr.value().indexOf(\"{\") == -1) {\n\t            return null;\n\t        }\n\t        return highLevelNode;\n\t        //var txt=generalState.editor.getText();\n\t        //var res = getKeyValue(generalState.offset, txt);\n\t        //if(res != 'schema') return null;\n\t        //var schema = highLevelNode.attrValue('schema');\n\t        //if(!schema) return null;\n\t        //return (schema.length > 0 && schema[0] == '{')? highLevelNode : null;\n\t        //return true; //res == 'schema'? highLevelNode : null;\n\t    };\n\t    return ConvertJsonSchemaToTypeStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\t// function indent(line:string) {\n\t//     var rs = \"\";\n\t//     for (var i = 0; i < line.length; i++) {\n\t//         var c = line[i];\n\t//         if (c == '\\r' || c == '\\n') {\n\t//             continue;\n\t//         }\n\t//         if (c == ' ' || c == '\\t') {\n\t//             rs += c;\n\t//             continue;\n\t//         }\n\t//         break;\n\t//     }\n\t//     return rs;\n\t// }\n\t//FIXME remove it from here duplication with jsyaml2lowLevel.ts\n\t// function stripIndent(text:string, indent:string) {\n\t//     var lines = assistUtils.splitOnLines(text);\n\t//     var rs = [];\n\t//     for (var i = 0; i < lines.length; i++) {\n\t//         if (i == 0) {\n\t//             rs.push(lines[0]);\n\t//         }\n\t//         else {\n\t//             rs.push(lines[i].substring(indent.length));\n\t//         }\n\t//     }\n\t//     return rs.join(\"\");\n\t// }\n\tvar ExtractLibraryStateCalculator = (function (_super) {\n\t    __extends(ExtractLibraryStateCalculator, _super);\n\t    function ExtractLibraryStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractLibraryStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        while (current.parent() != null) {\n\t            current = current.parent();\n\t        }\n\t        return current;\n\t    };\n\t    return ExtractLibraryStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar ExtractOverlayStateCalculator = (function (_super) {\n\t    __extends(ExtractOverlayStateCalculator, _super);\n\t    function ExtractOverlayStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractOverlayStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        while (current.parent() != null) {\n\t            current = current.parent();\n\t        }\n\t        return current;\n\t    };\n\t    return ExtractOverlayStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar ModifyOverlayStateCalculator = (function (_super) {\n\t    __extends(ModifyOverlayStateCalculator, _super);\n\t    function ModifyOverlayStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ModifyOverlayStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        while (current.parent() != null) {\n\t            current = current.parent();\n\t        }\n\t        if (current.definition\n\t            && universeHelpers.isOverlayType(current.definition())) {\n\t            return current;\n\t        }\n\t        return null;\n\t    };\n\t    return ModifyOverlayStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar AbstractMoveTypePropertiesCalculator = (function (_super) {\n\t    __extends(AbstractMoveTypePropertiesCalculator, _super);\n\t    function AbstractMoveTypePropertiesCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AbstractMoveTypePropertiesCalculator.prototype.isTypeNode = function (node) {\n\t        return node.property\n\t            && node.property().range\n\t            && universeHelpers.isTypeDeclarationType(node.property().range())\n\t            && universeHelpers.isTypesProperty(node.property());\n\t    };\n\t    return AbstractMoveTypePropertiesCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar PullUpStateCalculator = (function (_super) {\n\t    __extends(PullUpStateCalculator, _super);\n\t    function PullUpStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    PullUpStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        if (!current)\n\t            return null;\n\t        while (current.parent() != null) {\n\t            if (this.isTypeNode(current)) {\n\t                //so, we're inside the type\n\t                //but we also want to double check that there are superclasses\n\t                var superTypes = extract.findUserDefinedSupertypes(hlConv(current));\n\t                if (superTypes && superTypes.length > 0)\n\t                    return current;\n\t                else\n\t                    return null;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return null;\n\t    };\n\t    return PullUpStateCalculator;\n\t})(AbstractMoveTypePropertiesCalculator);\n\tvar ExtractSupertypeCalculator = (function (_super) {\n\t    __extends(ExtractSupertypeCalculator, _super);\n\t    function ExtractSupertypeCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractSupertypeCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        if (!current)\n\t            return null;\n\t        while (current.parent() != null) {\n\t            if (this.isTypeNode(current)) {\n\t                //so, we're inside the type\n\t                //but we also want to double check that there are no superclasses\n\t                var superTypes = extract.findUserDefinedSupertypes(hlConv(current));\n\t                if (!superTypes || superTypes.length == 0)\n\t                    return current;\n\t                else\n\t                    return null;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return null;\n\t    };\n\t    return ExtractSupertypeCalculator;\n\t})(AbstractMoveTypePropertiesCalculator);\n\tvar GenerateExampleCalculator = (function (_super) {\n\t    __extends(GenerateExampleCalculator, _super);\n\t    function GenerateExampleCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    GenerateExampleCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        var txt = generalState.editor.getText();\n\t        //var res = getKeyValue(generalState.offset, txt);\n\t        //return (res == 'type')? highLevelNode: null;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        var p = attr.property();\n\t        if (!universeHelpers.isExampleProperty(p))\n\t            return null;\n\t        var typeAttr = highLevelNode.attr('type');\n\t        if (!typeAttr)\n\t            return null;\n\t        var type = typeAttr.value();\n\t        if (!type)\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return GenerateExampleCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tfunction initialize() {\n\t    contextActions.addAction({\n\t        name: \"Create global schema\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) { return createGlobalSchema(state); },\n\t        stateCalculator: new CreateGlobalSchemaStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Move resource\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new move.MoveElementsDialog(hlConv(state), \"Resource Type\", true).show();\n\t        },\n\t        stateCalculator: new MoveResourceStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Resource Type\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractTypesAndTraitsDialog(hlConv(state), \"Resource Type\", true).show();\n\t        },\n\t        stateCalculator: new ExtractResourceTypeStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Trait\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractTypesAndTraitsDialog(hlConv(state), \"Trait\", false).show();\n\t        },\n\t        stateCalculator: new ExtractTraitStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Convert JSON schema to type\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new ExtractJSONSchemaToTypeDialog(state, \"Convert JSON schema to type\").show();\n\t        },\n\t        stateCalculator: new ConvertJsonSchemaToTypeStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Library\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractLibraryDialog(hlConv(state), \"Extract Library\").show();\n\t        },\n\t        stateCalculator: new ExtractLibraryStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Overlay\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractOverlayDialog(hlConv(state), \"Extract Overlay\").show();\n\t        },\n\t        stateCalculator: new ExtractOverlayStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Modify Overlay\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) {\n\t            new extract.ModifyOverlayDialog(hlConv(state), \"Modify Overlay\").show();\n\t        },\n\t        stateCalculator: new ModifyOverlayStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Pull Up\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.PullUpDialog(hlConv(state), \"Pull Up\").show();\n\t        },\n\t        stateCalculator: new PullUpStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Supertype\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractSupertypeDialog(hlConv(state), \"Extract Supertype\").show();\n\t        },\n\t        stateCalculator: new ExtractSupertypeCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t}\n\texports.initialize = initialize;\n\t\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar fs = __webpack_require__(17);\n\tvar path = __webpack_require__(16);\n\tvar contextActions = __webpack_require__(23);\n\tvar rp = contextActions.parser;\n\tvar su = rp.schema;\n\tvar UI = __webpack_require__(18);\n\tvar xmlutil = __webpack_require__(39);\n\tvar shemagen = __webpack_require__(40);\n\tvar assistUtils = __webpack_require__(9);\n\tvar MoveToNewFileDialog = (function () {\n\t    function MoveToNewFileDialog(callback) {\n\t        this.callback = callback;\n\t    }\n\t    MoveToNewFileDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n\t        var errorLabel = UI.label(\"Please enter destination file path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        vc.addChild(UI.label(\"Please enter destination path\"));\n\t        var txt = UI.texfField(\"\", \"\", function (x) {\n\t            if (!txt) {\n\t                return;\n\t            }\n\t            var errorMessage = null;\n\t            _this.destination = txt.getBinding().get();\n\t            if (_this.destination.trim().length == 0) {\n\t                errorMessage = \"Please enter destination file path\";\n\t            }\n\t            else if (!path.extname(_this.destination) || path.extname(_this.destination).trim().length <= 2) {\n\t                errorMessage = \"Please enter destination file extension\";\n\t            }\n\t            else {\n\t                var dir = path.resolve(path.dirname(assistUtils.getActiveEditor().getPath()), path.dirname(_this.destination));\n\t                if (!fs.existsSync(dir)) {\n\t                    errorMessage = \"Parent directory does not exist\";\n\t                }\n\t                else {\n\t                    var st = fs.statSync(dir);\n\t                    if (!st.isDirectory()) {\n\t                        errorMessage = \"Parent path is not a directory\";\n\t                    }\n\t                    if (!errorMessage) {\n\t                        var canWrite = true;\n\t                        try {\n\t                            fs.accessSync(dir, fs.W_OK);\n\t                        }\n\t                        catch (exception) {\n\t                            canWrite = false;\n\t                        }\n\t                        if (!canWrite) {\n\t                            errorMessage = \"Can't write to specified directory, access denied. Please, check your permissions.\";\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (errorMessage) {\n\t                errorLabel.setDisplay(true);\n\t                errorLabel.setText(errorMessage);\n\t                okButton.setDisabled(true);\n\t            }\n\t            else {\n\t                errorLabel.setDisplay(false);\n\t                okButton.setDisabled(false);\n\t            }\n\t        });\n\t        vc.addChild(UI.vc(txt));\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            zz.destroy();\n\t        }).margin(10, 10));\n\t        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            zz.destroy();\n\t            _this.callback(_this.destination);\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return MoveToNewFileDialog;\n\t})();\n\texports.MoveToNewFileDialog = MoveToNewFileDialog;\n\tvar FillBodyDialog = (function () {\n\t    function FillBodyDialog(callback, title) {\n\t        if (title === void 0) { title = \"Fill body\"; }\n\t        this.callback = callback;\n\t        this.title = title;\n\t        this.name = \"\";\n\t        this.needXML = true;\n\t        this.needJSON = true;\n\t        this.jsexample = '{\\n \"message\":\"Hello world\"\\n}';\n\t        this.xmlexample = \"\";\n\t        this.xmlschema = \"\";\n\t        this.jsschema = \"\";\n\t    }\n\t    FillBodyDialog.prototype.extraContent = function (s) {\n\t    };\n\t    FillBodyDialog.prototype.updateButtons = function () {\n\t        if (!this.createButton) {\n\t            return;\n\t        }\n\t        if (this.name.length == 0) {\n\t            this.createButton.setDisabled(true);\n\t            this.em.setDisplay(true);\n\t            this.em.setText(\"Please type name of your payload\");\n\t            return;\n\t        }\n\t        if (this.needJSON) {\n\t            try {\n\t                JSON.parse(this.jsexample);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"JSON example is not correct\");\n\t                return;\n\t            }\n\t            try {\n\t                var so = su.getJSONSchema(this.jsschema, null);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"JSON schema is not correct\");\n\t                return;\n\t            }\n\t        }\n\t        if (this.needXML) {\n\t            try {\n\t                xmlutil(this.xmlexample);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"XML example is not correct\");\n\t                return;\n\t            }\n\t            try {\n\t                var so = su.getXMLSchema(this.xmlschema);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"XML schema is not correct\");\n\t                return;\n\t            }\n\t        }\n\t        this.em.setDisplay(false);\n\t        this.createButton.setDisabled(false);\n\t    };\n\t    FillBodyDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        this.em = UI.label(\"Please type name of your payload\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        var section = UI.section(this.title, UI.Icon.BOOK, false, false, this.em, UI.h3(\"Please type name for your payload\")).pad(10, 10);\n\t        section.addChild(UI.texfField(\"\", this.name, function (x) {\n\t            _this.name = x.getBinding().get();\n\t            _this.updateButtons();\n\t        }));\n\t        var r1 = UI.checkBox(\"Create XML body\");\n\t        r1.setValue(this.needXML);\n\t        r1.getBinding().addListener(function (x) {\n\t            _this.needXML = r1.getValue();\n\t            _this.updateButtons();\n\t        });\n\t        section.addChild(r1);\n\t        var r2 = UI.checkBox(\"Create JSON body\");\n\t        r2.setValue(this.needJSON);\n\t        r2.getBinding().addListener(function (x) {\n\t            _this.needJSON = r2.getValue();\n\t            _this.updateButtons();\n\t        });\n\t        section.addChild(r2);\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            zz.destroy();\n\t        }).margin(10, 10));\n\t        this.createButton = UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.onOk(zz);\n\t            zz.destroy();\n\t        });\n\t        buttonBar.addChild(this.createButton);\n\t        var tf = new UI.TabFolder();\n\t        this.createButton.setDisabled(true);\n\t        this.createTextSection(tf, \"JSON Example\", \"source.json\", \"jsexample\");\n\t        this.createTextSection(tf, \"JSON Schema\", \"source.json\", \"jsschema\");\n\t        this.createTextSection(tf, \"XML Example\", \"text.xml\", \"xmlexample\");\n\t        this.createTextSection(tf, \"XML Schema\", \"text.xml\", \"xmlschema\");\n\t        tf.setOnSelected(function () {\n\t            var c = tf.selectedComponent();\n\t            var te = c.children()[1];\n\t            te.setText(_this[c.id()]);\n\t        });\n\t        section.addChild(tf);\n\t        section.addChild(buttonBar);\n\t        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n\t    };\n\t    FillBodyDialog.prototype.createTextSection = function (tf, caption, lang, code) {\n\t        var _this = this;\n\t        var hs = UI.vc();\n\t        hs.setCaption(caption);\n\t        hs.setId(code);\n\t        var ts = new UI.AtomEditorElement(\"\", function (x) { return x; });\n\t        ts.setMini(false);\n\t        ts.getBinding().addListener(function (x) {\n\t            _this[code] = ts.getValue();\n\t            _this.updateButtons();\n\t        });\n\t        //ts.setCaption(code)\n\t        ts.setText(\"\" + this[code]);\n\t        ts.setCaption(caption);\n\t        ts.setGrammar(lang);\n\t        ts.setStyle(\"height\", \"400px\");\n\t        ts.setStyle(\"border\", \"solid\");\n\t        ts.setStyle(\"border-width\", \"1px\");\n\t        hs.addChild(UI.h3(\"Please type your example here:\"));\n\t        hs.addChild(ts);\n\t        if (code == 'jsexample') {\n\t            var b = UI.button(\"Generate JSON schema\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t                try {\n\t                    var rs = shemagen.generateSchema(_this.jsexample, \"application/json\");\n\t                    _this.jsschema = rs;\n\t                    tf.setSelectedIndex(1);\n\t                }\n\t                catch (e) {\n\t                    _this.jsschema = e.message;\n\t                    tf.setSelectedIndex(1);\n\t                }\n\t            });\n\t            hs.addChild(b.margin(5, 5, 5, 5));\n\t        }\n\t        if (code == 'xmlexample') {\n\t            var b = UI.button(\"Generate JSON example\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t                try {\n\t                    var rs = xmlutil(_this.xmlexample);\n\t                    _this.jsexample = JSON.stringify(rs, null, 2);\n\t                    tf.setSelectedIndex(0);\n\t                }\n\t                catch (e) {\n\t                    _this.jsexample = e.message;\n\t                    tf.setSelectedIndex(0);\n\t                }\n\t            });\n\t            hs.addChild(b.margin(5, 5, 5, 5));\n\t        }\n\t        tf.add(caption, null, hs);\n\t    };\n\t    FillBodyDialog.prototype.onOk = function (zz) {\n\t        var uiState = {\n\t            name: this.name,\n\t            needJSON: this.needJSON,\n\t            needXML: this.needXML,\n\t            jsexample: this.jsexample,\n\t            xmlexample: this.xmlexample,\n\t            jsschema: this.jsschema,\n\t            xmlschema: this.xmlschema,\n\t        };\n\t        this.callback(uiState);\n\t    };\n\t    return FillBodyDialog;\n\t})();\n\tfunction register() {\n\t    contextActions.uiActions.registerMoveContentsAction(function (uiFinishedCallback) {\n\t        new MoveToNewFileDialog(uiFinishedCallback).show();\n\t    });\n\t    contextActions.uiActions.registerCompleteBodyAction(function (uiFinishedCallback) {\n\t        new FillBodyDialog(uiFinishedCallback).show();\n\t    });\n\t}\n\texports.register = register;\n\t\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom-ui-lib\");\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"child_process\");\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"xmlhttprequest\");\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"mkdirp\");\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"url\");\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-actions\");\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-1-parser\");\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom-space-pen-views\");\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"underscore\");\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-suggestions\");\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"basarat-text-buffer\");\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-1-parser/dist/index\");\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * Created by kor on 22/06/15.\n\t */\n\tvar SpacePenViews = __webpack_require__(25);\n\tvar Scrollable = (function (_super) {\n\t    __extends(Scrollable, _super);\n\t    function Scrollable() {\n\t        _super.call(this);\n\t        this._children = [];\n\t    }\n\t    Scrollable.content = function () {\n\t        var v = this.div({ class: 'scrollpad pane-item padded', tabindex: -1, style: \"overflow:scroll;\" });\n\t        return v;\n\t    };\n\t    Scrollable.prototype.dispose = function () {\n\t    };\n\t    Scrollable.prototype.caption = function () { return \"\"; };\n\t    Scrollable.prototype.scroll = function (top, left) {\n\t        this.element.scrollTop = top;\n\t        this.element.scrollLeft = left;\n\t    };\n\t    Scrollable.prototype.size = function () {\n\t        return {\n\t            top: this.element.scrollTop,\n\t            left: this.element.scrollLeft,\n\t            bottom: this.element.scrollTop + this.element.clientHeight,\n\t            right: this.element.scrollLeft + this.element.clientWidth\n\t        };\n\t    };\n\t    Scrollable.prototype.changed = function () { };\n\t    Scrollable.prototype.refresh = function () { };\n\t    Scrollable.prototype.ui = function () {\n\t        return this.element;\n\t    };\n\t    Scrollable.prototype.setParent = function (p) {\n\t        if (this._parent != null)\n\t            this._parent.removeChild(this);\n\t        this._parent = p;\n\t    };\n\t    //TODO REMOVE COPY PASTE\n\t    Scrollable.prototype.addChild = function (child) {\n\t        child.setParent(this);\n\t        this._children.push(child);\n\t        //this.changed();\n\t    };\n\t    Scrollable.prototype.removeChild = function (child) {\n\t        this._children = this._children.filter(function (x) { return x != child; });\n\t        // this.changed();\n\t    };\n\t    Scrollable.prototype.doRender = function () {\n\t        return this.innerRenderUI();\n\t    };\n\t    /**\n\t     *\n\t     * @returns not null element;\n\t     */\n\t    Scrollable.prototype.selfRender = function () {\n\t        return document.createElement(\"div\");\n\t    };\n\t    Scrollable.prototype.attached = function () {\n\t        this.html(this.innerRenderUI());\n\t    };\n\t    Scrollable.prototype.innerRenderUI = function () {\n\t        var start = this.selfRender();\n\t        this._children.forEach(function (x) {\n\t            var el = x.renderUI();\n\t            if (el) {\n\t                start.appendChild(el);\n\t            }\n\t        });\n\t        return start;\n\t    };\n\t    Scrollable.prototype.renderUI = function () {\n\t        return this.element;\n\t    };\n\t    Scrollable.prototype.parent = function () {\n\t        return null;\n\t    };\n\t    Scrollable.prototype.children = function () {\n\t        return this._children;\n\t    };\n\t    Scrollable.prototype.isAttached = function () {\n\t        return true;\n\t    };\n\t    return Scrollable;\n\t})(SpacePenViews.ScrollView);\n\texports.Scrollable = Scrollable;\n\t\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar Workspace = (function () {\n\t    function Workspace() {\n\t    }\n\t    Workspace.prototype.onDidChangeActivePaneItem = function (callback) {\n\t        return atom.workspace.onDidChangeActivePaneItem(callback);\n\t    };\n\t    Workspace.prototype.addModalPanel = function (arg) {\n\t        return atom.workspace.addModalPanel(arg);\n\t    };\n\t    Workspace.prototype.getActiveTextEditor = function () {\n\t        return atom.workspace.getActiveTextEditor();\n\t    };\n\t    Workspace.prototype.getActivePane = function () {\n\t        return atom.workspace.getActivePane();\n\t    };\n\t    Workspace.prototype.getActiveEditor = function () {\n\t        return atom.workspace.getActiveEditor();\n\t    };\n\t    Workspace.prototype.addRightPanel = function (arg) {\n\t        return atom.workspace.addRightPanel(arg);\n\t    };\n\t    Workspace.prototype.paneForItem = function (arg) {\n\t        return atom.workspace.paneForItem(arg);\n\t    };\n\t    Workspace.prototype.getPaneItems = function () {\n\t        return atom.workspace.getPaneItems();\n\t    };\n\t    Workspace.prototype.onDidAddPaneItem = function (callback) {\n\t        return atom.workspace.onDidAddPaneItem(callback);\n\t    };\n\t    Workspace.prototype.onDidDestroyPane = function (callback) {\n\t        return atom.workspace.onDidDestroyPane(callback);\n\t    };\n\t    Workspace.prototype.open = function (path, args) {\n\t        atom.workspace.open(path, args);\n\t    };\n\t    return Workspace;\n\t})();\n\texports.Workspace = Workspace;\n\tfunction open(pathsToOpen) {\n\t    atom.open(pathsToOpen);\n\t}\n\texports.open = open;\n\texports.workspace = new Workspace();\n\tvar CommandManager = (function () {\n\t    function CommandManager() {\n\t    }\n\t    CommandManager.prototype.add = function (selector, type, callback) {\n\t        return atom.commands.add(selector, type, callback);\n\t    };\n\t    return CommandManager;\n\t})();\n\texports.CommandManager = CommandManager;\n\texports.commands = new CommandManager();\n\t\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar atom = __webpack_require__(31);\n\tvar aspv = __webpack_require__(25);\n\t/*\n\t * List viewer for commands. accepts confirmation function, label function and key for fuzzy filtering.\n\t */\n\tvar SelectListView = (function (_super) {\n\t    __extends(SelectListView, _super);\n\t    function SelectListView(_confirmed, label, filterKey) {\n\t        if (filterKey === void 0) { filterKey = ''; }\n\t        _super.call(this, []);\n\t        this._confirmed = _confirmed;\n\t        this.label = label;\n\t        this.filterKey = filterKey;\n\t    }\n\t    SelectListView.prototype.getFilterKey = function () { return this.filterKey; };\n\t    SelectListView.prototype.viewForItem = function (item) {\n\t        return \"<li>\" + this.label(item) + \"</li>\";\n\t    };\n\t    SelectListView.prototype.cancel = function () {\n\t        this.panel.hide();\n\t        _super.prototype.cancel.call(this);\n\t    };\n\t    SelectListView.prototype.hide = function () {\n\t        if (!this.panel)\n\t            return;\n\t        this.panel.hide();\n\t    };\n\t    SelectListView.prototype.confirmed = function (item) {\n\t        this._confirmed(item);\n\t        this.hide();\n\t        return this.getSelectedItemView();\n\t    };\n\t    SelectListView.prototype.show = function (commands) {\n\t        this.storeFocusedElement();\n\t        if (!this.panel)\n\t            this.panel = atom.workspace.addModalPanel({ item: this });\n\t        this.setItems(commands);\n\t        this.panel.show();\n\t        this.focusFilterEditor();\n\t    };\n\t    return SelectListView;\n\t})(aspv.SelectListView);\n\texports.SelectListView = SelectListView;\n\t\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar editorTools = __webpack_require__(5);\n\tvar contextActions = __webpack_require__(23);\n\tvar dialogs = __webpack_require__(49);\n\tvar path = __webpack_require__(16);\n\tvar rp = __webpack_require__(24);\n\tvar services = rp.ds;\n\tvar universeHelpers = rp.universeHelpers;\n\tvar AddNewResourceStateCalculator = (function (_super) {\n\t    __extends(AddNewResourceStateCalculator, _super);\n\t    function AddNewResourceStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AddNewResourceStateCalculator.prototype.calculate = function () {\n\t        //usually we dont need to check the editor, CommonASTStateCalculator does this for us\n\t        //but in this case we accept null generalState, so double-checking for opened file\n\t        var editor = this.getEditor();\n\t        if (!editor)\n\t            return null;\n\t        if (path.extname(editor.getPath()) != '.raml')\n\t            return null;\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isResourceType(highLevelNode.definition()) &&\n\t            !universeHelpers.isApiType(highLevelNode.definition()))\n\t            return null;\n\t        if (!highLevelNode.lowLevel()) {\n\t            return null;\n\t        }\n\t        return highLevelNode;\n\t    };\n\t    return AddNewResourceStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tvar CreateNewAPIStateCalculator = (function (_super) {\n\t    __extends(CreateNewAPIStateCalculator, _super);\n\t    function CreateNewAPIStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CreateNewAPIStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (generalState)\n\t            return null;\n\t        var editor = this.getEditor();\n\t        if (!editor)\n\t            return null;\n\t        if (path.extname(editor.getPath()) != '.raml')\n\t            return null;\n\t        var text = editor.getText().trim();\n\t        if (text != \"\")\n\t            return null;\n\t        return {};\n\t    };\n\t    return CreateNewAPIStateCalculator;\n\t})(contextActions.CommonASTStateCalculator);\n\tfunction getResourceParent(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n\t        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n\t        return node;\n\t    return getResourceParent(node.parent());\n\t}\n\texports.getResourceParent = getResourceParent;\n\tfunction getMethodParent(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((universeHelpers.isMethodType(node.definition()) || universeHelpers.isTraitType(node.definition())) && !node.definition().getAdapter(services.RAMLService).isUserDefined()) {\n\t        return node;\n\t    }\n\t    return null;\n\t}\n\tfunction getParent(node, name) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((node.definition().isAssignableFrom(name))) {\n\t        return node;\n\t    }\n\t    return null;\n\t}\n\tfunction getResourceParentOrRoot(node) {\n\t    var rp = getResourceParent(node);\n\t    return rp ? rp : editorTools.aquireManager().ast;\n\t}\n\tfunction toResource(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n\t        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n\t        return node;\n\t    return null;\n\t}\n\texports.toResource = toResource;\n\tfunction registerQuickCommands(cm) {\n\t    if (!editorTools.aquireManager())\n\t        editorTools.initEditorTools(false);\n\t    var commands = [];\n\t    commands.forEach(function (x) { return x['__module__'] = 'editorTools'; });\n\t    contextActions.addAction({\n\t        name: \"Add new resource\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Add new...\"],\n\t        onClick: function (state) { return dialogs.newResource(editorTools.aquireManager().getSelectedNode()); },\n\t        stateCalculator: new AddNewResourceStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Create new API\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Add new...\"],\n\t        onClick: function (state) { return dialogs.newApi(); },\n\t        stateCalculator: new CreateNewAPIStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addSimpleAction(\"Add new method\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newMethod(toResource(editorTools.aquireManager().getSelectedNode())); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && toResource(editorTools.aquireManager().getSelectedNode()) != null; });\n\t    contextActions.addSimpleAction(\"Create new URI Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(toResource(editorTools.aquireManager().getSelectedNode()), \"Create new URI Parameter\", \"uriParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (toResource(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Query Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Query Parameter\", \"queryParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Response Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n\t    contextActions.addSimpleAction(\"Create new Response Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Response Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n\t    contextActions.addSimpleAction(\"Create new Property\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\"), \"Create new Property\", \"properties\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\") != null); });\n\t    contextActions.addSimpleAction(\"Create new Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Response\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Response\", \"responses\", \"200\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t}\n\texports.registerQuickCommands = registerQuickCommands;\n\t\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar UI = __webpack_require__(18);\n\tvar SC = __webpack_require__(30);\n\tvar CompositeDisposable = UI.CompositeDisposable;\n\tvar rp = __webpack_require__(24);\n\tvar universes = rp.universes;\n\tvar editorTools = __webpack_require__(5);\n\tvar index_1 = __webpack_require__(29);\n\tvar RamlOutline = (function (_super) {\n\t    __extends(RamlOutline, _super);\n\t    function RamlOutline() {\n\t        _super.call(this);\n\t        this.disposables = new CompositeDisposable();\n\t        this.fire = true;\n\t        this.createTree(null);\n\t        this.addClass('raml-outline');\n\t        this.addChild(this._rs);\n\t    }\n\t    RamlOutline.prototype.createTree = function (p) {\n\t        var _this = this;\n\t        this._rs = createTree(p, function (sender) {\n\t            if (editorTools.aquireManager()._details && sender.selection && sender.selection.elements && _this.fire == true) {\n\t                if (sender.selection.elements.length > 0 && sender.selection.elements[0]) {\n\t                    editorTools.aquireManager().setSelectedNode(sender.selection.elements[0]);\n\t                }\n\t            }\n\t        });\n\t        this._viewers = [0, 1, 2, 3].map(function (i) { return _this._rs.get(i).content; });\n\t    };\n\t    RamlOutline.prototype.getTitle = function () { return \"Outline\"; };\n\t    RamlOutline.prototype.getNodePType = function (node) {\n\t        while (node.parent() && node.parent().parent()) {\n\t            node = node.parent();\n\t        }\n\t        return getNodeType(node);\n\t    };\n\t    RamlOutline.prototype.setSelection = function (node) {\n\t        //if (this._selectedNode == node) return;\n\t        this._selectedNode = node;\n\t        this.fire = false;\n\t        try {\n\t            var index = this.getNodePType(node);\n\t            var viewer = this._viewers[index];\n\t            if (viewer != null) {\n\t                viewer.setSelection(node);\n\t                this._rs.setSelectedIndex(index);\n\t            }\n\t        }\n\t        finally {\n\t            this.fire = true;\n\t        }\n\t    };\n\t    RamlOutline.prototype.setUnit = function (unit, force) {\n\t        if (force === void 0) { force = false; }\n\t        this._children = [];\n\t        this.createTree(unit);\n\t        this.addClass('raml-outline');\n\t        this.addChild(this._rs);\n\t        this.html(this.innerRenderUI());\n\t    };\n\t    RamlOutline.prototype.attach = function () {\n\t        if (!this._isAttached) {\n\t            var $this = $(this);\n\t            $this.html(this._rs.renderUI().outerHTML);\n\t            this._isAttached = true;\n\t        }\n\t    };\n\t    RamlOutline.prototype.forEachViewer = function (command) {\n\t        this._viewers.forEach(command);\n\t    };\n\t    RamlOutline.prototype.refresh = function () {\n\t        var unit = this.unit;\n\t        this.setUnit(null);\n\t        this.setUnit(unit);\n\t    };\n\t    RamlOutline.prototype.destroy = function () {\n\t        editorTools.aquireManager()._view = null;\n\t        this._selectedNode = null;\n\t        this.unit = null;\n\t        this._viewers = [];\n\t        this._rs = null;\n\t        this._children = [];\n\t        this.disposables.dispose();\n\t    };\n\t    return RamlOutline;\n\t})(SC.Scrollable);\n\texports.RamlOutline = RamlOutline;\n\t/*\n\t *\n\t */\n\tfunction treeSection(input, name, icon, filterFunc, l, opener) {\n\t    if (opener === void 0) { opener = null; }\n\t    var v = UI.treeViewerSection(name, icon, input, function (x) { return getChildren(x).filter(function (x) { return filterFunc(x); }); }, new HLRenderer(opener));\n\t    v.viewer.setBasicLabelFunction(function (x) { return x ? x.name() : ''; });\n\t    v.viewer.setKeyProvider({\n\t        key: function (p) {\n\t            return \"\" + p.lowLevel().start();\n\t        }\n\t    });\n\t    v.viewer.addSelectionListener(l);\n\t    return v;\n\t}\n\texports.treeSection = treeSection;\n\tvar HLNodeType;\n\t(function (HLNodeType) {\n\t    HLNodeType[HLNodeType[\"Resource\"] = 0] = \"Resource\";\n\t    HLNodeType[HLNodeType[\"Schema\"] = 1] = \"Schema\";\n\t    HLNodeType[HLNodeType[\"Type\"] = 2] = \"Type\";\n\t    HLNodeType[HLNodeType[\"Trait\"] = 3] = \"Trait\";\n\t    HLNodeType[HLNodeType[\"Unknown\"] = 4] = \"Unknown\";\n\t})(HLNodeType || (HLNodeType = {}));\n\tfunction getNodeType(node) {\n\t    if (isResource(node))\n\t        return HLNodeType.Resource;\n\t    else if (isOther(node))\n\t        return HLNodeType.Trait;\n\t    else if (isResourceTypeOrTrait(node))\n\t        return HLNodeType.Type;\n\t    else if (isSchemaOrType(node))\n\t        return HLNodeType.Schema;\n\t    else\n\t        return HLNodeType.Unknown;\n\t}\n\tfunction isResource(p) {\n\t    return (p.definition().key() === universes.Universe08.Resource || p.definition().key() === universes.Universe10.Resource);\n\t}\n\tvar prohibit = {\n\t    resources: true,\n\t    schemas: true,\n\t    types: true,\n\t    resourceTypes: true,\n\t    traits: true\n\t};\n\tfunction isOther(p) {\n\t    if (p.property()) {\n\t        var nm = p.property().nameId();\n\t        if (prohibit[nm]) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t}\n\tfunction isResourceTypeOrTrait(p) {\n\t    var pc = p.definition().key();\n\t    return (pc === universes.Universe08.ResourceType\n\t        || pc === universes.Universe10.ResourceType ||\n\t        pc === universes.Universe08.Trait\n\t        ||\n\t            pc === universes.Universe10.Trait);\n\t}\n\tfunction isApi(p) {\n\t    var pc = p.definition().key();\n\t    return pc === universes.Universe08.Api || pc === universes.Universe10.Api;\n\t}\n\tfunction isDocumentation(p) {\n\t    var pc = p.definition().key();\n\t    return (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem);\n\t}\n\tfunction isSchemaOrType(p) {\n\t    var pc = p.definition().key();\n\t    return (pc === universes.Universe08.GlobalSchema) || (p.property() && p.property().nameId()\n\t        == universes.Universe10.LibraryBase.properties.types.name);\n\t}\n\tfunction getChildren(p) {\n\t    if (p == null)\n\t        return [];\n\t    if (p.isAttr()) {\n\t        return [];\n\t    }\n\t    if (p.isUnknown()) {\n\t        return [];\n\t    }\n\t    var ch = p.children();\n\t    return ch.filter(function (x) {\n\t        if (x.isAttr()) {\n\t            return false;\n\t        }\n\t        if (x.isUnknown()) {\n\t            return false;\n\t        }\n\t        var e = x;\n\t        //return false;\n\t        return true;\n\t    });\n\t}\n\tfunction keyProvider(node) {\n\t    if (!node)\n\t        return null;\n\t    if (node && !node.parent())\n\t        return node.name();\n\t    else\n\t        return node.name() + \" :: \" + keyProvider(node.parent());\n\t}\n\tfunction fullPath(node) {\n\t    if (node == null)\n\t        return \"\";\n\t    else\n\t        return fullPath(node.parent()) + \"/\" + node.name();\n\t}\n\tfunction simpleTree(input, selectionListener, filterFunc, opener) {\n\t    if (opener === void 0) { opener = null; }\n\t    var viewer = UI.treeViewer(function (x) {\n\t        if (x === null) {\n\t            return [];\n\t        }\n\t        if (x.parent() == null) {\n\t            return getChildren(x).filter(function (x) { return filterFunc(x); });\n\t        }\n\t        return getChildren(x);\n\t    }, new HLRenderer(opener), fullPath);\n\t    viewer.setBasicLabelFunction(function (x) { return x.name(); });\n\t    viewer.setKeyProvider({ key: keyProvider });\n\t    viewer.addSelectionListener(selectionListener);\n\t    viewer.getBinding().set(input);\n\t    return viewer;\n\t}\n\texports.simpleTree = simpleTree;\n\tfunction createTree(p, selectionListener, opener) {\n\t    if (opener === void 0) { opener = null; }\n\t    var outline = simpleTree(p, { selectionChanged: selectionListener }, function (x) { return (isResource(x)); }, opener);\n\t    var schemas = simpleTree(p, { selectionChanged: selectionListener }, isSchemaOrType, opener);\n\t    var types = simpleTree(p, { selectionChanged: selectionListener }, isResourceTypeOrTrait, opener);\n\t    var other = simpleTree(p, { selectionChanged: selectionListener }, function (x) { return (isOther(x)); }, opener);\n\t    var folder = new UI.TabFolder();\n\t    folder.add(\"Resources\", UI.Icon.SEARCH, outline, 'raml-icon-custom');\n\t    folder.add(\"Schemas & Types\", UI.Icon.SEARCH, schemas, 'raml-icon-custom');\n\t    folder.add(\"Resource Types & Traits\", UI.Icon.SEARCH, types, 'raml-icon-custom');\n\t    folder.add(\"Other\", UI.Icon.SEARCH, other, 'raml-icon-custom');\n\t    folder.setSelectedIndex(0);\n\t    folder.setOnSelected(function () {\n\t        var selectedTab = folder.selectedComponent();\n\t        if (selectedTab) {\n\t            var selection = selectedTab.getSelection();\n\t            if (selection && selection.elements && selection.elements.length > 0) {\n\t                selectionListener(new UI.SelectionChangedEvent(selectedTab, null, selection));\n\t            }\n\t            selectedTab.customizePanel(true);\n\t        }\n\t    });\n\t    return folder;\n\t}\n\texports.createTree = createTree;\n\tvar HLRenderer = (function () {\n\t    function HLRenderer(opener) {\n\t        this.opener = opener;\n\t    }\n\t    HLRenderer.prototype.render = function (model) {\n\t        try {\n\t            if (model.isAttr()) {\n\t                var attr = model;\n\t                return UI.hc(UI.label(attr.name() + \":\" + attr.value()), UI.a(\"\", function (x) {\n\t                    var p1 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().start());\n\t                    var p2 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().end());\n\t                    editorTools.aquireManager().getCurrentEditor().setSelectedBufferRange({ start: p1, end: p1 }, {});\n\t                }, UI.Icon.ARROW_SMALL_LEFT, null, null));\n\t            }\n\t            if (model.isUnknown()) {\n\t                return UI.label(\"unknown\");\n\t            }\n\t            var icon = UI.Icon.DASH;\n\t            var highLight = UI.TextClasses.NORMAL;\n\t            var node = model;\n\t            var pc = node.definition().key();\n\t            if (pc === universes.Universe08.Resource || pc === universes.Universe10.Resource) {\n\t                icon = UI.Icon.PRIMITIVE_SQUARE;\n\t                highLight = UI.TextClasses.HIGHLIGHT;\n\t            }\n\t            if (pc === universes.Universe08.Method || pc === universes.Universe10.Method) {\n\t                icon = UI.Icon.PRIMITIVE_DOT;\n\t                highLight = UI.TextClasses.WARNING;\n\t            }\n\t            if (pc === universes.Universe08.AbstractSecurityScheme || pc === universes.Universe10.AbstractSecurityScheme) {\n\t                icon = UI.Icon.LOCK;\n\t                highLight = UI.TextClasses.HIGHLIGHT;\n\t            }\n\t            if (pc === universes.Universe08.AbstractSecurityScheme || pc == universes.Universe10.AbstractSecurityScheme) {\n\t                icon = UI.Icon.FILE_SUBMODULE;\n\t                highLight = UI.TextClasses.NORMAL;\n\t            }\n\t            if (pc == universes.Universe10.TypeDeclaration && index_1.universeHelpers.isAnnotationTypesProperty(node.property())) {\n\t                icon = UI.Icon.TAG;\n\t                highLight = UI.TextClasses.HIGHLIGHT;\n\t            }\n\t            if (node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name) ||\n\t                node.definition().isAssignableFrom(universes.Universe08.Parameter.name)) {\n\t                if (node.property() && node.property().nameId() == universes.Universe10.ObjectTypeDeclaration.properties.properties.name) {\n\t                    icon = UI.Icon.FILE_BINARY;\n\t                    highLight = UI.TextClasses.SUCCESS;\n\t                }\n\t                else {\n\t                    icon = UI.Icon.FILE_BINARY;\n\t                    highLight = UI.TextClasses.SUCCESS;\n\t                }\n\t            }\n\t            var nm = model.name();\n\t            var hnode = model;\n\t            if (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem) {\n\t                icon = UI.Icon.BOOK;\n\t                var a = hnode.attr(\"title\");\n\t                if (a) {\n\t                    nm = a.value();\n\t                }\n\t            }\n\t            var extraText = \"\";\n\t            var extraClass = UI.TextClasses.NORMAL;\n\t            var hc = UI.hc(UI.label(nm, icon, highLight));\n\t            var tp = node.attr(\"type\");\n\t            if (tp) {\n\t                var vl = tp.value();\n\t                if (vl == null) {\n\t                    vl = \"\";\n\t                }\n\t                var sv = \"\";\n\t                if (typeof vl === \"object\") {\n\t                    sv = \":\" + vl.valueName();\n\t                }\n\t                else {\n\t                    sv = \":\" + vl;\n\t                }\n\t                hc.addChild(UI.label(sv, UI.Icon.NONE, UI.TextClasses.WARNING).margin(2, 0, 0, 0));\n\t            }\n\t            if (node.lowLevel().unit() != node.root().lowLevel().unit()) {\n\t                highLight = UI.TextClasses.SUBTLE;\n\t                hc.addChild(UI.label(\"(\" + node.lowLevel().unit().path() + \")\", UI.Icon.NONE, highLight).margin(5, 0, 0, 0));\n\t            }\n\t            hc.addClass(\"outline\");\n\t            return hc;\n\t        }\n\t        catch (e) {\n\t            console.log(e);\n\t            return UI.hc(UI.label(\"Illegal node\", UI.Icon.ARROW_SMALL_LEFT, null, null));\n\t        }\n\t    };\n\t    return HLRenderer;\n\t})();\n\texports.HLRenderer = HLRenderer;\n\t\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar emissary = __webpack_require__(44);\n\tvar Subscriber = emissary.Subscriber;\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b)\n\t        if (b.hasOwnProperty(p))\n\t            d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar sp = __webpack_require__(25);\n\tvar $ = sp.$;\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b)\n\t        if (b.hasOwnProperty(p))\n\t            d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar View = (function (_super) {\n\t    __extends(View, _super);\n\t    function View(options) {\n\t        _super.call(this);\n\t        this.options = options;\n\t        this.init();\n\t    }\n\t    Object.defineProperty(View.prototype, \"$\", {\n\t        get: function () {\n\t            return this;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    View.content = function () {\n\t        throw new Error('Must override the base View static content member');\n\t    };\n\t    View.prototype.init = function () { };\n\t    return View;\n\t})(sp.View);\n\tvar ScrollView = (function (_super) {\n\t    __extends(ScrollView, _super);\n\t    function ScrollView(options) {\n\t        _super.call(this);\n\t        this.options = options;\n\t        this.init();\n\t    }\n\t    Object.defineProperty(ScrollView.prototype, \"$\", {\n\t        get: function () {\n\t            return this;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    ScrollView.content = function () {\n\t        throw new Error('Must override the base View static content member');\n\t    };\n\t    ScrollView.prototype.init = function () { };\n\t    return ScrollView;\n\t})(sp.ScrollView);\n\tvar TooltipView = (function (_super) {\n\t    __extends(TooltipView, _super);\n\t    function TooltipView(rect) {\n\t        _super.call(this, rect);\n\t        this.rect = rect;\n\t        $(document.body).append(this.$);\n\t        this.updatePosition();\n\t    }\n\t    TooltipView.content = function () {\n\t        var _this = this;\n\t        return this.div({ class: 'atom-typescript-tooltip tooltip' }, function () {\n\t            _this.div({ class: 'tooltip-inner', outlet: 'inner' });\n\t        });\n\t    };\n\t    TooltipView.prototype.updateText = function (text) {\n\t        this.inner.html(text);\n\t        this.updatePosition();\n\t        this.$.fadeTo(300, 1);\n\t    };\n\t    TooltipView.prototype.updatePosition = function () {\n\t        var offset = 10;\n\t        var left = this.rect.right;\n\t        var top = this.rect.bottom;\n\t        var right = undefined;\n\t        if (left + this.$[0].offsetWidth >= $(document.body).width())\n\t            left = $(document.body).width() - this.$[0].offsetWidth - offset;\n\t        //this.$.css({ 'max-width': '500px'})\n\t        if (left < 0) {\n\t            this.$.css({ 'white-space': 'pre-wrap' });\n\t            left = offset;\n\t            right = offset;\n\t        }\n\t        if (top + this.$[0].offsetHeight >= $(document.body).height()) {\n\t            top = this.rect.top - this.$[0].offsetHeight;\n\t        }\n\t        this.$.css({ left: left, top: top });\n\t    };\n\t    return TooltipView;\n\t})(View);\n\tfunction getFromShadowDom(element, selector) {\n\t    var el = element[0];\n\t    var found = el.rootElement.querySelectorAll(selector);\n\t    return sp.$(found[0]);\n\t}\n\texports.getFromShadowDom = getFromShadowDom;\n\tfunction getEditorPositionForBufferPosition(editor, bufferPos) {\n\t    var buffer = editor.getBuffer();\n\t    return buffer.characterIndexForPosition(bufferPos);\n\t}\n\tfunction isAllowedExtension(ext) {\n\t    return (ext == '.raml' || ext == '.yaml');\n\t}\n\texports.isAllowedExtension = isAllowedExtension;\n\tfunction attach(editorView, editor) {\n\t    //console.log(\"Attach\")\n\t    //console.log(editorView)\n\t    //var rawView = editorView;\n\t    //var filePath = editor.getPath();\n\t    //var filename = path.basename(filePath);\n\t    //var ext = path.extname(filename);\n\t    //if (!isAllowedExtension(ext))\n\t    //    return;\n\t    //if (!fs.existsSync(filePath)) {\n\t    //    return;\n\t    //}\n\t    //var scroll = getFromShadowDom([editorView], '.scroll-view');\n\t    //var subscriber = new Subscriber();\n\t    //var exprTypeTimeout = null;\n\t    //var exprTypeTooltip = null;\n\t    //var lastExprTypeBufferPt;\n\t    //subscriber.subscribe(scroll, 'mousemove', function (e) {\n\t    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n\t    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n\t    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n\t    //    if (lastExprTypeBufferPt && lastExprTypeBufferPt.isEqual(bufferPt) && exprTypeTooltip)\n\t    //        return;\n\t    //    lastExprTypeBufferPt = bufferPt;\n\t    //    clearExprTypeTimeout();\n\t    //    exprTypeTimeout = setTimeout(function () { return showExpressionType(e); }, 1000);\n\t    //});\n\t    //subscriber.subscribe(scroll, 'mouseout', function (e) { return clearExprTypeTimeout(); });\n\t    //subscriber.subscribe(scroll, 'keydown', function (e) { return clearExprTypeTimeout(); });\n\t    //editor.onDidDestroy(function () { return deactivate(); });\n\t    //function showExpressionType(e) {\n\t    //    if (exprTypeTooltip)\n\t    //        return;\n\t    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n\t    //    pixelPt.top += editor.displayBuffer.getScrollTop();\n\t    //    pixelPt.left += editor.displayBuffer.getScrollLeft();\n\t    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n\t    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n\t    //    var curCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column]);\n\t    //    var nextCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column + 1]);\n\t    //    if (curCharPixelPt.left >= nextCharPixelPt.left)\n\t    //        return;\n\t    //    var offset = editor.getLineHeightInPixels() * 0.7;\n\t    //    var tooltipRect = {\n\t    //        left: e.clientX,\n\t    //        right: e.clientX,\n\t    //        top: e.clientY - offset,\n\t    //        bottom: e.clientY + offset\n\t    //    };\n\t    //    exprTypeTooltip = new TooltipView(tooltipRect);\n\t    //    // var position = getEditorPositionForBufferPosition(editor, bufferPt);\n\t    //    var node=provider.getAstNode({\n\t    //        editor:editor,\n\t    //        bufferPosition:bufferPt\n\t    //    },false);\n\t    //    if (node) {\n\t    //        var hl=<hl.IHighLevelNode>node;\n\t    //        var pos=getEditorPositionForBufferPosition(editor,bufferPt);\n\t    //        var doc=docHelper.getDocumentation(hl,pos);\n\t    //        if (doc){\n\t    //            exprTypeTooltip.updateText(doc);\n\t    //        }\n\t    //    }\n\t    //\n\t    //}\n\t    //function deactivate() {\n\t    //    subscriber.unsubscribe();\n\t    //    clearExprTypeTimeout();\n\t    //}\n\t    //function clearExprTypeTimeout() {\n\t    //    if (exprTypeTimeout) {\n\t    //        clearTimeout(exprTypeTimeout);\n\t    //        exprTypeTimeout = null;\n\t    //    }\n\t    //    hideExpressionType();\n\t    //}\n\t    //function hideExpressionType() {\n\t    //    if (!exprTypeTooltip)\n\t    //        return;\n\t    //    exprTypeTooltip.$.remove();\n\t    //    exprTypeTooltip = null;\n\t    //}\n\t}\n\texports.attach = attach;\n\tfunction pixelPositionFromMouseEvent(editorView, event) {\n\t    var clientX = event.clientX, clientY = event.clientY;\n\t    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n\t    var top = clientY - linesClientRect.top;\n\t    var left = clientX - linesClientRect.left;\n\t    return { top: top, left: left };\n\t}\n\tfunction screenPositionFromMouseEvent(editorView, event) {\n\t    return editorView.getModel().screenPositionForPixelPosition(pixelPositionFromMouseEvent(editorView, event));\n\t}\n\texports.screenPositionFromMouseEvent = screenPositionFromMouseEvent;\n\tfunction screenPositionFromMouse(editor, event) {\n\t    var editorView = sp.$(atom.views)[0].getView(editor);\n\t    var pos = pixelPositionFromMouseEvent(editorView, event);\n\t    pos.top -= editor.displayBuffer.getScrollTop();\n\t    pos.left -= editor.displayBuffer.getScrollLeft();\n\t    var clientRect = editorView.getBoundingClientRect();\n\t    pos.top += clientRect.top;\n\t    pos.left += clientRect.left;\n\t    return pos;\n\t}\n\texports.screenPositionFromMouse = screenPositionFromMouse;\n\t//export function turnOn()\n\t//{\n\t//    (<any>atom.workspace).observeTextEditors(editor=> {\n\t//        var editorView = (<any>sp.$((<any>atom).views))[0].getView(editor);\n\t//        attach(editorView, editor);\n\t//    });\n\t//}\n\t\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by kor on 24/07/15.\n\t */\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar path = __webpack_require__(16);\n\tvar editorTools = __webpack_require__(5);\n\tvar rp = __webpack_require__(24);\n\tvar project = rp.project;\n\tfunction ast(editor) {\n\t    var man = editorTools.aquireManager();\n\t    if (editorTools.aquireManager()) {\n\t        if (man.getCurrentEditor() == editor) {\n\t            return man.ast;\n\t        }\n\t    }\n\t    var p = editor.getPath();\n\t    var prj = project.createProject(path.dirname(p));\n\t    var unit = prj.unit(path.basename(p));\n\t    var text = editor.getBuffer().getText();\n\t    if (!unit) {\n\t        return null;\n\t    }\n\t    unit.updateContent(text);\n\t    var ast = unit.highLevel();\n\t    return ast;\n\t}\n\texports.ast = ast;\n\t\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(17);\n\tvar path = __webpack_require__(16);\n\tvar rp = __webpack_require__(24);\n\tvar stubs = rp.stubs;\n\tvar _ = __webpack_require__(26);\n\tvar provider = __webpack_require__(7);\n\tvar UI = __webpack_require__(18);\n\tvar outlineView = __webpack_require__(34);\n\tvar def = rp.ds;\n\tvar assist = __webpack_require__(9);\n\tvar yaml = __webpack_require__(43);\n\tvar universeHelpers = rp.universeHelpers;\n\tvar universeModule = rp.universes;\n\tvar search = rp.search;\n\tvar util = __webpack_require__(50);\n\tvar ExtractTypesAndTraitsDialog = (function () {\n\t    function ExtractTypesAndTraitsDialog(node, name, _resourceType) {\n\t        this.node = node;\n\t        this.name = name;\n\t        this._resourceType = _resourceType;\n\t        this.filters = new NodeFilters();\n\t    }\n\t    ExtractTypesAndTraitsDialog.prototype.getActiveEditor = function () {\n\t        return assist.getActiveEditor();\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Extract \" + this.name + \":\", UI.Icon.GIST_NEW, false, false);\n\t        vc.addChild(UI.label(\"Extracted element name:\").pad(5, 0));\n\t        var errorLabel = UI.label(\"Please type valid name for \" + this.name, UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        var tf = UI.texfField(\"\", \"\", function (x) {\n\t            if (!okButton) {\n\t                return;\n\t            }\n\t            var isErr = tf.getBinding().get().trim().length == 0;\n\t            okButton.setDisabled(isErr);\n\t            errorLabel.setDisplay(isErr);\n\t            stub.attr(\"name\").setValue(tf.getBinding().get());\n\t        });\n\t        vc.addChild(tf);\n\t        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n\t        var el = UI.hc();\n\t        vc.setPercentWidth(100);\n\t        el.setPercentWidth(100);\n\t        var filterFunc = function (x) {\n\t            if (_this._resourceType) {\n\t                if (universeHelpers.isResourceType(x.definition())) {\n\t                    return false;\n\t                }\n\t            }\n\t            if (_.find(_this.filters.removals, function (y) { return x == y; })) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t        var stub = this.createNodeStub(node);\n\t        var v = createSmallSelectionPanel(node, filterFunc, \"400px\", \"47%\");\n\t        var v1 = createSmallSelectionPanel(stub, function (x) { return true; }, \"400px\", \"47%\", \"right\");\n\t        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = v.getSelection().elements;\n\t            _this.moveRight(z, stub, node, v, v1);\n\t        });\n\t        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = v1.getSelection().elements;\n\t            _this.moveLeft(z, stub, node, v, v1);\n\t        });\n\t        var allRight = UI.button(\">>\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = node.elements().filter(function (x) { return filterFunc(x); });\n\t            _this.moveRight(z, stub, node, v, v1);\n\t        });\n\t        var allLeft = UI.button(\"<<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = stub.elements();\n\t            _this.moveLeft(z, stub, node, v, v1);\n\t        });\n\t        el.addChild(UI.vc(moveRight, moveLeft, allRight, allLeft));\n\t        el.addChild(v);\n\t        el.addChild(v1);\n\t        vc.addChild(el);\n\t        v.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var rs = ev.selection.elements;\n\t                var m = (_.find(rs, function (x) { return x.parent() != node; }) != undefined);\n\t                moveRight.setDisabled(m || (rs.length == 0));\n\t            }\n\t        });\n\t        v1.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var nodesToMove = ev.selection.elements;\n\t                var unregisteredNode = _.find(nodesToMove, function (nodeToMove) {\n\t                    var registeredNode = _.find(_this.filters.removals, function (movedNode) { return nodeToMove.id() == movedNode.id(); });\n\t                    return registeredNode == undefined;\n\t                }) != undefined;\n\t                //var m=(_.find(rs, x=>x.parent() != stub)!=undefined )\n\t                moveLeft.setDisabled(unregisteredNode || (nodesToMove.length == 0));\n\t            }\n\t        });\n\t        moveLeft.setDisabled(true);\n\t        moveRight.setDisabled(true);\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        var okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.apply(node, stub, tf.getBinding().get());\n\t            //this.onOk(zz);\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.apply = function (node, stub, newTypeName) {\n\t        this.filters.removals.forEach(function (x) { return node.remove(x); });\n\t        var stub2 = this.createNodeStub(node);\n\t        stub.elements().forEach(function (child) { return stub2.add(child); });\n\t        stub2.attr(\"name\").setValue(newTypeName);\n\t        var typeOrTraitValueToReplace = \"_________TEMPORARY_TYPE_OR_TRAIT_VALUE_________\";\n\t        var replacements = [];\n\t        var superAttributeName = this._resourceType ?\n\t            universeModule.Universe10.ResourceType.properties.type.name :\n\t            universeModule.Universe10.Trait.properties.is.name;\n\t        var superAttributes = node.attributes(superAttributeName);\n\t        var superAttrProperty = stub2.definition().property(superAttributeName);\n\t        if (superAttributes && superAttributes.length > 0) {\n\t            for (var i = 0; i < superAttributes.length; i++) {\n\t                var superAttribute = superAttributes[i];\n\t                var superAttributeLL = superAttribute.lowLevel();\n\t                var start = superAttributeLL.valueStart();\n\t                var end = superAttributeLL.valueEnd();\n\t                if (start <= 0) {\n\t                    start = superAttributeLL.start();\n\t                    end = superAttributeLL.end();\n\t                }\n\t                var typeOrTraitValueToReplaceWith = superAttributeLL.unit().contents().substr(start, end - start);\n\t                replacements.push(typeOrTraitValueToReplaceWith);\n\t            }\n\t            for (var i = 0; i < superAttributes.length; i++) {\n\t                var superAttribute = superAttributes[i];\n\t                node.remove(superAttribute);\n\t            }\n\t            var stubAttributeValue = typeOrTraitValueToReplace;\n\t            if (superAttributes.length > 1) {\n\t                stubAttributeValue = \"[\" + stubAttributeValue + \"]\";\n\t            }\n\t            var stubSuperAttribute = stubs.createAttr(superAttrProperty, stubAttributeValue);\n\t            stub2.add(stubSuperAttribute);\n\t            node.resetChildren();\n\t            stub2.resetChildren();\n\t        }\n\t        if (this._resourceType) {\n\t            node.add(stubs.createAttr(node.definition().property(superAttributeName), stub.name()));\n\t        }\n\t        else {\n\t            node.add(stubs.createAttr(node.definition().property(superAttributeName), \"[\" + stub.name() + \"]\"));\n\t        }\n\t        node.root().add(stub2);\n\t        var cl = node.lowLevel().unit().contents();\n\t        if (replacements.length == 1) {\n\t            var totalRepalcement = replacements[0];\n\t            if (superAttrProperty.isMultiValue()) {\n\t                totalRepalcement = \"[\" + totalRepalcement + \"]\";\n\t            }\n\t            cl = cl.replace(typeOrTraitValueToReplace, totalRepalcement);\n\t        }\n\t        else if (replacements.length > 1) {\n\t            var totalReplacement = \"\";\n\t            for (var i = 0; i < replacements.length - 1; i++) {\n\t                totalReplacement += replacements[i] + \", \";\n\t            }\n\t            totalReplacement += replacements[replacements.length - 1];\n\t            cl = cl.replace(typeOrTraitValueToReplace, totalReplacement);\n\t        }\n\t        this.getActiveEditor().setText(assist.cleanEmptyLines(cl));\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.createNodeStub = function (node) {\n\t        var universe = node.definition().universe();\n\t        var rtypes = node.root().definition().property(\"resourceTypes\");\n\t        var traits = node.root().definition().property(\"traits\");\n\t        var stub = stubs.createStubNode(universe.type(\"ResourceType\"), rtypes);\n\t        if (!this._resourceType) {\n\t            stub = stubs.createStubNode(universe.type(\"Trait\"), traits);\n\t        }\n\t        return stub;\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.moveLeft = function (z, stub, node, v, v1) {\n\t        var _this = this;\n\t        if (z.length > 0) {\n\t            z.forEach(function (x) { return _this.filters.removals = _this.filters.removals.filter(function (y) { return y.id() != x.id(); }); });\n\t            z.forEach(function (x) {\n\t                stub.remove(x);\n\t                var k = 0;\n\t                k++;\n\t            });\n\t        }\n\t        stub.resetChildren();\n\t        v.setInput(node);\n\t        v1.setInput(stub);\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.moveRight = function (z, stub, node, v, v1) {\n\t        if (z.length > 0) {\n\t            this.filters.removals = this.filters.removals.concat(z);\n\t        }\n\t        z.forEach(function (x) { return stub.add(x.copy()); });\n\t        stub.resetChildren();\n\t        v.setInput(node);\n\t        v1.setInput(stub);\n\t    };\n\t    return ExtractTypesAndTraitsDialog;\n\t})();\n\texports.ExtractTypesAndTraitsDialog = ExtractTypesAndTraitsDialog;\n\tvar NodeFilters = (function () {\n\t    function NodeFilters() {\n\t        this.removals = [];\n\t    }\n\t    return NodeFilters;\n\t})();\n\tfunction createSmallSelectionPanel(node, filter, height, width, float) {\n\t    if (float === void 0) { float = \"left\"; }\n\t    var v = createVIewer(node, filter);\n\t    v.setTagName(\"atom-panel\");\n\t    v.setStyle(\"width\", width);\n\t    v.setStyle(\"border\", \"solid\");\n\t    v.setStyle(\"border-width\", \"1px\");\n\t    v.setStyle(\"height\", height);\n\t    v.setStyle(\"overflow\", \"scroll\");\n\t    if (float) {\n\t        v.setStyle(\"float\", float);\n\t    }\n\t    v.margin(3, 3, 3, 3);\n\t    return v;\n\t}\n\texports.createSmallSelectionPanel = createSmallSelectionPanel;\n\tfunction createVIewer(h, filter) {\n\t    var v = UI.treeViewer(function (x) {\n\t        return x.elements().filter(function (x) { return filter(x); });\n\t    }, new outlineView.HLRenderer(function (model) {\n\t    }));\n\t    v.setInput(h);\n\t    return v;\n\t}\n\texports.createVIewer = createVIewer;\n\tvar AbstractlMoveElementsDialog = (function () {\n\t    function AbstractlMoveElementsDialog(parentNode, name) {\n\t        this.parentNode = parentNode;\n\t        this.name = name;\n\t        /**\n\t         * A list of moved nodes.\n\t         */\n\t        this.movedNodes = [];\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.checkNode = function (nodeToFilter) {\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.validate = function () {\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.createHeader = function (parentPanel) {\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t    };\n\t    /**\n\t     * Call this to display the dialog.\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.show = function () {\n\t        console.log(\"Original file tree:\");\n\t        if (this.getParentNode())\n\t            console.log(this.getParentNode().printDetails());\n\t        if (!this.getParentNode()) {\n\t            return;\n\t        }\n\t        var extractSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n\t        this.stubRoot = this.createStub(this.getParentNode());\n\t        this.createValidationIndicator(extractSection);\n\t        this.createHeader(extractSection);\n\t        this.createPanels(extractSection);\n\t        this.createButtonBar(extractSection);\n\t        extractSection.setPercentWidth(100);\n\t        var html = extractSection.renderUI();\n\t        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t        this.performValidation();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.performValidation = function () {\n\t        var validationMessage = this.validate();\n\t        if (this.okButton) {\n\t            if (validationMessage)\n\t                this.okButton.setDisabled(true);\n\t            else\n\t                this.okButton.setDisabled(false);\n\t        }\n\t        if (this.errorLabel) {\n\t            if (validationMessage) {\n\t                this.errorLabel.setDisplay(true);\n\t                this.errorLabel.setText(validationMessage);\n\t            }\n\t            else {\n\t                this.errorLabel.setDisplay(false);\n\t                this.errorLabel.setText(\"\");\n\t            }\n\t        }\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createValidationIndicator = function (vc) {\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(this.errorLabel));\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.getNodeId = function (node) {\n\t        if (node.parent()) {\n\t            var parentId = this.getNodeId(node.parent());\n\t            parentId += \".\" + node.name();\n\t            var sameName = (node.parent()).asElement().directChildren().filter(function (x) { return x.name() == node.name(); });\n\t            if (sameName.length > 1) {\n\t                var ind = sameName.indexOf(node);\n\t                parentId += \"[\" + ind + \"]\";\n\t            }\n\t            return parentId;\n\t        }\n\t        else if (node.name()) {\n\t            if (node.definition && node.definition() && universeHelpers.isApiType(node.definition())) {\n\t                //no other way to get rid of a fake Api \"key\"\n\t                return \"\";\n\t            }\n\t            return \".\" + node.name();\n\t        }\n\t        return \"\";\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.nodesEqualById = function (node1, node2) {\n\t        return this.getNodeId(node1) == this.getNodeId(node2);\n\t    };\n\t    /**\n\t     * The root of the tree, which is being dynamically build from the moved nodes.\n\t     * The parents of the moved nodes are being copied to the tree, so the temp AST\n\t     * is complete. The root itself is always a stub (not copy) of the root node provided at the dialog open.\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.createMovedNodesTree = function () {\n\t        //cleaning the current tree by removing all the children of the root\n\t        //this.stubRoot.children().forEach(x=>(<any>this.stubRoot).remove(x))\n\t        var _this = this;\n\t        //instead just re-creating parent stub node\n\t        this.stubRoot = this.createStub(this.getParentNode());\n\t        this.movedNodes.forEach(function (movedNode) {\n\t            //collecting node parents till we meet the dialog root\n\t            var parents = [];\n\t            var currentParent = movedNode.parent();\n\t            while (currentParent) {\n\t                if (currentParent == _this.getParentNode())\n\t                    break;\n\t                parents.push(currentParent);\n\t                currentParent = currentParent.parent();\n\t            }\n\t            parents.reverse();\n\t            //now creating copies of parents\n\t            var currentStubPointer = _this.stubRoot;\n\t            parents.forEach(function (currentParent) {\n\t                var stubAnalogueOfParent = _.find(currentStubPointer.children(), function (currentStubElement) {\n\t                    return _this.nodesEqualById(currentStubElement, currentParent);\n\t                });\n\t                if (!stubAnalogueOfParent) {\n\t                    //we did not find an analogue, so we should create one\n\t                    stubAnalogueOfParent = _this.createStub(currentParent);\n\t                    //lets add the new parent to the stub hierarchy\n\t                    currentStubPointer.add(stubAnalogueOfParent);\n\t                    stubAnalogueOfParent.setParent(currentStubPointer);\n\t                }\n\t                currentStubPointer = stubAnalogueOfParent;\n\t            });\n\t            //okay, we found or created all parents of the new moved node, lets create the node itself\n\t            var newNode = _this.createMovedNode(movedNode);\n\t            /*(<hl.IHighLevelNode>movedNode)*/\n\t            currentStubPointer.add(newNode);\n\t            newNode.setParent(currentStubPointer);\n\t        });\n\t        console.log(\"New tree moved:\");\n\t        console.log(this.stubRoot.printDetails());\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createMovedNode = function (originalNode) {\n\t        return originalNode.copy();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.saveUnit = function (unit) {\n\t        provider.saveUnit(unit);\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createStub = function (node) {\n\t        var stub = stubs.createStubNode(node.definition(), node.property(), node.lowLevel().key());\n\t        //if (node.parent() == null && node.lowLevel().key() == null){\n\t        //    //cleaning out the fake key\n\t        //    stub.children().forEach(x=>(<any>stub).remove(x))\n\t        //}\n\t        return stub;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createStubRoot = function (node, type) {\n\t        var lowLevel = stubs.createMap();\n\t        var result = stubs.createASTNodeImpl(lowLevel, null, type, null);\n\t        result.children();\n\t        return result;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createPanels = function (vc) {\n\t        var _this = this;\n\t        var el = UI.hc();\n\t        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n\t        var leftDisplayFilter = function (nodeToCheck) {\n\t            if (!_this.checkNode(nodeToCheck).display)\n\t                return false;\n\t            if (_.find(_this.movedNodes, function (movedNode) {\n\t                return movedNode == nodeToCheck; /*|| this.isParentOf(nodeToCheck, movedNode)*/\n\t            }))\n\t                return false;\n\t            return true;\n\t        };\n\t        this.leftPanel = createSmallSelectionPanel(this.getParentNode(), leftDisplayFilter, \"400px\", \"47%\");\n\t        var rightDisplayFilter = function (nodeToCheck) {\n\t            if (!_this.checkNode(nodeToCheck).display)\n\t                return false;\n\t            //if (_.find(this.movedNodes, movedNode => movedNode == nodeToCheck)) return false\n\t            return true;\n\t        };\n\t        this.rightPanel = createSmallSelectionPanel(this.stubRoot, rightDisplayFilter, \"400px\", \"47%\", \"right\");\n\t        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = _this.leftPanel.getSelection().elements;\n\t            _this.moveRight(z);\n\t        });\n\t        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = _this.rightPanel.getSelection().elements;\n\t            _this.moveLeft(z);\n\t        });\n\t        //var allRight=UI.button(\">>\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n\t        //    var z=this.parentNode.elements().filter(x=>leftFilter(x));\n\t        //    this.moveRight(z);\n\t        //});\n\t        //\n\t        //var allLeft=UI.button(\"<<\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n\t        //    var z=stub.elements();\n\t        //    this.moveLeft(z);\n\t        //\n\t        //});\n\t        el.addChild(UI.vc(moveRight, moveLeft /*,allRight,allLeft*/));\n\t        el.addChild(this.leftPanel);\n\t        el.addChild(this.rightPanel);\n\t        vc.addChild(el);\n\t        this.leftPanel.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var rs = ev.selection.elements;\n\t                //var m=(_.find(rs, x=>x.parent() != this.getParentNode())!=undefined )\n\t                moveRight.setDisabled((rs.length == 0));\n\t            }\n\t        });\n\t        this.rightPanel.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var rs = ev.selection.elements;\n\t                //var m=(_.find(rs, x=>x.parent() != this.stubRoot)!=undefined )\n\t                moveLeft.setDisabled(rs.length == 0);\n\t            }\n\t        });\n\t        moveLeft.setDisabled(true);\n\t        moveRight.setDisabled(true);\n\t        el.setPercentWidth(100);\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createButtonBar = function (parentPanel) {\n\t        var _this = this;\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { _this.rootAtomPanel.destroy(); }).margin(10, 10));\n\t        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.performOk(_this.movedNodes, _this.stubRoot);\n\t            _this.rootAtomPanel.destroy();\n\t        });\n\t        this.okButton.setDisabled(true);\n\t        buttonBar.addChild(this.okButton);\n\t        parentPanel.addChild(buttonBar);\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.getParentNode = function () {\n\t        return this.parentNode;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.isParentOf = function (potentialParent, potentialChild) {\n\t        var current = potentialChild.parent();\n\t        while (current != null) {\n\t            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n\t                return true;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return false;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.mergeTrees = function (sourceTreeRoot, targetTreeRoot, mergeProperties) {\n\t        var _this = this;\n\t        if (mergeProperties === void 0) { mergeProperties = false; }\n\t        if (sourceTreeRoot.directChildren()) {\n\t            sourceTreeRoot.directChildren().forEach(function (child) {\n\t                _this.mergeNode(child, targetTreeRoot);\n\t            });\n\t        }\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.getActiveEditor = function () {\n\t        return assist.getActiveEditor();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.mergeNode = function (sourceNode, targetParent, mergeProperties) {\n\t        var _this = this;\n\t        if (mergeProperties === void 0) { mergeProperties = false; }\n\t        if (!mergeProperties && !(sourceNode.isElement())) {\n\t            return;\n\t        }\n\t        var targetChildren = targetParent.directChildren();\n\t        if (!targetChildren) {\n\t            targetParent.add(sourceNode);\n\t            sourceNode.setParent(targetParent);\n\t            return;\n\t        }\n\t        var analogueChild = _.find(targetChildren, function (child) {\n\t            return _this.nodesEqualById(child, sourceNode);\n\t        });\n\t        if (!analogueChild) {\n\t            targetParent.add(sourceNode);\n\t            sourceNode.setParent(targetParent);\n\t            return;\n\t        }\n\t        if (sourceNode.directChildren()) {\n\t            sourceNode.directChildren().forEach(function (sourceChild) {\n\t                return _this.mergeNode(sourceChild, analogueChild);\n\t            });\n\t        }\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.moveLeft = function (nodesToMove) {\n\t        var _this = this;\n\t        if (nodesToMove.length > 0) {\n\t            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n\t                if (_.find(nodesToMove, function (nodeToMove) {\n\t                    //removing the node itself and all of its children subsequently\n\t                    return _this.nodesEqualById(nodeToMove, currentNode)\n\t                        || _this.isParentOf(nodeToMove, currentNode);\n\t                }))\n\t                    return false;\n\t                return true;\n\t            });\n\t            this.createMovedNodesTree();\n\t        }\n\t        this.leftPanel.setInput(this.getParentNode());\n\t        this.stubRoot.resetChildren();\n\t        this.rightPanel.setInput(this.stubRoot);\n\t        this.performValidation();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.moveRight = function (nodesToMove) {\n\t        var _this = this;\n\t        if (nodesToMove.length > 0) {\n\t            //removing from already moved nodes any children of the nodes to move\n\t            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n\t                if (_.find(nodesToMove, function (nodeToMove) { return _this.isParentOf(nodeToMove, currentNode); }))\n\t                    return false;\n\t                return true;\n\t            });\n\t            nodesToMove.forEach(function (x) { return _this.movedNodes.push(x); });\n\t            //this.movedNodes = this.movedNodes.concat(nodesToMove)\n\t            this.createMovedNodesTree();\n\t        }\n\t        this.leftPanel.setInput(this.getParentNode());\n\t        this.stubRoot.resetChildren();\n\t        this.rightPanel.setInput(this.stubRoot);\n\t        this.performValidation();\n\t    };\n\t    return AbstractlMoveElementsDialog;\n\t})();\n\texports.AbstractlMoveElementsDialog = AbstractlMoveElementsDialog;\n\tvar ExtractLibraryDialog = (function (_super) {\n\t    __extends(ExtractLibraryDialog, _super);\n\t    function ExtractLibraryDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    ExtractLibraryDialog.prototype.checkNode = function (nodeToFilter) {\n\t        var range = null;\n\t        if (nodeToFilter.property() && nodeToFilter.property().range()) {\n\t            range = nodeToFilter.property().range();\n\t        }\n\t        var prrr = nodeToFilter.property();\n\t        var blah = universeHelpers.isTypesProperty(prrr);\n\t        var isTp = universeHelpers.isTypeDeclarationType(range)\n\t            && blah;\n\t        if (range &&\n\t            (universeHelpers.isResourceTypeType(range) ||\n\t                universeHelpers.isTraitType(range) ||\n\t                universeHelpers.isGlobalSchemaType(range) ||\n\t                universeHelpers.isSecuritySchemaType(range) ||\n\t                isTp)) {\n\t            return {\n\t                visitChildren: false,\n\t                display: true,\n\t                canBeMoved: true\n\t            };\n\t        }\n\t        return {\n\t            visitChildren: false,\n\t            display: false,\n\t            canBeMoved: false\n\t        };\n\t    };\n\t    ExtractLibraryDialog.prototype.createStub = function (node) {\n\t        if (node.definition().key() == universeModule.Universe10.Api ||\n\t            node.definition().key() == universeModule.Universe08.Api) {\n\t            var universe = rp.ds.getUniverse(\"RAML10\");\n\t            var nodeClass = universe.type(universeModule.Universe10.Library.name);\n\t            var stub = this.createStubRoot(node, nodeClass);\n\t            return stub;\n\t        }\n\t        return _super.prototype.createStub.call(this, node);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ExtractLibraryDialog.prototype.validate = function () {\n\t        if (!this.libraryPath)\n\t            return null;\n\t        if (!this.stubRoot)\n\t            return null;\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        if (!this.libraryNamespace)\n\t            return null;\n\t        if (!this.getLibraryQualifier()) {\n\t            return \"Enter library namespace\";\n\t        }\n\t        if (this.getLibraryQualifier().trim().length == 0) {\n\t            return \"Enter library namespace\";\n\t        }\n\t        var originalValue = this.libraryPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return \"Empty library path\";\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return \"Library path should be a RAML file\";\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return \"Library path directory does not exist\";\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return \"Library path parent is not a directory\";\n\t        }\n\t        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t        if (fs.existsSync(absolutePath)) {\n\t            return \"Destination library already exists\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ExtractLibraryDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Library namespace:\").pad(5, 0));\n\t        this.libraryNamespace = UI.texfField(\"\", this.getDefaultLibraryNamespace(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.libraryNamespace);\n\t        parentPanel.addChild(UI.label(\"Library path:\").pad(5, 0));\n\t        this.libraryPath = UI.texfField(\"\", this.generateDefaultLibraryPath(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.libraryPath);\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    ExtractLibraryDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var _this = this;\n\t        var project = this.createProject();\n\t        var libraryUnit = this.createLibraryUnit(project);\n\t        var libraries = search.globalDeclarations(this.getParentNode()).filter(function (found) { return found && found.definition && found.definition().nameId() === universeModule.Universe10.Library.name; });\n\t        var universe = this.getParentNode().definition().universe();\n\t        var libraryClass = universe.type(universeModule.Universe10.Library.name);\n\t        movedNodes.forEach(function (movedNode) {\n\t            var librariesToExport = libraries.filter(function (library) {\n\t                return _.find(library.findReferences(), function (reference) { return _this.isParentOf(movedNode, reference); }) ? true : false;\n\t            });\n\t            librariesToExport.forEach(function (library) {\n\t                var currentPath = library.lowLevel()._node.value && library.lowLevel()._node.value.value;\n\t                if (!currentPath) {\n\t                    return;\n\t                }\n\t                var relativePath;\n\t                if (isWebPath(currentPath) || path.isAbsolute(currentPath)) {\n\t                    relativePath = currentPath;\n\t                }\n\t                else {\n\t                    var currentDirectory = path.dirname(_this.getParentNode().lowLevel().unit().absolutePath());\n\t                    var relativePath = path.relative(path.dirname(libraryUnit.absolutePath()), path.resolve(currentDirectory, currentPath));\n\t                }\n\t                var lowLevel = stubs.createMapping(library.lowLevel().key(), \"!include \" + relativePath);\n\t                var stubLibrary = stubs.createASTNodeImpl(lowLevel, null, libraryClass, null);\n\t                stubTreeRoot.wrapperNode().addToProp(stubLibrary.wrapperNode(), universeModule.Universe10.FragmentDeclaration.properties.uses.name);\n\t            });\n\t        });\n\t        this.updateLibraryUnit(libraryUnit, stubTreeRoot);\n\t        this.saveUnit(libraryUnit);\n\t        var modifiedUnits = [];\n\t        modifiedUnits.push(this.getParentNode().lowLevel().unit());\n\t        var libraryQualifier = this.getLibraryQualifier();\n\t        movedNodes.forEach(function (movedNode) {\n\t            //changing node references\n\t            var movedNodeReferences = movedNode.findReferences();\n\t            if (movedNodeReferences) {\n\t                movedNodeReferences.forEach(function (reference) {\n\t                    if (!(reference.isAttr())) {\n\t                        return;\n\t                    }\n\t                    if (_.find(movedNodes, function (movedNode) { return _this.isParentOf(movedNode, reference); })) {\n\t                        return;\n\t                    }\n\t                    var property = reference;\n\t                    var oldValue = property.value();\n\t                    if (typeof oldValue != \"string\") {\n\t                        return;\n\t                    }\n\t                    var oldStringValue = oldValue;\n\t                    var textToReplace = movedNode.name();\n\t                    var textToReplanceWith = libraryQualifier + \".\" + textToReplace;\n\t                    var newStringValue = oldStringValue.replace(textToReplace, textToReplanceWith);\n\t                    property.setValue(newStringValue);\n\t                    var modifiedPropertyUnit = property.lowLevel().unit();\n\t                    if (_.find(modifiedUnits, function (modifiedUnit) { return modifiedUnit == modifiedPropertyUnit; })) {\n\t                        modifiedUnits.push(modifiedPropertyUnit);\n\t                    }\n\t                });\n\t            }\n\t            //deleting the node itself\n\t            movedNode.parent().remove(movedNode);\n\t        });\n\t        modifiedUnits.forEach(function (modifiedUnit) { return _this.saveUnit(modifiedUnit); });\n\t        this.addUsesNode(libraryQualifier, this.getLibraryPath());\n\t    };\n\t    ExtractLibraryDialog.prototype.generateDefaultLibraryPath = function () {\n\t        var node = this.getParentNode();\n\t        var currentFilePath = node.lowLevel().unit().absolutePath();\n\t        var parent = path.dirname(currentFilePath);\n\t        return path.resolve(parent, \"NewLibrary.raml\");\n\t    };\n\t    ExtractLibraryDialog.prototype.getLibraryName = function () {\n\t        return this.libraryNamespace.getBinding().get();\n\t    };\n\t    ExtractLibraryDialog.prototype.getLibraryQualifier = function () {\n\t        return this.libraryNamespace.getBinding().get();\n\t    };\n\t    ExtractLibraryDialog.prototype.getDefaultLibraryNamespace = function () {\n\t        return \"NewLibrary\";\n\t    };\n\t    ExtractLibraryDialog.prototype.getLibraryPath = function () {\n\t        var originalValue = this.libraryPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return null;\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return null;\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return null;\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return null;\n\t        }\n\t        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t    };\n\t    ExtractLibraryDialog.prototype.createProject = function () {\n\t        var targetLibraryPath = this.getLibraryPath();\n\t        return rp.project.createProject(path.dirname(targetLibraryPath));\n\t    };\n\t    ExtractLibraryDialog.prototype.createLibraryUnit = function (project) {\n\t        var targetLibraryPath = this.getLibraryPath();\n\t        fs.writeFileSync(targetLibraryPath, \"#%RAML 1.0 Library\\n\");\n\t        return project.unit(path.basename(targetLibraryPath));\n\t    };\n\t    ExtractLibraryDialog.prototype.updateLibraryUnit = function (libraryUnit, stubTreeRoot) {\n\t        var targetLibraryAst = libraryUnit.highLevel();\n\t        //adding top-level children from stub AST to the target library AST\n\t        stubTreeRoot.children().forEach(function (child) {\n\t            if (!child.getKind()) {\n\t                return;\n\t            }\n\t            targetLibraryAst.add(child);\n\t        });\n\t    };\n\t    ExtractLibraryDialog.prototype.addUsesNode = function (libraryQualifier, fileName) {\n\t        //TODO this must be done via AST manipulation, but it is impossible atm due to AST bugs\n\t        var relativePath = path.relative(path.dirname(this.getParentNode().lowLevel().unit().absolutePath()), fileName);\n\t        var existingFirstUsesNode = _.find(this.getParentNode().children(), function (child) {\n\t            var childAny = child;\n\t            return childAny.definition &&\n\t                universeHelpers.isLibraryType(childAny.definition()) &&\n\t                childAny.property() &&\n\t                universeHelpers.isUsesProperty(childAny.property());\n\t        });\n\t        var usesMapping = null;\n\t        var sequenceFound = false;\n\t        if (existingFirstUsesNode) {\n\t            var currentNode = existingFirstUsesNode.lowLevel();\n\t            while (currentNode != null) {\n\t                if (currentNode.kind() == yaml.Kind.MAPPING\n\t                    && currentNode.key() == universeModule.Universe10.FragmentDeclaration.properties.uses.name) {\n\t                    usesMapping = currentNode;\n\t                    break;\n\t                }\n\t                if (currentNode.kind() == yaml.Kind.SEQ) {\n\t                    sequenceFound = true;\n\t                }\n\t                currentNode = currentNode.parent();\n\t            }\n\t        }\n\t        if (usesMapping) {\n\t            //existing \"uses\" found, inserting there\n\t            var positionToInsert = usesMapping.keyEnd() + 1;\n\t            var text = \"\\n  \" + (sequenceFound ? \"- \" : \"\") + libraryQualifier + \": \" + relativePath;\n\t            this.insertTextToActiveEditor(positionToInsert, text);\n\t        }\n\t        else {\n\t            var titleNode = _.find(this.getParentNode().children(), function (child) {\n\t                var childAny = child;\n\t                return childAny.definition &&\n\t                    universeHelpers.isStringTypeType(childAny.definition()) &&\n\t                    childAny.property() &&\n\t                    universeHelpers.isTitleProperty(childAny.property());\n\t            });\n\t            if (titleNode) {\n\t                //title node found, inserting after it\n\t                var positionToInsert = titleNode.lowLevel().valueEnd();\n\t                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n\t                this.insertTextToActiveEditor(positionToInsert, text);\n\t            }\n\t            else {\n\t                //nothing happens, inserting in the end of the file\n\t                var positionToInsert = this.getParentNode().lowLevel().end();\n\t                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n\t                this.insertTextToActiveEditor(positionToInsert, text);\n\t            }\n\t        }\n\t    };\n\t    ExtractLibraryDialog.prototype.insertTextToActiveEditor = function (positionToInsert, text) {\n\t        var txt = this.getParentNode().lowLevel().unit().contents();\n\t        var endPart = txt.substring(positionToInsert);\n\t        var startPart = txt.substring(0, positionToInsert);\n\t        var vl = startPart + text + endPart;\n\t        this.getActiveEditor().setText(vl);\n\t    };\n\t    ExtractLibraryDialog.prototype.createUsesNode = function (libraryQualifier, fileName) {\n\t        var universe = this.getParentNode().definition().universe();\n\t        var usesProperty = this.getParentNode().root().definition().property(\"uses\");\n\t        var usesNode = stubs.createStubNode(universe.type(\"Library\"), usesProperty, libraryQualifier);\n\t        return usesNode;\n\t    };\n\t    return ExtractLibraryDialog;\n\t})(AbstractlMoveElementsDialog);\n\texports.ExtractLibraryDialog = ExtractLibraryDialog;\n\tvar ExtractOverlayDialog = (function (_super) {\n\t    __extends(ExtractOverlayDialog, _super);\n\t    function ExtractOverlayDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t    }\n\t    ExtractOverlayDialog.prototype.createStub = function (node) {\n\t        if (node.definition().key() == universeModule.Universe10.Api ||\n\t            node.definition().key() == universeModule.Universe08.Api) {\n\t            var universe = rp.ds.getUniverse(\"RAML10\");\n\t            var nodeClass = universe.type(universeModule.Universe10.Overlay.name);\n\t            var stub = this.createStubRoot(node, nodeClass);\n\t            return stub;\n\t        }\n\t        return _super.prototype.createStub.call(this, node);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    ExtractOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n\t        //we can move everything\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ExtractOverlayDialog.prototype.validate = function () {\n\t        if (!this.overlayPath)\n\t            return null;\n\t        if (!this.stubRoot)\n\t            return null;\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        var originalValue = this.overlayPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return \"Empty overlay path\";\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return \"Overlay path should be a RAML file\";\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return \"Overlay path directory does not exist\";\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return \"Overlay path parent is not a directory\";\n\t        }\n\t        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t        if (fs.existsSync(absolutePath)) {\n\t            return \"Destination overlay already exists\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ExtractOverlayDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Overlay path:\").pad(5, 0));\n\t        this.overlayPath = UI.texfField(\"\", this.generateDefaultOverlayPath(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.overlayPath);\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    ExtractOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var project = this.createProject();\n\t        var overlayUnit = this.createOverlayUnit(project);\n\t        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n\t        var overlayPath = this.getOverlayPath();\n\t        var originalUnitPath = this.getParentNode().lowLevel().unit().absolutePath();\n\t        var relativePath = path.relative(path.dirname(overlayPath), originalUnitPath);\n\t        this.addMasterReference(overlayUnit, relativePath);\n\t        this.saveUnit(overlayUnit);\n\t    };\n\t    ExtractOverlayDialog.prototype.generateDefaultOverlayPath = function () {\n\t        var node = this.getParentNode();\n\t        var currentFilePath = node.lowLevel().unit().absolutePath();\n\t        var parent = path.dirname(currentFilePath);\n\t        return path.resolve(parent, \"NewOverlay.raml\");\n\t    };\n\t    ExtractOverlayDialog.prototype.createProject = function () {\n\t        var targetOverlayPath = this.getOverlayPath();\n\t        return rp.project.createProject(path.dirname(targetOverlayPath));\n\t    };\n\t    ExtractOverlayDialog.prototype.createOverlayUnit = function (project) {\n\t        var targetOverlayPath = this.getOverlayPath();\n\t        fs.writeFileSync(targetOverlayPath, \"#%RAML 1.0 Overlay\\ntitle: Extension\\n\");\n\t        return project.unit(path.basename(targetOverlayPath));\n\t    };\n\t    ExtractOverlayDialog.prototype.updateOverlayUnit = function (overlayUnit, stubTreeRoot) {\n\t        var targetOverlayAst = overlayUnit.highLevel();\n\t        //adding top-level children from stub AST to the target overlay AST\n\t        stubTreeRoot.children().forEach(function (child) {\n\t            if (!child.getKind()) {\n\t                return;\n\t            }\n\t            targetOverlayAst.add(child);\n\t        });\n\t    };\n\t    ExtractOverlayDialog.prototype.getOverlayPath = function () {\n\t        var originalValue = this.overlayPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return null;\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return null;\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return null;\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return null;\n\t        }\n\t        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t    };\n\t    ExtractOverlayDialog.prototype.addMasterReference = function (overlayUnit, path) {\n\t        var targetLibraryAst = overlayUnit.highLevel();\n\t        var masterRefAttribute = targetLibraryAst.attrOrCreate(universeModule.Universe10.Overlay.properties.extends.name);\n\t        masterRefAttribute.setValue(path);\n\t    };\n\t    ExtractOverlayDialog.prototype.createMovedNode = function (originalNode) {\n\t        //we do not want to make a complete copy of the moved node.\n\t        //instead, we want an empty stub\n\t        return this.createStub(originalNode);\n\t    };\n\t    return ExtractOverlayDialog;\n\t})(AbstractlMoveElementsDialog);\n\texports.ExtractOverlayDialog = ExtractOverlayDialog;\n\tvar ModifyOverlayDialog = (function (_super) {\n\t    __extends(ModifyOverlayDialog, _super);\n\t    function ModifyOverlayDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t        this.overlayASTRoot = parentNode;\n\t        console.log(\"Overlay AST root:\");\n\t        console.log(this.overlayASTRoot.printDetails());\n\t        this.masterASTRoot = this.createMasterAST();\n\t        this.overlayASTLeafNodes = [];\n\t        this.calculateLeafNodes(this.overlayASTRoot, this.overlayASTLeafNodes);\n\t    }\n\t    ModifyOverlayDialog.prototype.getParentNode = function () {\n\t        return this.masterASTRoot;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    ModifyOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n\t        var _this = this;\n\t        //we can move everything except leaf nodes already defined in out AST\n\t        if (_.find(this.overlayASTLeafNodes, function (currentNode) {\n\t            return currentNode == nodeToFilter || _this.nodesEqualById(currentNode, nodeToFilter);\n\t        })) {\n\t            return {\n\t                visitChildren: false,\n\t                display: false,\n\t                canBeMoved: false\n\t            };\n\t        }\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ModifyOverlayDialog.prototype.validate = function () {\n\t        if (!this.stubRoot)\n\t            return null;\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ModifyOverlayDialog.prototype.createHeader = function (parentPanel) {\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    ModifyOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var overlayUnit = this.getOverlayUnit();\n\t        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n\t        this.saveUnit(overlayUnit);\n\t    };\n\t    ModifyOverlayDialog.prototype.createMasterAST = function () {\n\t        var masterAbsolutePath = this.findMasterAbsolutePath();\n\t        if (!masterAbsolutePath) {\n\t            return null;\n\t        }\n\t        var project = this.createProject(masterAbsolutePath);\n\t        var masterUnit = project.unit(path.basename(masterAbsolutePath));\n\t        return masterUnit.highLevel();\n\t    };\n\t    ModifyOverlayDialog.prototype.calculateLeafNodes = function (root, toReportTo) {\n\t        var _this = this;\n\t        if (!root)\n\t            return;\n\t        var children = root.directChildren() ? root.directChildren() : null;\n\t        if (root.isElement()) {\n\t            if (children) {\n\t                if (!_.find(children, function (child) { return child.isElement(); })) {\n\t                    toReportTo.push(root);\n\t                    return;\n\t                }\n\t            }\n\t            else {\n\t                toReportTo.push(root);\n\t                return;\n\t            }\n\t        }\n\t        if (children)\n\t            children.forEach(function (child) { return _this.calculateLeafNodes(child, toReportTo); });\n\t    };\n\t    ModifyOverlayDialog.prototype.findMasterAbsolutePath = function () {\n\t        try {\n\t            var masterRefAttribute = this.overlayASTRoot.attr(\"masterRef\");\n\t            if (!masterRefAttribute) {\n\t                return null;\n\t            }\n\t            var reference = masterRefAttribute.value();\n\t            if (!reference) {\n\t                return null;\n\t            }\n\t            var overlayAbsolutePath = this.getOverlayUnit().absolutePath();\n\t            var masterAbsolutePath = path.resolve(path.dirname(overlayAbsolutePath), reference);\n\t            //if (!fs.existsSync(masterAbsolutePath)) {\n\t            //    return null\n\t            //}\n\t            return masterAbsolutePath;\n\t        }\n\t        catch (Error) {\n\t            console.error(Error.message);\n\t            return null;\n\t        }\n\t    };\n\t    ModifyOverlayDialog.prototype.createProject = function (targetPath) {\n\t        return rp.project.createProject(path.dirname(targetPath));\n\t    };\n\t    ModifyOverlayDialog.prototype.getOverlayUnit = function () {\n\t        return this.overlayASTRoot.lowLevel().unit();\n\t    };\n\t    ModifyOverlayDialog.prototype.updateOverlayUnit = function (libraryUnit, stubTreeRoot) {\n\t        var targetLibraryAst = libraryUnit.highLevel();\n\t        //merging the new nodes into existing overlay tree\n\t        this.mergeTrees(stubTreeRoot, this.overlayASTRoot);\n\t    };\n\t    ModifyOverlayDialog.prototype.createMovedNode = function (originalNode) {\n\t        //we do not want to make a complete copy of the moved node.\n\t        //instead, we want an empty stub\n\t        return this.createStub(originalNode);\n\t    };\n\t    return ModifyOverlayDialog;\n\t})(AbstractlMoveElementsDialog);\n\texports.ModifyOverlayDialog = ModifyOverlayDialog;\n\t/**\n\t * Intended for subclassing, should not be instantiated.\n\t */\n\tvar AbstractMoveTypePropertiesDialog = (function (_super) {\n\t    __extends(AbstractMoveTypePropertiesDialog, _super);\n\t    function AbstractMoveTypePropertiesDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t        this.sourceType = parentNode;\n\t    }\n\t    /**\n\t     * Intended for overriding, should return the target type.\n\t     * Will only be called during performOk() execution, so it is assumed that\n\t     * UI already have required user input before the calowLevel.\n\t     * @returns {null}\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.getTargetType = function () {\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.checkNode = function (nodeToFilter) {\n\t        //we can move everything inside the type\n\t        //and as the type is our root, we can move just everything\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * This particular method should be called in a subclass before or after\n\t     * its own check, and the results should be joined.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.validate = function () {\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.createHeader = function (parentPanel) {\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var sourceUnit = this.sourceType.lowLevel().unit();\n\t        var targetType = this.getTargetType();\n\t        if (!targetType) {\n\t            return;\n\t        }\n\t        var targetUnit = targetType.lowLevel().unit();\n\t        this.mergeTrees(stubTreeRoot, targetType);\n\t        this.movedNodes.forEach(function (movedNode) {\n\t            movedNode.parent().remove(movedNode);\n\t        });\n\t        this.postMerge();\n\t        this.saveUnit(sourceUnit);\n\t        if (targetUnit)\n\t            this.saveUnit(targetUnit);\n\t    };\n\t    AbstractMoveTypePropertiesDialog.prototype.postMerge = function () {\n\t    };\n\t    return AbstractMoveTypePropertiesDialog;\n\t})(AbstractlMoveElementsDialog);\n\texports.AbstractMoveTypePropertiesDialog = AbstractMoveTypePropertiesDialog;\n\tfunction findUserDefinedSupertypes(typeNode) {\n\t    var result = [];\n\t    var nodeType = typeNode.localType();\n\t    if (!nodeType || !nodeType.isUserDefined()) {\n\t        return result;\n\t    }\n\t    addUserDefinedSupertypes(nodeType, result);\n\t    return result;\n\t}\n\texports.findUserDefinedSupertypes = findUserDefinedSupertypes;\n\tfunction addUserDefinedSupertypes(type, typesToAddTo) {\n\t    if (!type.isUserDefined()) {\n\t        return;\n\t    }\n\t    var superTypes = (type).superTypes();\n\t    if (superTypes)\n\t        superTypes.forEach(function (superType) {\n\t            if (superType.isUserDefined()) {\n\t                typesToAddTo.push(superType);\n\t            }\n\t            addUserDefinedSupertypes(superType, typesToAddTo);\n\t        });\n\t}\n\tvar PullUpDialog = (function (_super) {\n\t    __extends(PullUpDialog, _super);\n\t    function PullUpDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t        this.superTypeNames = [];\n\t        this.superTypeNames = this.findSuperTypeNames();\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    PullUpDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Select supertype:\").pad(5, 0));\n\t        var select = new UI.Select(\"\", function (selection) {\n\t            _this.selectedSuperType = select.getValue();\n\t        });\n\t        select.setOptions(this.superTypeNames);\n\t        select.setValue(this.superTypeNames[0]);\n\t        this.selectedSuperType = this.superTypeNames[0];\n\t        parentPanel.addChild(select);\n\t    };\n\t    PullUpDialog.prototype.show = function () {\n\t        //if no supertypes are found, we're not displaying anything\n\t        //Actually, state calculator should not allow action launching in this case\n\t        if (this.superTypeNames.length == 0) {\n\t            return;\n\t        }\n\t        _super.prototype.show.call(this);\n\t    };\n\t    /**\n\t     * Intended for overriding, should return the target type.\n\t     * Will only be called during performOk() execution, so it is assumed that\n\t     * UI already have required user input before the calowLevel.\n\t     * @returns {null}\n\t     */\n\t    PullUpDialog.prototype.getTargetType = function () {\n\t        var _this = this;\n\t        var foundSuperType = _.find(this.superTypes, function (superType) {\n\t            return superType.nameId() == _this.selectedSuperType;\n\t        });\n\t        if (!foundSuperType)\n\t            return null;\n\t        return foundSuperType.getAdapter(def.RAMLService).getDeclaringNode();\n\t    };\n\t    PullUpDialog.prototype.findSuperTypeNames = function () {\n\t        var result = [];\n\t        this.superTypes = findUserDefinedSupertypes(this.sourceType);\n\t        this.superTypes.forEach(function (superType) {\n\t            result.push(superType.nameId());\n\t        });\n\t        return result;\n\t    };\n\t    return PullUpDialog;\n\t})(AbstractMoveTypePropertiesDialog);\n\texports.PullUpDialog = PullUpDialog;\n\tvar ExtractSupertypeDialog = (function (_super) {\n\t    __extends(ExtractSupertypeDialog, _super);\n\t    function ExtractSupertypeDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ExtractSupertypeDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Supertype name:\").pad(5, 0));\n\t        this.superTypeName = UI.texfField(\"\", this.generateDefaultSupertypeName(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.superTypeName);\n\t    };\n\t    /**\n\t     * Intended for overriding, should return the target type.\n\t     * Will only be called during performOk() execution, so it is assumed that\n\t     * UI already have required user input before the calowLevel.\n\t     * @returns {null}\n\t     */\n\t    ExtractSupertypeDialog.prototype.getTargetType = function () {\n\t        var astRoot = this.sourceType.root();\n\t        var universe = astRoot.definition().universe();\n\t        var rtypes = astRoot.root().definition().property(universeModule.Universe10.LibraryBase.properties.types.name);\n\t        //var typeStub=(<def.NodeClass>universe.getType(\"ObjectField\")).createStubNode(rtypes, this.superTypeName.getBinding().get());\n\t        var typeWrapper = rp.parser.modify.createObjectTypeDeclaration(this.superTypeName.getBinding().get());\n\t        var typeStub = typeWrapper.highLevel();\n\t        this.typeWrapper = typeWrapper;\n\t        this.astRoot = astRoot;\n\t        //astRoot.add(typeStub);\n\t        //var unit = astRoot.lowLevel().unit();\n\t        //this.saveUnit(unit);\n\t        //\n\t        //var newAstRoot = <hl.IHighLevelNode>hl.fromUnit(unit);\n\t        //this.sourceType = <hl.IHighLevelNode> _.find(newAstRoot.children(), child=>{\n\t        //    return (<hl.IHighLevelNode>child).property\n\t        //    && (<hl.IHighLevelNode>child).property().range\n\t        //    && (<hl.IHighLevelNode>child).property().range().name() == \"DataElement\"\n\t        //    && (<hl.IHighLevelNode>child).property().name() == \"types\"\n\t        //    && (<hl.IHighLevelNode>child).name() == this.superTypeName.getBinding().get()\n\t        //})\n\t        return typeStub;\n\t    };\n\t    ExtractSupertypeDialog.prototype.validate = function () {\n\t        var superValidate = _super.prototype.validate.call(this);\n\t        if (superValidate) {\n\t            return superValidate;\n\t        }\n\t        if (!this.superTypeName.getBinding().get() ||\n\t            this.superTypeName.getBinding().get().trim().length == 0) {\n\t            return \"Enter supertype name\";\n\t        }\n\t        return null;\n\t    };\n\t    ExtractSupertypeDialog.prototype.postMerge = function () {\n\t        this.astRoot.wrapperNode().addToProp(this.typeWrapper, 'types');\n\t        this.sourceType.attrOrCreate(\"type\").setValue(this.typeWrapper.highLevel().name());\n\t        //var runtimeDef = this.typeWrapper.highLevel().definition().toRuntime()\n\t        //(<hlimpl.ASTNodeImpl>this.sourceType).patchType(runtimeDef)\n\t    };\n\t    ExtractSupertypeDialog.prototype.generateDefaultSupertypeName = function () {\n\t        return this.sourceType.name() + \"SuperType\";\n\t    };\n\t    return ExtractSupertypeDialog;\n\t})(AbstractMoveTypePropertiesDialog);\n\texports.ExtractSupertypeDialog = ExtractSupertypeDialog;\n\tfunction isWebPath(str) {\n\t    if (str == null)\n\t        return false;\n\t    return util.stringStartsWith(str, \"http://\") || util.stringStartsWith(str, \"https://\");\n\t}\n\t\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar hl = __webpack_require__(24);\n\tvar UI = __webpack_require__(18);\n\tvar editorTools = __webpack_require__(5);\n\tvar extract = __webpack_require__(37);\n\tvar assist = __webpack_require__(9);\n\tvar universes = hl.universes;\n\tvar MoveElementsDialog = (function () {\n\t    function MoveElementsDialog(node, name, _resourceType) {\n\t        this.node = node;\n\t        this.name = name;\n\t        this._resourceType = _resourceType;\n\t    }\n\t    MoveElementsDialog.prototype.getActiveEditor = function () {\n\t        var activeEditor = atom.workspace.getActiveTextEditor();\n\t        if (activeEditor) {\n\t            return activeEditor;\n\t        }\n\t        if (editorTools.aquireManager())\n\t            return editorTools.aquireManager().getCurrentEditor();\n\t        return null;\n\t    };\n\t    MoveElementsDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Move resource \", UI.Icon.GIST_NEW, false, false);\n\t        var errorLabel = UI.label(\"please select destination resource\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        vc.addChild(UI.label(\"Please select destination resource\"));\n\t        var el = UI.hc();\n\t        vc.setPercentWidth(100);\n\t        el.setPercentWidth(100);\n\t        var filterFunc = function (x) {\n\t            if (_this._resourceType) {\n\t                if (x.definition().key() != universes.Universe08.Resource &&\n\t                    x.definition().key() != universes.Universe10.Resource) {\n\t                    return false;\n\t                }\n\t                if (x == node || x == node.parent()) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        var universe = node.definition().universe();\n\t        var v = extract.createSmallSelectionPanel(node.root(), filterFunc, \"400px\", \"100%\");\n\t        el.addChild(v);\n\t        vc.addChild(el);\n\t        v.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                errorLabel.setDisplay(ev.selection.isEmpty());\n\t                okButton.setDisabled(ev.selection.isEmpty());\n\t            }\n\t        });\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            var target = v.getSelection().elements[0];\n\t            node.parent().remove(node);\n\t            target.add(node);\n\t            var rs = node.lowLevel().unit().contents();\n\t            _this.getActiveEditor().setText(assist.cleanEmptyLines(rs));\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return MoveElementsDialog;\n\t})();\n\texports.MoveElementsDialog = MoveElementsDialog;\n\t\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar DomParser = __webpack_require__(45);\n\tfunction xmlToJson(xml) {\n\t    // Create the return object\n\t    var obj = {};\n\t    if (xml.nodeType == 1) {\n\t        // do attributes\n\t        if (xml.attributes.length > 0) {\n\t            for (var j = 0; j < xml.attributes.length; j++) {\n\t                var attribute = xml.attributes.item(j);\n\t                obj[\"@\" + attribute.nodeName] = attribute.nodeValue;\n\t            }\n\t        }\n\t    }\n\t    else if (xml.nodeType == 3) {\n\t        obj = xml.nodeValue;\n\t    }\n\t    // do children\n\t    if (xml.hasChildNodes()) {\n\t        for (var i = 0; i < xml.childNodes.length; i++) {\n\t            var item = xml.childNodes.item(i);\n\t            var nodeName = item.nodeName;\n\t            if (nodeName == undefined) {\n\t                continue;\n\t            }\n\t            if (typeof (obj[nodeName]) == \"undefined\") {\n\t                obj[nodeName] = xmlToJson(item);\n\t            }\n\t            else {\n\t                if (typeof (obj[nodeName].push) == \"undefined\") {\n\t                    var old = obj[nodeName];\n\t                    obj[nodeName] = [];\n\t                    obj[nodeName].push(old);\n\t                }\n\t                obj[nodeName].push(xmlToJson(item));\n\t            }\n\t        }\n\t    }\n\t    return obj;\n\t}\n\t;\n\tfunction cleanupText(j) {\n\t    for (var p in j) {\n\t        if (typeof (j[p]) == \"object\") {\n\t            for (var k in j[p]) {\n\t                if (k == '#text') {\n\t                    var txt = j[p]['#text'];\n\t                    if (typeof (txt) != 'string') {\n\t                        txt = txt.join(\"\");\n\t                    }\n\t                    txt = txt.trim();\n\t                    if (txt.length == 0) {\n\t                        delete j[p]['#text'];\n\t                    }\n\t                }\n\t            }\n\t            cleanupText(j[p]);\n\t        }\n\t    }\n\t    return j;\n\t}\n\tfunction cleanupJson(j) {\n\t    for (var p in j) {\n\t        if (typeof (j[p]) == \"object\") {\n\t            var keys = Object.keys(j[p]);\n\t            if (keys.length == 1) {\n\t                if (keys[0] == '#text') {\n\t                    j[p] = j[p]['#text'];\n\t                }\n\t            }\n\t            cleanupJson(j[p]);\n\t        }\n\t    }\n\t    return j;\n\t}\n\tfunction parseXML(value) {\n\t    var v = new DomParser.DOMParser();\n\t    if (!value || value.trim().indexOf(\"<<\") == 0)\n\t        return null;\n\t    var parsed = v.parseFromString(value);\n\t    return cleanupJson(cleanupText(xmlToJson(parsed)));\n\t}\n\tmodule.exports = parseXML;\n\t\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by Sviridov on 5/1/2015.\n\t */\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar JsonSchemaGenerator = (function () {\n\t    function JsonSchemaGenerator() {\n\t    }\n\t    JsonSchemaGenerator.prototype.generateSchema = function (obj) {\n\t        var sch = {};\n\t        sch['required'] = true;\n\t        sch['$schema'] = 'http://json-schema.org/draft-03/schema';\n\t        this.pass(obj, sch);\n\t        return sch;\n\t    };\n\t    JsonSchemaGenerator.prototype.pass = function (value, property) {\n\t        var valueType = this.detectType(value);\n\t        property['type'] = valueType;\n\t        if (!value || value == null) {\n\t        }\n\t        else if (Array.isArray(value)) {\n\t            this.passArray(value, property);\n\t        }\n\t        else if (value instanceof Object) {\n\t            this.passObject(value, property);\n\t        }\n\t    };\n\t    JsonSchemaGenerator.prototype.passObject = function (obj, sch) {\n\t        var _this = this;\n\t        Object.keys(obj).forEach(function (x) { return _this.registerProperty(x, obj[x], sch); });\n\t    };\n\t    JsonSchemaGenerator.prototype.registerProperty = function (propName, value, sch) {\n\t        var properties = sch['properties'];\n\t        if (!properties) {\n\t            properties = {};\n\t            sch['properties'] = properties;\n\t        }\n\t        var property = properties[propName];\n\t        if (!property) {\n\t            property = {};\n\t            properties[propName] = property;\n\t        }\n\t        property['required'] = false;\n\t        this.pass(value, property);\n\t    };\n\t    JsonSchemaGenerator.prototype.passArray = function (array, property) {\n\t        var _this = this;\n\t        var items = property['items'];\n\t        if (!items) {\n\t            items = [];\n\t            property['items'] = items;\n\t        }\n\t        var l = array.length;\n\t        var itemSet = [];\n\t        array.forEach(function (value) {\n\t            var item = {};\n\t            _this.pass(value, item);\n\t            itemSet.push(item);\n\t        });\n\t        items.push(itemSet[0]);\n\t    };\n\t    JsonSchemaGenerator.prototype.detectType = function (value) {\n\t        if (Array.isArray(value)) {\n\t            return 'array';\n\t        }\n\t        return typeof value;\n\t    };\n\t    return JsonSchemaGenerator;\n\t})();\n\texports.JsonSchemaGenerator = JsonSchemaGenerator;\n\tfunction generateSchema(text, mediaType) {\n\t    var generator = new JsonSchemaGenerator();\n\t    var obj = JSON.parse(text);\n\t    var schemaObject = generator.generateSchema(obj);\n\t    var schemaString = JSON.stringify(schemaObject, null, 2);\n\t    return schemaString;\n\t}\n\texports.generateSchema = generateSchema;\n\t\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar UI = __webpack_require__(18);\n\tvar SC = __webpack_require__(30);\n\tvar path = __webpack_require__(16);\n\tvar CompositeDisposable = UI.CompositeDisposable;\n\tvar hl = __webpack_require__(24);\n\tvar details = __webpack_require__(52);\n\tvar schemaUI = __webpack_require__(53);\n\tvar editorTools = __webpack_require__(5);\n\tvar dialogs = __webpack_require__(49);\n\tvar fs = __webpack_require__(17);\n\tvar universeHelpers = hl.universeHelpers;\n\tvar RamlDetails = (function (_super) {\n\t    __extends(RamlDetails, _super);\n\t    function RamlDetails(allowStructureChanges) {\n\t        if (allowStructureChanges === void 0) { allowStructureChanges = true; }\n\t        _super.call(this);\n\t        this.allowStructureChanges = allowStructureChanges;\n\t        this.disposables = new CompositeDisposable();\n\t        this.addClass('raml-details');\n\t    }\n\t    RamlDetails.prototype.getTitle = function () {\n\t        return \"Details\";\n\t    };\n\t    RamlDetails.prototype.attached = function () {\n\t        try {\n\t            this.element.innerHTML = \"<div></div>\";\n\t            this._children = [];\n\t            this.container = UI.vc();\n\t            this.addChild(this.container);\n\t            this.ui().appendChild(this.container.ui());\n\t            _super.prototype.attached.call(this);\n\t        }\n\t        catch (e) {\n\t        }\n\t    };\n\t    RamlDetails.prototype.setSchema = function (node) {\n\t        if (this.wasSchema) {\n\t            this.schemaView.dispose();\n\t            this.schemaView = null;\n\t        }\n\t        var key = node.attr(\"key\"), value = node.attr(\"value\");\n\t        var ssto = 12;\n\t        if (value == null) {\n\t            this.container.clear();\n\t            var errLabel = UI.h3(\"Selected schema has incorrect node so cannot be displayed.\");\n\t            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n\t            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n\t            this.container.addChild(errLabel);\n\t            return;\n\t        }\n\t        //FIXME\n\t        setInterval(function () {\n\t            if (ssto++ != 12)\n\t                return;\n\t            if (value) {\n\t                value.setValue(schemaText);\n\t                schemaUI._updatePreview(treeView, schemaText);\n\t            }\n\t        }, 100);\n\t        var schemaText = value.value();\n\t        this.container.clear();\n\t        var textView = dialogs.smallEditor(function (e, v) {\n\t            if (value.lowLevel().includePath()) {\n\t                try {\n\t                    var sm = path.dirname(node.lowLevel().unit().absolutePath());\n\t                    var relative = path.resolve(sm, value.lowLevel().includePath());\n\t                    if (!value.lowLevel().includeReference()) {\n\t                        fs.writeFileSync(relative, v);\n\t                    }\n\t                }\n\t                catch (e) {\n\t                    console.log(e);\n\t                }\n\t            }\n\t            // if (v!=schemaText) textView.setText(schemaText); // read-only variant\n\t            schemaText = v;\n\t            ssto = 0;\n\t        });\n\t        dialogs._updateEditor(textView, schemaText);\n\t        var treeView = schemaUI._schemaPreview();\n\t        schemaUI._updatePreview(treeView, schemaText);\n\t        var schemaTab = new UI.TabFolder();\n\t        schemaTab.add(\"Tree view\", UI.Icon.GIT_MERGE, treeView);\n\t        schemaTab.add(\"Text view\", UI.Icon.FILE_TEXT, textView);\n\t        this.container.addChild(schemaTab);\n\t        window['detailsnode'] = node;\n\t        if (details.oldItem) {\n\t            details.oldItem.detach();\n\t            details.oldItem = null;\n\t        }\n\t        this.schemaView = textView;\n\t        this.wasSchema = true;\n\t    };\n\t    RamlDetails.prototype.setResource = function (node) {\n\t        if (this.wasSchema) {\n\t            this.schemaView.dispose();\n\t            this.schemaView = null;\n\t        }\n\t        this.wasSchema = false;\n\t        var hnode = node;\n\t        window[\"detailsnode\"] = hnode;\n\t        if (hnode == null || hnode.lowLevel() == null)\n\t            this.displayEmpty();\n\t        console.log(\"Displaying details for node \" + hnode.name());\n\t        details.updateDetailsPanel(hnode, this.container, true);\n\t    };\n\t    RamlDetails.prototype.update = function () {\n\t        if (window[\"detailsnode\"]) {\n\t            this.setResource(window[\"detailsnode\"]);\n\t        }\n\t    };\n\t    RamlDetails.prototype.displayEmpty = function () {\n\t        this.container.clear();\n\t        if (!editorTools.aquireManager().ast) {\n\t            this.container.addChild(UI.h3(\"Our API is fabulously empty\").margin(8, 8, 20, 8));\n\t            var create = new UI.Button(\"Create new API\", UI.ButtonSizes.LARGE, UI.ButtonHighlights.SUCCESS, UI.Icon.REPO_CLONE, function () { return dialogs.newApi(); });\n\t            create.margin(8, 8, 20, 0);\n\t            this.container.addChild(create);\n\t        }\n\t    };\n\t    RamlDetails.prototype.destroy = function () {\n\t        editorTools.aquireManager()._details = null;\n\t        this.disposables.dispose();\n\t        this._node = null;\n\t        this.container.dispose();\n\t        this.container = null;\n\t        window[\"detailsnode\"] = null;\n\t        this._children = [];\n\t        if (details.oldItem) {\n\t            details.oldItem.detach();\n\t        }\n\t        if (this.wasSchema) {\n\t            this.schemaView.dispose();\n\t            this.schemaView = null;\n\t        }\n\t        details.oldItem = null;\n\t    };\n\t    RamlDetails.prototype.show = function (node) {\n\t        if (this._node == node)\n\t            return;\n\t        this._node = node;\n\t        try {\n\t            if (isSchema(node))\n\t                this.setSchema(this._node);\n\t            else\n\t                this.setResource(node);\n\t        }\n\t        catch (e) { }\n\t    };\n\t    return RamlDetails;\n\t})(SC.Scrollable);\n\texports.RamlDetails = RamlDetails;\n\tfunction isSchema(p) {\n\t    if (!p) {\n\t        return false;\n\t    }\n\t    return universeHelpers.isGlobalSchemaType(p.definition());\n\t}\n\t\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(17);\n\tvar Atom = __webpack_require__(1);\n\tvar React = __webpack_require__(46);\n\tvar SpacePenViews = __webpack_require__(25);\n\tvar pathwatcher = __webpack_require__(54);\n\tvar extend = __webpack_require__(47);\n\tvar path = __webpack_require__(16);\n\tvar popsicle = __webpack_require__(48);\n\tvar AtomUtil = __webpack_require__(55);\n\tvar rp = __webpack_require__(24);\n\tvar Render = __webpack_require__(56);\n\tvar CompositeDisposable = Atom.CompositeDisposable;\n\tfunction template(str, replace, defaults) {\n\t    return str.replace(/\\{([^{}]+)\\}/g, function (match, key) {\n\t        if (replace && replace[key] != null) {\n\t            return replace[key];\n\t        }\n\t        if (defaults && defaults[key] != null) {\n\t            return defaults[key];\n\t        }\n\t        return '';\n\t    });\n\t}\n\t/**\n\t * Export the console view instance which provides rendering and live-updating.\n\t */\n\tvar RAMLConsoleView = (function (_super) {\n\t    __extends(RAMLConsoleView, _super);\n\t    function RAMLConsoleView(options) {\n\t        var _this = this;\n\t        _super.call(this);\n\t        this.loaded = false;\n\t        this.isAttached = false;\n\t        this.isParsing = false;\n\t        this.disposables = new CompositeDisposable();\n\t        this.pageState = {};\n\t        // Track files and editor watchers.\n\t        this.paths = {};\n\t        this.editors = {};\n\t        this.resolver = new ConsoleResolver(function (path) { return _this.readFileSync(path); });\n\t        this.state = extend({\n\t            view: {},\n\t            parameters: {},\n\t            headers: {},\n\t            uriParameters: {},\n\t            baseUriParameters: {},\n\t            queryParameters: {},\n\t            bodies: {}\n\t        }, options.state);\n\t        this.filename = options.filename;\n\t        this.editorId = options.editorId;\n\t        // Handle manually passed in RAML wrapper.\n\t        if (options.raml) {\n\t            this.raml = rp.expander.expandTraitsAndResourceTypes(options.raml);\n\t            this.project = options.raml.highLevel().lowLevel().unit().project().cloneWithResolver(this.resolver);\n\t            this.loaded = true;\n\t        }\n\t    }\n\t    /**\n\t     * Atom uses the `content` as the wrapper element.\n\t     */\n\t    RAMLConsoleView.content = function () {\n\t        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n\t    };\n\t    RAMLConsoleView.getUriForFilename = function (path) {\n\t        return 'raml-console://file/' + path;\n\t    };\n\t    RAMLConsoleView.getUriForEditor = function (editor) {\n\t        return 'raml-console://editor/' + editor.id;\n\t    };\n\t    RAMLConsoleView.prototype.attached = function () {\n\t        var _this = this;\n\t        if (this.isAttached) {\n\t            return;\n\t        }\n\t        this.render();\n\t        this.isAttached = true;\n\t        if (this.editorId) {\n\t            this.resolveEditor(this.editorId);\n\t        }\n\t        else if (this.filename) {\n\t            this.resolveFilename(this.filename);\n\t        }\n\t        this.disposables.add(atom.workspace.observeTextEditors(function (editor) {\n\t            var path = editor.getPath();\n\t            // Upgrade from file watching to editor watching.\n\t            if (_this.paths[path]) {\n\t                _this.watchEditor(editor);\n\t                _this.stopWatchingPath(path);\n\t            }\n\t        }));\n\t    };\n\t    RAMLConsoleView.prototype.resolveEditor = function (editorId) {\n\t        var _this = this;\n\t        var resolve = function () {\n\t            _this.editor = AtomUtil.getEditorById(editorId);\n\t            if (_this.editor) {\n\t                _this.trigger('title-changed');\n\t                _this.loadRAML();\n\t                return;\n\t            }\n\t            var view = _this.parents('.pane').view();\n\t            return view && view.destroyItem(_this);\n\t        };\n\t        if (atom.workspace) {\n\t            resolve();\n\t        }\n\t        else {\n\t            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.resolveFilename = function (filename) {\n\t        var _this = this;\n\t        var resolve = function () {\n\t            _this.file = new pathwatcher.File(filename);\n\t            _this.trigger('title-changed');\n\t            _this.loadRAML();\n\t        };\n\t        if (atom.workspace) {\n\t            resolve();\n\t        }\n\t        else {\n\t            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.readFileSync = function (path) {\n\t        var editor = AtomUtil.getEditorByPath(path);\n\t        var contents;\n\t        if (editor) {\n\t            contents = editor.getText();\n\t            this.watchEditor(editor);\n\t        }\n\t        else {\n\t            try {\n\t                contents = fs.readFileSync(path, 'utf8');\n\t            }\n\t            catch (err) {\n\t                if (err.code === 'ENOENT') {\n\t                    this.watchForFile(path);\n\t                    return;\n\t                }\n\t                throw err;\n\t            }\n\t            this.watchFile(path);\n\t        }\n\t        return contents;\n\t    };\n\t    RAMLConsoleView.prototype.watchEditor = function (editor) {\n\t        var _this = this;\n\t        var path = editor.getPath();\n\t        if (this.editors[path]) {\n\t            return;\n\t        }\n\t        var disposables = new CompositeDisposable();\n\t        this.editors[path] = disposables;\n\t        // Changes can be as simple as updating the cache.\n\t        disposables.add(editor.onDidStopChanging(function () {\n\t            _this.updateUnit(path, editor.getText());\n\t        }));\n\t        // Callback to dispose of listeners and force an update. This happens\n\t        // because the updated path or file may not be used by the RAML parser.\n\t        var cb = function () {\n\t            _this.stopWatchingEditor(path);\n\t            _this.updateUnit(path, _this.readFileSync(path));\n\t        };\n\t        disposables.add(editor.onDidDestroy(cb));\n\t        disposables.add(editor.onDidChangePath(cb));\n\t    };\n\t    RAMLConsoleView.prototype.getActiveEditor = function () {\n\t        return atom.workspace.getActiveTextEditor();\n\t    };\n\t    RAMLConsoleView.prototype.stopWatchingPath = function (path) {\n\t        var watcher = this.paths[path];\n\t        if (watcher) {\n\t            watcher.close();\n\t            delete this.paths[path];\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.stopWatchingEditor = function (path) {\n\t        var disposables = this.editors[path];\n\t        if (disposables) {\n\t            disposables.dispose();\n\t            delete this.editors[path];\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.watchFile = function (path) {\n\t        var _this = this;\n\t        if (this.paths[path]) {\n\t            return;\n\t        }\n\t        var watcher = pathwatcher.watch(path, function (event) {\n\t            if (event === 'change') {\n\t                _this.updateUnit(path, _this.readFileSync(path));\n\t            }\n\t            else {\n\t                _this.stopWatchingPath(path);\n\t                _this.deleteUnit(path);\n\t            }\n\t        });\n\t        this.paths[path] = watcher;\n\t    };\n\t    RAMLConsoleView.prototype.watchForFile = function (filename) {\n\t        var _this = this;\n\t        this.watchForPath(filename, function () {\n\t            _this.updateUnit(filename, _this.readFileSync(filename));\n\t        });\n\t    };\n\t    RAMLConsoleView.prototype.watchForPath = function (filename, cb) {\n\t        var _this = this;\n\t        var parent = path.dirname(filename);\n\t        var watch = function () {\n\t            var watcher = pathwatcher.watch(parent, function (event, newFilename) {\n\t                if (event === 'change') {\n\t                    if (newFilename === filename) {\n\t                        _this.stopWatchingPath(parent);\n\t                        cb();\n\t                    }\n\t                }\n\t                else {\n\t                    _this.watchForPath(parent, watch);\n\t                    _this.stopWatchingPath(parent);\n\t                }\n\t            });\n\t            _this.paths[parent] = watcher;\n\t        };\n\t        try {\n\t            watch();\n\t        }\n\t        catch (e) {\n\t            this.watchForPath(parent, watch);\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.stopWatching = function () {\n\t        var _this = this;\n\t        Object.keys(this.paths).forEach(function (path) {\n\t            _this.stopWatchingPath(path);\n\t        });\n\t        Object.keys(this.editors).forEach(function (path) {\n\t            _this.stopWatchingEditor(path);\n\t        });\n\t    };\n\t    RAMLConsoleView.prototype.navigate = function (state) {\n\t        var view = typeof state === 'string' ? { id: state } : extend(this.state.view, state);\n\t        // Reset `pageState` before re-render.\n\t        this.pageState = {};\n\t        this.setState({ view: view }, function () {\n\t            // Scroll the view to the top, as if we'd just navigated.\n\t            document.getElementById('raml-console-view').scrollTop = 0;\n\t        });\n\t        this.abortRequest();\n\t    };\n\t    /**\n\t     * Render the UI with React.\n\t     */\n\t    RAMLConsoleView.prototype.render = function (cb) {\n\t        var _this = this;\n\t        var props = {\n\t            state: this.state,\n\t            raml: this.raml,\n\t            loaded: this.loaded,\n\t            errors: this.errors,\n\t            pageState: this.pageState,\n\t            setParameter: function (group, name, value) { return _this.setParameter(group, name, value); },\n\t            setState: function (state) { return _this.setState(state); },\n\t            navigate: function (view) { return _this.navigate(view); },\n\t            execRequest: function () { return _this.execRequest(); }\n\t        };\n\t        React.render(React.createElement(Render.Console, props), this.element, cb);\n\t    };\n\t    RAMLConsoleView.prototype.execRequest = function () {\n\t        var _this = this;\n\t        this.abortRequest();\n\t        var baseUri = this.raml.baseUri();\n\t        var node = this.raml.highLevel().findById(this.state.view.id).wrapperNode();\n\t        // Remove old request errors.\n\t        this.setPageState({ requestError: undefined });\n\t        if (baseUri == null) {\n\t            this.setPageState({ requestError: 'Unable to execute request, `baseUri` is missing' });\n\t            return;\n\t        }\n\t        var securityScheme = this.state.securityScheme ?\n\t            this.raml.securitySchemes().filter(function (x) { return x.name() === _this.state.securityScheme; })[0] : undefined;\n\t        var defaultBaseUriParameters = this.toDefaultParameters(this.raml.allBaseUriParameters());\n\t        var defaultUriParameters = this.toDefaultParameters(node.parent().allUriParameters());\n\t        var methodHeaders = node.headers();\n\t        var methodQuery = node.queryParameters();\n\t        var url = template(baseUri.value() || '', this.state.baseUriParameters, defaultBaseUriParameters).replace(/\\/$/, '');\n\t        var path = template(node.parent().completeRelativeUri(), this.state.uriParameters, defaultUriParameters);\n\t        if (securityScheme) {\n\t            methodQuery = methodQuery.concat(securityScheme.describedBy().queryParameters());\n\t            methodHeaders = methodHeaders.concat(securityScheme.describedBy().headers());\n\t        }\n\t        this.request = popsicle.request({\n\t            url: url + path,\n\t            method: node.method(),\n\t            headers: extend({ 'User-Agent': 'API Workbench: Console' }, this.usedParameters(this.state.headers, methodHeaders)),\n\t            query: this.usedParameters(this.state.queryParameters, methodQuery),\n\t            body: this.state.bodies[this.state.body],\n\t            use: [\n\t                popsicle.plugins.headers(),\n\t                popsicle.plugins.unzip(),\n\t                popsicle.plugins.concatStream('string')\n\t            ]\n\t        });\n\t        this.request.progress(function () {\n\t            _this.setPageState({ requestProgress: _this.request.completed });\n\t        });\n\t        // Handle request completion.\n\t        this.request.then(function (response) {\n\t            _this.setPageState({ requestResponse: response.toJSON(), requestProgress: undefined });\n\t            _this.request = undefined;\n\t        }, function (error) {\n\t            _this.setPageState({ requestError: error.message, requestProgress: undefined });\n\t            _this.request = undefined;\n\t        });\n\t    };\n\t    RAMLConsoleView.prototype.toDefaultParameters = function (parameters) {\n\t        var params = {};\n\t        parameters.forEach(function (parameter) {\n\t            if (parameter.default()) {\n\t                params[parameter.name()] = parameter.default();\n\t            }\n\t        });\n\t        return params;\n\t    };\n\t    RAMLConsoleView.prototype.usedParameters = function (state, parameters) {\n\t        var params = {};\n\t        parameters.forEach(function (param) {\n\t            if (state[param.name()]) {\n\t                params[param.name()] = state[param.name()];\n\t            }\n\t        });\n\t        return params;\n\t    };\n\t    RAMLConsoleView.prototype.abortRequest = function () {\n\t        if (this.request) {\n\t            this.request.abort();\n\t            this.request = undefined;\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.updateRAML = function () {\n\t        this.isParsing = true;\n\t        try {\n\t            var baseUnit = this.getUnit(this.getFilename());\n\t            var errors = baseUnit.ast().errors();\n\t            this.errors = errors;\n\t            if (!errors.length) {\n\t                var originalRoot = baseUnit.highLevel().asElement().wrapperNode();\n\t                this.raml = rp.expander.expandTraitsAndResourceTypes(originalRoot);\n\t            }\n\t        }\n\t        catch (error) {\n\t            this.raml = undefined;\n\t            this.errors = [error];\n\t        }\n\t        finally {\n\t            this.loaded = true;\n\t            this.isParsing = false;\n\t            this.render();\n\t            this.trigger('title-changed');\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.loadRAML = function () {\n\t        // Reset all watchers, consider it a fresh parse.\n\t        this.stopWatching();\n\t        this.project = rp.project.createProject(path.dirname(this.getFilename()), this.resolver);\n\t        this.updateRAML();\n\t    };\n\t    RAMLConsoleView.prototype.serialize = function () {\n\t        return {\n\t            deserializer: 'RAMLConsoleView',\n\t            filename: this.getFilename(),\n\t            state: this.state\n\t        };\n\t    };\n\t    RAMLConsoleView.prototype.getFilename = function () {\n\t        if (this.file) {\n\t            return this.file.getPath();\n\t        }\n\t        if (this.editor) {\n\t            return this.editor.getPath();\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.getTitle = function () {\n\t        var name = 'RAML';\n\t        if (this.raml && this.raml.title() != null) {\n\t            name = this.raml.title();\n\t        }\n\t        else if (this.file) {\n\t            name = path.basename(this.getFilename());\n\t        }\n\t        else if (this.editor) {\n\t            name = this.editor.getTitle();\n\t        }\n\t        return name + ' Console';\n\t    };\n\t    RAMLConsoleView.prototype.destroy = function () {\n\t        this.stopWatching();\n\t        this.disposables.dispose();\n\t        React.unmountComponentAtNode(this.element);\n\t    };\n\t    RAMLConsoleView.prototype.setState = function (state, cb) {\n\t        this.state = extend(this.state, state);\n\t        this.render(cb);\n\t    };\n\t    RAMLConsoleView.prototype.setPageState = function (pageState, cb) {\n\t        this.pageState = extend(this.pageState, pageState);\n\t        this.render(cb);\n\t    };\n\t    RAMLConsoleView.prototype.setParameter = function (group, name, value) {\n\t        // TODO(blakeembrey): Use computed properties on TypeScript 1.5+.\n\t        var state = {};\n\t        var groupState = extend(this.state[group]);\n\t        // Remove falsy values from view.\n\t        if (value) {\n\t            groupState[name] = value;\n\t        }\n\t        else {\n\t            delete groupState[name];\n\t        }\n\t        state[group] = groupState;\n\t        this.setState(state);\n\t    };\n\t    RAMLConsoleView.prototype.getURI = function () {\n\t        return RAMLConsoleView.getUriForFilename(this.getFilename());\n\t    };\n\t    RAMLConsoleView.prototype.getUnit = function (path) {\n\t        return this.project.unit(path, true);\n\t    };\n\t    RAMLConsoleView.prototype.deleteUnit = function (path) {\n\t        this.project.deleteUnit(path);\n\t        this.updateRAML();\n\t    };\n\t    RAMLConsoleView.prototype.updateUnit = function (path, contents) {\n\t        this.getUnit(path).updateContent(this.readFileSync(path));\n\t        this.updateRAML();\n\t    };\n\t    return RAMLConsoleView;\n\t})(SpacePenViews.ScrollView);\n\texports.RAMLConsoleView = RAMLConsoleView;\n\tvar FSResolverImpl = (function () {\n\t    function FSResolverImpl() {\n\t    }\n\t    FSResolverImpl.prototype.content = function (path) {\n\t        if (!fs.existsSync(path)) {\n\t            return null;\n\t        }\n\t        try {\n\t            return fs.readFileSync(path).toString();\n\t        }\n\t        catch (e) {\n\t            return null;\n\t        }\n\t    };\n\t    FSResolverImpl.prototype.list = function (path) {\n\t        return fs.readdirSync(path);\n\t    };\n\t    FSResolverImpl.prototype.contentAsync = function (path) {\n\t        return new Promise(function (resolve, reject) {\n\t            fs.readFile(path, function (err, data) {\n\t                if (err != null) {\n\t                    return reject(err);\n\t                }\n\t                var content = data.toString();\n\t                resolve(content);\n\t            });\n\t        });\n\t    };\n\t    FSResolverImpl.prototype.listAsync = function (path) {\n\t        return new Promise(function (reject, resolve) {\n\t            fs.readdir(path, function (err, files) {\n\t                if (err != null) {\n\t                    return reject(err);\n\t                }\n\t                resolve(files);\n\t            });\n\t        });\n\t    };\n\t    return FSResolverImpl;\n\t})();\n\texports.FSResolverImpl = FSResolverImpl;\n\t/**\n\t * Create a console resolver class.\n\t */\n\tvar ConsoleResolver = (function (_super) {\n\t    __extends(ConsoleResolver, _super);\n\t    function ConsoleResolver(readFileSync) {\n\t        _super.call(this);\n\t        this.readFileSync = readFileSync;\n\t    }\n\t    ConsoleResolver.prototype.content = function (path) {\n\t        return this.readFileSync(path);\n\t    };\n\t    return ConsoleResolver;\n\t})(FSResolverImpl);\n\t\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"yaml-ast-parser\");\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"emissary\");\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"xmldom\");\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"react\");\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"xtend\");\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"popsicle\");\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar UI = __webpack_require__(18);\n\tvar khttp = __webpack_require__(57);\n\t/**\n\t * Created by kor on 13/05/15.\n\t */\n\tvar rp = __webpack_require__(24);\n\tvar path = __webpack_require__(16);\n\tvar defs = rp.ds;\n\tvar stubs = rp.stubs;\n\tvar services = defs;\n\tvar search = rp.search;\n\tvar fs = __webpack_require__(17);\n\tvar assistUtils = __webpack_require__(9);\n\tvar details2 = __webpack_require__(61);\n\tvar details = __webpack_require__(52);\n\tvar editorTools = __webpack_require__(5);\n\tvar schemaUI = __webpack_require__(53);\n\tvar remote = __webpack_require__(58);\n\tvar dialog = remote.require('dialog');\n\tvar pair = __webpack_require__(62);\n\tvar universeModule = rp.universes;\n\tvar universeHelpers = rp.universeHelpers;\n\tvar _dialogPanels = [];\n\tfunction showError(message, details) {\n\t    dialog.showMessageBox(remote.getCurrentWindow(), { type: 'error', buttons: ['Okay'], title: 'Error', message: message, detail: details });\n\t}\n\texports.showError = showError;\n\tvar _methodDescriptions = null;\n\tfunction getMethodDescriptions() {\n\t    if (!_methodDescriptions) {\n\t        _methodDescriptions = Object.create(null);\n\t        var methodsProperty = editorTools.aquireManager().ast.definition().property(universeModule.Universe10.Api.properties.resources.name)\n\t            .range().property(universeModule.Universe10.ResourceBase.properties.methods.name);\n\t        var list = methodsProperty.enumOptions();\n\t        khttp.methods.filter(function (x) { return list.indexOf(x.method.toLowerCase()) > -1; }).forEach(function (method) {\n\t            var desc = method.description.trim().match(/^\\\"(.*)\\\"$/)[1];\n\t            _methodDescriptions[method.method.toLowerCase()] = desc ? desc : method.description;\n\t        });\n\t    }\n\t    return _methodDescriptions;\n\t}\n\tvar _statusCodeDescriptions = null;\n\tfunction getStatusCodeDescriptions() {\n\t    if (!_statusCodeDescriptions) {\n\t        _statusCodeDescriptions = Object.create(null);\n\t        khttp.statusCodes.forEach(function (code) {\n\t            var m, desc = code.description.trim();\n\t            if (m = desc.match(/^\\\"(.*)\\\"/))\n\t                desc = m[1];\n\t            _statusCodeDescriptions[code.code] = desc;\n\t        });\n\t        _statusCodeDescriptions['7xx'] = \"is for developer errors.\";\n\t    }\n\t    return _statusCodeDescriptions;\n\t}\n\texports.getStatusCodeDescriptions = getStatusCodeDescriptions;\n\tfunction newApi() {\n\t    var title = \"\", version = \"\", baseUri = \"\", sample = true, raml1 = true;\n\t    var tfTitle = new UI.TextField(\"API Title*\", title, function (e, v) { return title = v; });\n\t    var tfVersion = new UI.TextField(\"Version\", version, function (e, v) { return version = v; });\n\t    var tfBaseURI = new UI.TextField(\"Base URI\", baseUri, function (e, v) { return baseUri = v; });\n\t    tfTitle.setTabIndex(100);\n\t    tfTitle.margin(0, 0, 8, 0);\n\t    tfVersion.setTabIndex(101);\n\t    tfVersion.margin(0, 0, 8, 0);\n\t    tfBaseURI.setTabIndex(102);\n\t    tfBaseURI.margin(0, 0, 8, 0);\n\t    var cbSample = new UI.CheckBox(\"Create sample resource\", null, function (e, v) { return sample = v; });\n\t    cbSample.setValue(sample);\n\t    var cbRaml1 = new UI.CheckBox(\"Generate 1.0 model\", null, function (e, v) { return raml1 = v; });\n\t    cbRaml1.setValue(raml1);\n\t    var panel = UI.section(\"Create new API\", UI.Icon.DASHBOARD, false, false, tfTitle, tfVersion, tfBaseURI, UI.hc(cbSample, cbRaml1).margin(0, 0, 12, 12));\n\t    _dialog(panel, function () {\n\t        if (title == '') {\n\t            showError(\"Cannot create API\", \"Title must not be empty\");\n\t            return false;\n\t        }\n\t        editorTools.aquireManager().setText(assistUtils.createRAMLFile(title, version, baseUri, sample, raml1));\n\t        return true;\n\t    }, tfTitle)(this);\n\t    tfTitle.getActualField().ui().focus();\n\t}\n\texports.newApi = newApi;\n\tvar typeValues = function (parent) {\n\t    var isSchema = false;\n\t    var tp = parent.definition().universe().type(universeModule.Universe10.TypeDeclaration.name);\n\t    if (!tp) {\n\t        isSchema = true;\n\t        tp = parent.definition().universe().type(universeModule.Universe08.BodyLike.name);\n\t    }\n\t    var sh = tp.property(universeModule.Universe10.TypeDeclaration.properties.schema.name);\n\t    var types = [];\n\t    if (sh) {\n\t        types = search.enumValues(sh, parent);\n\t    }\n\t    return { isSchema: isSchema, types: types };\n\t};\n\tfunction newMethod(parent, method) {\n\t    var mdesc = getMethodDescriptions();\n\t    var cdesc = getStatusCodeDescriptions();\n\t    var NO_RESPONCE = \"No response\";\n\t    var NO_RESPONCE_BT = \"No response body type\";\n\t    var code = null, bodyType = null;\n\t    if (method == null)\n\t        method = \"get\";\n\t    var mdescLabel = new UI.LabelField();\n\t    var cdescLabel = new UI.LabelField();\n\t    [mdescLabel, cdescLabel].forEach(function (x) { return x.addClass('wizard-description'); });\n\t    mdescLabel.getActualField().margin(0, 0, 18, 8);\n\t    cdescLabel.getActualField().margin(0, 0, 8, 8);\n\t    var methodSelect = new UI.SelectField(\"Method:\", function (e, v) {\n\t        method = v;\n\t        mdescLabel.setText(\"Method \" + v + \" \" + mdesc[v]);\n\t    }, null);\n\t    methodSelect.getActualField().setOptions(Object.keys(mdesc));\n\t    methodSelect.getActualField().setValue(method, true);\n\t    var responseSelect = new UI.SelectField(\"Status code:\", function (e, v) {\n\t        if (v == NO_RESPONCE) {\n\t            v = null;\n\t            responseTypeSelect.getActualField().setValue(NO_RESPONCE_BT);\n\t        }\n\t        code = v;\n\t        responseTypeSelect.setDisabled(v == null);\n\t        cdescLabel.setText(v ? \"Status code \" + v + \" \" + cdesc[v] : '');\n\t    }, null);\n\t    responseSelect.getActualField().setOptions([NO_RESPONCE].concat(Object.keys(cdesc)));\n\t    var responseTypeSelect = new UI.SelectField(\"Generate default response with media type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT) {\n\t            v = null;\n\t            typeOfValue.setDisabled(true);\n\t        }\n\t        else\n\t            typeOfValue.setDisabled(false);\n\t        bodyType = v;\n\t    }, null);\n\t    responseTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n\t    responseTypeSelect.setDisabled(true);\n\t    responseTypeSelect.margin(0, 0, 0, 12);\n\t    var realBodyType = null;\n\t    var bodyTypeSelect = new UI.SelectField(\"Generate default body with media type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT) {\n\t            v = null;\n\t            bodyTypeOfValue.setDisabled(true);\n\t        }\n\t        else\n\t            bodyTypeOfValue.setDisabled(false);\n\t        realBodyType = v;\n\t    }, null);\n\t    bodyTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n\t    bodyTypeSelect.margin(0, 0, 0, 12);\n\t    var actualType = null;\n\t    var bodyTypeString = null;\n\t    var typeOfValue = new UI.SelectField(\"Generate default response body with type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT)\n\t            v = null;\n\t        actualType = v;\n\t    }, null);\n\t    typeOfValue.setDisabled(true);\n\t    typeOfValue.margin(0, 0, 0, 12);\n\t    var __ret = typeValues(parent);\n\t    var isSchema = __ret.isSchema;\n\t    var types = __ret.types;\n\t    if (types) {\n\t        types = [\"\"].concat(types);\n\t        typeOfValue.getActualField().setOptions(types);\n\t    }\n\t    var bodyTypeOfValue = new UI.SelectField(\"Generate default body with type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT)\n\t            v = null;\n\t        bodyTypeString = v;\n\t    }, null);\n\t    bodyTypeOfValue.setDisabled(true);\n\t    bodyTypeOfValue.margin(0, 0, 0, 12);\n\t    var isSchema = __ret.isSchema;\n\t    var types = __ret.types;\n\t    if (types) {\n\t        types = [\"\"].concat(types);\n\t        bodyTypeOfValue.getActualField().setOptions(types);\n\t    }\n\t    var responseSection = UI.section(\"\");\n\t    responseSection.addChild(UI.h3(\"Body\"));\n\t    responseSection.addChild(bodyTypeSelect);\n\t    responseSection.addChild(bodyTypeOfValue);\n\t    responseSection.addChild(UI.h3(\"Response\"));\n\t    responseSection.addChild(responseSelect);\n\t    responseSection.addChild(cdescLabel);\n\t    responseSection.addChild(responseTypeSelect);\n\t    responseSection.addChild(typeOfValue);\n\t    responseSection.ui();\n\t    var panel = UI.section(\"Creating a new method\", UI.Icon.CODE, false, false, methodSelect, mdescLabel, responseSection);\n\t    var __ret = typeValues(parent);\n\t    //panel.addChild(typeOfValue)\n\t    _dialog(panel, function () {\n\t        var oldNode = parent.elementsOfKind('methods').filter(function (el) { return (el.attr('method').value() == method); })[0];\n\t        if (oldNode) {\n\t            showError(\"Method \" + method + \" already exists\", \"Node contents will be overwritten\");\n\t            parent.remove(oldNode);\n\t        }\n\t        var methodNode = stubs.createMethodStub(parent, method);\n\t        if (realBodyType) {\n\t            var bodyNode = stubs.createBodyStub(methodNode, realBodyType);\n\t            if (bodyTypeString) {\n\t                if (isSchema) {\n\t                    bodyNode.attrOrCreate(\"schema\").setValue(bodyTypeString);\n\t                }\n\t                else\n\t                    bodyNode.attrOrCreate(\"type\").setValue(bodyTypeString);\n\t            }\n\t            methodNode.add(bodyNode);\n\t        }\n\t        if (code) {\n\t            var codeNode = stubs.createResponseStub(methodNode, code);\n\t            methodNode.add(codeNode);\n\t            if (bodyType) {\n\t                var bodyNode = stubs.createBodyStub(codeNode, bodyType);\n\t                if (actualType) {\n\t                    if (isSchema) {\n\t                        bodyNode.attrOrCreate(\"schema\").setValue(actualType);\n\t                    }\n\t                    else\n\t                        bodyNode.attrOrCreate(\"type\").setValue(actualType);\n\t                }\n\t                codeNode.add(bodyNode);\n\t            }\n\t        }\n\t        parent.add(methodNode);\n\t        editorTools.updateAndSelect(methodNode);\n\t        return true;\n\t    })(this);\n\t}\n\texports.newMethod = newMethod;\n\tfunction getStringValue(x) {\n\t    if (typeof x === \"object\")\n\t        return x.valueName();\n\t    else\n\t        return x;\n\t}\n\texports.getStringValue = getStringValue;\n\tfunction typeEditDialog(name, value, node, onDone) {\n\t    var typePanel = UI.vc();\n\t    typePanel.margin(8, 8, 20, 8);\n\t    var typeProperty = node.definition().property(name);\n\t    var toPropagate = svMap(node, name);\n\t    var typeList = editorTools.aquireManager().ast.elementsOfKind(\"resourceType\").map(function (x) { return x.name(); });\n\t    var typeName = getStringValue(value);\n\t    var select = new UI.SelectField('Type: ', function (e, v) {\n\t        if (v == EMPTY_VALUE) {\n\t            value = \"\";\n\t            typePanel.clear();\n\t            typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n\t            return;\n\t        }\n\t        value = rp.utils.genStructuredValue(v, node, typeProperty);\n\t        var typeNode = ((typeof value) === \"object\") ? value.toHighLevel(editorTools.aquireManager().ast) : null;\n\t        propagateValues(typeNode, toPropagate);\n\t        details.updateDetailsPanel(typeNode, typePanel);\n\t        if (typeNode && typeNode.definition().allProperties().length == 0) {\n\t            value = v;\n\t        }\n\t    });\n\t    var EMPTY_VALUE = \"(no value)\";\n\t    select.getActualField().setOptions([EMPTY_VALUE].concat(typeList));\n\t    select.setPercentWidth(100);\n\t    if (typeList.indexOf(typeName) < 0) {\n\t        select.getActualField().setValue(EMPTY_VALUE);\n\t        if (typeName != \"\")\n\t            typePanel.addChild(UI.label(\"Type `\" + typeName + \"` does not exists\", null, UI.TextClasses.ERROR).setStyle(\"display\", \"block\"));\n\t        typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n\t    }\n\t    else\n\t        select.getActualField().setValue(typeName, true);\n\t    var panel = UI.section(\"Editing type value `\" + name + '`:', UI.Icon.CIRCUIT_BOARD, null, null, select, typePanel);\n\t    return _dialog(panel, function () { onDone(value); return true; });\n\t}\n\texports.typeEditDialog = typeEditDialog;\n\tfunction svMap(node, attr) {\n\t    try {\n\t        var map = new pair.Map();\n\t        var values = node.attributes(attr).map(function (x) { return x.value(); }).filter(function (x) { return typeof x === \"object\"; });\n\t        values.forEach(function (val) { return val.lowLevel().children().forEach(function (c) { return map.set(c.key(), c.value()); }); });\n\t        return map;\n\t    }\n\t    catch (e) {\n\t        return null;\n\t    }\n\t}\n\tfunction propagateValues(node, map) {\n\t    if (!node || !map)\n\t        return;\n\t    map.pairs().forEach(function (pair) {\n\t        if (node.definition().property(pair.key))\n\t            node.attrOrCreate(pair.key).setValue(pair.value);\n\t    });\n\t}\n\tfunction getResourceParent(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if (universeHelpers.isResourcesProperty(node.property()))\n\t        return node;\n\t    return getResourceParent(node.parent());\n\t}\n\texports.getResourceParent = getResourceParent;\n\tfunction enumEditDialog(name, value, onDone) {\n\t    var _cp = {\n\t        elements: function (model) { return model; },\n\t        init: function (viewer) { },\n\t        dispose: function () { }\n\t    };\n\t    var renderer = {\n\t        render: function (model) { return UI.hc(UI.label(model, UI.Icon.GIT_COMMIT), UI.a(\"\", function (e) {\n\t            value = value.filter(function (x) { return x != e.id(); });\n\t            list.remove(e.id());\n\t        }, UI.Icon.TRASHCAN).pad(8, 8).setId(model)).addClass(\"outline\"); }\n\t    };\n\t    var list = new UI.ListView(_cp, renderer);\n\t    list.setBasicLabelFunction(function (x) { return x; });\n\t    list.setInput(value, true);\n\t    var text = UI.texfField(\"\", \"\", function (x) { return x; }).margin(0, 0, 4, 4);\n\t    text.addKeyPressListener(function (i, e) {\n\t        if (e.keyCode != 13)\n\t            return;\n\t        var b = i.getBinding();\n\t        var newValue = b.get();\n\t        b.set(\"\");\n\t        value.push(newValue);\n\t        list.setInput(value, true);\n\t    });\n\t    var panel = UI.section(\"Editing enum value `\" + name + '`:', UI.Icon.LIST_UNORDERED, null, null, UI.h3(\"List of elements in enum:\").margin(0, 0, 20, 0), list.margin(20, 20), UI.h3(\"Add new element:\").margin(0, 0, 20, 0), text);\n\t    return _dialog(panel, function () { onDone(value); return true; }, text); //\n\t}\n\texports.enumEditDialog = enumEditDialog;\n\tfunction calculatesParentURIPath(resource) {\n\t    var result = resource.attrValue(\"relativeUri\");\n\t    if (!result)\n\t        return null;\n\t    var current = getResourceParent(resource.parent());\n\t    while (current) {\n\t        var segment = current.attrValue(\"relativeUri\");\n\t        if (!segment)\n\t            return null;\n\t        result = segment + result;\n\t        current = getResourceParent(current.parent());\n\t    }\n\t    return result;\n\t}\n\tfunction newResource(parent) {\n\t    var uri = \"/\";\n\t    var uriLable = \"\";\n\t    var resourceParent = getResourceParent(parent);\n\t    var parentsPath = null;\n\t    if (resourceParent) {\n\t        parentsPath = calculatesParentURIPath(resourceParent);\n\t        if (parentsPath) {\n\t            uriLable = parentsPath;\n\t        }\n\t    }\n\t    var uriTF = uriTF = new UI.TextField(uriLable, uri, function (e, v) {\n\t        uri = v;\n\t    });\n\t    uriTF.margin(0, 0, 6, 12);\n\t    var methods = {};\n\t    var methodsPanel = UI.vc().margin(0, 0, 0, 12);\n\t    Object.keys(getMethodDescriptions())\n\t        .forEach(function (val) {\n\t        var ch = new UI.CheckBox(val, null, function (x) {\n\t            if (methods[val]) {\n\t                delete methods[val];\n\t            }\n\t            else {\n\t                methods[val] = x;\n\t            }\n\t        }).addClass(\"checkbox-group\");\n\t        var hcp = UI.vc().margin(0, 0, 15, 0);\n\t        hcp.addChild(ch);\n\t        var desc = val + \":\" + getMethodDescriptions()[val];\n\t        methodsPanel.addChild(UI.vc(hcp));\n\t        var label = UI.label(desc, UI.Icon.NONE, UI.TextClasses.SUBTLE).margin(5, 10, -4, 0);\n\t        methodsPanel.addChild(label);\n\t    });\n\t    var node = stubs.createResourceStub(parent, uri);\n\t    var resourceTypeProp = UI.select(\"type\");\n\t    var sm = search.globalDeclarations(parent).filter(function (x) { return universeHelpers.isResourceTypeType(x.definition()) && !x.definition().getAdapter(services.RAMLService).isUserDefined(); });\n\t    var options = sm.map(function (x) { return rp.search.qName(x, parent); });\n\t    var options = [\"\"].concat(options);\n\t    resourceTypeProp.setOptions(options);\n\t    //var resourceTypeProp = details.property2(node, \"type\");\n\t    var panel = UI.section(\"Creating a new resource\", UI.Icon.BOOK, false, false);\n\t    panel.addChild(UI.label(\"New resource URI:\"));\n\t    panel.addChild(uriTF);\n\t    panel.addChild(UI.label(\"Type:\"));\n\t    panel.addChild(resourceTypeProp);\n\t    panel.addChild(UI.label(\"Add additional methods:\").margin(0, 0, 18, 6));\n\t    panel.addChild(methodsPanel);\n\t    _dialog(panel, function () {\n\t        if (uri.indexOf('/') != 0)\n\t            return false;\n\t        node.attrOrCreate(\"relativeUri\").setValue(uri);\n\t        Object.keys(methods).filter(function (x) { return methods[x]; }).forEach(function (method) {\n\t            var stub = stubs.createMethodStub(node, method);\n\t            stub.attrOrCreate(\"method\").setValue(method);\n\t            node.add(stub);\n\t        });\n\t        var vl = resourceTypeProp.getValue();\n\t        if (vl) {\n\t            node.attrOrCreate(\"type\").setValue(vl);\n\t        }\n\t        parent.add(node);\n\t        editorTools.updateAndSelect(node);\n\t        return true;\n\t    }, uriTF, true)(this);\n\t    uriTF.getActualField().ui().focus();\n\t    //(<UI.TextField>resourceTypeProp).hideLabel();\n\t    if (!parentsPath) {\n\t        uriTF.hideLabel();\n\t    }\n\t    else {\n\t        uriTF.makeLabelNextToField();\n\t    }\n\t}\n\texports.newResource = newResource;\n\tfunction newNode(parent, title, property, key) {\n\t    if (key === void 0) { key = \"key\"; }\n\t    var name = \"\", type = \"\";\n\t    if (parent == null) {\n\t        return;\n\t    }\n\t    if (property == \"body\") {\n\t        key = \"application/json\";\n\t    }\n\t    var stub = stubs.createStub(parent, property, key);\n\t    var item = details2.buildItem(stub, true);\n\t    item.setTitle(title);\n\t    var panel = item.render({ showDescription: true });\n\t    panel.margin(8, 8, 8, 8);\n\t    _dialog(panel, function () {\n\t        stub._parent = null;\n\t        stub.lowLevel()._unit = null;\n\t        parent.add(stub);\n\t        editorTools.updateAndSelect(stub);\n\t        return true;\n\t    }, null)(this);\n\t}\n\texports.newNode = newNode;\n\tfunction traitsEditDialog(name, values, node, onDone) {\n\t    var toPropagate = svMap(node, name);\n\t    var tabs = new UI.TabFolder();\n\t    var sel = UI.vc(UI.h3(\"Enabled traits: \")).margin(10, 10, 0, 0);\n\t    tabs.margin(0, 0, 20, 10);\n\t    tabs.add(\"Traits\", UI.Icon.FILE_SUBMODULE, sel);\n\t    var traitProperty = node.definition().property(name);\n\t    var ui = {};\n\t    var index = 0;\n\t    var returnv = node.root().elementsOfKind('traits').map(function (trait) {\n\t        var traitName = trait.name();\n\t        var traitValue = rp.utils.genStructuredValue(traitName, node, traitProperty);\n\t        var traitNode = (typeof traitValue === \"object\") ? traitValue.toHighLevel() : null;\n\t        if (traitNode && traitNode.definition().allProperties().length == 0)\n\t            traitValue = traitName;\n\t        var returnee = {\n\t            index: index,\n\t            name: traitName,\n\t            value: traitValue,\n\t            enabled: values.filter(function (x) { return getStringValue(x) == traitName; }).length > 0\n\t        };\n\t        propagateValues(traitNode, toPropagate);\n\t        var tcb = UI.checkBox(returnee.name, function (e) {\n\t            returnee.enabled = tcb.getValue();\n\t            tabs.toggle(1 + returnee.index, returnee.enabled);\n\t        });\n\t        tcb.margin(12, 12);\n\t        tcb.setValue(returnee.enabled);\n\t        sel.addChild(tcb);\n\t        var traitPanel = UI.vc();\n\t        traitPanel.margin(8, 8, 20, 8);\n\t        details.updateDetailsPanel(traitNode, traitPanel);\n\t        tabs.add(traitName, UI.Icon.CIRCUIT_BOARD, traitPanel);\n\t        tabs.toggle(1 + index, returnee.enabled);\n\t        index += 1;\n\t        return returnee;\n\t    });\n\t    var panel = UI.section(\"Editing trait value `\" + name + \"`:\", UI.Icon.CIRCUIT_BOARD, null, null, tabs);\n\t    return _dialog(panel, function () { onDone(returnv); return true; });\n\t}\n\texports.traitsEditDialog = traitsEditDialog;\n\tfunction getNewSchemaPath(schema) {\n\t    return path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath()) + '/' + (schema.length > 0 ? schema + '.raml' : \"\");\n\t}\n\tfunction schemaText(nameOrValue) {\n\t    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n\t    return schema ? schema.value().value() : \"\";\n\t}\n\tfunction schemaEditDialog(name, value, onDone) {\n\t    var NEW_SCHEMA = \"(New Schema)\";\n\t    var schemas = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }); // list of all available schema names\n\t    var refValue = schemas.indexOf(value) >= 0;\n\t    var text = refValue ? _schemaText(value) : value;\n\t    var sname = refValue ? value : \"\";\n\t    var timeout = 0;\n\t    var editor = smallEditor(function (e, v) { timeout = 0; });\n\t    var preview = schemaUI._schemaPreview();\n\t    var intervalId = setInterval(function () {\n\t        if (timeout++ < 5)\n\t            return;\n\t        timeout = 0;\n\t        schemaUI._updatePreview(preview, editor.getValue());\n\t    }, 100);\n\t    var select = new UI.SelectField('Select schema: ', function (e, v) {\n\t        sname = v;\n\t        text = schemaText(v);\n\t        _updateEditor(editor, text);\n\t    });\n\t    select.getActualField().setOptions([NEW_SCHEMA].concat(schemas));\n\t    select.setPercentWidth(100);\n\t    if (refValue)\n\t        select.getActualField().setValue(sname);\n\t    _updateEditor(editor, text);\n\t    var tabs = new UI.TabFolder();\n\t    tabs.add(\"Write\", UI.Icon.FILE_TEXT, editor);\n\t    tabs.add(\"Preview\", UI.Icon.GIT_MERGE, preview);\n\t    var panel = UI.section(\"Editing schema value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, select, tabs);\n\t    var NoSchema = function () {\n\t        showError(\"No schema entered\", \"Please enter a valid schema or select one from the list before proceeding.\");\n\t        return false;\n\t    };\n\t    var InvalidSchema = function () {\n\t        showError(\"Invalid schema\", \"Please fix the errors in the schema before saving it.\");\n\t        return false;\n\t    };\n\t    return _dialog2(panel, [\n\t        {\n\t            name: \"Save as reference\",\n\t            highlight: UI.ButtonHighlights.INFO,\n\t            action: function () {\n\t                var newText = editor.getValue();\n\t                var isChanged = (text != newText);\n\t                if (!isChanged && sname == NEW_SCHEMA)\n\t                    return NoSchema();\n\t                else if (validateSchema(newText) == false)\n\t                    return InvalidSchema();\n\t                if (isChanged) {\n\t                    var res = saveSchema(sname, newText);\n\t                    if (res) {\n\t                        onDone(res);\n\t                        clearInterval(intervalId);\n\t                        return true;\n\t                    }\n\t                    else\n\t                        return false;\n\t                }\n\t                else {\n\t                    onDone(sname);\n\t                    clearInterval(intervalId);\n\t                    return true;\n\t                }\n\t            }\n\t        },\n\t        {\n\t            name: \"Save as text\",\n\t            highlight: UI.ButtonHighlights.WARNING,\n\t            action: function () {\n\t                var newText = editor.getValue();\n\t                var isChanged = (text != newText);\n\t                if (newText == \"\")\n\t                    return NoSchema();\n\t                else if (validateSchema(newText) == false)\n\t                    return InvalidSchema();\n\t                select.getActualField().setValue(NEW_SCHEMA);\n\t                sname = \"Untitled\";\n\t                onDone(newText);\n\t                clearInterval(intervalId);\n\t                return true;\n\t            }\n\t        },\n\t        {\n\t            name: \"Cancel\",\n\t            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n\t            action: function () { clearInterval(intervalId); return true; }\n\t        }\n\t    ]);\n\t}\n\texports.schemaEditDialog = schemaEditDialog;\n\tfunction _updateEditor(editor, value) {\n\t    var schema = rp.schema.createSchema(value, null);\n\t    var schemaType = (schema == null || schema.getType == null) ? \"text/plain\" : schema.getType();\n\t    editor.setGrammar(schemaType);\n\t    editor.setText(value);\n\t}\n\texports._updateEditor = _updateEditor;\n\tfunction validateSchema(schema) {\n\t    return true;\n\t}\n\tfunction saveSchema(name, value) {\n\t    var schema = rp.schema.createSchema(value, null);\n\t    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n\t    var projectFolder = path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath());\n\t    var ext;\n\t    var filter;\n\t    switch (schema.getType()) {\n\t        case 'source.json':\n\t            filter = [filterJSON];\n\t            ext = \".json\";\n\t            break;\n\t        case 'text.xml':\n\t            filter = [filterXML];\n\t            ext = \".xsd\";\n\t            break;\n\t        default:\n\t            filter = [];\n\t    }\n\t    var result = dialog.showSaveDialog(remote.getCurrentWindow(), {\n\t        title: 'Save schema',\n\t        defaultPath: path.resolve(projectFolder, \"schemas\", name + ext),\n\t        filters: filter\n\t    });\n\t    if (result == null)\n\t        return null;\n\t    var fname = path.basename(result);\n\t    var ename = path.extname(fname);\n\t    var sname = fname.substr(0, fname.indexOf(ename));\n\t    var rpath = path.relative(projectFolder, result);\n\t    if (editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }).indexOf(sname) == -1)\n\t        assistUtils.createGlobalSchemaFromNameAndContent(editorTools.aquireManager().ast.root(), sname, rpath, value, result);\n\t    return sname;\n\t}\n\tfunction markdown(name, values, onDone) {\n\t    var editor = new UI.AtomEditorElement(values.join('\\n'), function (e) { });\n\t    editor.margin(0, 0, 6, 12);\n\t    editor.setMini(false);\n\t    editor.setGrammar('source.gfm');\n\t    var panel = UI.section(\"Editing markdown value `\" + name + '`:', UI.Icon.FILE_TEXT, false, false, UI.h3(\"Please note that lines might be long enough so window would scroll.\").margin(0, 0, 20, 0), editor);\n\t    return _dialog(panel, function () { onDone(editor.getBinding().get()); return true; }, editor);\n\t}\n\texports.markdown = markdown;\n\tfunction exampleEditorDialog(name, rpath, value, onDone) {\n\t    var editor = smallEditor(function (e, v) {\n\t        if (v.indexOf('xml') > 0)\n\t            editor.setGrammar('text.xml');\n\t        else\n\t            editor.setGrammar('source.json');\n\t    });\n\t    editor.setText(value);\n\t    var projectPath = path.dirname(editorTools.aquireManager().getPath());\n\t    var refPath = new UI.TextField(\"Referenced from\", rpath, function (e, v) { return rpath = v; }, null, \"No reference path provided\");\n\t    refPath.addChild(new UI.Button(\"Browse\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.NO_HIGHLIGHT, null, function () {\n\t        var res = UI.fdUtils.openFileDialogModal(\"Open a reference\", path.resolve(projectPath, rpath), []);\n\t        if (!res)\n\t            return;\n\t        refPath.getActualField().setText(path.relative(projectPath, rpath = res[0]));\n\t        value = fs.readFileSync(res[0]).toString(\"UTF-8\");\n\t        editor.setText(value);\n\t    }).margin(4, 0));\n\t    var reui = refPath.getActualField().ui();\n\t    reui.onclick = function (e) {\n\t        reui.blur();\n\t        if (reui.nextSibling['onclick'])\n\t            reui.nextSibling['onclick'](e);\n\t    };\n\t    var refFrom = UI.vc(UI.h3(\"Referenced\"));\n\t    var panel = UI.section(\"Editing example value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, refPath.margin(12, 12, 20, 12), editor.margin(12, 12, 20, 12));\n\t    return _dialog2(panel, [\n\t        {\n\t            name: \"Save as reference\",\n\t            highlight: UI.ButtonHighlights.INFO,\n\t            action: function () {\n\t                var newText = editor.getValue();\n\t                if ((value != newText)) {\n\t                    var res = saveExample(path.resolve(projectPath, rpath), newText);\n\t                    if (res) {\n\t                        onDone(path.relative(projectPath, res));\n\t                        return true;\n\t                    }\n\t                    else\n\t                        return false;\n\t                }\n\t                else {\n\t                    onDone(rpath);\n\t                    return true;\n\t                }\n\t            }\n\t        },\n\t        {\n\t            name: \"Save as text\",\n\t            highlight: UI.ButtonHighlights.WARNING,\n\t            action: function () { return onDone(editor.getValue()) == undefined || true; }\n\t        },\n\t        {\n\t            name: \"Cancel\",\n\t            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n\t            action: function () { return true; }\n\t        }\n\t    ]);\n\t}\n\texports.exampleEditorDialog = exampleEditorDialog;\n\tvar mdp = null;\n\tfunction _closeDialog() {\n\t    _dialogPanels.pop();\n\t    if (_dialogPanels.length == 0)\n\t        mdp.destroy();\n\t    else\n\t        mdp = atom.workspace.addModalPanel({ item: _dialogPanels[_dialogPanels.length - 1].ui() });\n\t}\n\tfunction saveExample(filePath, value) {\n\t    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n\t    var ext = value.indexOf('xml') < 0 ? 'json' : 'xml';\n\t    var filename = UI.fdUtils.saveFileDialogModal('Save an example', filePath, [filterJSON, filterXML, filterAll]);\n\t    if (filename)\n\t        fs.writeFileSync(filename, value);\n\t    return filename;\n\t}\n\tfunction _dialog2(panel, actions, toFocus, stretch) {\n\t    if (stretch === void 0) { stretch = false; }\n\t    var buttonBar = UI.hc().setPercentWidth(100);\n\t    actions.reverse().forEach(function (a) {\n\t        var button = UI.button(a.name, UI.ButtonSizes.NORMAL, a.highlight, UI.Icon.NONE, function (x) { if (a.action())\n\t            _closeDialog(); });\n\t        if (a.isPrimary) {\n\t            var st = panel.getBinding().status();\n\t            if (st) {\n\t                if (st.code == UI.StatusCode.ERROR) {\n\t                    button.setDisabled(true);\n\t                }\n\t            }\n\t            panel.getBinding().addStatusListener(function (x) {\n\t                var st = panel.getBinding().status();\n\t                if (st) {\n\t                    if (st.code != UI.StatusCode.ERROR) {\n\t                        button.setDisabled(false);\n\t                    }\n\t                    else {\n\t                        button.setDisabled(true);\n\t                    }\n\t                }\n\t            });\n\t        }\n\t        button.setStyle(\"float\", \"right\")\n\t            .margin(4, 10);\n\t        buttonBar.addChild(button);\n\t    });\n\t    panel.addChild(buttonBar);\n\t    var ui = panel.ui();\n\t    return function (e) {\n\t        _dialogPanels.push(panel);\n\t        var eventListener = function () {\n\t            if (!stretch) {\n\t                return;\n\t            }\n\t            var parent = ui.parentElement;\n\t            var height = document.body.clientHeight;\n\t            if (!parent) {\n\t                return;\n\t            }\n\t            var style = window.getComputedStyle(parent);\n\t            [\"paddingBottom\", \"paddingTop\", \"marginBottom\", \"marginTop\"].forEach(function (property) {\n\t                height -= parseFloat(style[property] || 0);\n\t            });\n\t            ui.style.height = height + \"px\";\n\t            ui.style.overflowY = \"scroll\";\n\t        };\n\t        window.addEventListener('resize', eventListener);\n\t        mdp = atom.workspace.addModalPanel({ item: ui });\n\t        mdp.onDidDestroy(function () {\n\t            window.removeEventListener('resize', eventListener);\n\t        });\n\t        eventListener();\n\t        if (toFocus)\n\t            toFocus.ui().focus();\n\t    };\n\t}\n\tfunction msg(m) {\n\t    showError(m, \"\");\n\t}\n\texports.msg = msg;\n\tfunction smallEditor(onChange) {\n\t    if (!onChange)\n\t        onChange = function (e, v) { };\n\t    var editor = new UI.AtomEditorElement(\"\", onChange);\n\t    editor.setMini(false);\n\t    editor.setStyle(\"height\", \"400px\");\n\t    editor.setStyle(\"border\", \"solid\");\n\t    editor.setStyle(\"border-width\", \"1px\");\n\t    return editor;\n\t}\n\texports.smallEditor = smallEditor;\n\tfunction _schemaText(nameOrValue) {\n\t    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n\t    return schema ? schema.value().value() : \"\";\n\t}\n\tfunction _dialog(panel, onDone, toFocus, stretch) {\n\t    if (stretch === void 0) { stretch = false; }\n\t    return _dialog2(panel, [\n\t        { name: \"Ok\", isPrimary: true, highlight: UI.ButtonHighlights.PRIMARY, action: onDone },\n\t        { name: \"Cancel\", highlight: UI.ButtonHighlights.NO_HIGHLIGHT, action: function () { return true; } }\n\t    ], toFocus, stretch);\n\t}\n\t\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar _ = __webpack_require__(26);\n\tvar Opt = __webpack_require__(64);\n\texports.defined = function (x) { return (x !== null) && (x !== undefined); };\n\t/**\n\t * Arrays of Objects are common in RAML08.\n\t * @param x\n\t * @returns {{}}\n\t */\n\tfunction flattenArrayOfObjects(x) {\n\t    var res = {};\n\t    x.forEach(function (v) { return Object.keys(v).forEach(function (k) { return res[k] = v[k]; }); });\n\t    return res;\n\t}\n\texports.flattenArrayOfObjects = flattenArrayOfObjects;\n\tfunction find(xs, f) {\n\t    return new Opt(_.find(xs || [], f));\n\t}\n\texports.find = find;\n\texports.isInstance = function (v, C) { return (v instanceof C) ? [v] : []; };\n\texports.ifInstanceOf = function (v, C, f) { return (v instanceof C) ? f(v) : null; };\n\tfunction toTuples(map) {\n\t    return Object.keys(map).map(function (k) { return [k, map[k]]; });\n\t}\n\texports.toTuples = toTuples;\n\tfunction fromTuples(tuples) {\n\t    var obj = {};\n\t    tuples.forEach(function (x) { return obj[x[0]] = x[1]; });\n\t    return obj;\n\t}\n\texports.fromTuples = fromTuples;\n\texports.collectInstancesOf = function (xs, C) { return tap([], function (res) { return xs.forEach(function (v) { return exports.ifInstanceOf(v, C, function (x) { return res.push(x); }); }); }); };\n\texports.collectInstancesOfInMap = function (map, C) {\n\t    return Object.keys(map).map(function (k) { return [k, map[k]]; }).filter(function (x) { return x[1] instanceof C; }).map(function (x) { return x; });\n\t};\n\texports.asArray = function (v) { return exports.defined(v) ? ((v instanceof Array) ? v : [v]) : []; };\n\texports.shallowCopy = function (obj) { return tap({}, function (copy) { return Object.keys(obj).forEach(function (k) { return copy[k] = obj[k]; }); }); };\n\texports.flatMap = function (xs, f) { return exports.flatten(xs.map(f)); };\n\texports.flatten = function (xss) { return Array.prototype.concat.apply([], xss); };\n\texports.takeWhile = function (xs, f) { return tap([], function (res) {\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (!f(xs[i]))\n\t            break;\n\t        res.push(xs[i]);\n\t    }\n\t}); };\n\tfunction tap(v, f) {\n\t    f(v);\n\t    return v;\n\t}\n\texports.tap = tap;\n\tfunction kv(obj, iter) {\n\t    if (typeof obj === 'object')\n\t        Object.keys(obj).forEach(function (k) { return iter(k, obj[k]); });\n\t}\n\texports.kv = kv;\n\tfunction indexed(objects, key, delKey) {\n\t    if (delKey === void 0) { delKey = false; }\n\t    var obj = {};\n\t    objects.forEach(function (original) {\n\t        var copy = exports.shallowCopy(original);\n\t        if (delKey)\n\t            delete copy[key];\n\t        obj[original[key]] = copy;\n\t    });\n\t    return obj;\n\t}\n\texports.indexed = indexed;\n\tfunction stringEndsWith(str, search) {\n\t    var dif = str.length - search.length;\n\t    return dif >= 0 && str.lastIndexOf(search) === dif;\n\t}\n\texports.stringEndsWith = stringEndsWith;\n\tfunction stringStartsWith(str, search) {\n\t    return str.length - search.length >= 0 && str.substring(0, search.length) === search;\n\t}\n\texports.stringStartsWith = stringStartsWith;\n\tfunction lazypropkeyfilter(k) {\n\t    return k[k.length - 1] == \"_\"; // ends with underscore\n\t}\n\texports.lazypropkeyfilter = lazypropkeyfilter;\n\tfunction lazyprop(obj, key, func) {\n\t    var result, ready = false;\n\t    obj[key] = function () {\n\t        if (!ready) {\n\t            ready = true;\n\t            result = func.apply(obj);\n\t        }\n\t        return result;\n\t    };\n\t}\n\tfunction lazyprops(obj, keyfilter) {\n\t    if (keyfilter === void 0) { keyfilter = lazypropkeyfilter; }\n\t    for (var k in obj) {\n\t        if (keyfilter(k)) {\n\t            exports.ifInstanceOf(obj[k], Function, function (vf) { return (vf.length === 0) ? lazyprop(obj, k, vf) : null; });\n\t        }\n\t    }\n\t}\n\texports.lazyprops = lazyprops;\n\tfunction iff(v, f) {\n\t    if (v !== undefined)\n\t        f(v);\n\t}\n\texports.iff = iff;\n\tfunction isRAMLUrl(str) {\n\t    if (typeof str !== 'string' || str == '')\n\t        return false;\n\t    return stringEndsWith(str, \".raml\");\n\t}\n\texports.isRAMLUrl = isRAMLUrl;\n\tfunction getAllRequiredExternalModulesFromCode(code) {\n\t    var match;\n\t    var mods = [];\n\t    // both quoting styles\n\t    var r1 = new RegExp(\"require\\\\('([^']+)'\\\\)\", \"gi\");\n\t    while (match = r1.exec(code)) {\n\t        mods.push(match[1]);\n\t    }\n\t    var r2 = new RegExp('require\\\\(\"([^\"]+)\"\\\\)', \"gi\");\n\t    while (match = r2.exec(code)) {\n\t        mods.push(match[1]);\n\t    }\n\t    mods = _.unique(mods).filter(function (x) { return x != \"\"; });\n\t    mods.sort();\n\t    return mods;\n\t}\n\texports.getAllRequiredExternalModulesFromCode = getAllRequiredExternalModulesFromCode;\n\texports.serial = (function () { var i = 0; return function () { return i++; }; })();\n\tfunction isEssential(arg) {\n\t    return typeof arg !== 'undefined' && arg != null;\n\t}\n\texports.isEssential = isEssential;\n\tfunction firstToUpper(q) {\n\t    if (q.length == 0) {\n\t        return q;\n\t    }\n\t    return q.charAt(0).toUpperCase() + q.substr(1);\n\t}\n\texports.firstToUpper = firstToUpper;\n\tfunction updateObject(source, target, addNewFields) {\n\t    if (addNewFields === void 0) { addNewFields = false; }\n\t    var keySet = Object.keys(target);\n\t    if (addNewFields) {\n\t        var map = {};\n\t        keySet.forEach(function (x) { return map[x] = true; });\n\t        Object.keys(source).forEach(function (x) { return map[x] = true; });\n\t        keySet = Object.keys(map);\n\t    }\n\t    keySet.forEach(function (x) {\n\t        var value = source[x];\n\t        if (value instanceof Object) {\n\t            if (!target[x]) {\n\t                target[x] = {};\n\t            }\n\t            updateObject(value, target[x], true);\n\t        }\n\t        else if (value != undefined) {\n\t            target[x] = source[x];\n\t        }\n\t    });\n\t}\n\texports.updateObject = updateObject;\n\t;\n\t/**\n\t * In 'str' replace all occurences of 'map' keys to their values.\n\t */\n\tfunction replaceMap(str, map) {\n\t    Object.keys(map).forEach(function (x) { return str = replace(str, x, map[x]); });\n\t    return str;\n\t}\n\texports.replaceMap = replaceMap;\n\t/**\n\t * Replace all occurences of 'x' in 'str' to 'r' without thinking if 'x' can be passed without\n\t * escaping as argument to RegExp constructor\n\t */\n\tfunction replace(str, x, r) {\n\t    var result = '';\n\t    var prev = 0;\n\t    for (var i = str.indexOf(x); i < str.length && i >= 0; i = str.indexOf(x, prev)) {\n\t        result += str.substring(prev, i);\n\t        result += r;\n\t        prev = i + x.length;\n\t    }\n\t    result += str.substring(prev, str.length);\n\t    return result;\n\t}\n\texports.replace = replace;\n\t\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = [\n\t\t{\n\t\t\t\"id\": 31423945,\n\t\t\t\"name\": \"AmazonS3\",\n\t\t\t\"full_name\": \"raml-apis/AmazonS3\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/AmazonS3\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:35Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:35Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:01Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/AmazonS3.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/AmazonS3.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/AmazonS3.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 264,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423955,\n\t\t\t\"name\": \"Box\",\n\t\t\t\"full_name\": \"raml-apis/Box\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Box\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Box\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Box/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Box/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Box/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Box/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Box/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Box/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Box/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Box/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Box/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Box/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Box/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Box/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Box/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Box/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Box/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Box/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Box/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Box/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Box/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Box/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Box/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Box/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Box/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Box/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Box/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Box/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Box/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Box/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Box/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Box/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Box/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Box/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Box/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Box/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Box/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:41Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:41Z\",\n\t\t\t\"pushed_at\": \"2015-07-28T23:37:53Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Box.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Box.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Box.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Box\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 224,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423957,\n\t\t\t\"name\": \"Bufferapp\",\n\t\t\t\"full_name\": \"raml-apis/Bufferapp\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bufferapp\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:42Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:08:44Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:27Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Bufferapp.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Bufferapp.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Bufferapp.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 172,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423973,\n\t\t\t\"name\": \"FuelEconomy\",\n\t\t\t\"full_name\": \"raml-apis/FuelEconomy\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/FuelEconomy\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:49Z\",\n\t\t\t\"pushed_at\": \"2015-04-04T00:32:59Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/FuelEconomy.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/FuelEconomy.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/FuelEconomy.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 172,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423980,\n\t\t\t\"name\": \"GoogleContacts\",\n\t\t\t\"full_name\": \"raml-apis/GoogleContacts\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleContacts\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:52Z\",\n\t\t\t\"updated_at\": \"2015-10-31T15:35:32Z\",\n\t\t\t\"pushed_at\": \"2015-05-21T12:01:57Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleContacts.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleContacts.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleContacts.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 260,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423986,\n\t\t\t\"name\": \"Instagram\",\n\t\t\t\"full_name\": \"raml-apis/Instagram\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Instagram\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Instagram/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Instagram/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Instagram/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Instagram/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Instagram/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Instagram/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Instagram/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Instagram/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Instagram/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Instagram/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Instagram/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Instagram/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Instagram/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Instagram/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Instagram/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Instagram/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Instagram/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Instagram/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Instagram/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Instagram/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Instagram/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Instagram/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Instagram/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:56Z\",\n\t\t\t\"updated_at\": \"2015-09-08T12:55:09Z\",\n\t\t\t\"pushed_at\": \"2015-10-14T07:16:39Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Instagram.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Instagram.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Instagram.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 187,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423979,\n\t\t\t\"name\": \"GoogleCalendar\",\n\t\t\t\"full_name\": \"raml-apis/GoogleCalendar\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:51Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:09:48Z\",\n\t\t\t\"pushed_at\": \"2015-05-21T02:57:16Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleCalendar.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 252,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423964,\n\t\t\t\"name\": \"Facebook\",\n\t\t\t\"full_name\": \"raml-apis/Facebook\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Facebook\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Facebook/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Facebook/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Facebook/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Facebook/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Facebook/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Facebook/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Facebook/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Facebook/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Facebook/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Facebook/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Facebook/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Facebook/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Facebook/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Facebook/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Facebook/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Facebook/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Facebook/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Facebook/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Facebook/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Facebook/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Facebook/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Facebook/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Facebook/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:45Z\",\n\t\t\t\"updated_at\": \"2015-10-21T23:11:31Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T13:46:05Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Facebook.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Facebook.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Facebook.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 272,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424019,\n\t\t\t\"name\": \"Stormpath\",\n\t\t\t\"full_name\": \"raml-apis/Stormpath\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stormpath\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stormpath/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stormpath/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stormpath/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stormpath/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stormpath/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stormpath/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stormpath/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stormpath/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stormpath/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stormpath/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stormpath/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stormpath/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stormpath/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stormpath/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stormpath/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stormpath/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:33Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Stormpath.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Stormpath.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Stormpath.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 188,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424034,\n\t\t\t\"name\": \"XKCD\",\n\t\t\t\"full_name\": \"raml-apis/XKCD\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/XKCD\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/XKCD/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/XKCD/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/XKCD/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/XKCD/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/XKCD/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/XKCD/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/XKCD/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/XKCD/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/XKCD/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/XKCD/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/XKCD/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/XKCD/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/XKCD/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/XKCD/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/XKCD/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/XKCD/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/XKCD/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/XKCD/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/XKCD/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/XKCD/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/XKCD/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/XKCD/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/XKCD/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:21Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:53:13Z\",\n\t\t\t\"pushed_at\": \"2015-08-07T05:17:33Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/XKCD.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/XKCD.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/XKCD.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 148,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424012,\n\t\t\t\"name\": \"SlideShare\",\n\t\t\t\"full_name\": \"raml-apis/SlideShare\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/SlideShare\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SlideShare/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SlideShare/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SlideShare/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SlideShare/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SlideShare/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SlideShare/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SlideShare/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SlideShare/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SlideShare/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SlideShare/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SlideShare/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SlideShare/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SlideShare/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SlideShare/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SlideShare/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SlideShare/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:11Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:11Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:13Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/SlideShare.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/SlideShare.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/SlideShare.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424024,\n\t\t\t\"name\": \"Twilio\",\n\t\t\t\"full_name\": \"raml-apis/Twilio\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twilio\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twilio/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twilio/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twilio/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twilio/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twilio/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twilio/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twilio/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twilio/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twilio/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twilio/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twilio/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twilio/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twilio/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twilio/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twilio/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twilio/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twilio/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twilio/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twilio/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twilio/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twilio/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twilio/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twilio/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:16Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:42:14Z\",\n\t\t\t\"pushed_at\": \"2015-08-21T10:07:35Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Twilio.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Twilio.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Twilio.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 340,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424029,\n\t\t\t\"name\": \"WeatherUnderground\",\n\t\t\t\"full_name\": \"raml-apis/WeatherUnderground\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:19Z\",\n\t\t\t\"updated_at\": \"2015-10-31T15:36:51Z\",\n\t\t\t\"pushed_at\": \"2015-07-30T15:19:32Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/WeatherUnderground.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 248,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424039,\n\t\t\t\"name\": \"Zuora\",\n\t\t\t\"full_name\": \"raml-apis/Zuora\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zuora\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zuora/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zuora/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zuora/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zuora/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zuora/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zuora/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zuora/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zuora/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zuora/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zuora/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zuora/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zuora/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zuora/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zuora/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zuora/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zuora/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zuora/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zuora/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zuora/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zuora/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zuora/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zuora/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zuora/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:43:10Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:15:34Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Zuora.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Zuora.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Zuora.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 184,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423938,\n\t\t\t\"name\": \"AccuWeather\",\n\t\t\t\"full_name\": \"raml-apis/AccuWeather\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/AccuWeather\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:24Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:51:18Z\",\n\t\t\t\"pushed_at\": \"2015-11-06T07:20:20Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/AccuWeather.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/AccuWeather.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/AccuWeather.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 278,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424026,\n\t\t\t\"name\": \"Twitch\",\n\t\t\t\"full_name\": \"raml-apis/Twitch\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitch\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitch/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitch/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitch/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitch/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitch/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitch/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitch/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitch/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitch/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitch/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitch/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitch/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitch/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitch/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitch/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitch/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitch/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitch/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitch/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitch/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitch/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitch/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitch/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:17Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:17Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:49Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Twitch.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitch.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Twitch.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423975,\n\t\t\t\"name\": \"Geonames\",\n\t\t\t\"full_name\": \"raml-apis/Geonames\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Geonames\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Geonames/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Geonames/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Geonames/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Geonames/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Geonames/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Geonames/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Geonames/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Geonames/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Geonames/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Geonames/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Geonames/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Geonames/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Geonames/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Geonames/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Geonames/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Geonames/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Geonames/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Geonames/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Geonames/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Geonames/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Geonames/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Geonames/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Geonames/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\t\"updated_at\": \"2015-03-16T03:36:21Z\",\n\t\t\t\"pushed_at\": \"2015-07-24T13:32:52Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Geonames.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Geonames.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Geonames.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 248,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 1,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 1,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 34848402,\n\t\t\t\"name\": \"Uber\",\n\t\t\t\"full_name\": \"raml-apis/Uber\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\t\"description\": \"\",\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Uber\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Uber/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Uber/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Uber/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Uber/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Uber/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Uber/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Uber/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Uber/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Uber/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Uber/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Uber/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Uber/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Uber/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Uber/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Uber/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Uber/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Uber/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Uber/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Uber/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Uber/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Uber/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Uber/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Uber/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Uber/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Uber/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Uber/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Uber/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Uber/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Uber/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Uber/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Uber/releases{/id}\",\n\t\t\t\"created_at\": \"2015-04-30T10:18:59Z\",\n\t\t\t\"updated_at\": \"2015-04-30T10:18:59Z\",\n\t\t\t\"pushed_at\": \"2015-10-15T05:35:23Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Uber.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Uber.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Uber.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 193,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": true,\n\t\t\t\"has_wiki\": true,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 3,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 3,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"staging\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423987,\n\t\t\t\"name\": \"Jira\",\n\t\t\t\"full_name\": \"raml-apis/Jira\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Jira\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Jira/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Jira/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Jira/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Jira/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Jira/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Jira/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Jira/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Jira/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Jira/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Jira/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Jira/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Jira/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Jira/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Jira/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Jira/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Jira/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Jira/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Jira/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Jira/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Jira/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Jira/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Jira/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Jira/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Jira/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Jira/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Jira/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Jira/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Jira/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Jira/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Jira/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Jira/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:57Z\",\n\t\t\t\"updated_at\": \"2015-09-30T16:37:10Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:12:56Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Jira.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Jira.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Jira.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 240,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424011,\n\t\t\t\"name\": \"Slack\",\n\t\t\t\"full_name\": \"raml-apis/Slack\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Slack\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Slack/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Slack/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Slack/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Slack/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Slack/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Slack/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Slack/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Slack/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Slack/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Slack/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Slack/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Slack/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Slack/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Slack/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Slack/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Slack/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Slack/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Slack/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Slack/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Slack/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Slack/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Slack/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Slack/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Slack/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Slack/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Slack/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Slack/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Slack/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Slack/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Slack/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Slack/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:10Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:12:05Z\",\n\t\t\t\"pushed_at\": \"2015-10-14T05:29:57Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Slack.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Slack.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Slack.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 237,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423977,\n\t\t\t\"name\": \"GitHub\",\n\t\t\t\"full_name\": \"raml-apis/GitHub\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GitHub\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GitHub/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GitHub/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GitHub/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GitHub/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GitHub/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GitHub/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GitHub/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GitHub/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GitHub/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GitHub/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GitHub/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GitHub/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GitHub/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GitHub/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GitHub/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GitHub/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GitHub/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GitHub/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GitHub/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GitHub/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GitHub/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GitHub/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GitHub/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:50Z\",\n\t\t\t\"updated_at\": \"2015-11-04T16:18:02Z\",\n\t\t\t\"pushed_at\": \"2015-10-16T09:54:09Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GitHub.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GitHub.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GitHub.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 366,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 2,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 2,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423990,\n\t\t\t\"name\": \"LinkedIn\",\n\t\t\t\"full_name\": \"raml-apis/LinkedIn\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/LinkedIn\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:59Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:11:03Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:13:06Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/LinkedIn.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/LinkedIn.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/LinkedIn.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 184,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424036,\n\t\t\t\"name\": \"Yammer\",\n\t\t\t\"full_name\": \"raml-apis/Yammer\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Yammer\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Yammer/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Yammer/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Yammer/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Yammer/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Yammer/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Yammer/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Yammer/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Yammer/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Yammer/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Yammer/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Yammer/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Yammer/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Yammer/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Yammer/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Yammer/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Yammer/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Yammer/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Yammer/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Yammer/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Yammer/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Yammer/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Yammer/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Yammer/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:22Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:52:23Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:15:18Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Yammer.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Yammer.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Yammer.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 168,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423985,\n\t\t\t\"name\": \"HealthCare\",\n\t\t\t\"full_name\": \"raml-apis/HealthCare\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/HealthCare\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/HealthCare/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/HealthCare/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/HealthCare/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/HealthCare/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/HealthCare/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/HealthCare/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/HealthCare/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/HealthCare/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/HealthCare/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/HealthCare/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/HealthCare/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/HealthCare/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/HealthCare/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/HealthCare/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/HealthCare/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/HealthCare/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:55Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:55Z\",\n\t\t\t\"pushed_at\": \"2015-07-30T16:44:45Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/HealthCare.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/HealthCare.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/HealthCare.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 200,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423954,\n\t\t\t\"name\": \"Blogger\",\n\t\t\t\"full_name\": \"raml-apis/Blogger\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Blogger\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Blogger/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Blogger/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Blogger/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Blogger/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Blogger/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Blogger/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Blogger/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Blogger/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Blogger/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Blogger/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Blogger/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Blogger/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Blogger/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Blogger/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Blogger/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Blogger/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Blogger/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Blogger/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Blogger/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Blogger/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Blogger/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Blogger/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Blogger/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:40Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:40Z\",\n\t\t\t\"pushed_at\": \"2015-05-28T11:21:49Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Blogger.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Blogger.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Blogger.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 200,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 41861038,\n\t\t\t\"name\": \"SalesforceChatter\",\n\t\t\t\"full_name\": \"raml-apis/SalesforceChatter\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\t\"description\": \"\",\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/releases{/id}\",\n\t\t\t\"created_at\": \"2015-09-03T13:24:46Z\",\n\t\t\t\"updated_at\": \"2015-09-03T13:36:51Z\",\n\t\t\t\"pushed_at\": \"2015-10-22T12:08:05Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/SalesforceChatter.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 412,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"RAML\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": true,\n\t\t\t\"has_wiki\": true,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"production\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423959,\n\t\t\t\"name\": \"Elasticsearch\",\n\t\t\t\"full_name\": \"raml-apis/Elasticsearch\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Elasticsearch\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:43Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:43Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:32Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Elasticsearch.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Elasticsearch.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Elasticsearch.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 228,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423981,\n\t\t\t\"name\": \"GoogleDrive\",\n\t\t\t\"full_name\": \"raml-apis/GoogleDrive\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleDrive\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:53Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:53Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:30:50Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleDrive.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleDrive.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleDrive.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 268,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424001,\n\t\t\t\"name\": \"PagerDuty\",\n\t\t\t\"full_name\": \"raml-apis/PagerDuty\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/PagerDuty\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:04Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:43:49Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:37:18Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/PagerDuty.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/PagerDuty.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/PagerDuty.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 232,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424037,\n\t\t\t\"name\": \"Zendesk\",\n\t\t\t\"full_name\": \"raml-apis/Zendesk\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zendesk\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zendesk/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zendesk/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zendesk/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zendesk/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zendesk/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zendesk/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zendesk/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zendesk/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zendesk/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zendesk/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zendesk/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zendesk/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zendesk/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zendesk/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zendesk/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zendesk/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:23Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:51:58Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:15:23Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Zendesk.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Zendesk.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Zendesk.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 320,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423982,\n\t\t\t\"name\": \"GoogleMail\",\n\t\t\t\"full_name\": \"raml-apis/GoogleMail\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleMail\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:54Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:10:17Z\",\n\t\t\t\"pushed_at\": \"2015-10-15T11:27:34Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleMail.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleMail.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleMail.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 208,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423998,\n\t\t\t\"name\": \"NewRelic\",\n\t\t\t\"full_name\": \"raml-apis/NewRelic\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/NewRelic\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/NewRelic/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/NewRelic/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/NewRelic/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/NewRelic/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/NewRelic/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/NewRelic/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/NewRelic/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/NewRelic/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/NewRelic/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/NewRelic/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/NewRelic/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/NewRelic/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/NewRelic/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/NewRelic/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/NewRelic/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/NewRelic/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:02Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:02Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:13:24Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/NewRelic.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/NewRelic.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/NewRelic.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 248,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424027,\n\t\t\t\"name\": \"Twitter\",\n\t\t\t\"full_name\": \"raml-apis/Twitter\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitter\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitter/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitter/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitter/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitter/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitter/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitter/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitter/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitter/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitter/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitter/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitter/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitter/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitter/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitter/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitter/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitter/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitter/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitter/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitter/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitter/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitter/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitter/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitter/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:18Z\",\n\t\t\t\"updated_at\": \"2015-04-28T22:37:52Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:26:44Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Twitter.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitter.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Twitter.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 256,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424038,\n\t\t\t\"name\": \"Zillow\",\n\t\t\t\"full_name\": \"raml-apis/Zillow\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zillow\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zillow/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zillow/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zillow/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zillow/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zillow/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zillow/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zillow/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zillow/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zillow/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zillow/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zillow/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zillow/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zillow/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zillow/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zillow/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zillow/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zillow/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zillow/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zillow/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zillow/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zillow/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zillow/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zillow/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:51:44Z\",\n\t\t\t\"pushed_at\": \"2015-07-24T13:33:15Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Zillow.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Zillow.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Zillow.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 232,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 34780551,\n\t\t\t\"name\": \"FlightStats\",\n\t\t\t\"full_name\": \"raml-apis/FlightStats\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\t\"description\": \"\",\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/FlightStats\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FlightStats/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FlightStats/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FlightStats/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FlightStats/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FlightStats/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FlightStats/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FlightStats/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FlightStats/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FlightStats/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FlightStats/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FlightStats/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FlightStats/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FlightStats/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FlightStats/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FlightStats/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FlightStats/releases{/id}\",\n\t\t\t\"created_at\": \"2015-04-29T08:03:54Z\",\n\t\t\t\"updated_at\": \"2015-04-29T08:03:54Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:10:56Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/FlightStats.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/FlightStats.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/FlightStats.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 460,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": true,\n\t\t\t\"has_wiki\": true,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"staging\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424005,\n\t\t\t\"name\": \"PivotalTracker\",\n\t\t\t\"full_name\": \"raml-apis/PivotalTracker\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/PivotalTracker\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:07Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:07Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:50:22Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/PivotalTracker.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/PivotalTracker.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/PivotalTracker.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 196,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424014,\n\t\t\t\"name\": \"SmartSheet\",\n\t\t\t\"full_name\": \"raml-apis/SmartSheet\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/SmartSheet\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:12Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:12Z\",\n\t\t\t\"pushed_at\": \"2015-05-22T15:01:12Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/SmartSheet.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/SmartSheet.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/SmartSheet.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 224,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424018,\n\t\t\t\"name\": \"StackExchange\",\n\t\t\t\"full_name\": \"raml-apis/StackExchange\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/StackExchange\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/StackExchange/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/StackExchange/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/StackExchange/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/StackExchange/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/StackExchange/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/StackExchange/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/StackExchange/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/StackExchange/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/StackExchange/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/StackExchange/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/StackExchange/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/StackExchange/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/StackExchange/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/StackExchange/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/StackExchange/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/StackExchange/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:28Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/StackExchange.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/StackExchange.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/StackExchange.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424002,\n\t\t\t\"name\": \"Parse\",\n\t\t\t\"full_name\": \"raml-apis/Parse\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Parse\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Parse/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Parse/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Parse/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Parse/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Parse/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Parse/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Parse/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Parse/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Parse/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Parse/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Parse/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Parse/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Parse/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Parse/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Parse/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Parse/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Parse/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Parse/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Parse/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Parse/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Parse/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Parse/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Parse/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Parse/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Parse/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Parse/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Parse/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Parse/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Parse/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Parse/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Parse/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:05Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:05Z\",\n\t\t\t\"pushed_at\": \"2015-07-28T19:32:46Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Parse.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Parse.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Parse.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 224,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423952,\n\t\t\t\"name\": \"Bitly\",\n\t\t\t\"full_name\": \"raml-apis/Bitly\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bitly\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bitly/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bitly/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bitly/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bitly/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bitly/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bitly/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bitly/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bitly/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bitly/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bitly/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bitly/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bitly/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bitly/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bitly/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bitly/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bitly/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bitly/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bitly/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bitly/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bitly/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bitly/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bitly/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bitly/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:08:16Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:12Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Bitly.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Bitly.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Bitly.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 204,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424021,\n\t\t\t\"name\": \"Stripe\",\n\t\t\t\"full_name\": \"raml-apis/Stripe\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stripe\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stripe/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stripe/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stripe/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stripe/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stripe/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stripe/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stripe/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stripe/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stripe/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stripe/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stripe/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stripe/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stripe/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stripe/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stripe/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stripe/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stripe/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stripe/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stripe/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stripe/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stripe/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stripe/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stripe/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:15Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:15Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:38Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Stripe.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Stripe.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Stripe.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 380,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423951,\n\t\t\t\"name\": \"AzureTableStorage\",\n\t\t\t\"full_name\": \"raml-apis/AzureTableStorage\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:39Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:07Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/AzureTableStorage.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 152,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424016,\n\t\t\t\"name\": \"Squareup\",\n\t\t\t\"full_name\": \"raml-apis/Squareup\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Squareup\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Squareup/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Squareup/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Squareup/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Squareup/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Squareup/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Squareup/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Squareup/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Squareup/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Squareup/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Squareup/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Squareup/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Squareup/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Squareup/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Squareup/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Squareup/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Squareup/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Squareup/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Squareup/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Squareup/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Squareup/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Squareup/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Squareup/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Squareup/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:13Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:13Z\",\n\t\t\t\"pushed_at\": \"2015-03-16T16:14:08Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Squareup.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Squareup.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Squareup.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 176,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424009,\n\t\t\t\"name\": \"Salesforce\",\n\t\t\t\"full_name\": \"raml-apis/Salesforce\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Salesforce\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Salesforce/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Salesforce/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Salesforce/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Salesforce/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Salesforce/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Salesforce/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Salesforce/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Salesforce/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Salesforce/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Salesforce/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Salesforce/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Salesforce/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Salesforce/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Salesforce/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Salesforce/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Salesforce/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:09Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:09Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:02Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Salesforce.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Salesforce.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Salesforce.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t}\n\t];\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar rp = __webpack_require__(24);\n\tvar def = rp.ds;\n\tvar UI = __webpack_require__(18);\n\tvar schemautil = rp.schema;\n\tvar editorTools = __webpack_require__(5);\n\tvar details2 = __webpack_require__(61);\n\tvar HTTPANDHTTPS = \"HTTP, HTTPS\";\n\tvar HTTPHTTPS = \"HTTP/HTTPS\";\n\texports.nodes = {\n\t    Api: {\n\t        properties: [\"title\", \"version\", \"baseUri\", \"mediaType\", \"protocols\"],\n\t        actions: []\n\t    },\n\t    Resource: {\n\t        properties: [\"relativeUri\", \"displayName\", \"description\", \"is\", \"type\"]\n\t    },\n\t    Method: {\n\t        properties: [\"method\", \"displayName\", \"description\", \"is\", \"type\", \"protocols\", \"securedBy\"]\n\t    },\n\t    DataElement: {\n\t        properties: [\"name\", \"displayName\", \"description\", \"default\", \"required\"]\n\t    },\n\t    Response: {\n\t        properties: [\"code\", \"description\"]\n\t    }\n\t};\n\texports.filterOut = {\n\t    properties: [\"location\", \"annotations\", \"repeat\", \"locationKind\", \"signature\"]\n\t};\n\t//export function property2(node: hl.IHighLevelNode, name: string, descriptionLabel?: UI.TextElement<any>, updateTextOnDone: boolean = false) {\n\t//    var pinfo = propertyInfo(node, name);\n\t//\n\t//    return property(name, pinfo.required, pinfo.type, pinfo.value, pinfo.values, node, descriptionLabel, updateTextOnDone);\n\t//}\n\tvar focusedPropertyName = null;\n\tvar focusedPosition = -1;\n\tvar toFocus = null;\n\tfunction updateDetailsPanel(node, panel, updateTextOnDone) {\n\t    if (updateTextOnDone === void 0) { updateTextOnDone = false; }\n\t    panel.clear();\n\t    var cfg = atom.config;\n\t    var l = atom.styles.emitter.handlersByEventName;\n\t    var sadd = [].concat(l['did-add-style-element']);\n\t    var sremove = [].concat(l['did-remove-style-element']);\n\t    var schange = [].concat(l['did-update-style-element']);\n\t    var cfgCh = [].concat(cfg.emitter.handlersByEventName['did-change']);\n\t    var grammars = atom.grammars.emitter.handlersByEventName;\n\t    var addGrammar = [].concat(grammars[\"did-add-grammar\"]);\n\t    var updateGrammar = [].concat(grammars[\"did-update-grammar\"]);\n\t    var emptyGrammarListeners = [].concat(atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"]);\n\t    try {\n\t        var empty = true;\n\t        var pcmp = function (a, b) {\n\t            var ap = a.getAdapter(def.RAMLPropertyService).priority(), bp = b.getAdapter(def.RAMLPropertyService).priority();\n\t            if (ap != bp)\n\t                return bp - ap;\n\t            else\n\t                return a.nameId().localeCompare(b.nameId());\n\t        };\n\t        if (false) {\n\t            var info = exports.nodes[node.definition().nameId()];\n\t            info.properties.forEach(function (pn) {\n\t                try {\n\t                    //panel.addChild(property2(node, pn, <UI.TextElement<any>> descLabel2, updateTextOnDone));\n\t                    empty = false;\n\t                }\n\t                catch (e) {\n\t                    console.log(\"Error while updating details panel for node \", node, \"(property \", pn, \"): \", e);\n\t                }\n\t            });\n\t        }\n\t        else {\n\t            var item = details2.buildItem(node, false);\n\t            item.addListener(function (x) {\n\t                editorTools.aquireManager().updateText(null);\n\t            });\n\t            var rend = item.render({});\n\t            //var oldDispose=rend.dispose;\n\t            if (exports.oldItem) {\n\t                exports.oldItem.detach();\n\t            }\n\t            exports.oldItem = item;\n\t            panel.addChild(rend);\n\t            empty = false;\n\t        }\n\t        if (toFocus) {\n\t            var field = toFocus.getActualField().ui();\n\t            field.focus();\n\t            field.getModel().setCursorBufferPosition(focusedPosition);\n\t            toFocus = null;\n\t            focusedPosition = null;\n\t            focusedPropertyName = null;\n\t        }\n\t        if (empty) {\n\t            var errLabel = UI.h3(\"Object `\" + node.name() + \"` has no additional properties.\");\n\t            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n\t            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n\t            panel.addChild(errLabel);\n\t        }\n\t        ;\n\t    }\n\t    finally {\n\t        cfg.emitter.handlersByEventName['did-change'] = cfgCh;\n\t        l['did-add-style-element'] = sadd;\n\t        l['did-remove-style-element'] = sremove;\n\t        l['did-update-style-element'] = schange;\n\t        grammars[\"did-add-grammar\"] = addGrammar;\n\t        grammars[\"did-update-grammar\"] = updateGrammar;\n\t        atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"] = emptyGrammarListeners;\n\t    }\n\t}\n\texports.updateDetailsPanel = updateDetailsPanel;\n\t//export function property(name: string, required: boolean, type: string, value: string, values: any[], node: hl.IHighLevelNode, descriptionLabel: UI.TextElement<any>, updateText: boolean = false) {\n\t//    var bonclick = (e)=>{};\n\t//    var attr = node.attr(name);\n\t//    var useModalEditor = false;\n\t//\n\t//    var tfValue = new UI.BasicBinding(dialogs.getStringValue(value));\n\t//    var updateViewModel = function(value) {\n\t//        if (updateText) editorTools.aquireManager().updateText(node.lowLevel());\n\t//\n\t//        fire = false;\n\t//        if (type==\"protocols\"){\n\t//            if (value==HTTPANDHTTPS){\n\t//                value=HTTPHTTPS\n\t//            }\n\t//        }\n\t//        tfValue.set(value);\n\t//        fire = true;\n\t//    }\n\t//    var disabledMessage: string = null;\n\t//    var res;\n\t//    switch (type) {\n\t//        case 'markdown':\n\t//            bonclick = dialogs.markdown(name, values, (newValue) => {\n\t//                node.attrOrCreate(name).setValue(value = newValue);\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'schema':\n\t//            bonclick = dialogs.schemaEditDialog(name, values.length > 0 ? values[0] : value, (newValue) => {\n\t//                node.attrOrCreate(name).setValue(newValue);\n\t//                if (updateText) editorTools.aquireManager().updateText();\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'schexample':\n\t//            bonclick = dialogs.exampleEditorDialog(name, values[1], values[0], (newValue) => {\n\t//                var value = newValue;\n\t//                if (fs.exists(newValue))\n\t//                    value = \"!include \" + path.relative(node.lowLevel().unit().path(), newValue);\n\t//                node.attrOrCreate(name).setValue(value);\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'enum':\n\t//            bonclick = dialogs.enumEditDialog(name, values, (values)=>{\n\t//                node.attributes(name).forEach(attr => attr.remove());\n\t//                values.forEach(val => node.attrOrCreate(name).addValue(val));\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'protocols':\n\t//            break;\n\t//        case 'type':\n\t//            bonclick = dialogs.typeEditDialog(name, value, node, (newValue) => {\n\t//                node.attrOrCreate(name).setValue(newValue);\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            if (editorTools.aquireManager().ast.elementsOfKind('resourceTypes').length < 1) disabledMessage = \"No resource types defined\";\n\t//            else useModalEditor = true;\n\t//            break;\n\t//        case 'trait':\n\t//            bonclick = dialogs.traitsEditDialog(name, values, node, (newTraits) => {\n\t//                node.attributes(name).forEach(attr => attr.remove());\n\t//\n\t//                newTraits\n\t//                    .filter(trait => trait.enabled)\n\t//                    .filter(trait => typeof trait.value == \"string\") // FIXME should only be trait => trait.enabled\n\t//                    .forEach(trait => node.attrOrCreate(name).addValue(trait.value));\n\t//\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//\n\t//            useModalEditor = true;\n\t//            break;\n\t//        default:\n\t//    }\n\t//\n\t//    var fire = true;\n\t//    var updateValueDeferred = (newValue)=>{ uvdTimeout = 0; }\n\t//\n\t//    if (!useModalEditor && node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node).length > 0 || name == 'code') {\n\t//        var ores = new UI.SelectField(name + (required ? \"*\" : \"\"), (e, v) => {\n\t//            if (fire == false) return;\n\t//            if (v == \"(no value)\") v = \"\";\n\t//            if (type==\"protocols\"){\n\t//                node.attributes(name).forEach(attr => attr.remove());\n\t//                if( v==HTTPHTTPS){\n\t//                    [\"HTTP\",\"HTTPS\"].forEach(val => node.attrOrCreate(name).addValue(val));\n\t//                }\n\t//                else{\n\t//                    if (v) {\n\t//                        node.attrOrCreate(name).setValue(v);\n\t//                    }\n\t//                }\n\t//                updateViewModel(stringView(node, name));\n\t//                return;\n\t//            }\n\t//            updateValueDeferred(v);\n\t//        });\n\t//        var options = [];\n\t//        if (name == 'code')\n\t//            options = Object.keys(dialogs.getStatusCodeDescriptions());\n\t//        else {\n\t//            var enumValues = node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node);\n\t//            options = node.definition().property(name).getAdapter(services.RAMLPropertyService).isKey() ? enumValues : [\"(no value)\"].concat(enumValues);\n\t//\n\t//            if (type=='protocols'){\n\t//                if (tfValue.get()==HTTPANDHTTPS){\n\t//                    tfValue.set(HTTPHTTPS)\n\t//                }\n\t//                options =[\"(no value)\",\"HTTP\",\"HTTPS\",HTTPHTTPS]\n\t//            }\n\t//        }\n\t//\n\t//        ores.getActualField().setOptions(options);\n\t//        ores.setBinding(tfValue);\n\t//\n\t//        res = ores;\n\t//    } else {\n\t//        if (!res) {\n\t//            res = new UI.TextField(name + (required ? \"*\" : \"\"), tfValue, (e, v)=> {\n\t//                if (fire == false) return;\n\t//                if (useModalEditor && res && res.getActualField())\n\t//                    res.getActualField().setText(value, false); // do not re-call onChange\n\t//                else\n\t//                    updateValueDeferred(v);\n\t//            }, null, editorTools.aquireManager().placeholder ? name + \" has no value\" : '');\n\t//            if (name == focusedPropertyName) toFocus = res;\n\t//        }\n\t//    }\n\t//    var uvdTimeout = 12;\n\t//\n\t//    setInterval(()=>{\n\t//        if (uvdTimeout++ != 10) return;\n\t//        var newValue = res.getActualField().getValue();\n\t//        var attrEx = node.attr(name)\n\t//        var attr = node.attrOrCreate(name);\n\t//        attr.setValue(newValue);\n\t//        if (updateText) {\n\t//            if (res instanceof UI.TextField) {\n\t//                focusedPropertyName = name;\n\t//                focusedPosition = (<any> res.getActualField()).ui().getModel().getCursorBufferPosition();\n\t//            }\n\t//            editorTools.aquireManager().updateText(newValue == '' || attr == null ? node.lowLevel() : attr.lowLevel());\n\t//\n\t//        }\n\t//\n\t//    }, 50);\n\t//\n\t//    res.getActualField().addClass(\"ate\").addClass(type).setStyle(\"margin-bottom\", \"0px !important\");\n\t//    res.margin(0, 0, 0, 6);\n\t//    if (useModalEditor) {\n\t//        res.getActualField().ui().addEventListener('focus', (e) => {\n\t//            bonclick(e);\n\t//            res.getActualField().ui().blur();\n\t//        });\n\t//        res.addChild(UI.button(\"(edit)\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, null, bonclick).margin(4, 0, 0, 0));\n\t//    } else if (disabledMessage) {\n\t//        if (editorTools.aquireManager().placeholder) res.getActualField().setPlaceholder(disabledMessage);\n\t//        res.getActualField().ui().addEventListener('focus', (e) => res.getActualField().ui().blur());\n\t//    }\n\t//    if (descriptionLabel) {\n\t//        res.ui().addEventListener('mouseenter', () => {\n\t//            descriptionLabel.setStyle(\"opacity\", \"1\")\n\t//            descriptionLabel.setText(node.definition().property(name).description());\n\t//        });\n\t//        res.ui().addEventListener('mouseleave', () => {\n\t//            descriptionLabel.setStyle(\"opacity\", \"0\");\n\t//        });\n\t//    }\n\t//    return res;\n\t//}\n\tfunction getSchemaType(value) {\n\t    var schema = schemautil.createSchema(value, null);\n\t    if (!schema || !schema.getType)\n\t        return \"Invalid\";\n\t    switch (schema.getType()) {\n\t        case \"source.json\":\n\t            return \"JSON\";\n\t        case \"text.xml\":\n\t            return \"XML\";\n\t        default:\n\t            return \"Unknown type\";\n\t    }\n\t}\n\tfunction getStringValue(x) {\n\t    if (typeof x === \"object\")\n\t        return x.valueName();\n\t    else\n\t        return x;\n\t}\n\texports.getStringValue = getStringValue;\n\tfunction propertyInfo(node, name) {\n\t    var prop = node.definition().property(name);\n\t    if (prop.isValueProperty() == false)\n\t        return null;\n\t    var isMulti = prop.isMultiValue();\n\t    var required = prop.isRequired();\n\t    var value;\n\t    var values = [];\n\t    var type;\n\t    var ipath;\n\t    var rangeName = prop.range().nameId();\n\t    if (isMulti) {\n\t        values = node.attributes(name).map(function (x) { return x.value(); });\n\t        value = values.map(function (x) { return getStringValue(x); }).join(\", \");\n\t        switch (rangeName) {\n\t            case \"StringType\":\n\t                type = 'enum';\n\t                if (!node.definition().getAdapter(def.RAMLService).isUserDefined() && name == \"protocols\") {\n\t                    type = \"protocols\";\n\t                }\n\t                break;\n\t            case \"TraitRef\":\n\t                type = 'trait';\n\t                break;\n\t            default:\n\t                type = 'unknown';\n\t        }\n\t    }\n\t    else {\n\t        var attr = node.attr(name);\n\t        value = attr && attr.value() ? attr.value() : \"\";\n\t        switch (rangeName) {\n\t            case \"MarkdownString\":\n\t                type = 'markdown';\n\t                values = value.split(\"\\n\");\n\t                value = values[0];\n\t                break;\n\t            case \"SchemaString\":\n\t                type = 'schema';\n\t                if (value.indexOf(\"\\n\") >= 0) {\n\t                    values = [value];\n\t                    value = \"(\" + getSchemaType(value) + \" Schema)\";\n\t                }\n\t                break;\n\t            case \"ExampleString\":\n\t                type = 'schexample';\n\t                try {\n\t                    ipath = attr.lowLevel().includePath();\n\t                }\n\t                catch (e) {\n\t                    ipath = \"\";\n\t                }\n\t                values = [value, ipath];\n\t                value = \"Example\" + (ipath != \"\" ? \" (referenced from \" + ipath + \")\" : \"\");\n\t                break;\n\t            case \"ResourceTypeRef\":\n\t                type = \"type\";\n\t                break;\n\t            default:\n\t                type = 'string';\n\t        }\n\t        if (type == \"string\") {\n\t            if (value.indexOf(\"\\n\") >= 0) {\n\t                values = value.split(\"\\n\");\n\t                value = \"(\" + values.length + \" lines) \" + values[0].substring(0, 20) + \" ...\";\n\t                type = \"multiline\";\n\t            }\n\t            if (attr)\n\t                ipath = attr.lowLevel().includePath();\n\t            if (ipath) {\n\t                value = \"(included from \" + ipath + \")\";\n\t                type = \"include\";\n\t            }\n\t        }\n\t    }\n\t    var ret = {\n\t        value: value,\n\t        values: values,\n\t        type: type,\n\t        include: ipath,\n\t        required: required,\n\t    };\n\t    return ret;\n\t}\n\texports.propertyInfo = propertyInfo;\n\tfunction stringView(node, name) {\n\t    return getStringValue(propertyInfo(node, name).value);\n\t}\n\texports.stringView = stringView;\n\t\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar UI = __webpack_require__(18);\n\tvar rp = __webpack_require__(24);\n\tvar Opt = __webpack_require__(64);\n\tvar schemautil = rp.schema;\n\tvar SchemaRenderer = (function () {\n\t    function SchemaRenderer() {\n\t    }\n\t    SchemaRenderer.prototype.render = function (elem) {\n\t        var icon;\n\t        var tc;\n\t        switch (elem.type) {\n\t            case 'object':\n\t                icon = UI.Icon.CIRCUIT_BOARD;\n\t                tc = UI.TextClasses.INFO;\n\t                break;\n\t            case 'array':\n\t                icon = UI.Icon.LIST_UNORDERED;\n\t                tc = UI.TextClasses.ERROR;\n\t                break;\n\t            case 'unspecified':\n\t                icon = UI.Icon.QUESTION;\n\t                tc = UI.TextClasses.WARNING;\n\t                break;\n\t            default:\n\t                icon = UI.Icon.CODE;\n\t                tc = UI.TextClasses.SUCCESS;\n\t        }\n\t        return UI.hc(UI.label(elem.name + \": \", icon), UI.label(elem.type, null, tc, null).pad(4, 0));\n\t    };\n\t    return SchemaRenderer;\n\t})();\n\texports.SchemaRenderer = SchemaRenderer;\n\tfunction _schemaPreview() {\n\t    var hashkey = function (n) {\n\t        if (n == null)\n\t            return \"\";\n\t        return hashkey(n.parent) + \"::[\" + (n.name + \":\" + n.type + \"]\" + (n.children.length > 0 ? \"*\" : \"\"));\n\t    };\n\t    var treeViewer = UI.treeViewer(function (x) { return x.children; }, new SchemaRenderer(), function (x) { return x.name + \":\" + x.type; });\n\t    treeViewer.setComparator(function (x, y) { return x.name == y.name && x.type == y.type; });\n\t    return treeViewer;\n\t}\n\texports._schemaPreview = _schemaPreview;\n\tfunction getSchemaTree(name, contents) {\n\t    if (contents.type instanceof Array)\n\t        if (contents.type.indexOf('object') >= 0)\n\t            contents.type = 'object';\n\t        else if (contents.type.indexOf('array') >= 0)\n\t            contents.type = 'array';\n\t    var typeString = contents.type ? (contents.type instanceof Array ? contents.type.join(\"|\") : contents.type).toLowerCase() : 'unspecified';\n\t    var children = [];\n\t    if (contents.properties)\n\t        children = Object.keys(contents.properties).map(function (el) { return getSchemaTree(el, contents.properties[el]); });\n\t    else if (contents.items)\n\t        children = contents.items instanceof Array ? contents.items.map(function (el) { return getSchemaTree(\"item\", el); }) : getSchemaTree(\"item\", contents.items);\n\t    if (children instanceof Array == false)\n\t        children = [children];\n\t    var result = {\n\t        type: typeString,\n\t        name: name,\n\t        parent: null,\n\t        children: children\n\t    };\n\t    result.children.forEach(function (x) { return x.parent = result; });\n\t    return result;\n\t}\n\texports.getSchemaTree = getSchemaTree;\n\tfunction _updatePreview(treeView, value) {\n\t    try {\n\t        var schema = schemautil.createSchema(value, null);\n\t        if (schema == null || schema.getType == null) {\n\t            treeView.setInput({}, true);\n\t            return;\n\t        }\n\t        var schemaType = schema.getType();\n\t        var schemaModel = schemaType == \"source.json\" ? JSON.parse(value) : rootElements(value);\n\t        var schemaTree = schemaType == \"source.json\" ? getSchemaTree(\"schema\", schemaModel) : getXMLSchemaTree(schemaModel);\n\t        treeView.setInput(schemaTree, true);\n\t    }\n\t    catch (e) {\n\t        console.log(e);\n\t    }\n\t}\n\texports._updatePreview = _updatePreview;\n\tvar jsonix = __webpack_require__(59);\n\tfunction parseSchema(schema) {\n\t    var XSD_1_0 = __webpack_require__(60).XSD_1_0;\n\t    var context = new jsonix.Jsonix.Context([XSD_1_0]);\n\t    var unmarshaller = context.createUnmarshaller();\n\t    var schemaObject = unmarshaller.unmarshalString(schema);\n\t    return schemaObject;\n\t}\n\t;\n\tfunction rootElements(schema) {\n\t    var schemaObj = parseSchema(schema);\n\t    return getRootElements(schemaObj);\n\t}\n\tvar TypeDescription = (function () {\n\t    function TypeDescription(owner, _name, _isSimple, _object) {\n\t        var _this = this;\n\t        this.owner = owner;\n\t        this._name = _name;\n\t        this._isSimple = _isSimple;\n\t        this._object = _object;\n\t        this.name = function () { return _this._name; };\n\t        this.isSimple = function () { return _this._isSimple; };\n\t        this.object = function () { return _this._object; };\n\t    }\n\t    TypeDescription.prototype.isChoice = function () {\n\t        return this.object && (this.object['choice'] ||\n\t            (this.object['complexContent'] && this.object['complexContent']['choice']));\n\t    };\n\t    TypeDescription.prototype.elements = function () {\n\t        var _this = this;\n\t        var elementObjects = [];\n\t        if (this._object) {\n\t            elementObjects = this.collectElements(this._object);\n\t            if (elementObjects.length == 0) {\n\t                var complexContent = this.object['complexContent'];\n\t                if (complexContent) {\n\t                    elementObjects = this.collectElements(complexContent);\n\t                }\n\t            }\n\t        }\n\t        var result = elementObjects.map(function (x) { return new ElementDescription(_this.owner, x); });\n\t        return result;\n\t    };\n\t    TypeDescription.prototype.attributes = function () {\n\t        var _this = this;\n\t        var result = [];\n\t        var objects = [this._object];\n\t        for (var i = 0; i < objects.length; i++) {\n\t            var obj = objects[i];\n\t            if (!obj) {\n\t                continue;\n\t            }\n\t            if (obj['attributeGroup']) {\n\t                var attributeGroups = obj['attributeGroup'].filter(function (x) { return x['otherAttributes']; });\n\t                for (var j = 0; j < attributeGroups.length; j++) {\n\t                    var groupRef = attributeGroups[j]['otherAttributes']['ref'];\n\t                    var groupDef = this.owner.attributeGroups[groupRef];\n\t                    objects.push(groupDef);\n\t                }\n\t            }\n\t            if (obj['attribute']) {\n\t                obj['attribute'].forEach(function (x) { return result.push(new AttributeDescription(_this.owner, x)); });\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    TypeDescription.prototype.base = function () {\n\t        if (!this._object) {\n\t            return Opt.empty();\n\t        }\n\t        var baseObj;\n\t        if (this._object['restriction']) {\n\t            var restriction = this._object['restriction'];\n\t            baseObj = restriction['base'];\n\t        }\n\t        else if (this._object['complexContent']) {\n\t            var complexContent = this.object['complexContent'];\n\t            var resExt = complexContent['restriction'] || complexContent['extension'];\n\t            if (resExt) {\n\t                baseObj = resExt['base'];\n\t            }\n\t        }\n\t        if (!baseObj) {\n\t            return Opt.empty();\n\t        }\n\t        var typeName = extractName(baseObj);\n\t        var isSimple = false;\n\t        var typeObject;\n\t        var sType = this.owner.simpleTypes[typeName];\n\t        if (sType) {\n\t            typeObject = sType;\n\t            isSimple = true;\n\t        }\n\t        var cType = this.owner.complexTypes[typeName];\n\t        if (cType) {\n\t            typeObject = cType;\n\t        }\n\t        if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n\t            if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n\t                isSimple = true;\n\t            }\n\t        }\n\t        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n\t        return new Opt(result);\n\t    };\n\t    TypeDescription.prototype.getBaseName = function () {\n\t        var typeOpt = new Opt(this);\n\t        var result = '';\n\t        while (typeOpt.isDefined()) {\n\t            var t = typeOpt.getOrThrow();\n\t            result = t.name();\n\t            typeOpt = t.base();\n\t        }\n\t        return result;\n\t    };\n\t    TypeDescription.prototype.collectElements = function (obj) {\n\t        var result = [];\n\t        var containers = [obj['sequence'], obj['any'], obj['choice']];\n\t        for (var i = 0; i < containers.length; i++) {\n\t            var x = containers[i];\n\t            if (!x) {\n\t                continue;\n\t            }\n\t            if (x['group']) {\n\t                var groups = x['group'].filter(function (gr) { return gr['otherAttributes']; });\n\t                for (var j = 0; j < groups.length; j++) {\n\t                    var groupRef = groups[j]['otherAttributes']['ref'];\n\t                    var groupDef = this.owner.elementGroups[groupRef];\n\t                    if (groupDef) {\n\t                        if (groupDef['sequence']) {\n\t                            containers = containers.concat(groupDef['sequence']);\n\t                        }\n\t                        if (groupDef['any']) {\n\t                            containers = containers.concat(groupDef['any']);\n\t                        }\n\t                        if (groupDef['choice']) {\n\t                            containers = containers.concat(groupDef['choice']);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (x['element']) {\n\t                result = result.concat(x['element']);\n\t            }\n\t            result = result.concat(this.collectElements(x));\n\t        }\n\t        return result;\n\t    };\n\t    return TypeDescription;\n\t})();\n\tvar PropertyDescription = (function () {\n\t    function PropertyDescription(owner, _object) {\n\t        var _this = this;\n\t        this.owner = owner;\n\t        this._object = _object;\n\t        this.name = function () { return _this._object['name']; };\n\t    }\n\t    PropertyDescription.prototype.type = function () {\n\t        var typeName;\n\t        var typeObject;\n\t        var isSimple = false;\n\t        if (this._object['type']) {\n\t            var typeObj = this._object['type'];\n\t            typeName = extractName(typeObj);\n\t            var sType = this.owner.simpleTypes[typeName];\n\t            if (sType) {\n\t                typeObject = sType;\n\t                isSimple = true;\n\t            }\n\t            var cType = this.owner.complexTypes[typeName];\n\t            if (cType) {\n\t                typeObject = cType;\n\t            }\n\t            if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n\t                if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n\t                    isSimple = true;\n\t                }\n\t            }\n\t        }\n\t        else if (this._object['complexType']) {\n\t            typeObject = this._object['complexType'];\n\t        }\n\t        else if (this._object['simpleType']) {\n\t            typeObject = this._object['simpleType'];\n\t        }\n\t        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n\t        return new Opt(result);\n\t    };\n\t    PropertyDescription.prototype.optional = function () {\n\t        throw new Error(\"This method is abstract.\");\n\t    };\n\t    PropertyDescription.prototype.isArray = function () {\n\t        throw new Error(\"This method is abstract.\");\n\t    };\n\t    PropertyDescription.prototype.isAttribute = function () {\n\t        return false;\n\t    };\n\t    return PropertyDescription;\n\t})();\n\texports.PropertyDescription = PropertyDescription;\n\tvar ElementDescription = (function (_super) {\n\t    __extends(ElementDescription, _super);\n\t    function ElementDescription(owner, object) {\n\t        _super.call(this, owner, object);\n\t    }\n\t    ElementDescription.prototype.isArray = function () {\n\t        var otherAttributes = this._object['otherAttributes'];\n\t        if (!otherAttributes) {\n\t            return false;\n\t        }\n\t        var maxOccurs = otherAttributes['maxOccurs'];\n\t        if (!maxOccurs) {\n\t            return false;\n\t        }\n\t        if (maxOccurs == 'unbounded') {\n\t            return true;\n\t        }\n\t        try {\n\t            var mo = parseInt(maxOccurs);\n\t            return mo > 1;\n\t        }\n\t        catch (e) { }\n\t        return false;\n\t    };\n\t    ElementDescription.prototype.optional = function () {\n\t        var otherAttributes = this._object['otherAttributes'];\n\t        if (!otherAttributes) {\n\t            return true;\n\t        }\n\t        var minOccurs = otherAttributes['minOccurs'];\n\t        if (!minOccurs) {\n\t            return true;\n\t        }\n\t        try {\n\t            var mo = parseInt(minOccurs);\n\t            return mo == 0;\n\t        }\n\t        catch (e) {\n\t        }\n\t        return true;\n\t    };\n\t    return ElementDescription;\n\t})(PropertyDescription);\n\texports.ElementDescription = ElementDescription;\n\tfunction extractName(typeObj) {\n\t    var prefix = typeObj['prefix'];\n\t    var localPart = typeObj['localPart'];\n\t    var typeName = prefix + (prefix.length > 0 ? ':' : '') + localPart;\n\t    return typeName;\n\t}\n\t;\n\tvar AttributeDescription = (function (_super) {\n\t    __extends(AttributeDescription, _super);\n\t    function AttributeDescription(owner, object) {\n\t        _super.call(this, owner, object);\n\t    }\n\t    AttributeDescription.prototype.optional = function () {\n\t        var otherAttributes = this._object['otherAttributes'];\n\t        if (!otherAttributes) {\n\t            return false;\n\t        }\n\t        var use = otherAttributes['use'];\n\t        if (!use) {\n\t            return false;\n\t        }\n\t        return use != 'required';\n\t    };\n\t    AttributeDescription.prototype.isArray = function () {\n\t        return false;\n\t    };\n\t    AttributeDescription.prototype.isAttribute = function () {\n\t        return true;\n\t    };\n\t    return AttributeDescription;\n\t})(PropertyDescription);\n\texports.AttributeDescription = AttributeDescription;\n\tfunction getRootElements(obj) {\n\t    var _this = this;\n\t    var objValue = obj['value'];\n\t    var result = [];\n\t    if (objValue) {\n\t        var groups = objValue['group'];\n\t        if (groups) {\n\t            groups.forEach(function (x) { return _this.elementGroups[x.name] = x; });\n\t        }\n\t        var attributeGroups = objValue['attributeGroup'];\n\t        if (attributeGroups) {\n\t            attributeGroups.forEach(function (x) { return _this.attributeGroups[x.name] = x; });\n\t        }\n\t        var simpleTypes = objValue['simpleType'];\n\t        if (simpleTypes) {\n\t            simpleTypes.forEach(function (x) { return _this.simpleTypes[x.name] = x; });\n\t        }\n\t        var complexTypes = objValue['complexType'];\n\t        if (complexTypes) {\n\t            complexTypes.forEach(function (x) { return _this.complexTypes[x.name] = x; });\n\t        }\n\t        var rootElements = objValue['element'];\n\t        if (rootElements) {\n\t            result = rootElements.map(function (x) { return new ElementDescription(_this, x); });\n\t        }\n\t    }\n\t    return result;\n\t}\n\tvar XSD_2_TS_TYPE_MAP = {\n\t    \"ENTITIES\": \"string\",\n\t    \"ENTITY\": \"string\",\n\t    \"ID\": \"string\",\n\t    \"IDREF\": \"string\",\n\t    \"IDREFS\": \"string\",\n\t    \"language\": \"string\",\n\t    \"Name\": \"string\",\n\t    \"NCName\": \"string\",\n\t    \"NMTOKEN\": \"string\",\n\t    \"NMTOKENS\": \"string\",\n\t    \"normalizedString\": \"string\",\n\t    \"QName\": \"string\",\n\t    \"string\": \"string\",\n\t    \"token\": \"string\",\n\t    \"date\": \"string\",\n\t    \"dateTime\": \"string\",\n\t    \"duration\": \"string\",\n\t    \"gDay\": \"string\",\n\t    \"gMonth\": \"string\",\n\t    \"gMonthDay\": \"string\",\n\t    \"gYear\": \"string\",\n\t    \"gYearMonth\": \"string\",\n\t    \"time\": \"string\",\n\t    \"anyURI\": \"string\",\n\t    \"base64Binary\": \"string\",\n\t    \"hexBinary\": \"string\",\n\t    \"NOTATION\": \"string\",\n\t    \"boolean\": \"boolean\",\n\t    \"double\": \"number\",\n\t    \"float\": \"number\",\n\t    \"byte\": \"number\",\n\t    \"decimal\": \"number\",\n\t    \"int\": \"number\",\n\t    \"integer\": \"number\",\n\t    \"long\": \"number\",\n\t    \"negativeInteger\": \"number\",\n\t    \"nonNegativeInteger\": \"number\",\n\t    \"nonPositiveInteger\": \"number\",\n\t    \"positiveInteger\": \"number\",\n\t    \"short\": \"number\",\n\t    \"unsignedLong\": \"number\",\n\t    \"unsignedInt\": \"number\",\n\t    \"unsignedShort\": \"number\",\n\t    \"unsignedByte\": \"number\"\n\t};\n\tfunction getTSType(xmltype) {\n\t    return XSD_2_TS_TYPE_MAP[xmltype];\n\t}\n\texports.getTSType = getTSType;\n\tfunction getXMLSchemaTree(roots) {\n\t    var getSType = function (type) {\n\t        if (!type)\n\t            return 'Unknown';\n\t        type = type.substr(type.indexOf(':') + 1);\n\t        return getTSType(type);\n\t    };\n\t    return roots.map(function (root) {\n\t        var result;\n\t        var t = root.type().value();\n\t        if (root.isArray())\n\t            result = {\n\t                type: 'Array',\n\t                name: root.name(),\n\t                parent: null,\n\t                children: getXMLSchemaTree(t.elements())\n\t            };\n\t        else if (t.isSimple())\n\t            result = {\n\t                type: getSType(t.name()),\n\t                name: root.name(),\n\t                parent: null,\n\t                children: []\n\t            };\n\t        else\n\t            result = {\n\t                type: 'Object',\n\t                name: root.name(),\n\t                parent: null,\n\t                children: getXMLSchemaTree(t.elements())\n\t            };\n\t        result.children.forEach(function (x) { return x.parent = result; });\n\t        return result;\n\t    });\n\t}\n\t\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar File = (function () {\n\t    function File(path) {\n\t        this.path = path;\n\t    }\n\t    File.prototype.getPath = function () {\n\t        return this.path;\n\t    };\n\t    File.prototype.close = function () { };\n\t    return File;\n\t})();\n\texports.File = File;\n\tfunction watch(path, f) {\n\t    return { close: function () { } };\n\t}\n\texports.watch = watch;\n\t\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mime = __webpack_require__(63);\n\tmime.define({\n\t    'text/xml': ['xml']\n\t});\n\tfunction getEditorById(editorId) {\n\t    var editors = atom.workspace.getTextEditors();\n\t    for (var i = 0; i < editors.length; i++) {\n\t        var editor = editors[i];\n\t        if (String(editor.id) === editorId) {\n\t            return editor;\n\t        }\n\t    }\n\t}\n\texports.getEditorById = getEditorById;\n\tfunction getEditorByPath(path) {\n\t    var editors = atom.workspace.getTextEditors();\n\t    for (var i = 0; i < editors.length; i++) {\n\t        var editor = editors[i];\n\t        if (editor.getPath() === path) {\n\t            return editor;\n\t        }\n\t    }\n\t}\n\texports.getEditorByPath = getEditorByPath;\n\tfunction getGrammerFromMime(mimeType) {\n\t    if (mimeType == null) {\n\t        return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n\t    }\n\t    var extension = mime.extension(mimeType);\n\t    var grammars = atom.grammars.getGrammars();\n\t    for (var i = 0; i < grammars.length; i++) {\n\t        var grammar = grammars[i];\n\t        if (grammar.fileTypes.indexOf(extension) > -1) {\n\t            return grammar;\n\t        }\n\t    }\n\t    return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n\t}\n\texports.getGrammerFromMime = getGrammerFromMime;\n\t/**\n\t * Create an Atom text editor instance for syntax highlighting.\n\t *\n\t * Source: https://github.com/atom/markdown-preview/blob/6d672aca4cff48420977708c31290018622bb166/lib/renderer.coffee#L102-L126\n\t */\n\tfunction codeToEditorElement(code, grammar) {\n\t    var editorElement = document.createElement('atom-text-editor');\n\t    editorElement.setAttributeNode(document.createAttribute('gutter-hidden'));\n\t    editorElement.removeAttribute('tabindex'); // Make read-only.\n\t    var editor = editorElement.getModel();\n\t    editor.getDecorations({ class: 'cursor-line', type: 'line' })[0].destroy();\n\t    editor.setText(code);\n\t    editor.setGrammar(grammar);\n\t    return editorElement;\n\t}\n\texports.codeToEditorElement = codeToEditorElement;\n\t\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar marked = __webpack_require__(65);\n\tvar React = __webpack_require__(46);\n\tvar extend = __webpack_require__(47);\n\tvar classnames = __webpack_require__(66);\n\tvar PureComponent = __webpack_require__(67);\n\tvar pretty = __webpack_require__(68);\n\tvar rp = __webpack_require__(24);\n\tvar highLevelAst = rp.hl;\n\tvar RamlWrapper1 = rp.api10;\n\tvar RamlWrapper08 = rp.api08;\n\tvar atomUtil = __webpack_require__(55);\n\tvar services = rp.ds;\n\tvar BULLET_TEXT = '\\u00b7';\n\tvar METHOD_CLASS_MAP = {\n\t    'get': 'btn-primary',\n\t    'get?': 'btn-primary',\n\t    'post': 'btn-success',\n\t    'post?': 'btn-success',\n\t    'delete': 'btn-error',\n\t    'delete?': 'btn-error',\n\t    'put': 'btn-warning',\n\t    'put?': 'btn-warning',\n\t    'patch': 'btn-info',\n\t    'patch?': 'btn-info'\n\t};\n\t//Methods moved to the parser as: 1) Custom type guards like isApi() for each node interface and 2) RAMLVersion() method for each node.\n\t//\n\t// /**\n\t//  * Returns whether the node is instance of interface by interface name.\n\t//  * DOES NOT CHECK SUPER INTERFACES!\n\t//  * @param node\n\t//  * @param interfaceShortName - interface name, does not include namespace.\n\t//  * @param ramlVersion - optionally also checks if node belongs to \"RAML10\" or \"RAML08\" RAML.\n\t//  * @returns {boolean}\n\t//  */\n\t// function nodeInstanceOf(node : core.BasicNode, interfaceShortName : string, ramlVersion? : string) : boolean {\n\t//   var nodeKind = node.kind();\n\t//\n\t//   if (nodeKind != interfaceShortName) return false;\n\t//\n\t//   if (ramlVersion) {\n\t//     if (ramlVersion != nodeRAMLVersion(node)) return false;\n\t//   }\n\t//\n\t//   return true;\n\t// }\n\t//\n\t// function nodeInstanceOf10(node : core.BasicNode, interfaceShortName : string) {\n\t//   return nodeInstanceOf(node, interfaceShortName, \"RAML10\");\n\t// }\n\t//\n\t// function nodeInstanceOf08(node : core.BasicNode, interfaceShortName : string) {\n\t//   return nodeInstanceOf(node, interfaceShortName, \"RAML08\");\n\t// }\n\t//\n\t// /**\n\t//  * Returns node version.\n\t//  * @param node\n\t//  * @returns {string} : \"RAML10\" for RAML 1.0 and \"RAML08\" for RAML 0.8\n\t//  */\n\t// function nodeRAMLVersion(node : core.BasicNode) : string {\n\t//   return node.highLevel().definition().universe().version();\n\t// }\n\t//\n\tfunction isRAML10(node) {\n\t    return node.RAMLVersion() == \"RAML10\";\n\t}\n\tfunction isRAML08(node) {\n\t    return node.RAMLVersion() == \"RAML08\";\n\t}\n\tvar Console = (function (_super) {\n\t    __extends(Console, _super);\n\t    function Console() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Console.prototype.isSupportedNode = function (node) {\n\t        return !(RamlWrapper1.isObjectTypeDeclaration(node) ||\n\t            RamlWrapper1.isResponse(node) ||\n\t            RamlWrapper1.isTypeDeclaration(node) ||\n\t            RamlWrapper1.isLibrary(node) ||\n\t            RamlWrapper1.isSecuritySchemePart(node) ||\n\t            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n\t            RamlWrapper08.isResponse(node) ||\n\t            RamlWrapper08.isSecuritySchemePart(node) ||\n\t            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper08.isOAuth2SecurityScheme(node));\n\t    };\n\t    Console.prototype.renderNode = function (node) {\n\t        var props = extend(this.props, { node: node });\n\t        if (RamlWrapper1.isTrait(node) ||\n\t            RamlWrapper08.isTrait(node)) {\n\t            return React.createElement(Trait, props);\n\t        }\n\t        if (RamlWrapper1.isResourceType(node) ||\n\t            RamlWrapper08.isResourceType(node)) {\n\t            return React.createElement(ResourceType, props);\n\t        }\n\t        if (RamlWrapper1.isAbstractSecurityScheme(node) ||\n\t            RamlWrapper08.isAbstractSecurityScheme(node) ||\n\t            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n\t            RamlWrapper08.isOAuth2SecurityScheme(node)) {\n\t            return React.createElement(SecurityScheme, props);\n\t        }\n\t        if (RamlWrapper1.isResource(node) ||\n\t            RamlWrapper08.isResource(node)) {\n\t            return React.createElement(Resource, props);\n\t        }\n\t        if (RamlWrapper1.isDocumentationItem(node) ||\n\t            RamlWrapper08.isDocumentationItem(node)) {\n\t            return React.createElement(Documentation, props);\n\t        }\n\t        if (RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n\t            return React.createElement(Method, props);\n\t        }\n\t        if (RamlWrapper1.isApi(node) || RamlWrapper08.isApi(node) ||\n\t            RamlWrapper1.isExtension(node) || RamlWrapper1.isOverlay(node)) {\n\t            return React.createElement(Root, props);\n\t        }\n\t        // Psuedo \"404\" in case a view isn't implemented.\n\t        return React.createElement(Block, null, React.createElement(TitleText, { title: '404' }), React.createElement(Block, null, 'How did you get here? You shouldn\\'t be here! Please ', React.createElement('a', {\n\t            href: 'https://github.com/mulesoft/api-workbench/issues'\n\t        }, 'report me'), '.'), React.createElement(Block, null, React.createElement('strong', null, \"Reference: \" + node.wrapperClassName())));\n\t    };\n\t    Console.prototype.renderBreadcrumb = function (node, renderedNode) {\n\t        var _this = this;\n\t        var parts = [];\n\t        var nodes = [];\n\t        var currentNode = node;\n\t        // Render \"Errors\" as a breadcrumb.\n\t        if (this.props.errors.length) {\n\t            parts.push(React.createElement('span', { key: 'errors' }, 'Errors'));\n\t        }\n\t        else {\n\t            do {\n\t                nodes.unshift(currentNode);\n\t            } while (currentNode = currentNode.parent());\n\t            nodes.forEach(function (node, index) {\n\t                var lastNode = index === nodes.length - 1;\n\t                if (node.getKind() === highLevelAst.NodeKind.NODE &&\n\t                    _this.isSupportedNode(node.wrapperNode()) &&\n\t                    node.wrapperNode() !== renderedNode) {\n\t                    parts.push(React.createElement('a', {\n\t                        key: node.id(),\n\t                        onClick: function () { return _this.props.navigate(node.id()); }\n\t                    }, getNodeLabel(node)));\n\t                }\n\t                else {\n\t                    parts.push(React.createElement('span', { key: \"value\" + index }, getNodeLabel(node)));\n\t                }\n\t                if (!lastNode) {\n\t                    parts.push(React.createElement('span', { key: \"sep\" + index }, \" \" + BULLET_TEXT + \" \"));\n\t                }\n\t            });\n\t        }\n\t        return React.createElement(Block, { className: 'padded', style: { margin: 0, flex: '0 0 auto' } }, parts);\n\t    };\n\t    Console.prototype.getCurrentNode = function () {\n\t        var raml = this.props.raml;\n\t        var state = this.props.state;\n\t        if (!raml) {\n\t            return null;\n\t        }\n\t        if (state.view.id) {\n\t            var idNode = raml.highLevel().findById(state.view.id);\n\t            if (idNode) {\n\t                return idNode;\n\t            }\n\t        }\n\t        return raml.highLevel();\n\t    };\n\t    Console.prototype.wrapBody = function (element) {\n\t        return React.createElement(Block, {\n\t            id: 'raml-console-view',\n\t            className: 'padded',\n\t            style: {\n\t                overflow: 'auto',\n\t                height: '100%'\n\t            }\n\t        }, element);\n\t    };\n\t    Console.prototype.wrapContent = function (breadcrumb, element) {\n\t        return React.createElement(Block, { style: { height: '100%', display: 'flex', flexDirection: 'column' } }, breadcrumb, this.wrapBody(element));\n\t    };\n\t    Console.prototype.render = function () {\n\t        if (!this.props.loaded) {\n\t            return React.createElement(Loading);\n\t        }\n\t        var highLevelNode = this.getCurrentNode();\n\t        if (!highLevelNode) {\n\t            return React.createElement(Block, null, React.createElement(TitleText, { title: 'Unsupported fragment' }), React.createElement(Block, null, 'This type of fragment is not supported. Only APIs, Overlays and Extensions can be displayed.'));\n\t        }\n\t        var node;\n\t        if (this.props.errors.length) {\n\t            return this.wrapBody(React.createElement(Errors, { errors: this.props.errors }));\n\t        }\n\t        if (!highLevelNode.isElement()) {\n\t            var referencedNode = highLevelNode.findReferencedValue();\n\t            if (!referencedNode) {\n\t                return this.wrapContent(this.renderBreadcrumb(highLevelNode), React.createElement(MissingReference, extend(this.props, { highLevelNode: highLevelNode })));\n\t            }\n\t            node = referencedNode.wrapperNode();\n\t        }\n\t        else {\n\t            node = highLevelNode.wrapperNode();\n\t        }\n\t        // Traverse upwards to rendered nodes.\n\t        while (!this.isSupportedNode(node)) {\n\t            node = node.parent();\n\t        }\n\t        return this.wrapContent(this.renderBreadcrumb(highLevelNode, node), this.renderNode(node));\n\t    };\n\t    return Console;\n\t})(PureComponent);\n\texports.Console = Console;\n\tvar Errors = (function (_super) {\n\t    __extends(Errors, _super);\n\t    function Errors() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Errors.prototype.render = function () {\n\t        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Errors' }), React.createElement('ul', null, this.props.errors.map(function (error, index) {\n\t            // TODO(blakeembrey): Use `error.mark` to open text editor to issue.\n\t            return React.createElement('li', { key: index }, error.message);\n\t        })));\n\t    };\n\t    return Errors;\n\t})(PureComponent);\n\tvar Root = (function (_super) {\n\t    __extends(Root, _super);\n\t    function Root() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Root.prototype.render = function () {\n\t        var _this = this;\n\t        var raml = this.props.node;\n\t        return React.createElement('div', null, React.createElement(TitleText, { title: raml.title() }), React.createElement(ResourceTypesAndTraits, this.props), raml.documentation().length ? React.createElement(InsetPanel, null, React.createElement('h3', { style: { marginTop: 0 } }, 'Documentation'), React.createElement('ul', null, raml.documentation().map(function (documentation) {\n\t            var id = documentation.highLevel().id();\n\t            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, documentation.title()));\n\t        }))) : null, React.createElement(ResourceChildren, this.props));\n\t    };\n\t    return Root;\n\t})(PureComponent);\n\tvar MethodButton = (function (_super) {\n\t    __extends(MethodButton, _super);\n\t    function MethodButton() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MethodButton.prototype.render = function () {\n\t        var _this = this;\n\t        var verb = this.props.method.method();\n\t        return React.createElement('div', {\n\t            onClick: function () { return _this.props.navigate(_this.props.method.highLevel().id()); },\n\t            className: classnames('btn inline-block', METHOD_CLASS_MAP[verb])\n\t        }, verb.toUpperCase());\n\t    };\n\t    return MethodButton;\n\t})(PureComponent);\n\tvar MissingReference = (function (_super) {\n\t    __extends(MissingReference, _super);\n\t    function MissingReference() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MissingReference.prototype.render = function () {\n\t        var node = this.props.highLevelNode;\n\t        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Missing Reference' }), 'Unable to resolve reference: ', React.createElement('strong', null, node.id()));\n\t    };\n\t    return MissingReference;\n\t})(PureComponent);\n\t// class GlobalSchema extends PureComponent<NodeProps<RamlWrapper1.GlobalSchema>, {}> {\n\t//\n\t//   render () {\n\t//     var node = this.props.node\n\t//\n\t//     return React.createElement(\n\t//       Block,\n\t//       null,\n\t//       React.createElement(TitleText, { node, title: node.key(), type: 'Schema' }),\n\t//       React.createElement(Markup, { content: node.value().value(), setState: this.props.setState, state: this.props.state })\n\t//     )\n\t//   }\n\t//\n\t// }\n\tvar Loading = (function (_super) {\n\t    __extends(Loading, _super);\n\t    function Loading() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Loading.prototype.render = function () {\n\t        return React.createElement(Block, null, React.createElement('div', {\n\t            className: 'loading-spinner-medium inline-block'\n\t        }), React.createElement('span', {\n\t            className: 'inline-block'\n\t        }, 'Loading RAML\\u2026'));\n\t    };\n\t    return Loading;\n\t})(PureComponent);\n\tvar Trait = (function (_super) {\n\t    __extends(Trait, _super);\n\t    function Trait() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Trait.prototype.render = function () {\n\t        var node = this.props.node;\n\t        var references = node.highLevel().findReferences();\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Trait' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractMethod, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n\t    };\n\t    return Trait;\n\t})(PureComponent);\n\tvar TitleText = (function (_super) {\n\t    __extends(TitleText, _super);\n\t    function TitleText() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TitleText.prototype.render = function () {\n\t        var title = this.props.title;\n\t        return React.createElement('h1', { style: { marginTop: 0 } }, this.props.node ? React.createElement(OpenInEditor, { node: this.props.node }, title) : title, this.props.type ? React.createElement('small', null, \" (\" + this.props.type + \")\") : null);\n\t    };\n\t    return TitleText;\n\t})(PureComponent);\n\tvar SimpleText = (function (_super) {\n\t    __extends(SimpleText, _super);\n\t    function SimpleText() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SimpleText.prototype.render = function () {\n\t        var text = this.props.text;\n\t        if (!text) {\n\t            return null;\n\t        }\n\t        return React.createElement(Block, null, React.createElement('strong', null, this.props.title + \": \"), text);\n\t    };\n\t    return SimpleText;\n\t})(PureComponent);\n\tvar References = (function (_super) {\n\t    __extends(References, _super);\n\t    function References() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    References.prototype.formatNode = function (node) {\n\t        var parts = [];\n\t        do {\n\t            parts.unshift(getNodeLabel(node));\n\t        } while (node = node.parent());\n\t        return parts.join(\" \" + BULLET_TEXT + \" \");\n\t    };\n\t    References.prototype.render = function () {\n\t        var _this = this;\n\t        var references = this.props.references;\n\t        if (!references.length) {\n\t            return null;\n\t        }\n\t        return React.createElement(InsetPanel, null, React.createElement('h3', null, \"References (\" + references.length + \" Found)\"), React.createElement('ul', null, references.map(function (reference) {\n\t            var id = reference.id();\n\t            var parent = reference.parent();\n\t            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(parent.id()); } }, _this.formatNode(parent)));\n\t        })));\n\t    };\n\t    return References;\n\t})(PureComponent);\n\tvar AbstractResource = (function (_super) {\n\t    __extends(AbstractResource, _super);\n\t    function AbstractResource() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AbstractResource.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        var navigate = this.props.navigate;\n\t        var methods = node.methods();\n\t        var uriParameters = node.uriParameters();\n\t        return React.createElement(Block, null, React.createElement(ResourceTypesAndTraits, this.props), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), methods.length ? React.createElement(Block, null, methods.map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })) : null, React.createElement(ParametersBlock, { parameters: uriParameters, title: 'URI Parameters', navigate: navigate }));\n\t    };\n\t    return AbstractResource;\n\t})(PureComponent);\n\tvar ResourceType = (function (_super) {\n\t    __extends(ResourceType, _super);\n\t    function ResourceType() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ResourceType.prototype.render = function () {\n\t        var node = this.props.node;\n\t        var references = node.highLevel().findReferences();\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Resource Type' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractResource, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n\t    };\n\t    return ResourceType;\n\t})(PureComponent);\n\tvar SecurityScheme = (function (_super) {\n\t    __extends(SecurityScheme, _super);\n\t    function SecurityScheme() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SecurityScheme.prototype.render = function () {\n\t        var node = this.props.node;\n\t        var references = node.highLevel().findReferences();\n\t        // TODO(blakeembrey): Render `settings`.\n\t        var displayName = \"\";\n\t        if (isRAML08(node)) {\n\t            displayName = node.name();\n\t        }\n\t        else {\n\t            displayName = node.displayName();\n\t        }\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Security Scheme' }), React.createElement(SimpleText, { title: 'Type', text: node.type() }), React.createElement(SimpleText, { title: 'Display Name', text: displayName }), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), React.createElement(AbstractMethod, extend(this.props, { node: node.describedBy() })), React.createElement(References, { references: references, navigate: this.props.navigate }));\n\t    };\n\t    return SecurityScheme;\n\t})(PureComponent);\n\tvar Resource = (function (_super) {\n\t    __extends(Resource, _super);\n\t    function Resource() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Resource.prototype.render = function () {\n\t        var node = this.props.node;\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.relativeUri().value(), type: 'Resource' }), React.createElement(AbstractResource, this.props), React.createElement(ResourceChildren, this.props));\n\t    };\n\t    return Resource;\n\t})(PureComponent);\n\tvar ParameterInfo = (function (_super) {\n\t    __extends(ParameterInfo, _super);\n\t    function ParameterInfo() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ParameterInfo.prototype.render = function () {\n\t        var node = this.props.node;\n\t        if (node == null) {\n\t            return null;\n\t        }\n\t        var nodeType = node.type();\n\t        if (!nodeType)\n\t            nodeType = \"string\";\n\t        return React.createElement(Block, null, React.createElement(Block, null, React.createElement('span', {\n\t            key: nodeType,\n\t            className: 'highlight',\n\t            style: { marginRight: 5 }\n\t        }, nodeType)));\n\t    };\n\t    return ParameterInfo;\n\t})(PureComponent);\n\tvar TypeInfo = (function (_super) {\n\t    __extends(TypeInfo, _super);\n\t    function TypeInfo() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TypeInfo.prototype.hasNamedSuperTypes = function (type) {\n\t        var superTypes = type.superTypes();\n\t        if (!superTypes)\n\t            return false;\n\t        var namedTypeFound = false;\n\t        superTypes.forEach(function (superType) {\n\t            if (superType.nameId() && superType.nameId().indexOf(\"application/\") != 0)\n\t                namedTypeFound = true;\n\t        });\n\t        return namedTypeFound;\n\t    };\n\t    TypeInfo.prototype.renderDefinition = function (definition, renderNameId) {\n\t        return React.createElement(Block, null, \n\t        // TODO(blakeembrey): Fix `renderNameId` check, currently hacky because\n\t        // the media type is being printed out sometimes.\n\t        renderNameId ? React.createElement(Block, null, React.createElement('span', {\n\t            className: 'highlight'\n\t        }, definition.nameId())) : null, this.hasNamedSuperTypes(definition) ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Super Types:')), definition.superTypes().map(function (x) {\n\t            return React.createElement('span', {\n\t                className: 'highlight',\n\t                style: { marginRight: 5 }\n\t            }, x.nameId());\n\t        })) : null, definition.allProperties().length ? React.createElement(Block, null, React.createElement('h5', null, 'Properties'), definition.allProperties().map(function (property) {\n\t            return React.createElement(Block, { key: property.nameId() }, React.createElement(Block, null, React.createElement('strong', null, property.nameId()), property.isRequired() ? ' (required)' : ''), React.createElement(Block, null, property.description()));\n\t        })) : null, definition.hasUnionInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Left: ')), this.renderDefinition(definition.unionInHierarchy().leftType(), true), React.createElement(Block, null, React.createElement('strong', null, 'Right: ')), this.renderDefinition(definition.unionInHierarchy().rightType(), true)) : null, definition.hasArrayInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Item: ')), this.renderDefinition(definition.arrayInHierarchy().componentType(), true)) : null);\n\t    };\n\t    TypeInfo.prototype.render = function () {\n\t        var node = this.props.node;\n\t        // Array items can be `null`.\n\t        if (node == null) {\n\t            return null;\n\t        }\n\t        var definition = node.runtimeDefinition();\n\t        if (definition && definition.hasGenuineUserDefinedTypeInHierarchy()\n\t            && !definition.isGenuineUserDefinedType()) {\n\t            definition = definition.genuineUserDefinedTypeInHierarchy();\n\t        }\n\t        return React.createElement(Block, null, typeof node.type === 'function' ? React.createElement(Block, null, node.type().map(function (type) {\n\t            return React.createElement('span', {\n\t                key: type,\n\t                className: 'highlight',\n\t                style: { marginRight: 5 }\n\t            }, type);\n\t        })) : null, this.renderDefinition(definition, false));\n\t    };\n\t    return TypeInfo;\n\t})(PureComponent);\n\tvar ParametersBlock = (function (_super) {\n\t    __extends(ParametersBlock, _super);\n\t    function ParametersBlock() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ParametersBlock.prototype.summary = function (param) {\n\t        var parts = [];\n\t        if (RamlWrapper1.isFileTypeDeclaration(param) /*param.wrapperClassName() === 'FileTypeDeclarationImpl'*/) {\n\t            if (param.fileTypes()) {\n\t                parts.push(\"fileTypes: \" + param.fileTypes());\n\t            }\n\t            if (param.minLength()) {\n\t                parts.push(\"minLength: \" + param.minLength());\n\t            }\n\t            if (param.maxLength()) {\n\t                parts.push(\"maxLength: \" + param.maxLength());\n\t            }\n\t        }\n\t        if (RamlWrapper1.isIntegerTypeDeclaration(param) /*param.wrapperClassName() === 'IntegerTypeDeclarationImpl'*/) {\n\t            if (param.minimum() != null) {\n\t                parts.push(\"minimum: \" + param.minimum());\n\t            }\n\t            if (param.maximum() != null) {\n\t                parts.push(\"maximum: \" + param.maximum());\n\t            }\n\t        }\n\t        if (param.required()) {\n\t            parts.push('required');\n\t        }\n\t        return parts.join(', ');\n\t    };\n\t    ParametersBlock.prototype.render = function () {\n\t        var _this = this;\n\t        if (!this.props.parameters.length) {\n\t            return null;\n\t        }\n\t        var navigate = this.props.navigate;\n\t        return React.createElement(Block, null, React.createElement('h3', null, this.props.title), this.props.parameters.map(function (parameter) {\n\t            return React.createElement(Block, { key: parameter.name() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: parameter }, parameter.name())), React.createElement(isRAML10(parameter) ? TypeInfo : ParameterInfo, { node: parameter }), React.createElement(Block, null, React.createElement('strong', null, _this.summary(parameter))), React.createElement(MarkdownBlock, { content: (parameter.description() ? parameter.description().value() : null) }));\n\t        }));\n\t    };\n\t    return ParametersBlock;\n\t})(PureComponent);\n\tvar ResourceChildren = (function (_super) {\n\t    __extends(ResourceChildren, _super);\n\t    function ResourceChildren() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ResourceChildren.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        return React.createElement(Block, null, node.resources().map(function (resource) {\n\t            var id = resource.highLevel().id();\n\t            var children = resource.resources().length;\n\t            return React.createElement(InsetPanel, { key: id }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: resource }, resource.completeRelativeUri()), ' ', children ? React.createElement('small', null, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, \"View \" + children + \" more \" + plural(children, 'resource', 'resources'))) : null), React.createElement(MarkdownBlock, {\n\t                content: (resource.description() ? resource.description().value() : null)\n\t            }), React.createElement(Block, null, resource.methods().map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })));\n\t        }));\n\t    };\n\t    return ResourceChildren;\n\t})(PureComponent);\n\tvar Documentation = (function (_super) {\n\t    __extends(Documentation, _super);\n\t    function Documentation() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Documentation.prototype.render = function () {\n\t        var node = this.props.node;\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.title(), type: 'Documentation' }), React.createElement(MarkdownBlock, { content: (this.props.node.content() ? this.props.node.content().value() : null) }));\n\t    };\n\t    return Documentation;\n\t})(PureComponent);\n\tvar AbstractMethod = (function (_super) {\n\t    __extends(AbstractMethod, _super);\n\t    function AbstractMethod() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AbstractMethod.prototype.renderBody = function (body) {\n\t        // TODO(blakeembrey): Render more properties from `ObjectField`.\n\t        var parts = [];\n\t        //link to open body in the editor\n\t        parts.push(React.createElement('h4', null, React.createElement(OpenInEditor, { node: body }, body.name())));\n\t        //type block for 1.0 raml\n\t        if (isRAML10(body)) {\n\t            parts.push(React.createElement(TypeInfo, { node: body }));\n\t        }\n\t        //if there is schema, we render it\n\t        //TODO for 1.0 case this should be replaced with external type rendering in TypeInfo\n\t        var schemaPart = this.createSchemaPart(body);\n\t        if (schemaPart)\n\t            parts.push(schemaPart);\n\t        //adding examples if available\n\t        parts.push(this.createExampleParts(body));\n\t        return React.createElement(Block, { key: body.name() }, parts);\n\t    };\n\t    AbstractMethod.prototype.exampleToString = function (example) {\n\t        var exampleValue = example.value();\n\t        if (exampleValue == null)\n\t            return null;\n\t        if (typeof (exampleValue) == \"string\") {\n\t            return exampleValue;\n\t        }\n\t        return JSON.stringify(exampleValue, null, 2);\n\t    };\n\t    AbstractMethod.prototype.createExampleParts = function (body) {\n\t        var _this = this;\n\t        if (isRAML10(body)) {\n\t            var bodyType = body;\n\t            var runtimeType = bodyType.runtimeType();\n\t            if (runtimeType) {\n\t                var examples = runtimeType.examples(true);\n\t                if (examples && examples.length > 0) {\n\t                    return examples.map(function (example) {\n\t                        var exampleName = example.name() ? example.name() : \"Example\";\n\t                        var displayName = example.displayName() ? example.displayName() : exampleName;\n\t                        return React.createElement(MarkupBlock, {\n\t                            key: displayName,\n\t                            content: example.asString(),\n\t                            title: \"Example\",\n\t                            name: exampleName,\n\t                            mime: body.name(),\n\t                            setState: _this.props.setState,\n\t                            state: _this.props.state\n\t                        });\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        else if (RamlWrapper08.isBodyLike(body)) {\n\t            var exampleNode = body.example();\n\t            if (!exampleNode)\n\t                return [];\n\t            var exampleContent = exampleNode.value();\n\t            if (!exampleContent)\n\t                return [];\n\t            return [React.createElement(MarkupBlock, {\n\t                    content: exampleContent,\n\t                    title: 'Example',\n\t                    mime: body.name(),\n\t                    setState: this.props.setState,\n\t                    state: this.props.state\n\t                })];\n\t        }\n\t        return [];\n\t    };\n\t    AbstractMethod.prototype.createSchemaPart = function (body) {\n\t        var schemaName = null;\n\t        var schemaContent = null;\n\t        if (RamlWrapper08.isBodyLike(body)) {\n\t            schemaName = body.schema() ? body.schema().value() : \"\";\n\t            //this is probably not an external scheme reference, but inplace schema.\n\t            if (!schemaName || schemaName.indexOf(\"{\") != -1 && schemaName.indexOf(\"}\") != -1)\n\t                schemaName = \"\";\n\t            schemaContent = body.schemaContent();\n\t        }\n\t        else if (isRAML10(body)) {\n\t            var bodyAsType = body;\n\t            if (body.runtimeType() && bodyAsType.runtimeType().hasExternalInHierarchy()) {\n\t                var externalType = bodyAsType.runtimeType().externalInHierarchy();\n\t                if (externalType) {\n\t                    schemaName = body.runtimeType().superTypes() != null && body.runtimeType().superTypes().length == 1 &&\n\t                        body.runtimeType().superTypes()[0].nameId();\n\t                    schemaContent = externalType.schema();\n\t                }\n\t            }\n\t        }\n\t        if (schemaContent) {\n\t            return React.createElement(MarkupBlock, {\n\t                key: undefined,\n\t                content: schemaContent,\n\t                title: 'Schema',\n\t                mime: body.name(),\n\t                name: schemaName,\n\t                setState: this.props.setState,\n\t                state: this.props.state\n\t            });\n\t        }\n\t        return null;\n\t    };\n\t    AbstractMethod.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        var navigate = this.props.navigate;\n\t        if (!node) {\n\t            return null;\n\t        }\n\t        var methodBodies = node.body();\n\t        return React.createElement(Block, null, React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), node.queryParameters().length ? React.createElement(InsetPanel, null, React.createElement(ParametersBlock, {\n\t            parameters: node.queryParameters(),\n\t            title: 'Query Parameters',\n\t            navigate: navigate\n\t        })) : null, React.createElement(ParametersBlock, {\n\t            parameters: node.headers(),\n\t            title: 'Headers',\n\t            navigate: navigate\n\t        }), methodBodies.length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Body'), methodBodies.map(function (body) { return _this.renderBody(body); })) : null, node.responses().length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Responses'), node.responses().map(function (response) {\n\t            return React.createElement(Block, { key: response.code().value() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: response.code() }, response.code().value())), React.createElement(MarkdownBlock, { content: (response.description() ? response.description().value() : null) }), React.createElement(ParametersBlock, {\n\t                parameters: response.headers(),\n\t                title: 'Headers',\n\t                navigate: navigate\n\t            }), response.body().map(function (body) { return _this.renderBody(body); }));\n\t        })) : null);\n\t    };\n\t    return AbstractMethod;\n\t})(PureComponent);\n\tvar Method = (function (_super) {\n\t    __extends(Method, _super);\n\t    function Method() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Method.prototype.render = function () {\n\t        var props = this.props;\n\t        var node = props.node;\n\t        var demo = props.state.view.demo;\n\t        var canDemo = node.parent().wrapperClassName() === 'ResourceImpl';\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.method().toUpperCase(), type: 'Method' }), React.createElement(ResourceTypesAndTraits, props), canDemo ? React.createElement(Block, null, React.createElement('div', {\n\t            className: 'btn btn-primary',\n\t            onClick: function () { return props.navigate({ demo: !demo }); }\n\t        }, demo ? 'Read Documentation' : 'Make an API Request')) : null, canDemo && demo ? React.createElement(MethodDemo, props) : React.createElement(AbstractMethod, props));\n\t    };\n\t    return Method;\n\t})(PureComponent);\n\tvar MethodDemo = (function (_super) {\n\t    __extends(MethodDemo, _super);\n\t    function MethodDemo() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MethodDemo.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        var method = node.method();\n\t        var contentType = this.props.state.body;\n\t        var securityScheme = this.props.state.securityScheme;\n\t        var progress = this.props.pageState.requestProgress;\n\t        var bodies = node.body().map(function (x) { return x.name(); });\n\t        var securitySchemes = node.allSecuredBy().map(function (x) { return x.securityScheme(); });\n\t        var currentSecurityScheme = securitySchemes.filter(function (x) { return x != null && x.name() === securityScheme; })[0];\n\t        if (!this.props.state.bodies || Object.keys(this.props.state.bodies).length === 0) {\n\t            this.props.state.bodies = {};\n\t            node.body().forEach(function (body) {\n\t                var name = body.name();\n\t                var example = body.example() || body.examples()[0];\n\t                example && (_this.props.state.bodies[name] = example.value());\n\t            });\n\t        }\n\t        return React.createElement(Block, null, securitySchemes.length ? React.createElement(Block, null, React.createElement('h3', null, 'Security Scheme'), React.createElement(Block, null, React.createElement('select', {\n\t            onChange: function (e) { return _this.props.setState({ securityScheme: e.target.value }); },\n\t            className: 'form-control',\n\t            value: securityScheme\n\t        }, securitySchemes.map(function (x) {\n\t            var name = x != null ? x.name() : 'null';\n\t            return React.createElement('option', { key: name, value: x == null ? '' : x.name() }, name);\n\t        }))), currentSecurityScheme ? React.createElement(Block, null, React.createElement(EditParameters, {\n\t            title: undefined,\n\t            prefix: \"Security Scheme Query Parameter\",\n\t            parameters: (currentSecurityScheme.describedBy() && currentSecurityScheme.describedBy().queryParameters()) || [],\n\t            values: this.props.state.queryParameters,\n\t            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n\t        }), React.createElement(EditParameters, {\n\t            title: undefined,\n\t            prefix: \"Security Scheme Header\",\n\t            parameters: (currentSecurityScheme.describedBy() && currentSecurityScheme.describedBy().headers()) || [],\n\t            values: this.props.state.headers,\n\t            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n\t        })) : null) : null, React.createElement(EditParameters, {\n\t            title: 'Base URI Parameters',\n\t            prefix: undefined,\n\t            parameters: node.ownerApi().allBaseUriParameters(),\n\t            values: this.props.state.baseUriParameters,\n\t            change: function (name, value) { return _this.props.setParameter('baseUriParameters', name, value); }\n\t        }), null, React.createElement(EditParameters, {\n\t            title: 'URI Parameters',\n\t            prefix: undefined,\n\t            parameters: localParameters(node.parent()),\n\t            values: this.props.state.uriParameters,\n\t            change: function (name, value) { return _this.props.setParameter('uriParameters', name, value); }\n\t        }), React.createElement(EditParameters, {\n\t            title: 'Query Parameters',\n\t            prefix: undefined,\n\t            parameters: node.queryParameters(),\n\t            values: this.props.state.queryParameters,\n\t            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n\t        }), React.createElement(EditParameters, {\n\t            title: 'Headers',\n\t            prefix: undefined,\n\t            parameters: node.headers(),\n\t            values: this.props.state.headers,\n\t            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n\t        }), bodies.length ? React.createElement(Block, null, React.createElement('h3', null, 'Body'), React.createElement(Block, null, React.createElement('select', {\n\t            onChange: function (e) { return _this.props.setState({ body: e.target.value }); },\n\t            className: 'form-control',\n\t            value: contentType || bodies[0]\n\t        }, bodies.map(function (x) { return React.createElement('option', { key: x }, x); }))), React.createElement(TextEditor, {\n\t            mini: false,\n\t            value: this.props.state.bodies[contentType || bodies[0]],\n\t            onChange: function (body) {\n\t                return _this.props.setParameter('bodies', contentType || bodies[0], body);\n\t            }\n\t        })) : null, React.createElement(Block, null, React.createElement('div', {\n\t            className: classnames('btn inline-block', METHOD_CLASS_MAP[method]),\n\t            onClick: function () {\n\t                if (!_this.props.state.body) {\n\t                    _this.props.state.body = contentType || bodies[0];\n\t                }\n\t                return _this.props.execRequest();\n\t            }\n\t        }, method.toUpperCase()), progress == null ? null : React.createElement('progress', {\n\t            style: { marginLeft: 5 },\n\t            className: 'inline-block',\n\t            max: isNaN(progress) ? null : '1',\n\t            value: isNaN(progress) ? null : String(progress)\n\t        })), React.createElement(Response, this.props));\n\t    };\n\t    return MethodDemo;\n\t})(PureComponent);\n\tvar Response = (function (_super) {\n\t    __extends(Response, _super);\n\t    function Response() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Response.prototype.render = function () {\n\t        var error = this.props.pageState.requestError;\n\t        var response = this.props.pageState.requestResponse;\n\t        if (error) {\n\t            return React.createElement(Block, { className: 'text-error' }, error);\n\t        }\n\t        if (response) {\n\t            var mime = getCaseless(response.headers, 'content-type');\n\t            // readonly: boolean\n\t            // grammar: any\n\t            // gutter: boolean\n\t            // mini: boolean\n\t            // value: string\n\t            // placeholder: string\n\t            // onChange: (value: string) => any\n\t            return React.createElement(Block, null, React.createElement('h3', null, 'Response'), React.createElement(Block, null, React.createElement('div', null, React.createElement('strong', null, 'Status Code: '), response.status), React.createElement('div', null, React.createElement('strong', null, 'Status Text: '), response.statusText), React.createElement('div', null, React.createElement('strong', null, 'URL: '), response.url)), React.createElement(Block, null, React.createElement('h4', null, 'Headers'), React.createElement(Block, null, response.rawHeaders.map(function (value, index) {\n\t                if (index % 2 === 0) {\n\t                    return React.createElement('strong', { key: index }, value + \": \");\n\t                }\n\t                return React.createElement('span', { key: index }, value, React.createElement('br'));\n\t            }))), response.body ? React.createElement(Block, null, React.createElement('h4', null, 'Body'), React.createElement(Markup, {\n\t                content: response.body,\n\t                mime: mime,\n\t                setState: this.props.setState,\n\t                state: this.props.state\n\t            })) : null);\n\t        }\n\t        return null;\n\t    };\n\t    return Response;\n\t})(PureComponent);\n\tvar EditParameters = (function (_super) {\n\t    __extends(EditParameters, _super);\n\t    function EditParameters() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    EditParameters.prototype.render = function () {\n\t        var _this = this;\n\t        var values = this.props.values || {};\n\t        var params = this.props.parameters;\n\t        if (!params.length) {\n\t            return null;\n\t        }\n\t        return React.createElement(Block, null, this.props.title ? React.createElement('h3', {\n\t            className: 'sub-title'\n\t        }, this.props.title) : null, params.map(function (parameter) {\n\t            var name = parameter.name();\n\t            var input;\n\t            var value = values[name];\n\t            var label = _this.props.prefix == null ? name : _this.props.prefix + \": \" + name;\n\t            input = React.createElement(TextEditor, {\n\t                mini: true,\n\t                value: value,\n\t                placeholder: parameter.default(),\n\t                onChange: function (value) { return _this.props.change(name, value); }\n\t            });\n\t            return React.createElement(Block, { key: name }, React.createElement('label', null, label, parameter.required() ? ' *' : ''), input);\n\t        }));\n\t    };\n\t    return EditParameters;\n\t})(PureComponent);\n\tvar TextEditor = (function (_super) {\n\t    __extends(TextEditor, _super);\n\t    function TextEditor() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TextEditor.prototype.componentDidMount = function () {\n\t        var editor = this.editor = document.createElement('atom-text-editor');\n\t        this.updateModel(this.props);\n\t        this.refs.container.getDOMNode().appendChild(editor);\n\t    };\n\t    TextEditor.prototype.updateModel = function (props) {\n\t        var editor = this.editor;\n\t        var model = editor.getModel();\n\t        this.cleanup();\n\t        model.setMini(props.mini);\n\t        model.setPlaceholderText(props.placeholder);\n\t        model.setGrammar(props.grammar);\n\t        model.setText(props.value || '');\n\t        if (props.readonly) {\n\t            editor.removeAttribute('tabindex');\n\t        }\n\t        else {\n\t            editor.setAttribute('tabindex', '0');\n\t        }\n\t        if (props.gutter === false) {\n\t            editor.setAttribute('gutter-hidden', '');\n\t        }\n\t        else {\n\t            editor.removeAttribute('gutter-hidden');\n\t        }\n\t        if (props.onChange) {\n\t            this.disposable = model.onDidChange(function () {\n\t                var position = model.cursors[0].getBufferPosition();\n\t                props.onChange(model.getText());\n\t                model.cursors[0].setBufferPosition(position);\n\t            });\n\t        }\n\t    };\n\t    TextEditor.prototype.cleanup = function () {\n\t        if (this.disposable) {\n\t            this.disposable.dispose();\n\t            this.disposable = null;\n\t        }\n\t    };\n\t    TextEditor.prototype.componentWillUnmount = function () {\n\t        this.cleanup();\n\t    };\n\t    TextEditor.prototype.componentDidUpdate = function () {\n\t        this.updateModel(this.props);\n\t    };\n\t    TextEditor.prototype.render = function () {\n\t        return React.createElement('div', { ref: 'container' });\n\t    };\n\t    return TextEditor;\n\t})(PureComponent);\n\tvar MarkupBlock = (function (_super) {\n\t    __extends(MarkupBlock, _super);\n\t    function MarkupBlock() {\n\t        _super.apply(this, arguments);\n\t        this.state = { visible: false };\n\t    }\n\t    MarkupBlock.prototype.render = function () {\n\t        var _this = this;\n\t        if (!this.props.content) {\n\t            return null;\n\t        }\n\t        var visible = this.state.visible;\n\t        return React.createElement(Block, { key: this.props.key }, React.createElement('a', { onClick: function () { return _this.setState({ visible: !visible }); } }, (visible ? 'Hide' : 'Show') + \" \" + this.props.title), this.props.name ? \" (\" + this.props.name + \")\" : null, visible ? React.createElement('div', { style: { marginTop: 5 } }, React.createElement(Markup, this.props)) : null);\n\t    };\n\t    return MarkupBlock;\n\t})(PureComponent);\n\tvar Markup = (function (_super) {\n\t    __extends(Markup, _super);\n\t    function Markup() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Markup.prototype.render = function () {\n\t        var _this = this;\n\t        var grammar = atomUtil.getGrammerFromMime(this.props.mime);\n\t        var content = this.props.content;\n\t        var isXml = grammar.fileTypes.indexOf('xml') > -1 || isXML(content);\n\t        var isJson = grammar.fileTypes.indexOf('json') > -1 || isJSON(content);\n\t        var isCss = grammar.fileTypes.indexOf('css') > -1;\n\t        var canPrettify = isXml || isJson || isCss;\n\t        if (this.props.state.pretty) {\n\t            try {\n\t                if (isXml) {\n\t                    content = pretty.pd.xml(content);\n\t                }\n\t                else if (isJson) {\n\t                    content = pretty.pd.json(content);\n\t                }\n\t                else if (isCss) {\n\t                    content = pretty.pd.css(content);\n\t                }\n\t            }\n\t            catch (e) {\n\t            }\n\t        }\n\t        return React.createElement(Block, null, React.createElement(TextEditor, {\n\t            value: content,\n\t            grammar: grammar,\n\t            readonly: true\n\t        }), canPrettify ? React.createElement(Block, null, React.createElement('label', null, React.createElement('input', {\n\t            type: 'checkbox',\n\t            onChange: function (e) { return _this.props.setState({ pretty: e.target.checked }); },\n\t            checked: this.props.state.pretty,\n\t            style: { marginRight: 5 }\n\t        }), React.createElement('span', null, 'Pretty data'))) : null);\n\t    };\n\t    return Markup;\n\t})(PureComponent);\n\tvar NavigateLabel = (function (_super) {\n\t    __extends(NavigateLabel, _super);\n\t    function NavigateLabel() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    NavigateLabel.prototype.getName = function (node) {\n\t        var value = node.value();\n\t        return typeof value === 'string' ? value : value.valueName();\n\t    };\n\t    NavigateLabel.prototype.render = function () {\n\t        var node = this.props.node;\n\t        // Ignore empty node values.\n\t        if (node.value() == null) {\n\t            return null;\n\t        }\n\t        var navigate = this.props.navigate;\n\t        var title = this.props.title;\n\t        var id = node.highLevel().id();\n\t        return React.createElement('span', {\n\t            className: 'highlight',\n\t            style: {\n\t                margin: '0 5px 5px 0',\n\t                cursor: 'pointer',\n\t                display: 'inline-block'\n\t            },\n\t            onClick: function () { return navigate(id); }\n\t        }, React.createElement('strong', null, title + \": \"), this.getName(node));\n\t    };\n\t    return NavigateLabel;\n\t})(PureComponent);\n\tvar ResourceTypesAndTraits = (function (_super) {\n\t    __extends(ResourceTypesAndTraits, _super);\n\t    function ResourceTypesAndTraits() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ResourceTypesAndTraits.prototype.render = function () {\n\t        var types = [];\n\t        var node = this.props.node;\n\t        var navigate = this.props.navigate;\n\t        if ((RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node))\n\t            && node.type()) {\n\t            types.push(React.createElement(\"NavigateLabel\", { title: 'Type', key: 'type', node: node.type(), navigate: navigate }));\n\t        }\n\t        if (RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node)\n\t            || RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n\t            node.is().forEach(function (is, index) {\n\t                types.push(React.createElement(\"NavigateLabel\", { title: 'Trait', key: \"is:\" + index, node: is, navigate: navigate }));\n\t            });\n\t        }\n\t        node.securedBy().forEach(function (securedBy, index) {\n\t            types.push(React.createElement(\"NavigateLabel\", { title: 'Secured By', key: \"securedBy:\" + index, node: securedBy, navigate: navigate }));\n\t        });\n\t        return React.createElement(Block, null, types);\n\t    };\n\t    return ResourceTypesAndTraits;\n\t})(PureComponent);\n\tvar Block = (function (_super) {\n\t    __extends(Block, _super);\n\t    function Block() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Block.prototype.render = function () {\n\t        return React.createElement('div', extend(this.props, {\n\t            className: classnames(this.props.className, 'block')\n\t        }), this.props.children);\n\t    };\n\t    return Block;\n\t})(PureComponent);\n\tvar InsetPanel = (function (_super) {\n\t    __extends(InsetPanel, _super);\n\t    function InsetPanel() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    InsetPanel.prototype.render = function () {\n\t        return React.createElement(Block, null, React.createElement('atom-panel', null, React.createElement('div', { className: 'padded' }, this.props.children)));\n\t    };\n\t    return InsetPanel;\n\t})(PureComponent);\n\tvar Icon = (function (_super) {\n\t    __extends(Icon, _super);\n\t    function Icon() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Icon.prototype.render = function () {\n\t        return React.createElement('i', {\n\t            className: classnames('icon icon-' + this.props.name, this.props.className)\n\t        });\n\t    };\n\t    return Icon;\n\t})(PureComponent);\n\tvar OpenInEditor = (function (_super) {\n\t    __extends(OpenInEditor, _super);\n\t    function OpenInEditor() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    OpenInEditor.prototype.openInEditor = function (node) {\n\t        var editors = atom.workspace.getTextEditors();\n\t        var path = node.unit().absolutePath();\n\t        var start = node.start();\n\t        // TODO(blakeembrey): Review logic if atom/atom#9258 lands.\n\t        function resolve(editor) {\n\t            var position = editor.getBuffer().positionForCharacterIndex(start);\n\t            editor.setCursorBufferPosition(position);\n\t        }\n\t        var split;\n\t        // Split is disabled for the console, just open it without any bells.\n\t        if (atom.config.get('api-workbench.openConsoleInSplitPane')) {\n\t            // Attempt to render onto the preferred side of the console.\n\t            var panes = atom.workspace.getPanes();\n\t            var activePane = atom.workspace.getActivePane();\n\t            if (panes.length === 1) {\n\t                split = 'left';\n\t                activePane.splitLeft({});\n\t            }\n\t            else {\n\t                split = activePane === panes[0] ? 'right' : 'left';\n\t            }\n\t        }\n\t        atom.workspace.open(path, { searchAllPanes: true, split: split }).then(resolve);\n\t    };\n\t    OpenInEditor.prototype.render = function () {\n\t        var _this = this;\n\t        var lowLevel = this.props.node.highLevel().lowLevel();\n\t        var hasUnit = lowLevel.unit() != null;\n\t        if (!hasUnit) {\n\t            return React.createElement('span', null, this.props.children);\n\t        }\n\t        return React.createElement('a', {\n\t            onClick: function () { return _this.openInEditor(lowLevel); }\n\t        }, this.props.children);\n\t    };\n\t    return OpenInEditor;\n\t})(PureComponent);\n\tvar MarkdownBlock = (function (_super) {\n\t    __extends(MarkdownBlock, _super);\n\t    function MarkdownBlock() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MarkdownBlock.prototype.render = function () {\n\t        var content = this.props.content;\n\t        if (content == null) {\n\t            return null;\n\t        }\n\t        return React.createElement(Block, { dangerouslySetInnerHTML: { __html: marked(content) } });\n\t    };\n\t    return MarkdownBlock;\n\t})(PureComponent);\n\tfunction plural(count, singular, plural) {\n\t    return count === 1 ? singular : plural;\n\t}\n\tfunction getCaseless(obj, key) {\n\t    var keys = Object.keys(obj);\n\t    var match = key.toLowerCase();\n\t    for (var i = 0; i < keys.length; i++) {\n\t        if (keys[i].toLowerCase() === match) {\n\t            return obj[keys[i]];\n\t        }\n\t    }\n\t}\n\tfunction getNodeLabel(node) {\n\t    var name = node.getKind() === highLevelAst.NodeKind.ATTRIBUTE ? node.value() : node.name();\n\t    if (typeof name !== 'string') {\n\t        name = name.valueName();\n\t    }\n\t    if (!name && node.getKind() === highLevelAst.NodeKind.NODE) {\n\t        var wrapper = node.wrapperNode();\n\t        if (RamlWrapper1.isDocumentationItem(wrapper) ||\n\t            RamlWrapper08.isDocumentationItem(wrapper)) {\n\t            return wrapper.title();\n\t        }\n\t        if (RamlWrapper1.isApi(wrapper) || RamlWrapper08.isApi(wrapper) ||\n\t            RamlWrapper1.isExtension(wrapper) || RamlWrapper1.isOverlay(wrapper)) {\n\t            return 'Home';\n\t        }\n\t    }\n\t    return name;\n\t}\n\tfunction isXML(content) {\n\t    if (typeof content !== 'string') {\n\t        return false;\n\t    }\n\t    var trimmed = content.trim();\n\t    if (trimmed.length < 1) {\n\t        return false;\n\t    }\n\t    if (trimmed.charAt(0) === \"<\" && trimmed.charAt(trimmed.length - 1) === \">\") {\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\tfunction isJSON(content) {\n\t    try {\n\t        JSON.parse(content);\n\t        return true;\n\t    }\n\t    catch (exception) {\n\t        return false;\n\t    }\n\t}\n\tfunction localParameters(node) {\n\t    var baseUriParams = node.ownerApi().baseUriParameters().map(function (param) { return param.name(); });\n\t    return filter(node.absoluteUriParameters(), function (param) { return baseUriParams.indexOf(param.name()) < 0; });\n\t}\n\tfunction filter(array, condition) {\n\t    var result = [];\n\t    array.forEach(function (element) { return condition(element) && result.push(element); });\n\t    return result;\n\t}\n\t\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"know-your-http-well\");\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"remote\");\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"jsonix\");\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"w3c-schemas\");\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(17);\n\tvar rp = __webpack_require__(24);\n\tvar def = rp.ds;\n\tvar search = rp.search;\n\tvar _ = __webpack_require__(26);\n\tvar provider = __webpack_require__(7);\n\tvar UI = __webpack_require__(18);\n\tvar contextActions = __webpack_require__(23);\n\tvar suggestions = __webpack_require__(70);\n\tvar universe = rp.universes;\n\tvar universehelpers = rp.universeHelpers;\n\tvar typeDisplay = __webpack_require__(71);\n\tvar defaultValues = __webpack_require__(72);\n\tvar resourceRegistry = rp.utils;\n\tvar Item = (function () {\n\t    function Item(_title, description) {\n\t        if (description === void 0) { description = \"\"; }\n\t        this._title = _title;\n\t        this.description = description;\n\t        this.listeners = [];\n\t    }\n\t    Item.prototype.needsSeparateLabel = function () {\n\t        return false;\n\t    };\n\t    Item.prototype.detach = function () {\n\t        this.dispose();\n\t        this.children().forEach(function (x) { return x.detach(); });\n\t    };\n\t    Item.prototype.addListener = function (r) {\n\t        this.listeners.push(r);\n\t    };\n\t    Item.prototype.removeListener = function (r) {\n\t        this.listeners = this.listeners.filter(function (x) { return x != r; });\n\t    };\n\t    Item.prototype.add = function (i) {\n\t        throw new Error(\"Not supported\");\n\t    };\n\t    Item.prototype.root = function () {\n\t        if (this.parent) {\n\t            return this.parent.root();\n\t        }\n\t        return this;\n\t    };\n\t    Item.prototype.title = function () {\n\t        return this._title;\n\t    };\n\t    Item.prototype.children = function () {\n\t        return [];\n\t    };\n\t    Item.prototype.setDescription = function (desc) {\n\t        this.description = desc;\n\t    };\n\t    Item.prototype.setTitle = function (t) {\n\t        this._title = t;\n\t    };\n\t    Item.prototype.render = function (r) {\n\t        if (r === void 0) { r = {}; }\n\t        throw new Error(\"Not Implemented\");\n\t    };\n\t    Item.prototype.item = function (name) {\n\t        return null;\n\t    };\n\t    Item.prototype.setError = function (text) {\n\t    };\n\t    Item.prototype.clearErrors = function () {\n\t    };\n\t    return Item;\n\t})();\n\texports.Item = Item;\n\tvar TypeDisplayItem = (function (_super) {\n\t    __extends(TypeDisplayItem, _super);\n\t    function TypeDisplayItem(node) {\n\t        _super.call(this, \"Type\", \"\");\n\t        this.node = node;\n\t    }\n\t    TypeDisplayItem.prototype.render = function (r) {\n\t        return typeDisplay.render(this.node);\n\t    };\n\t    TypeDisplayItem.prototype.dispose = function () {\n\t    };\n\t    return TypeDisplayItem;\n\t})(Item);\n\texports.TypeDisplayItem = TypeDisplayItem;\n\tvar Category = (function (_super) {\n\t    __extends(Category, _super);\n\t    function Category() {\n\t        _super.apply(this, arguments);\n\t        this._children = [];\n\t    }\n\t    Category.prototype.add = function (i) {\n\t        i.parent = this;\n\t        this._children.push(i);\n\t    };\n\t    Category.prototype.children = function () {\n\t        return this._children;\n\t    };\n\t    Category.prototype.plainChildren = function () {\n\t        return this._children.filter(function (x) { return !(x instanceof Category); });\n\t    };\n\t    Category.prototype.categories = function () {\n\t        return this._children.filter(function (x) { return (x instanceof Category); });\n\t    };\n\t    Category.prototype.item = function (name) {\n\t        var it;\n\t        this._children.forEach(function (x) {\n\t            if (x.title() == name) {\n\t                it = x;\n\t            }\n\t            var rr = x.item(name);\n\t            if (rr) {\n\t                it = rr;\n\t            }\n\t        });\n\t        return it;\n\t    };\n\t    Category.prototype.render = function (r) {\n\t        var _this = this;\n\t        if (r === void 0) { r = {}; }\n\t        var section = this.createSection(r);\n\t        this._result = section;\n\t        if (this.description && r.showDescription) {\n\t            this.descriptionLabel = UI.label(this.description);\n\t            section.addChild(this.descriptionLabel);\n\t        }\n\t        this.contributeTop(section);\n\t        this.plainChildren().forEach(function (x) { return _this.addChild(section, x); });\n\t        var wrappedChild = this.createWrappedChild(section);\n\t        this.subCategories = wrappedChild;\n\t        var cats = this.categories();\n\t        var remap = {};\n\t        cats.forEach(function (x) { return remap[x.title()] = x; });\n\t        var newCats = [];\n\t        if (remap[\"General\"]) {\n\t            newCats.push(remap[\"General\"]);\n\t            delete remap[\"General\"];\n\t        }\n\t        if (remap[\"Facets\"]) {\n\t            newCats.push(remap[\"Facets\"]);\n\t            delete remap[\"Facets\"];\n\t        }\n\t        for (var c in remap) {\n\t            newCats.push(remap[c]);\n\t        }\n\t        newCats.forEach(function (x) { return _this.addChild(wrappedChild, x); });\n\t        return section;\n\t    };\n\t    Category.prototype.detach = function () {\n\t        _super.prototype.detach.call(this);\n\t        this._result.dispose();\n\t    };\n\t    Category.prototype.createSection = function (r) {\n\t        if (r.showHeader) {\n\t            return new UI.Section(UI.h3(this.title()), false);\n\t        }\n\t        var pnl = new UI.Panel();\n\t        pnl.setCaption(this.title());\n\t        return pnl;\n\t    };\n\t    Category.prototype.createWrappedChild = function (section) {\n\t        return section;\n\t    };\n\t    Category.prototype.addChild = function (section, item) {\n\t        var child = item.render();\n\t        if (section instanceof UI.TabFolder) {\n\t            var tf = section;\n\t            tf.add(child.caption(), UI.Icon.NONE, child);\n\t        }\n\t        else {\n\t            if (item.needsSeparateLabel()) {\n\t                var firstLabel = UI.label(item.title());\n\t                firstLabel.margin(0, 5, 0, 0);\n\t                section.addChild(firstLabel);\n\t                section.addChild(UI.label(item.description));\n\t            }\n\t            section.addChild(child);\n\t        }\n\t    };\n\t    Category.prototype.contributeTop = function (section) {\n\t    };\n\t    Category.prototype.dispose = function () {\n\t    };\n\t    Category.prototype.setError = function (text) {\n\t    };\n\t    Category.prototype.clearErrors = function () {\n\t        this._children.forEach(function (x) { return x.clearErrors(); });\n\t    };\n\t    Category.prototype.update = function (i) {\n\t    };\n\t    return Category;\n\t})(Item);\n\tvar lastSelectedCaption;\n\tvar inRender = false;\n\tvar TopLevelNode = (function (_super) {\n\t    __extends(TopLevelNode, _super);\n\t    function TopLevelNode(node) {\n\t        _super.call(this, node.definition().nameId(), node.definition().description());\n\t        this.node = node;\n\t        this.ep = null;\n\t    }\n\t    TopLevelNode.prototype.detach = function () {\n\t        _super.prototype.detach.call(this);\n\t        this._result.dispose();\n\t    };\n\t    TopLevelNode.prototype.createWrappedChild = function (section) {\n\t        var tf = new UI.TabFolder();\n\t        tf.setOnSelected(function () {\n\t            if (!inRender) {\n\t                lastSelectedCaption = (tf.selectedComponent().caption());\n\t            }\n\t        });\n\t        section.addChild(tf);\n\t        return tf;\n\t    };\n\t    TopLevelNode.prototype.subCategoryByNameOrCreate = function (name) {\n\t        var item = _.find(this.children(), function (x) { return x.title() == name; });\n\t        if (!item) {\n\t            var rs = new Category(name);\n\t            this.add(rs);\n\t            return rs;\n\t        }\n\t        return item;\n\t    };\n\t    TopLevelNode.prototype.addItemToCategory = function (name, it) {\n\t        if (name == null) {\n\t            this._children.push(it);\n\t            it.parent = this;\n\t            return;\n\t        }\n\t        this.subCategoryByNameOrCreate(name).add(it);\n\t    };\n\t    TopLevelNode.prototype.contributeTop = function (section) {\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n\t        this.ep = UI.hc(this.errorLabel);\n\t        this.ep.setDisplay(false);\n\t        section.addChild(this.ep);\n\t    };\n\t    TopLevelNode.prototype.render = function (r) {\n\t        if (r === void 0) { r = {}; }\n\t        inRender = true;\n\t        try {\n\t            var result = _super.prototype.render.call(this, r);\n\t            this._options = r;\n\t            this._panel = result;\n\t            var tf = this.subCategories;\n\t            for (var n = 0; n < tf.tabsCount(); n++) {\n\t                var item = tf.get(n);\n\t                if (item.header == lastSelectedCaption) {\n\t                    tf.setSelectedIndex(n);\n\t                    return result;\n\t                }\n\t            }\n\t            var documentation = \"\";\n\t            if (this.node.property()) {\n\t                documentation = this.node.property().description();\n\t            }\n\t            else {\n\t                documentation = this.node.definition().description();\n\t            }\n\t            if (documentation.length && !r.showDescription) {\n\t                result.addChild(UI.html(\"<hr/>\"));\n\t                result.addChild(UI.label(documentation, UI.Icon.INBOX, UI.TextClasses.SUBTLE));\n\t            }\n\t            this.update(this);\n\t            return result;\n\t        }\n\t        finally {\n\t            inRender = false;\n\t        }\n\t    };\n\t    TopLevelNode.prototype.dispose = function () {\n\t        this.node = null;\n\t    };\n\t    TopLevelNode.prototype.update = function (i) {\n\t        var _this = this;\n\t        //this.listeners.forEach(x=>x(i));\n\t        if (!this._panel) {\n\t            return;\n\t        }\n\t        if (i instanceof PropertyEditorInfo) {\n\t            var prInfo = i;\n\t            if (prInfo.property.getAdapter(def.RAMLPropertyService).isTypeExpr() || prInfo.property.isDescriminator()) {\n\t                rp.utils.updateType(this.node);\n\t                var extras = this.item(\"Facets\");\n\t                if (extras && extras._result) {\n\t                    extras._result.clear();\n\t                }\n\t                var item = buildItem(this.node, false);\n\t                var newExtras = item.item(\"Facets\");\n\t                if (newExtras) {\n\t                    if (extras && extras._result) {\n\t                        extras._children = newExtras._children;\n\t                        extras._children.forEach(function (x) { return x.parent = extras; });\n\t                        if (extras._children.length > 0) {\n\t                            extras._result.setDisplay(true);\n\t                        }\n\t                        newExtras.children().forEach(function (x) {\n\t                            extras._result.addChild(x.render(_this._options));\n\t                        });\n\t                    }\n\t                    else {\n\t                        this._children.push(newExtras);\n\t                        if (this._panel) {\n\t                            this._panel.addChild(newExtras.render(this._options));\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    if (extras && extras._result) {\n\t                        extras._result.setDisplay(false);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var kp = null;\n\t        this.node.definition().allProperties().forEach(function (x) {\n\t            if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n\t                kp = x;\n\t            }\n\t        });\n\t        if (kp) {\n\t            var keyItem = this.item(kp.nameId());\n\t            if (keyItem) {\n\t                var m = keyItem.fld;\n\t                var vl = m.getBinding().get();\n\t                if ((!vl) || vl.trim().length == 0) {\n\t                    this._panel.getBinding().setStatus(UI.errorStatus(\"\"));\n\t                }\n\t                else {\n\t                    this._panel.getBinding().setStatus(UI.okStatus());\n\t                }\n\t            }\n\t        }\n\t        var errors;\n\t        if (this.node.property() && universehelpers.isExampleProperty(this.node.property())) {\n\t            var parent = this.node.parent();\n\t            if (parent) {\n\t                var parsed = parent.parsedType();\n\t                var exampleMeta = _.find(parsed.metaInfo || [], function (meta) {\n\t                    return meta && meta._name === 'example';\n\t                });\n\t                if (exampleMeta) {\n\t                    var validateObject = exampleMeta.validateSelf(this.node.types().getAnnotationTypeRegistry());\n\t                    errors = ((validateObject && validateObject.getErrors()) || []).map(function (error) {\n\t                        return _this.node.createIssue(error);\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            errors = this.node.errors();\n\t        }\n\t        this.clearErrors();\n\t        this.ep.setDisplay(false);\n\t        if (!resourceRegistry.hasAsyncRequests() && errors && errors.length > 0) {\n\t            var notFound = [];\n\t            errors.forEach(function (error) {\n\t                if (error.extras && error.extras.length > 0) {\n\t                    error = error.extras[0];\n\t                }\n\t                var item = _this.item(error.node.name());\n\t                if (item) {\n\t                    item.setError(error.message);\n\t                }\n\t                else {\n\t                    notFound.push(error);\n\t                }\n\t            });\n\t            if (notFound.length > 0) {\n\t                this.errorLabel.setIcon(UI.Icon.BUG);\n\t                var et = notFound.map(function (x) { return x.node.name() + \":\" + x.message; }).join(\",\");\n\t                if (et.length > 100) {\n\t                    et = et.substring(0, 100) + \"...\";\n\t                }\n\t                this.errorLabel.setText(et);\n\t                this.ep.setDisplay(true);\n\t            }\n\t            else {\n\t                this.ep.setDisplay(false);\n\t            }\n\t        }\n\t    };\n\t    return TopLevelNode;\n\t})(Category);\n\tvar CheckBox2 = (function (_super) {\n\t    __extends(CheckBox2, _super);\n\t    function CheckBox2() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CheckBox2.prototype.setLabelWidth = function (n) {\n\t        this.setStyle(\"margin-left\", (n + 2) + \"ch\");\n\t    };\n\t    return CheckBox2;\n\t})(UI.CheckBox);\n\tvar PropertyEditorInfo = (function (_super) {\n\t    __extends(PropertyEditorInfo, _super);\n\t    function PropertyEditorInfo(property, node) {\n\t        var _this = this;\n\t        _super.call(this, property.nameId(), property.description());\n\t        this.property = property;\n\t        this.node = node;\n\t        this.rendered = false;\n\t        this.update = function (newValue, oldValue) {\n\t            if (!_this.rendered) {\n\t                return;\n\t            }\n\t            _this.fromEditorToModel(newValue, oldValue);\n\t        };\n\t    }\n\t    PropertyEditorInfo.prototype.dispose = function () {\n\t        this.property = null;\n\t        this.node = null;\n\t        this.fld.getBinding().removeListener(this.update);\n\t    };\n\t    PropertyEditorInfo.prototype.getDefaultValue = function () {\n\t        return defaultValues.getDefaultValue(this.node, this.property);\n\t    };\n\t    PropertyEditorInfo.prototype.hasDefault = function () {\n\t        return defaultValues.hasDefault(this.property);\n\t    };\n\t    PropertyEditorInfo.prototype.clearErrors = function () {\n\t        this.setError(null);\n\t    };\n\t    PropertyEditorInfo.prototype.setError = function (text) {\n\t        if (text) {\n\t            this.errorLabel.setText(text);\n\t            this.errorLabel.setDisplay(true);\n\t        }\n\t        else {\n\t            if (this.errorLabel) {\n\t                this.errorLabel.setDisplay(false);\n\t            }\n\t        }\n\t    };\n\t    PropertyEditorInfo.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t        var field = this.fld;\n\t        var vl = this.toLocalValue(field.getBinding().get());\n\t        if (vl == null) {\n\t            vl = \"\";\n\t        }\n\t        if (vl === true) {\n\t            vl = \"true\";\n\t        }\n\t        if (vl === false) {\n\t            vl = \"\";\n\t        }\n\t        var attr = this.node.attr(this.property.nameId());\n\t        var av = \"\";\n\t        if (attr) {\n\t            var l = this.toLocalValue(this.toUIValue(attr.value()));\n\t            if (l) {\n\t                av = \"\" + l;\n\t            }\n\t        }\n\t        if (av == vl) {\n\t            return;\n\t        }\n\t        if (vl.length > 0) {\n\t            if (attr && attr.lowLevel().includePath()) {\n\t                var path = attr.lowLevel().includePath();\n\t                var actualUnit = attr.lowLevel().unit().resolve(path);\n\t                if (actualUnit) {\n\t                    var apath = actualUnit.absolutePath();\n\t                    fs.writeFileSync(apath, vl);\n\t                }\n\t                return;\n\t            }\n\t            if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n\t                return;\n\t            }\n\t            attr = this.node.attrOrCreate(this.property.nameId());\n\t            attr.setValue(\"\" + vl);\n\t        }\n\t        else {\n\t            if (attr) {\n\t                if (!this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n\t                    attr.remove();\n\t                }\n\t            }\n\t        }\n\t        if (attr.lowLevel() && attr.lowLevel().unit() && attr.lowLevel().unit() != this.node.lowLevel().unit()) {\n\t            provider.saveUnit(attr.lowLevel().unit());\n\t        }\n\t        var root = this.root();\n\t        if (root) {\n\t            root.update(this);\n\t        }\n\t    };\n\t    PropertyEditorInfo.prototype.toLocalValue = function (inputValue) {\n\t        return inputValue;\n\t    };\n\t    PropertyEditorInfo.prototype.toUIValue = function (value) {\n\t        return value;\n\t    };\n\t    PropertyEditorInfo.prototype.fromModelToEditor = function () {\n\t        var attr = this.node.attr(this.property.nameId());\n\t        if (attr || this.hasDefault()) {\n\t            var value;\n\t            if (this.property.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n\t                value = inheritedContent(this.node);\n\t            }\n\t            var val = value || (attr ? attr.value() : this.getDefaultValue());\n\t            if (val == null) {\n\t                val = \"\";\n\t            }\n\t            this.fld.getBinding().set(this.toUIValue(\"\" + val));\n\t        }\n\t    };\n\t    PropertyEditorInfo.prototype.render = function () {\n\t        var container = new UI.WrapPanel();\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n\t        this.errorLabel.setDisplay(false);\n\t        this.errorLabel.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n\t        var field = this.createField();\n\t        this.fld = field;\n\t        field.getBinding().addListener(this.update);\n\t        container.setCaption(this.title());\n\t        this.fromModelToEditor();\n\t        container.addChild(field);\n\t        var attr = this.node.attr(this.property.nameId());\n\t        if (attr) {\n\t            var val = attr.value();\n\t        }\n\t        var np = this.property.valueDocProvider();\n\t        if (np) {\n\t            var ac = np(val);\n\t            if (ac == null) {\n\t                ac = \"\";\n\t            }\n\t            var lbl = UI.label(ac, UI.Icon.INFO, UI.TextClasses.SUBTLE);\n\t            if (!ac) {\n\t                lbl.setDisplay(false);\n\t            }\n\t            container.addChild(lbl);\n\t            field.getBinding().addListener(function (x) {\n\t                var newDoc = np(field.getBinding().get());\n\t                if (!newDoc) {\n\t                    newDoc = \"\";\n\t                }\n\t                lbl.setText(newDoc);\n\t                lbl.setDisplay(newDoc.length > 0);\n\t            });\n\t            lbl.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n\t        }\n\t        if (attr && attr.lowLevel().includePath()) {\n\t            container.addChild(UI.label(\"Included from \" + attr.lowLevel().includePath(), UI.Icon.INFO, UI.TextClasses.SUBTLE));\n\t        }\n\t        //container.addChild(this.descLabel)\n\t        container.addChild(this.errorLabel);\n\t        this.rendered = true;\n\t        return container;\n\t    };\n\t    PropertyEditorInfo.prototype.createField = function () {\n\t        return UI.texfField(this.needsSeparateLabel() ? \"\" : this.property.nameId(), \"\", function (x) { });\n\t    };\n\t    return PropertyEditorInfo;\n\t})(Item);\n\tvar SimpleMultiEditor = (function (_super) {\n\t    __extends(SimpleMultiEditor, _super);\n\t    function SimpleMultiEditor() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SimpleMultiEditor.prototype.fromEditorToModel = function () {\n\t        var field = this.fld;\n\t        var vl = field.getBinding().get();\n\t        if (vl == null) {\n\t            vl = \"\";\n\t        }\n\t        var attrs = this.node.attributes(this.property.nameId());\n\t        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n\t        if (av == vl) {\n\t            return;\n\t        }\n\t        var ww = vl.split(\",\");\n\t        var vl = ww.filter(function (x) { return x.trim().length > 0; }).map(function (x) { return x.trim(); });\n\t        if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n\t            return;\n\t        }\n\t        var attribute = this.node.attrOrCreate(this.property.nameId());\n\t        attribute.setValues(vl);\n\t        var root = this.root();\n\t        if (root) {\n\t            root.update(this);\n\t        }\n\t    };\n\t    SimpleMultiEditor.prototype.fromModelToEditor = function () {\n\t        var attrs = this.node.attributes(this.property.nameId());\n\t        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n\t        this.fld.getBinding().set(av);\n\t    };\n\t    return SimpleMultiEditor;\n\t})(PropertyEditorInfo);\n\tfunction escapeValue(v) {\n\t    if (v.length > 0) {\n\t        if (v.charAt(0) == \"'\") {\n\t            return '\"' + v + '\"';\n\t        }\n\t        if (v.charAt(0) == '\"') {\n\t            return '\"' + v + '\"';\n\t        }\n\t    }\n\t    if (v.indexOf(' ') != -1 || v.indexOf(',') != -1) {\n\t        if (v.indexOf('\"') == -1) {\n\t            return '\"' + v + '\"';\n\t        }\n\t        if (v.indexOf(\"'\") == -1) {\n\t            return \"'\" + v + \"'\";\n\t        }\n\t    }\n\t    return v;\n\t}\n\tvar CheckBoxField = (function (_super) {\n\t    __extends(CheckBoxField, _super);\n\t    function CheckBoxField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CheckBoxField.prototype.createField = function () {\n\t        return new CheckBox2(this.property.nameId(), UI.Icon.NONE, function (x) { });\n\t    };\n\t    CheckBoxField.prototype.toUIValue = function (value) {\n\t        if (!value) {\n\t            return false;\n\t        }\n\t        if (value === true || value.trim() === 'true') {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    CheckBoxField.prototype.toLocalValue = function (value) {\n\t        return value + \"\";\n\t    };\n\t    return CheckBoxField;\n\t})(PropertyEditorInfo);\n\tvar ActionsItem = (function (_super) {\n\t    __extends(ActionsItem, _super);\n\t    function ActionsItem(node) {\n\t        _super.call(this, \"Actions\", \"\");\n\t        this.node = node;\n\t    }\n\t    ActionsItem.prototype.render = function (r) {\n\t        return suggestions.generateSuggestionsPanel(this.node);\n\t    };\n\t    ActionsItem.prototype.dispose = function () {\n\t        this.node = null;\n\t    };\n\t    return ActionsItem;\n\t})(Item);\n\tvar ContextActionsItem = (function (_super) {\n\t    __extends(ContextActionsItem, _super);\n\t    function ContextActionsItem(node, name, actions) {\n\t        _super.call(this, name, \"\");\n\t        this.actions = actions;\n\t    }\n\t    ContextActionsItem.prototype.dispose = function () {\n\t    };\n\t    ContextActionsItem.prototype.render = function (r) {\n\t        var result = UI.hc();\n\t        result.addChild(UI.h3(this.title()));\n\t        this.actions.forEach(function (x) {\n\t            result.addChild(UI.button(x.name, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.CHECKLIST, function (a) { return x.onClick(); }).margin(3, 3, 3, 3));\n\t        });\n\t        return result;\n\t    };\n\t    return ContextActionsItem;\n\t})(Item);\n\tvar MarkdownFieldUI = (function (_super) {\n\t    __extends(MarkdownFieldUI, _super);\n\t    function MarkdownFieldUI(text, onchange) {\n\t        _super.call(this, text, onchange);\n\t        this.margin(0, 0, 6, 12);\n\t        this.setMini(false);\n\t        this.setStyle(\"min-height\", \"100px\");\n\t        //this.setStyle(\"max-height\",\"200px\");\n\t        this.setStyle(\"border\", \"solid\");\n\t        this.setStyle(\"border-width\", \"1px\");\n\t        this.setStyle(\"border-radius\", \"2px\");\n\t        this.setStyle(\"font-size\", \"1.15em\");\n\t        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n\t        this.setGrammar('source.gfm');\n\t    }\n\t    MarkdownFieldUI.prototype.setLabelWidth = function () {\n\t    };\n\t    MarkdownFieldUI.prototype.setLabelHeight = function () {\n\t    };\n\t    MarkdownFieldUI.prototype.setRequired = function (v) {\n\t    };\n\t    return MarkdownFieldUI;\n\t})(UI.AtomEditorElement);\n\tvar XMLField = (function (_super) {\n\t    __extends(XMLField, _super);\n\t    function XMLField(text, onchange) {\n\t        _super.call(this, text, onchange);\n\t        this.margin(0, 0, 6, 12);\n\t        this.setMini(false);\n\t        this.setStyle(\"min-height\", \"100px\");\n\t        //this.setStyle(\"max-height\",\"200px\");\n\t        this.setStyle(\"border\", \"solid\");\n\t        this.setStyle(\"border-width\", \"1px\");\n\t        this.setStyle(\"border-radius\", \"2px\");\n\t        this.setStyle(\"font-size\", \"1.15em\");\n\t        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n\t        this.setGrammar('text.xml');\n\t    }\n\t    XMLField.prototype.setLabelWidth = function () {\n\t    };\n\t    XMLField.prototype.setLabelHeight = function () {\n\t    };\n\t    XMLField.prototype.setRequired = function (v) {\n\t    };\n\t    return XMLField;\n\t})(UI.AtomEditorElement);\n\tvar JSONField = (function (_super) {\n\t    __extends(JSONField, _super);\n\t    function JSONField(text, onchange) {\n\t        _super.call(this, text, onchange);\n\t        this.margin(0, 0, 6, 12);\n\t        this.setMini(false);\n\t        this.setStyle(\"min-height\", \"100px\");\n\t        //this.setStyle(\"max-height\",\"200px\");\n\t        this.setStyle(\"border\", \"solid\");\n\t        this.setStyle(\"border-width\", \"1px\");\n\t        this.setStyle(\"border-radius\", \"2px\");\n\t        this.setStyle(\"font-size\", \"1.15em\");\n\t        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n\t        this.setGrammar('source.json');\n\t    }\n\t    JSONField.prototype.setLabelWidth = function () {\n\t    };\n\t    JSONField.prototype.setLabelHeight = function () {\n\t    };\n\t    JSONField.prototype.setRequired = function (v) {\n\t    };\n\t    return JSONField;\n\t})(UI.AtomEditorElement);\n\tvar MarkdownField = (function (_super) {\n\t    __extends(MarkdownField, _super);\n\t    function MarkdownField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MarkdownField.prototype.createField = function () {\n\t        var editor = new MarkdownFieldUI(\"\", function (x) { });\n\t        return editor;\n\t    };\n\t    MarkdownField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    return MarkdownField;\n\t})(PropertyEditorInfo);\n\tvar ExampleField = (function (_super) {\n\t    __extends(ExampleField, _super);\n\t    function ExampleField(property, node, text, title) {\n\t        _super.call(this, property, node);\n\t        this.property = property;\n\t        this.node = node;\n\t        this.text = text;\n\t        this.setDescription(\"\");\n\t        if (title)\n\t            this.setTitle(title);\n\t    }\n\t    ExampleField.prototype.createField = function () {\n\t        var editor = new JSONField(this.text, function (x) { });\n\t        return editor;\n\t    };\n\t    ExampleField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    ExampleField.prototype.fromModelToEditor = function () {\n\t    };\n\t    ExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t    };\n\t    return ExampleField;\n\t})(PropertyEditorInfo);\n\tvar XMLExampleField = (function (_super) {\n\t    __extends(XMLExampleField, _super);\n\t    function XMLExampleField(property, node, text, title) {\n\t        _super.call(this, property, node);\n\t        this.property = property;\n\t        this.node = node;\n\t        this.text = text;\n\t        this.setDescription(\"\");\n\t        if (title)\n\t            this.setTitle(title);\n\t    }\n\t    XMLExampleField.prototype.createField = function () {\n\t        var editor = new XMLField(this.text, function (x) { });\n\t        return editor;\n\t    };\n\t    XMLExampleField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    XMLExampleField.prototype.fromModelToEditor = function () {\n\t    };\n\t    XMLExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t    };\n\t    return XMLExampleField;\n\t})(PropertyEditorInfo);\n\tvar XMLSchemaField = (function (_super) {\n\t    __extends(XMLSchemaField, _super);\n\t    function XMLSchemaField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    XMLSchemaField.prototype.createField = function () {\n\t        var editor = new XMLField(\"\", function (x) { });\n\t        return editor;\n\t    };\n\t    XMLSchemaField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    return XMLSchemaField;\n\t})(PropertyEditorInfo);\n\tvar JSONSchemaField = (function (_super) {\n\t    __extends(JSONSchemaField, _super);\n\t    function JSONSchemaField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    JSONSchemaField.prototype.createField = function () {\n\t        var editor = new JSONField(\"\", function (x) { });\n\t        return editor;\n\t    };\n\t    JSONSchemaField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    return JSONSchemaField;\n\t})(PropertyEditorInfo);\n\tvar SelectBox = (function (_super) {\n\t    __extends(SelectBox, _super);\n\t    function SelectBox() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SelectBox.prototype.createField = function () {\n\t        var options = valueOptions(this.property, this.node);\n\t        var a = this.node.attr(this.property.nameId());\n\t        if (a) {\n\t            if (!_.find(options, function (x) { return x == a.value(); })) {\n\t                options.push(a.value());\n\t            }\n\t        }\n\t        if (!this.property.isRequired() && !this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n\t            options = [\"\"].concat(options);\n\t        }\n\t        var select = new UI.SelectField(this.property.nameId(), function (x) { }, \"\", UI.Icon.NONE, options);\n\t        select.getActualField().setOptions(options);\n\t        // select.clearUI();\n\t        return select;\n\t    };\n\t    return SelectBox;\n\t})(PropertyEditorInfo);\n\tvar TypeSelectBox = (function (_super) {\n\t    __extends(TypeSelectBox, _super);\n\t    function TypeSelectBox() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TypeSelectBox.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t        //current implementation only allows changing the facets of certain types for safety\n\t        //TODO change this to arbitrary facets (remove type filtering)\n\t        var _this = this;\n\t        var oldNames = [];\n\t        var savedAttrs = [];\n\t        if (newValue && oldValue) {\n\t            try {\n\t                this.node.definition().allSuperTypes().forEach(function (superType) {\n\t                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n\t                        _this.addTypeFacets(superType, oldNames);\n\t                    }\n\t                });\n\t                savedAttrs = [].concat(this.node.attrs());\n\t            }\n\t            catch (err) {\n\t                console.log(err);\n\t            }\n\t        }\n\t        _super.prototype.fromEditorToModel.call(this);\n\t        if (newValue && oldValue) {\n\t            try {\n\t                //collecting facets allowed to remove\n\t                var currentUniverse = this.node.definition().universe();\n\t                var names = [];\n\t                this.node.definition().allSuperTypes().forEach(function (superType) {\n\t                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n\t                        _this.addTypeFacets(superType, names);\n\t                    }\n\t                });\n\t                if (oldNames.length > 0 && names.length > 0) {\n\t                    savedAttrs.forEach(function (attribute) {\n\t                        if (_.find(oldNames, function (facetName) { return facetName == attribute.name(); })\n\t                            && !_.find(names, function (facetName) { return facetName == attribute.name(); })) {\n\t                            _this.node.remove(attribute);\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t            catch (err) {\n\t                console.log(err);\n\t            }\n\t        }\n\t    };\n\t    TypeSelectBox.prototype.isAllowedTypeToReplaceFacets = function (currentTypeDef) {\n\t        return currentTypeDef.key() == universe.Universe10.StringTypeDeclaration ||\n\t            currentTypeDef.key() == universe.Universe10.BooleanTypeDeclaration ||\n\t            currentTypeDef.key() == universe.Universe10.NumberTypeDeclaration ||\n\t            currentTypeDef.key() == universe.Universe10.IntegerTypeDeclaration;\n\t    };\n\t    TypeSelectBox.prototype.addTypeFacets = function (currentTypeDef, names) {\n\t        currentTypeDef.properties().map(function (property) { return property.nameId(); }).forEach(function (name) { return names.push(name); });\n\t    };\n\t    return TypeSelectBox;\n\t})(SelectBox);\n\tvar TreeField = (function (_super) {\n\t    __extends(TreeField, _super);\n\t    function TreeField(input, caption) {\n\t        _super.call(this);\n\t        this.input = input;\n\t        var rend = {\n\t            render: function (n) {\n\t                var key = n.key();\n\t                var value = n.value();\n\t                if (typeof value === 'number' || typeof value === 'boolean') {\n\t                    value = \"\" + value;\n\t                }\n\t                if (typeof value != 'string') {\n\t                    value = \"\";\n\t                }\n\t                if (value.length > 30) {\n\t                    value = value.substring(0, 20) + \"...\";\n\t                }\n\t                if (!key) {\n\t                    if (value) {\n\t                        key = value;\n\t                        value = \"\";\n\t                    }\n\t                    else {\n\t                        key = \"-\";\n\t                        value = \"\";\n\t                    }\n\t                }\n\t                var res = UI.label(key, UI.Icon.CIRCUIT_BOARD, UI.TextClasses.HIGHLIGHT);\n\t                value = UI.label(value ? (\":\" + value) : \"\", UI.Icon.NONE, UI.TextClasses.SUCCESS);\n\t                var result = UI.hc(res, value);\n\t                return result;\n\t            }\n\t        };\n\t        var getChildren = function (x) {\n\t            return x.children();\n\t        };\n\t        var viewer = UI.treeViewer(getChildren, rend, function (x) { return x.key(); });\n\t        var inputV = {\n\t            children: function () {\n\t                return [input];\n\t            }\n\t        };\n\t        viewer.setInput(inputV);\n\t        this.addChild(UI.label(caption));\n\t        this.addChild(viewer);\n\t    }\n\t    TreeField.prototype.setLabelWidth = function () {\n\t    };\n\t    TreeField.prototype.setLabelHeight = function () {\n\t    };\n\t    TreeField.prototype.setRequired = function (v) {\n\t    };\n\t    return TreeField;\n\t})(UI.Panel);\n\tvar StructuredField = (function (_super) {\n\t    __extends(StructuredField, _super);\n\t    function StructuredField(pr, node, stvalue) {\n\t        _super.call(this, pr, node);\n\t        this.stvalue = stvalue;\n\t    }\n\t    StructuredField.prototype.createField = function () {\n\t        var tm = new TreeField(this.stvalue.lowLevel(), this.title() + \":\");\n\t        return tm;\n\t    };\n\t    return StructuredField;\n\t})(PropertyEditorInfo);\n\tvar LowLevelTreeField = (function (_super) {\n\t    __extends(LowLevelTreeField, _super);\n\t    function LowLevelTreeField(pr, node, lowLevel, title) {\n\t        _super.call(this, pr, node);\n\t        this.lowLevel = lowLevel;\n\t        if (title)\n\t            this.setTitle(title);\n\t    }\n\t    LowLevelTreeField.prototype.createField = function () {\n\t        var tm = new TreeField(this.lowLevel, this.title() + \":\");\n\t        return tm;\n\t    };\n\t    return LowLevelTreeField;\n\t})(PropertyEditorInfo);\n\tfunction category(p, node) {\n\t    if (p.getAdapter(def.RAMLPropertyService).isKey() || p.isRequired()) {\n\t        return null;\n\t    }\n\t    if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n\t        if (universehelpers.isDocumentationProperty(p) ||\n\t            universehelpers.isUsageProperty(p) ||\n\t            universehelpers.isDescriptionProperty(p) ||\n\t            universehelpers.isDisplayNameProperty(p) ||\n\t            universehelpers.isTitleProperty(p)) {\n\t            return \"Documentation\";\n\t        }\n\t        if (universehelpers.isAnnotationsProperty(p) ||\n\t            universehelpers.isIsProperty(p) ||\n\t            universehelpers.isSecuredByProperty(p) ||\n\t            (universehelpers.isTypeProperty(p) && !p.getAdapter(def.RAMLPropertyService).isTypeExpr())) {\n\t            return \"References\";\n\t        }\n\t        if (universehelpers.isProtocolsProperty(p)) {\n\t            return \"General\";\n\t        }\n\t    }\n\t    if (universehelpers.isTypeProperty(p)) {\n\t        if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n\t            return null;\n\t        }\n\t    }\n\t    if (node.property()) {\n\t        if (p.domain() && p.domain() != node.property().range()) {\n\t            return \"Facets\";\n\t        }\n\t    }\n\t    return \"General\";\n\t}\n\tvar valueOptions = function (x, node) {\n\t    var vls = search.enumValues(x, node);\n\t    if (universehelpers.isNameProperty(x)) {\n\t        if (node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t            if (node.property() && universehelpers.isBodyProperty(node.property())) {\n\t                if (!(node.property() instanceof def.UserDefinedProp)) {\n\t                    if (node.parent() &&\n\t                        universehelpers.isMethodType(node.parent().definition())) {\n\t                        return [\"application/json\", \"application/xml\", \"multipart/form-data\", \"application/x-www-form-urlencoded\"];\n\t                    }\n\t                    return [\"application/json\", \"application/xml\"];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if ((!vls) || vls.length == 0) {\n\t        var sug = x.suggester();\n\t        if (sug) {\n\t            vls = sug(node);\n\t        }\n\t        if ((!vls) || vls.length == 0) {\n\t            vls = x.getOftenKeys();\n\t        }\n\t    }\n\t    return _.unique(vls);\n\t};\n\tfunction addExampleControl(property, node, exampleElement, example, container) {\n\t    if (example.isYAML()) {\n\t        container.addItemToCategory(category(property, node), new LowLevelTreeField(property, node, exampleElement.lowLevel(), example.name()));\n\t    }\n\t    else if (example.isJSONString()) {\n\t        container.addItemToCategory(category(property, node), new ExampleField(property, node, example.asString(), example.name()));\n\t    }\n\t    else if (example.isXMLString()) {\n\t        container.addItemToCategory(category(property, node), new XMLExampleField(property, node, example.asString(), example.name()));\n\t    }\n\t}\n\tfunction buildItem(node, dialog) {\n\t    rp.utils.updateType(node);\n\t    var props = node.propertiesAllowedToUse();\n\t    var result = new TopLevelNode(node);\n\t    if (node.property() && node.property().description()) {\n\t        result.setDescription(node.property().description());\n\t    }\n\t    var isFragment = false;\n\t    if (node.definition() && !node.parent()) {\n\t        var fragmentName = rp.utils.getFragmentDefenitionName(node);\n\t        var superTypes = node.definition().allSuperTypes();\n\t        superTypes.push(node.definition());\n\t        superTypes.forEach(function (superType) {\n\t            if (superType.nameId && superType.nameId() === fragmentName) {\n\t                isFragment = true;\n\t            }\n\t        });\n\t    }\n\t    props = props.filter(function (x) {\n\t        if (isFragment && universehelpers.isNameProperty(x)) {\n\t            return false;\n\t        }\n\t        if ((universehelpers.isNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n\t            return false;\n\t        }\n\t        if ((universehelpers.isDisplayNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n\t            return false;\n\t        }\n\t        return true;\n\t    });\n\t    props = props.sort(function (x, y) {\n\t        if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n\t            return -1;\n\t        }\n\t        if (y.getAdapter(def.RAMLPropertyService).isKey()) {\n\t            return 1;\n\t        }\n\t        if (x.nameId() < y.nameId()) {\n\t            return -1;\n\t        }\n\t        return 1;\n\t    });\n\t    props.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            //\n\t            if (universehelpers.isAnnotationsProperty(x)) {\n\t                //we ban annotations from appearing as we can not provide the editing\n\t                //with this mechanism\n\t                return;\n\t            }\n\t            if (universehelpers.isBooleanTypeType(x.range())) {\n\t                return;\n\t            }\n\t            if (universehelpers.isMarkdownStringType(x.range())) {\n\t                return;\n\t            }\n\t            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/json\"){\n\t            //     result.addItemToCategory(category(x,node), new ExampleField(x, node));\n\t            //     return;\n\t            // }\n\t            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/xml\"){\n\t            //     result.addItemToCategory(category(x,node), new XMLExampleField(x, node));\n\t            //     return;\n\t            // }\n\t            var nm = node.attr(x.nameId());\n\t            if (nm && typeof nm.value() === \"object\") {\n\t                result.addItemToCategory(category(x, node), new StructuredField(x, node, nm.value()));\n\t                return;\n\t            }\n\t            if (x.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n\t                var vl = inheritedContent(node);\n\t                if (vl) {\n\t                    if (vl.trim().charAt(0) == '{') {\n\t                        result.addItemToCategory(category(x, node), new JSONSchemaField(x, node));\n\t                        return;\n\t                    }\n\t                    if (vl.trim().charAt(0) == '<') {\n\t                        result.addItemToCategory(category(x, node), new XMLSchemaField(x, node));\n\t                        return;\n\t                    }\n\t                }\n\t            }\n\t            if (universehelpers.isSchemaProperty(x)\n\t                && x.domain() && x.domain().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t                return;\n\t            }\n\t            var vls = valueOptions(x, node);\n\t            if (vls && vls.length > 0 && ((x.domain() && x.domain().getAdapter(def.RAMLService).isUserDefined()))) {\n\t                if (universehelpers.isTypeProperty(x) &&\n\t                    node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t                    result.addItemToCategory(category(x, node), new TypeSelectBox(x, node));\n\t                }\n\t                else {\n\t                    result.addItemToCategory(category(x, node), new SelectBox(x, node));\n\t                }\n\t            }\n\t            else {\n\t                if (x.isMultiValue()) {\n\t                    result.addItemToCategory(category(x, node), new SimpleMultiEditor(x, node));\n\t                }\n\t                else {\n\t                    result.addItemToCategory(category(x, node), new PropertyEditorInfo(x, node));\n\t                }\n\t            }\n\t        }\n\t    });\n\t    props.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            if (universehelpers.isBooleanTypeType(x.range())) {\n\t                result.addItemToCategory(category(x, node), new CheckBoxField(x, node));\n\t            }\n\t        }\n\t    });\n\t    props.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            if (universehelpers.isMarkdownStringType(x.range())) {\n\t                result.addItemToCategory(category(x, node), new MarkdownField(x, node));\n\t            }\n\t        }\n\t    });\n\t    if (universehelpers.isTypeDeclarationSibling(node.definition())) {\n\t        props.forEach(function (x) {\n\t            if (universehelpers.isExampleProperty(x)) {\n\t                var exampleElement = node.element(universe.Universe10.TypeDeclaration.properties.example.name);\n\t                if (exampleElement) {\n\t                    var examples = node.localType().examples();\n\t                    if (examples && examples.length == 1) {\n\t                        var example = examples[0];\n\t                        addExampleControl(x, node, exampleElement, example, result);\n\t                    }\n\t                }\n\t            }\n\t            else if (universehelpers.isExamplesProperty(x)) {\n\t                var exampleElements = node.elementsOfKind(universe.Universe10.TypeDeclaration.properties.examples.name);\n\t                if (exampleElements && exampleElements.length > 0) {\n\t                    var examples = node.localType().examples();\n\t                    exampleElements.forEach(function (exampleElement) {\n\t                        var exampleElementName = exampleElement.attrValue(universe.Universe10.ExampleSpec.properties.name.name);\n\t                        if (exampleElementName) {\n\t                            var example = _.find(examples, function (currentExample) { return currentExample.name() == exampleElementName; });\n\t                            if (example) {\n\t                                addExampleControl(x, node, exampleElement, example, result);\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        });\n\t    }\n\t    if (!dialog) {\n\t        result.addItemToCategory(\"Palette\", new ActionsItem(node));\n\t        var visibleActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t        var cats = _.groupBy(visibleActions, function (x) { return x.category.join(\"/\"); });\n\t        for (var cat in cats) {\n\t            result.addItemToCategory(\"Palette\", new ContextActionsItem(node, cat, cats[cat]));\n\t        }\n\t    }\n\t    if (node.definition().getAdapter(def.RAMLService).isUserDefined() || node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t        result.addItemToCategory(\"Type\", new TypeDisplayItem(node));\n\t    }\n\t    return result;\n\t}\n\texports.buildItem = buildItem;\n\tfunction inheritedContent(node) {\n\t    var type = (node.associatedType && node.associatedType()) || (node.localType && node.localType());\n\t    while (type) {\n\t        if (type.superTypes().length > 1) {\n\t            return '';\n\t        }\n\t        if (type.isExternal()) {\n\t            return type.schemaString;\n\t        }\n\t        type = type.superTypes()[0];\n\t    }\n\t}\n\t\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar KeyValuePair = (function () {\n\t    function KeyValuePair() {\n\t    }\n\t    return KeyValuePair;\n\t})();\n\texports.KeyValuePair = KeyValuePair;\n\tvar Map = (function () {\n\t    function Map(ms) {\n\t        var _this = this;\n\t        if (ms === void 0) { ms = []; }\n\t        this.mappings = [];\n\t        ms.forEach(function (m) { return _this.mappings.push(m); });\n\t    }\n\t    Map.prototype.volume = function () { return this.mappings.length; };\n\t    Map.prototype.pairs = function () { return [].concat(this.mappings); };\n\t    Map.prototype.set = function (key, value) {\n\t        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n\t        if (pairs.length == 0)\n\t            this.mappings.push({ key: key, value: value });\n\t        else\n\t            pairs[0].value = value;\n\t    };\n\t    Map.prototype.get = function (key) {\n\t        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n\t        return (pairs.length == 0) ? null : pairs[0].value;\n\t    };\n\t    Map.prototype.map = function (callbackfn) {\n\t        return this.mappings.map(function (x) { return x.value; }).map(callbackfn);\n\t    };\n\t    Map.prototype.forEach = function (callbackfn) {\n\t        this.mappings.map(function (x) { return x.value; }).forEach(callbackfn);\n\t    };\n\t    Map.prototype.filter = function (callbackfn) {\n\t        return this.mappings.map(function (x) { return x.value; }).filter(callbackfn);\n\t    };\n\t    return Map;\n\t})();\n\texports.Map = Map;\n\t\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"mime\");\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../typings/main.d.ts\" />\n\tvar invariant = __webpack_require__(69);\n\tvar exists = function (v) { return (v != null); };\n\tvar globalEmptyOpt;\n\tvar Opt = (function () {\n\t    function Opt(_value) {\n\t        var _this = this;\n\t        this._value = _value;\n\t        this._isDefined = false;\n\t        this._isEmpty = true;\n\t        this._arr = undefined;\n\t        this.getOrThrow = function () {\n\t            invariant(_this._isDefined, 'Opt is empty. Use `Opt#getOrElse` or check `Opt#isDefined`.');\n\t            return _this._value;\n\t        };\n\t        this.value = function () { return _this._value; };\n\t        this.isDefined = function () { return _this._isDefined; };\n\t        this.isEmpty = function () { return _this._isEmpty; };\n\t        this.toArray = function () { return _this._arr || (_this._arr = _this._isDefined ? [_this._value] : []); };\n\t        this.getOrElse = function (v) { return _this._isDefined ? _this._value : v; };\n\t        this.getOrElseF = function (v) { return _this._isDefined ? _this._value : v(); };\n\t        this.map = function (f) { return _this._isEmpty ? Opt.empty() : new Opt(f(_this._value)); };\n\t        this.flatMap = function (f) { return _this.map(f).getOrElse(Opt.empty()); };\n\t        this.equals = function (other) {\n\t            invariant(other instanceof Opt, 'Expected other to be an `Opt`, but got `%s`', typeof other);\n\t            return (_this._isDefined === other.isDefined()) && (_this._value === other.value());\n\t        };\n\t        if (exists(this._value)) {\n\t            this._isDefined = true;\n\t            this._isEmpty = false;\n\t        }\n\t    }\n\t    Opt.prototype.forEach = function (fn) {\n\t        if (this.isDefined()) {\n\t            fn(this._value);\n\t        }\n\t    };\n\t    /**\n\t     * You can always create an empty option by hand just by calling new Opt<T>()\n\t     * but calling this method will return a global instance instead of allocating a new one each time\n\t     */\n\t    Opt.empty = function () { return (globalEmptyOpt || (globalEmptyOpt = new Opt())); };\n\t    return Opt;\n\t})();\n\tmodule.exports = Opt;\n\t\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"marked\");\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"classnames\");\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"react-pure-render/component\");\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"pretty-data\");\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"invariant\");\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar UI = __webpack_require__(18);\n\tvar hl = __webpack_require__(24);\n\tvar universes = hl.universes;\n\tvar stubs = hl.stubs;\n\tvar _ = __webpack_require__(26);\n\tvar ds = hl.ds;\n\tvar editorTools = __webpack_require__(5);\n\tvar Inserter = (function () {\n\t    function Inserter(value, property, node) {\n\t        this.value = value;\n\t        this.property = property;\n\t        this.node = node;\n\t    }\n\t    Inserter.prototype.insert = function () {\n\t        var rn = this.property.range();\n\t        var key = this.value;\n\t        if (this.property.nameId() == universes.Universe10.Method.properties.body.name) {\n\t            key = \"application/json\";\n\t        }\n\t        if (this.property.nameId() == universes.Universe10.MethodBase.properties.responses.name) {\n\t            key = \"200\";\n\t        }\n\t        //TODO we need to take care of keys globally, including collections\n\t        //if (this.property.nameId() == universes.Universe10.TypeDeclaration.properties.xml.name\n\t        //    && this.node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name)) {\n\t        //    key = universes.Universe10.XMLSerializationHints.properties.name.name;\n\t        //}\n\t        var newNode = stubs.createStubNode(rn, this.property, key);\n\t        editorTools.aquireManager()._cleanOutline = true;\n\t        //this is a hack TODO FIX ME we should remove it after we will fix partial reconcile on outline\n\t        this.node.add(newNode);\n\t        editorTools.aquireManager().patchCurrentNode(this.node);\n\t    };\n\t    return Inserter;\n\t})();\n\tfunction generateSuggestionsPanel(node) {\n\t    var cm = node.definition().allProperties();\n\t    var result = UI.vc();\n\t    var hc = UI.hc();\n\t    result.addChild(UI.h3(\"Insertions and Delete: \"));\n\t    result.addChild(hc);\n\t    cm.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            return;\n\t        }\n\t        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n\t            return;\n\t        }\n\t        if (_.find(node.lowLevel().children(), function (y) { return y.key() == x.nameId(); })) {\n\t            return;\n\t        }\n\t        if (node.lowLevel().includesContents()) {\n\t            return;\n\t        }\n\t        var inserter = new Inserter(\"\", x, node);\n\t        hc.addChild(UI.button(x.nameId(), UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.INFO, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n\t    });\n\t    cm.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            return;\n\t        }\n\t        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n\t            var enums = x.enumOptions();\n\t            if (enums) {\n\t                enums.forEach(function (y) {\n\t                    if (_.find(node.lowLevel().children(), function (z) { return z.key() == y; })) {\n\t                        return;\n\t                    }\n\t                    if (node.lowLevel().includesContents()) {\n\t                        return;\n\t                    }\n\t                    var inserter = new Inserter(y, x, node);\n\t                    hc.addChild(UI.button(y, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.WARNING, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n\t                });\n\t            }\n\t            return;\n\t        }\n\t    });\n\t    hc.addChild(UI.button(\"Delete\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.ERROR, UI.Icon.NONE, function (x) {\n\t        if (node.parent()) {\n\t            node.parent().remove(node);\n\t        }\n\t        else {\n\t            node.lowLevel().unit().updateContent('');\n\t            editorTools.aquireManager().updateText();\n\t            editorTools.aquireManager().updateDetails();\n\t        }\n\t    }).margin(3, 3, 3, 3));\n\t    return result;\n\t}\n\texports.generateSuggestionsPanel = generateSuggestionsPanel;\n\t\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar _ = __webpack_require__(26);\n\tvar UI = __webpack_require__(18);\n\tvar hl = __webpack_require__(24);\n\tvar def = hl.ds;\n\tfunction findBuiltInValueType(type) {\n\t    if (type.isValueType() && type.isBuiltIn())\n\t        return type;\n\t    var superTypes = type.allSuperTypes();\n\t    if (superTypes == null || superTypes.length == 0)\n\t        return null;\n\t    return _.find(superTypes, function (superType) { return (superType.isValueType() && superType.isBuiltIn()); });\n\t}\n\tfunction getValueTypeDisplayName(type) {\n\t    var builtinValueType = findBuiltInValueType(type);\n\t    if (!builtinValueType)\n\t        type.nameId() ? type.nameId() : \"\";\n\t    if (builtinValueType.nameId() == \"StringType\") {\n\t        return \"string\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"AnyType\") {\n\t        return \"any\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"NumberType\") {\n\t        return \"number\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"IntegerType\") {\n\t        return \"integer\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"NullType\") {\n\t        return \"null\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"TimeOnlyType\") {\n\t        return \"time-only\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"DateOnlyType\") {\n\t        return \"date-only\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"DateTimeOnlyType\") {\n\t        return \"datetime-only\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"DateTimeType\") {\n\t        return \"datetime\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"FileType\") {\n\t        return \"file\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"BooleanType\") {\n\t        return \"boolean\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"AnnotationTarget\") {\n\t        return \"annotation target\";\n\t    }\n\t    return builtinValueType.nameId() ? builtinValueType.nameId() : \"\";\n\t}\n\tfunction getTypeDisplayName(type) {\n\t    if (type == null)\n\t        return \"\";\n\t    if (type.isValueType()) {\n\t        return getValueTypeDisplayName(type);\n\t    }\n\t    else if (type.hasArrayInHierarchy()) {\n\t        var componentType = type.arrayInHierarchy().componentType();\n\t        if (componentType && componentType.nameId()) {\n\t            return getTypeDisplayName(componentType) + \"[]\";\n\t        }\n\t        else {\n\t            return \"array\";\n\t        }\n\t    }\n\t    else if (type.hasUnionInHierarchy()) {\n\t        var asUnion = type.unionInHierarchy();\n\t        return getTypeDisplayName(asUnion.leftType()) +\n\t            \" | \" + getTypeDisplayName(asUnion.rightType());\n\t    }\n\t    return type.nameId() ? type.nameId() : \"\";\n\t}\n\texports.getTypeDisplayName = getTypeDisplayName;\n\tvar renderType = function (definition) {\n\t    var result = UI.vc();\n\t    result.addChild(UI.label(\"definition:\" + getTypeDisplayName(definition)));\n\t    var elements = definition.properties();\n\t    var superTypes = definition.superTypes();\n\t    if (superTypes) {\n\t        result.addChild(UI.h3(\"Super types:\"));\n\t        definition.allSuperTypes().forEach(function (x) {\n\t            result.addChild(UI.hc(UI.label(getTypeDisplayName(x), UI.Icon.TAG)));\n\t        });\n\t    }\n\t    var rf = definition.getAdapter(def.RAMLService).getRepresentationOf();\n\t    if (rf) {\n\t        var facets = rf.getFixedFacets();\n\t        if (Object.keys(facets).length > 0) {\n\t            result.addChild(UI.h3(\"All facets\"));\n\t            Object.keys(facets).forEach(function (x) {\n\t                result.addChild(UI.label(x + \":\" + facets[x].value()));\n\t            });\n\t        }\n\t    }\n\t    if (elements && elements.length > 0) {\n\t        result.addChild(UI.h3(\"All properties\"));\n\t        elements.forEach(function (property) {\n\t            var propertyName = property.nameId();\n\t            if (!property.isRequired()) {\n\t                propertyName += \"?\";\n\t            }\n\t            result.addChild(UI.hc(UI.label(propertyName, UI.Icon.LINK), UI.label(\": \" + getTypeDisplayName(property.range()), UI.Icon.NONE, UI.TextClasses.WARNING)));\n\t        });\n\t    }\n\t    if (definition.hasArrayInHierarchy()) {\n\t        result.addChild(UI.h3(\"Component type:\"));\n\t        result.addChild(renderType(definition.arrayInHierarchy().componentType()));\n\t    }\n\t    if (definition.hasUnionInHierarchy()) {\n\t        result.addChild(UI.h3(\"Union type:\"));\n\t        result.addChild(UI.h3(\"Left:\"));\n\t        result.addChild(renderType(definition.unionInHierarchy().leftType()));\n\t        result.addChild(UI.h3(\"Right:\"));\n\t        result.addChild(renderType(definition.unionInHierarchy().rightType()));\n\t    }\n\t    return result;\n\t};\n\tfunction render(node) {\n\t    var wn = node.wrapperNode();\n\t    var definition = wn.highLevel().localType();\n\t    return renderType(definition);\n\t}\n\texports.render = render;\n\t\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar hl = __webpack_require__(24);\n\tvar ds = hl.ds;\n\tvar universe = ds.universesInfo;\n\tfunction getDefaultValue(node, property) {\n\t    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n\t        return node.name().indexOf(\"?\") !== node.name().length - 1;\n\t    }\n\t}\n\texports.getDefaultValue = getDefaultValue;\n\tfunction hasDefault(property) {\n\t    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\texports.hasDefault = hasDefault;\n\t\n\n\n/***/ }\n/******/ ])\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0d689a03426ee56a5570\n **/","/// <reference path=\"../../typings/main.d.ts\" />\nvar Console = require('./console/index');\nvar apiList = require('./popular-apis/popular-apis');\nvar editorTools = require('./editor-tools/editor-tools');\nvar quickCommands = require('./quick-commands/quick-commands');\nvar provider = require(\"./suggestion/provider\");\nvar quickOutline = require(\"./quick-outline/quick-outline\");\nvar decl = require(\"./dialogs/assist-utils\");\nvar linterUI = require(\"./core/linter-ui\");\nvar CompositeDisposable = require('atom').CompositeDisposable;\nvar commandManager = require(\"./quick-commands/command-manager\");\nvar contextMenu = require(\"./context-menu/contextMenu\");\nvar commonContextActions = require(\"./context-menu/commonContextActions\");\nvar quickFixActions = require(\"./context-menu/quickFix\");\nvar actions = require(\"./context-menu/actions\");\nvar package_entry_point;\n(function (package_entry_point) {\n    var subscriptions = new CompositeDisposable();\n    function activate(state) {\n        require('atom-package-deps').install('api-workbench', true)\n            .then(function () {\n            subscriptions.add(atom.commands.add('atom-workspace', {\n                'api-workbench:popular-apis': apiList.showPopularApis,\n                'api-workbench:editor-tools': editorTools.initEditorTools,\n                'api-workbench:console': Console.toggle,\n                'api-workbench:go-to-definition': decl.gotoDeclaration,\n                'api-workbench:find-usages': decl.findUsages,\n                'api-workbench:quick-outline': quickOutline.show,\n                'api-workbench:quick-commands': quickCommands.showCommands,\n                'api-workbench:rename': decl.renameRAMLElement,\n                'api-workbench:new-project': decl.newProject,\n                'api-workbench:select-node': decl.select\n            }));\n            subscriptions.add(atom.workspace.addOpener(Console.opener));\n            //subscriptions.add(atom.workspace.addOpener(RamlScriptReport.opener))\n            commandManager.initialize();\n            contextMenu.initialize();\n            commonContextActions.initialize();\n            quickCommands.registerCommands();\n            quickFixActions.initialize();\n            actions.register();\n            editorTools.initEditorTools();\n        });\n    }\n    package_entry_point.activate = activate;\n    function getProvider() {\n        return provider;\n    }\n    package_entry_point.getProvider = getProvider;\n    function provideLinter() {\n        return linterUI;\n    }\n    package_entry_point.provideLinter = provideLinter;\n    function consumeLinter(linterApi) {\n        subscriptions.add(linterUI.initEditorObservers(linterApi));\n    }\n    package_entry_point.consumeLinter = consumeLinter;\n    function deactivate() {\n        subscriptions.dispose();\n    }\n    package_entry_point.deactivate = deactivate;\n    package_entry_point.config = {\n        grammars: {\n            type: 'array',\n            default: [\n                'source.raml'\n            ]\n        },\n        openConsoleInSplitPane: {\n            type: 'boolean',\n            default: true\n        }\n    };\n})(package_entry_point || (package_entry_point = {}));\nmodule.exports = package_entry_point;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/main.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = require(\"atom\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"atom-package-deps\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom-package-deps\"\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar url = require('url');\nvar ConsoleView = require('./console-view');\natom.deserializers.add({\n    name: 'RAMLConsoleView',\n    deserialize: function (state) {\n        if (state) {\n            return createConsoleView(state);\n        }\n    }\n});\nfunction createConsoleView(opts) {\n    return new ConsoleView.RAMLConsoleView(opts);\n}\nexports.createConsoleView = createConsoleView;\nfunction isConsoleView(obj) {\n    return obj instanceof ConsoleView.RAMLConsoleView;\n}\nexports.isConsoleView = isConsoleView;\nfunction toggle() {\n    if (isConsoleView(atom.workspace.getActivePaneItem())) {\n        atom.workspace.destroyActivePaneItem();\n        return;\n    }\n    var editor = atom.workspace.getActiveTextEditor();\n    if (!editor) {\n        atom.notifications.addInfo('The API Console can only be opened when focused on a RAML file editor.');\n        return;\n    }\n    var grammars = atom.config.get('api-workbench.grammars') || [];\n    if (grammars.indexOf(editor.getGrammar().scopeName) === -1) {\n        atom.notifications.addInfo('The API Console can only be opened with focus on a RAML file.');\n        return;\n    }\n    if (!removeConsoleForEditor(editor)) {\n        addConsoleForEditor(editor);\n        return;\n    }\n}\nexports.toggle = toggle;\nfunction removeConsoleForEditor(editor) {\n    var uri = ConsoleView.RAMLConsoleView.getUriForEditor(editor);\n    var previewPane = atom.workspace.paneForURI(uri);\n    if (previewPane) {\n        previewPane.destroyItem(previewPane.itemForURI(uri));\n        return true;\n    }\n    return false;\n}\nexports.removeConsoleForEditor = removeConsoleForEditor;\nfunction addConsoleForEditor(editor, state) {\n    return open(ConsoleView.RAMLConsoleView.getUriForEditor(editor), state);\n}\nexports.addConsoleForEditor = addConsoleForEditor;\nfunction addConsoleForFile(filename, state) {\n    return open(ConsoleView.RAMLConsoleView.getUriForFilename(filename), state);\n}\nexports.addConsoleForFile = addConsoleForFile;\nfunction opener(uri) {\n    try {\n        var result = url.parse(uri);\n        var protocol = result.protocol;\n        var host = result.host;\n        var pathname = result.pathname;\n    }\n    catch (err) {\n        return;\n    }\n    if (protocol !== 'raml-console:') {\n        return;\n    }\n    try {\n        pathname = decodeURI(pathname || '').substr(1);\n    }\n    catch (err) {\n        return;\n    }\n    if (host === 'editor') {\n        return createConsoleView({ editorId: pathname });\n    }\n    return createConsoleView({ filename: pathname });\n}\nexports.opener = opener;\nfunction shouldSplit() {\n    return atom.config.get('api-workbench.openConsoleInSplitPane');\n}\nfunction getWorkspaceOptions() {\n    return {\n        activatePane: false,\n        searchAllPanes: true,\n        split: shouldSplit() ? 'right' : undefined\n    };\n}\nfunction openView(raml, state) {\n    var pane = atom.workspace.getActivePane();\n    var item = createConsoleView({ raml: raml, state: state });\n    // TODO(blakeembrey): Fix RAML instance passed in, RAML 0.8 interface is dead.\n    if (shouldSplit()) {\n        pane = pane.findOrCreateRightmostSibling();\n    }\n    atom.workspace.itemOpened(item);\n    pane.activateItem(item);\n    return Promise.resolve(item);\n}\nexports.openView = openView;\nfunction open(uri, state) {\n    var workspaceOptions = getWorkspaceOptions();\n    var previousActivePane = atom.workspace.getActivePane();\n    return atom.workspace.open(uri, workspaceOptions)\n        .then(function (view) {\n        view.setState(state);\n        return view;\n    });\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/console/index.js\n ** module id = 3\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar path = require('path');\nvar fs = require('fs');\nvar UI = require(\"atom-ui-lib\");\nvar SC = require(\"../util/ScrollViewUI\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar childProcess = require('child_process');\nvar atom = require('../core/atomWrapper');\nvar fileDialogUtils = UI.fdUtils;\nvar XMLHttpRequestConstructor = require(\"xmlhttprequest\").XMLHttpRequest;\nvar mkdirp = require('mkdirp');\nvar defaultBranch = \"production\";\nfunction buildXHR() {\n    var x = new XMLHttpRequestConstructor;\n    return x;\n}\nvar ExecConfig = (function () {\n    function ExecConfig() {\n        this.callPath = null;\n        this.wrkDir = null;\n        this.logEnabled = false;\n        this.errLogEnabled = true;\n        this.messageBefore = '';\n        this.messageAfter = '';\n        this.messageError = '';\n        this.maxLogLength = -1;\n        this.onError = null;\n    }\n    return ExecConfig;\n})();\nfunction execProcess(config) {\n    try {\n        if (config.logEnabled) {\n            console.log(config.messageBefore);\n        }\n        var logObj = childProcess.execSync(config.callPath, {\n            cwd: config.wrkDir,\n            encoding: 'utf8',\n            stdio: [0, 1, 2]\n        });\n        if (config.logEnabled) {\n            console.log(config.messageAfter);\n            if (logObj) {\n                var log = logObj.toString();\n                if (log.trim().length > 0) {\n                    if (config.maxLogLength < 0) {\n                        console.log(log);\n                    }\n                    else if (config.maxLogLength > 0) {\n                        console.log(log.substring(0, Math.min(config.maxLogLength, log.length)));\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        if (config.onError) {\n            config.onError(err);\n        }\n        if (config.errLogEnabled) {\n            console.log(config.messageError);\n            console.log(err.message);\n        }\n    }\n}\nfunction branches(repoName, cb) {\n    var xhr = buildXHR();\n    var reposLink = 'https://api.github.com/repos/raml-apis/' + repoName + '/branches';\n    xhr.open(\"GET\", reposLink);\n    xhr.onload = function () {\n        var data = JSON.parse(xhr.responseText);\n        cb(data);\n    };\n    xhr.send();\n}\nfunction gitInstalled() {\n    var errorOccured = false;\n    var config = new ExecConfig();\n    config.callPath = 'git version';\n    config.wrkDir = fileDialogUtils.getHome();\n    config.logEnabled = true;\n    config.messageError = 'Git launch failed';\n    config.onError = function () {\n        errorOccured = true;\n    };\n    execProcess(config);\n    return !errorOccured;\n}\nexports.gitInstalled = gitInstalled;\nvar RamlOutline = (function (_super) {\n    __extends(RamlOutline, _super);\n    function RamlOutline() {\n        _super.apply(this, arguments);\n        this.disposables = new UI.CompositeDisposable();\n    }\n    RamlOutline.prototype.getTitle = function () {\n        return \"RAML Apis\";\n    };\n    RamlOutline.prototype.load = function () {\n        var reposLink = 'https://api.github.com/orgs/raml-apis/repos?per_page=200';\n        var sec = UI.section(\"RAML Apis\");\n        var xhr = buildXHR();\n        sec.addChild(UI.label(\"loading...\"));\n        this.html(sec.renderUI());\n        xhr.open(\"GET\", reposLink);\n        var outer = this;\n        var home = fileDialogUtils.getHome();\n        var dir = path.resolve(home, \"apis\");\n        var apiListData = require('../../util/config/apiList.json');\n        var secHC = UI.hc();\n        var sett = UI.a(\"Cloning to: \" + dir + \"(click to change)\", function (x) {\n            fileDialogUtils.openFolderDialog(\"Please enter new path to clone\", function (newVal) {\n                dir = newVal;\n                sett.setText(\"Cloning to: \" + dir + \"(click to change)\");\n            }, true, dir);\n        }, UI.Icon.SETTINGS, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n        secHC.addChild(sett);\n        var branchLink = UI.a(\"\" + defaultBranch, function (x) {\n            UI.prompt(\"Please enter name of the branch\", function (y) {\n                defaultBranch = y;\n                branchLink.setText(y);\n            }, defaultBranch);\n        }, UI.Icon.GIT_BRANCH, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n        branchLink.margin(10, 0);\n        var l = UI.list(apiListData, function (x) {\n            var uiLabel = UI.label(x.name, UI.Icon.REPO, UI.TextClasses.HIGHLIGHT, UI.HighLightClasses.NONE).pad(10, 10);\n            var buttonCallback = function () {\n                if (!fs.existsSync(dir)) {\n                    fs.mkdirSync(dir);\n                }\n                var ok = cloneRepo(x.git_url, dir);\n                if (ok) {\n                    var output = path.resolve(dir, x.name);\n                    if (!fs.existsSync(dir)) {\n                        fs.mkdirSync(dir);\n                    }\n                    var a = path.resolve(output, \"api.raml\");\n                    if (!fs.existsSync(a)) {\n                        a = path.resolve(output, x.name + \".raml\");\n                    }\n                    if (fs.existsSync(a)) {\n                        atom.open({ pathsToOpen: [output, a] });\n                    }\n                    else {\n                        atom.open({ pathsToOpen: [output] });\n                    }\n                }\n            };\n            var uiButton = UI.button(\"clone\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, buttonCallback);\n            return UI.hc(uiLabel, uiButton);\n        });\n        secHC.addChild(l);\n        outer.html(secHC.renderUI());\n    };\n    RamlOutline.prototype.attached = function () {\n        if (this._isAttached) {\n            return;\n        }\n        this.load();\n        this._isAttached = true;\n    };\n    RamlOutline.prototype.destroy = function () {\n        this.disposables.dispose();\n    };\n    return RamlOutline;\n})(SC.Scrollable);\nfunction info(name, callBack) {\n    var pane = null;\n    var section = UI.section(name, UI.Icon.BOOK, false, false);\n    var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n    buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n    var okButton = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n        pane.destroy();\n    });\n    buttonBar.addChild(okButton);\n    section.addChild(buttonBar);\n    pane = atom.workspace.addModalPanel({\n        item: section.renderUI()\n    });\n}\nexports.info = info;\nfunction cloneRepo(repo, dir, branch) {\n    if (branch === void 0) { branch = null; }\n    if (!branch) {\n        branch = defaultBranch;\n    }\n    var repoName = extractRepoName(repo);\n    mkdirp.sync(dir);\n    var ok = true;\n    var config = new ExecConfig();\n    config.callPath = 'git clone --branch ' + branch + ' \"' + repo + '\"';\n    config.wrkDir = dir;\n    config.logEnabled = true;\n    config.messageBefore = 'Cloning GIT repository: ' + repo;\n    config.messageAfter = 'Cloning complete: ' + repo;\n    config.messageError = 'Cloning failed: ' + repo;\n    config.onError = function (error) {\n        ok = false;\n        info(error.message, function () { return null; });\n    };\n    execProcess(config);\n    return ok;\n}\nfunction extractRepoName(repoPath) {\n    return repoPath.substring(repoPath.lastIndexOf('/') + 1, repoPath.lastIndexOf('.'));\n}\nfunction showPopularApis() {\n    if (!gitInstalled()) {\n        info(\"GIT is required to clone APIs. Please install GIT.\", function (x) { });\n        return;\n    }\n    editorTools.doSplit(new RamlOutline(), editorTools.SplitDirections.RIGHT);\n}\nexports.showPopularApis = showPopularApis;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/popular-apis/popular-apis.js\n ** module id = 4\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar path = require('path');\nvar atom = require('../core/atomWrapper');\nvar rp = require(\"raml-1-parser\");\nvar project = rp.project;\nvar detailsView = require(\"./details-view\");\nvar outlineView = require(\"./outline-view\");\nvar _bmc = 0;\nfunction benchmark(func) {\n    var t0 = new Date().getTime();\n    if (_bmc != 0 && func)\n        console.log(func + \" took \" + (t0 - _bmc) + \" miliseconds.\");\n    _bmc = t0;\n}\nvar EditorManager = (function () {\n    function EditorManager(display) {\n        var _this = this;\n        if (display === void 0) { display = true; }\n        this._initialized = false;\n        this.updateCount = 0;\n        this.outlineCount = 0;\n        this.fire = true;\n        this.opened = false;\n        this._cleanOutline = false;\n        this.performanceDebug = true;\n        this.placeholder = false;\n        manager = window[\"manager\"] = this;\n        atom.workspace.onDidChangeActivePaneItem(function (e) { return _this.updateEverything(display); });\n        this.updateEverything(display);\n        this.addAutoCloseListener();\n    }\n    EditorManager.prototype.getPath = function () {\n        console.log(\"ETM::GetPath\");\n        return this.currentEditor ? this.currentEditor.getPath() : null;\n    };\n    EditorManager.prototype.getCurrentEditor = function () { return this.currentEditor; };\n    EditorManager.prototype.internalScheduleUpdateViews = function (count) {\n        var _this = this;\n        this.updateCount = count;\n        setTimeout(function () {\n            if (_this.updateCount == count) {\n                _this.updateViews();\n            }\n        }, 500);\n    };\n    EditorManager.prototype.scheduleViewsUpdate = function () {\n        if (this.fire) {\n            this.internalScheduleUpdateViews(this.updateCount + 1);\n        }\n    };\n    EditorManager.prototype.internalScheduleOutlineUpdate = function (count) {\n        var _this = this;\n        this.outlineCount = count;\n        setTimeout(function () {\n            if (_this.outlineCount == count) {\n                _this.updateOutline();\n            }\n        }, 500);\n    };\n    EditorManager.prototype.scheduleOutlineUpdate = function () {\n        this.internalScheduleOutlineUpdate(this.outlineCount + 1);\n    };\n    EditorManager.prototype.addAutoCloseListener = function () {\n        var _this = this;\n        atom.workspace.onDidDestroyPane(function (evt) {\n            try {\n                var edcount = atom.workspace.getPaneItems().filter(function (e) {\n                    return e['softTabs'] != undefined;\n                }).length;\n                if (edcount == 0) {\n                    _this.ast = null;\n                    _this.unit = null;\n                    _this._currentNode = null;\n                    _this.currentEditor = null;\n                    global.cleanCache();\n                    if (atom.workspace.paneForItem(_this._view))\n                        atom.workspace.paneForItem(_this._view).destroy();\n                    if (atom.workspace.paneForItem(_this._details))\n                        atom.workspace.paneForItem(_this._details).destroy();\n                    _this.opened = false;\n                }\n            }\n            catch (e) {\n                //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n                console.log(e);\n            }\n        });\n    };\n    EditorManager.prototype.getOrCreateView = function () {\n        if (!this._view) {\n            this._view = new outlineView.RamlOutline();\n            if (this.ast) {\n                this._view.setUnit(this.ast);\n            }\n        }\n        return this._view;\n    };\n    EditorManager.prototype.getDetails = function () {\n        if (!this._details)\n            this._details = new detailsView.RamlDetails();\n        return this._details;\n    };\n    EditorManager.prototype.updateDetails = function () {\n        this.getDetails().update();\n    };\n    EditorManager.prototype.reparseAST = function () {\n        var _this = this;\n        if (this.currentEditor) {\n            var _path = this.currentEditor.getPath();\n            var bf = this.currentEditor.getBuffer();\n            var prj = project.createProject(path.dirname(_path));\n            var unit = prj.setCachedUnitContent(path.basename(_path), this.currentEditor.getBuffer().getText());\n            unit.project().addTextChangeListener(function (delta) {\n                if (delta.unit != unit) {\n                    return;\n                }\n                var cm = delta.offset;\n                var end = delta.replacementLength;\n                var text = delta.text;\n                var buffer = _this.currentEditor.getBuffer();\n                var start = buffer.positionForCharacterIndex(cm);\n                var endPosition = buffer.positionForCharacterIndex(cm + end);\n                try {\n                    _this.fire = false;\n                    buffer.setTextInRange({ start: start, end: endPosition }, text);\n                    _this.scheduleOutlineUpdate();\n                }\n                finally {\n                    _this.fire = true;\n                }\n            });\n            this.ast = unit.highLevel();\n            this.unit = unit;\n        }\n    };\n    EditorManager.prototype.isETPane = function (pane) {\n        if (!this._view) {\n            return;\n        }\n        var items = pane.getItems();\n        return (items.indexOf(this.getDetails()) >= 0 || items.indexOf(this._view) >= 0);\n    };\n    EditorManager.prototype.display = function () {\n        console.log(\"ETM::Display\");\n        var aw = atom.workspace;\n        var fpane = atom.workspace.paneForItem(this.getCurrentEditor());\n        if (!fpane)\n            return;\n        if (!aw.paneForItem(this.getOrCreateView()))\n            doSplit(this.getOrCreateView());\n        if (!aw.paneForItem(manager.getDetails()))\n            doSplit(this.getDetails(), SplitDirections.BOTTOM);\n        this.opened = true;\n    };\n    EditorManager.prototype.updateText = function (node) {\n        this.fire = false;\n        var editor = this.currentEditor;\n        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n        editor.setText(this.unit.contents());\n        this.fire = true;\n        if (pos)\n            editor.setCursorBufferPosition(pos);\n    };\n    EditorManager.prototype.selectNode = function (hnode) {\n        var node = hnode.lowLevel();\n        if (!node)\n            return;\n        var editor = this.currentEditor;\n        if (!editor)\n            return;\n        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n        if (pos)\n            editor.setCursorBufferPosition(pos);\n    };\n    EditorManager.prototype.updateEverything = function (display) {\n        if (display === void 0) { display = true; }\n        var editor = atom.workspace.getActiveTextEditor();\n        if (!editor || this.currentEditor == editor)\n            return;\n        var pth = editor.getPath();\n        if (!pth || path.extname(pth) != \".raml\")\n            return;\n        this.currentEditor = editor;\n        if (this.opened == false && display)\n            this.display();\n        if (!editor.patched) {\n            this.addListenersToEditor(editor);\n        }\n        this.reparseAST();\n        var pos = editor.getBuffer().characterIndexForPosition(editor.getCursorBufferPosition());\n        this.positionUpdated(pos);\n        this.scheduleViewsUpdate();\n    };\n    EditorManager.prototype.addListenersToEditor = function (cedit) {\n        var _this = this;\n        var buffer = cedit.getBuffer();\n        buffer.onDidChange(function (x) {\n            try {\n                var t0 = new Date().getMilliseconds();\n                _this.reparseAST();\n                var pos = buffer.characterIndexForPosition(cedit.getCursorBufferPosition());\n                _this.positionUpdated(pos);\n                _this.scheduleViewsUpdate();\n                var t1 = new Date().getMilliseconds();\n                if (_this.performanceDebug) {\n                    console.log(\"Change take:\" + (t1 - t0));\n                }\n            }\n            catch (e) {\n                console.log(e);\n            }\n        });\n        //updating ast node on position change\n        cedit.getLastCursor().onDidChangePosition(function (x) {\n            if (!_this.fire)\n                return;\n            _this.positionUpdated(buffer.characterIndexForPosition(cedit.getCursorBufferPosition()));\n            _this.scheduleViewsUpdate();\n        });\n        this.addListenersOnMove(cedit);\n        this.currentEditor.patched = true;\n    };\n    EditorManager.prototype.addListenersOnMove = function (cedit) {\n        var _this = this;\n        var movingPane = false;\n        atom.workspace.onDidAddPaneItem(function (event) {\n            if (movingPane || _this.isETPane(event.pane) == false || event.item == _this.getOrCreateView() || event.item == _this.getDetails())\n                return event;\n            setTimeout(function () {\n                try {\n                    var fpane = atom.workspace.paneForItem(cedit);\n                    if (fpane) {\n                        movingPane = true;\n                        event.pane.moveItemToPane(event.item, fpane, null);\n                        movingPane = false;\n                        fpane.setActiveItem(event.item);\n                        fpane.activate();\n                    }\n                }\n                catch (e) {\n                    //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n                    console.log(e);\n                }\n            }, 18);\n        });\n    };\n    //_selectedNode: hl.IHighLevelNode;\n    EditorManager.prototype.patchCurrentNode = function (n) {\n        this._currentNode = n;\n    };\n    EditorManager.prototype.getCurrentNode = function () {\n        if (this._currentNode == null)\n            return this._currentNode = this.ast;\n        else\n            return this._currentNode;\n    };\n    EditorManager.prototype.setSelectedNode = function (node) {\n        //this._selectedNode = node;\n        if (this.unit) {\n            var unitPath = this.unit.absolutePath();\n            while (node.lowLevel().unit().absolutePath() != unitPath) {\n                if (!node.parent()) {\n                    break;\n                }\n                else {\n                    node = node.parent();\n                }\n            }\n        }\n        var id = node.id();\n        var anode = this.ast.findById(id);\n        if (anode) {\n            node = anode;\n        }\n        if (this._details) {\n            this._details.show(node);\n        }\n        var editor = this.getCurrentEditor();\n        if (editor) {\n            this.fire = false;\n            try {\n                var buffer = editor.getBuffer();\n                var posStart = buffer.positionForCharacterIndex(node.lowLevel().start());\n                var posEnd = buffer.positionForCharacterIndex(node.lowLevel().end());\n                editor.setCursorBufferPosition(posStart);\n                this.positionUpdated(buffer.characterIndexForPosition(editor.getCursorBufferPosition()));\n            }\n            finally {\n                this.fire = true;\n            }\n        }\n    };\n    EditorManager.prototype.getSelectedNode = function () {\n        return this.getCurrentNode();\n        //else return this._selectedNode;\n    };\n    EditorManager.prototype.setText = function (text) {\n        console.log(\"ETM::SetText\");\n        var editor = this.currentEditor;\n        if (editor == null)\n            return;\n        editor.setText(text);\n    };\n    EditorManager.prototype.updateViews = function () {\n        var cNode = this.getCurrentNode();\n        var ds = new Date().getMilliseconds();\n        if (this._details) {\n            this.getDetails().show(cNode);\n        }\n        if (this._view) {\n            this.getOrCreateView().setUnit(manager.ast);\n            this.getOrCreateView().setSelection(cNode);\n        }\n        var d1 = new Date().getMilliseconds();\n        if (this.performanceDebug) {\n            console.log(\"Views update:\" + (d1 - ds));\n        }\n    };\n    EditorManager.prototype.updateOutline = function () {\n        var cNode = this.getCurrentNode();\n        var ds = new Date().getMilliseconds();\n        if (this._view) {\n            this.getOrCreateView().setUnit(manager.ast);\n            this.getOrCreateView().setSelection(cNode);\n        }\n        var d1 = new Date().getMilliseconds();\n        if (this.performanceDebug) {\n            console.log(\"Outline update:\" + (d1 - ds));\n        }\n    };\n    EditorManager.prototype.positionUpdated = function (newPosition) {\n        this.currentPosition = newPosition;\n        if (this.ast) {\n            this._currentNode = this.ast.findElementAtOffset(this.currentPosition);\n        }\n    };\n    return EditorManager;\n})();\nvar manager = null;\nfunction initEditorTools(display) {\n    if (display === void 0) { display = true; }\n    if (manager == null)\n        manager = new EditorManager(display);\n    else if (display)\n        manager.display();\n}\nexports.initEditorTools = initEditorTools;\nfunction editorToolsStatus() {\n    return manager != null && manager.opened;\n}\nexports.editorToolsStatus = editorToolsStatus;\nfunction aquireManager() {\n    if (!manager) {\n        manager = new EditorManager(true);\n    }\n    return manager;\n}\nexports.aquireManager = aquireManager;\nfunction updateAndSelect(node) {\n    if (aquireManager()._view) {\n        aquireManager()._view.refresh();\n    }\n    aquireManager().updateText();\n    aquireManager().selectNode(node);\n}\nexports.updateAndSelect = updateAndSelect;\n(function (SplitDirections) {\n    SplitDirections[SplitDirections[\"RIGHT\"] = 0] = \"RIGHT\";\n    SplitDirections[SplitDirections[\"LEFT\"] = 1] = \"LEFT\";\n    SplitDirections[SplitDirections[\"TOP\"] = 2] = \"TOP\";\n    SplitDirections[SplitDirections[\"BOTTOM\"] = 3] = \"BOTTOM\";\n})(exports.SplitDirections || (exports.SplitDirections = {}));\nvar SplitDirections = exports.SplitDirections;\nfunction doSplit(value, dir) {\n    if (dir === void 0) { dir = SplitDirections.RIGHT; }\n    var newPane = null;\n    switch (dir) {\n        case SplitDirections.BOTTOM:\n            newPane = atom.workspace.getActivePane().splitDown({});\n            break;\n        case SplitDirections.TOP:\n            newPane = atom.workspace.getActivePane().splitUp({});\n            break;\n        case SplitDirections.LEFT:\n            newPane = atom.workspace.getActivePane().splitLeft({});\n            break;\n        case SplitDirections.RIGHT:\n            newPane = atom.workspace.getActivePane().splitRight({});\n            break;\n    }\n    newPane.addItem(value, 0);\n    return newPane;\n}\nexports.doSplit = doSplit;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/editor-tools.js\n ** module id = 5\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar qcui = require('./quick-commands-ui');\nvar atom = require('../core/atomWrapper');\nvar contextActions = require(\"raml-actions\");\nvar cc = require('./code-commands');\nvar et = require('../editor-tools/editor-tools');\n/*\n * Quick command is a command object that stores command info, body and filtering function\n */\nvar QuickCommand = (function () {\n    function QuickCommand(id, title, command, priority, when) {\n        this.id = id;\n        this.title = title;\n        this.command = command;\n        this.priority = priority;\n        this.when = when;\n    }\n    QuickCommand.prototype.registerAsAtomCommand = function (target) {\n        if (this.atomCommand && this.atomCommand.disposed == false)\n            this.atomCommand.dispose();\n        this.atomCommand = atom.commands.add(target, this.id, this.command);\n    };\n    QuickCommand.prototype.dispose = function () {\n        if (this.atomCommand && this.atomCommand.disposed == false)\n            this.atomCommand.dispose();\n        cm.unregister(this);\n    };\n    return QuickCommand;\n})();\nexports.QuickCommand = QuickCommand;\n/*\n * Command manager manages quick commands.\n * All quick commands should be registered here.\n * For usage example, see registerCommands\n */\nvar CommandManager = (function () {\n    function CommandManager() {\n        this.commands = {};\n        this.panel = new qcui.SelectListView(function (command) { return command.command(); }, function (command) { return command.title; }, 'title');\n    }\n    CommandManager.prototype.register = function (cmd) {\n        if (this.commands[cmd.id] != null)\n            this.unregister(cmd.id);\n        this.commands[cmd.id] = cmd;\n        return cmd;\n    };\n    CommandManager.prototype.unregister = function (cmd) {\n        if (typeof (cmd) == \"string\")\n            this.unregister(this.commands[cmd]);\n        var qcmd = cmd;\n        if (qcmd == null)\n            return null;\n        delete this.commands[qcmd.id];\n        return qcmd;\n    };\n    CommandManager.prototype.add = function (id, title, command, when, priority, atomTarget) {\n        var cmd = new QuickCommand(id, title, command, priority ? priority : 0, when ? when : function () { return true; });\n        if (atomTarget)\n            cmd.registerAsAtomCommand(atomTarget);\n        this.register(cmd);\n        return cmd;\n    };\n    CommandManager.prototype.show = function (predicate) {\n        var joinedCommands = {};\n        for (var commandId in this.commands) {\n            joinedCommands[commandId] = this.commands[commandId];\n        }\n        this.getDynamicCommands().forEach(function (currentCommand) {\n            joinedCommands[currentCommand.id] = currentCommand;\n        });\n        var list = Object.keys(joinedCommands)\n            .map(function (key) { return joinedCommands[key]; })\n            .sort(function (a, b) { return b.priority - a.priority; })\n            .filter(function (cmd) { return cmd.when(); });\n        if (predicate)\n            list = list.filter(predicate);\n        this.panel.show(list);\n    };\n    CommandManager.prototype.getDynamicCommands = function () {\n        var result = [];\n        var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n        currentActions.forEach(function (action) {\n            var convertedQuickCommand = new QuickCommand(action.name, action.label ? action.label : action.name, action.onClick, 1, function () { return true; });\n            var cmd = convertedQuickCommand;\n            cmd['__module__'] = 'editorTools';\n            result.push(convertedQuickCommand);\n        });\n        return result;\n    };\n    return CommandManager;\n})();\nexports.CommandManager = CommandManager;\nvar cm;\n/*\n * Always return working copy of manager.\n */\nfunction manager() {\n    if (!cm)\n        cm = new CommandManager();\n    return cm;\n}\nexports.manager = manager;\n/*\n * function for RAML -> Show Quick Commands (^Q)\n */\nfunction showCommands() {\n    manager().show();\n}\nexports.showCommands = showCommands;\n/*\n * registerCommands is called at the plugin initialization for registering global commands\n */\nfunction registerCommands() {\n    cc.registerQuickCommands(manager());\n    cm.add('api-workbench:editor-tools', 'Show Editor Tools', function () { return et.initEditorTools(); }, function () { return et.editorToolsStatus() == false; });\n}\nexports.registerCommands = registerCommands;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/quick-commands.js\n ** module id = 6\n ** module chunks = 0\n **/","var fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar search = rp.search;\nvar _ = require('underscore');\nvar suggestions = require('raml-suggestions');\nexports.selector = '.source.raml';\nexports.disableForSelector = '.text.html .comment';\nexports.filterSuggestions = true;\nexports.inclusionPriority = 1;\nexports.excludeLowerPriority = true;\nvar editorTools = require(\"../editor-tools/editor-tools\");\nfunction onDidInsertSuggestion(event) {\n    var offset = event.editor.getBuffer().characterIndexForPosition(event.triggerPosition);\n    if (event.suggestion.annotation) {\n        var txt = event.editor.getBuffer().getText();\n        for (var i = offset; i < txt.length; i++) {\n            var c = txt.charAt(i);\n            if (c == ')') {\n                offset = i + 1;\n                break;\n            }\n            if (c == '\\r' || c == '\\n') {\n                return;\n            }\n        }\n        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n        event.editor.getBuffer().insert(newPos, ':');\n        return;\n    }\n    if ((event.suggestion.replacementPrefix && event.suggestion.extra) || event.suggestion.extra == \"%\") {\n        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset - event.suggestion.replacementPrefix.length);\n        event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n    }\n    else {\n        //This actually looks exactly like a previous case but typing it as a separate case for now TODO\n        if (event.suggestion.extra == \" \") {\n            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n        }\n        //FIXME\n        if (event.suggestion.extra == \" { \") {\n            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n        }\n        if (event.suggestion.extra && event.suggestion.extra.indexOf(\"!include\") != -1) {\n            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n        }\n    }\n}\nexports.onDidInsertSuggestion = onDidInsertSuggestion;\nvar FSProvider = (function () {\n    function FSProvider() {\n    }\n    FSProvider.prototype.contentDirName = function (content) {\n        var contentPath = content.getPath();\n        return path.dirname(contentPath);\n    };\n    FSProvider.prototype.dirName = function (childPath) {\n        return path.dirname(childPath);\n    };\n    FSProvider.prototype.exists = function (checkPath) {\n        return fs.existsSync(checkPath);\n    };\n    FSProvider.prototype.resolve = function (contextPath, relativePath) {\n        return path.resolve(contextPath, relativePath);\n    };\n    FSProvider.prototype.isDirectory = function (dirPath) {\n        var stat = fs.statSync(dirPath);\n        return stat && stat.isDirectory();\n    };\n    FSProvider.prototype.readDir = function (dirPath) {\n        return fs.readdirSync(dirPath);\n    };\n    FSProvider.prototype.existsAsync = function (path) {\n        return new Promise(function (resolve) {\n            fs.exists(path, function (result) { resolve(result); });\n        });\n    };\n    /**\n     * Returns directory content list.\n     * @param fullPath\n     */\n    FSProvider.prototype.readDirAsync = function (path) {\n        return new Promise(function (resolve) {\n            fs.readdir(path, function (err, result) { resolve(result); });\n        });\n    };\n    /**\n     * Check whether the path points to a directory.\n     * @param fullPath\n     */\n    FSProvider.prototype.isDirectoryAsync = function (path) {\n        return new Promise(function (resolve) {\n            fs.stat(path, function (err, stats) { resolve(stats.isDirectory()); });\n        });\n    };\n    return FSProvider;\n})();\nvar AtomEditorState = (function () {\n    function AtomEditorState(textEditor, request) {\n        this.request = request;\n        this.textEditor = textEditor;\n    }\n    AtomEditorState.prototype.getText = function () {\n        return this.textEditor.getBuffer().getText();\n    };\n    AtomEditorState.prototype.getPath = function () {\n        return this.textEditor.getPath();\n    };\n    AtomEditorState.prototype.getBaseName = function () {\n        return path.basename(this.getPath());\n    };\n    AtomEditorState.prototype.getOffset = function () {\n        return this.request.editor.getBuffer().characterIndexForPosition(this.request.bufferPosition);\n    };\n    return AtomEditorState;\n})();\nfunction getSuggestions(request) {\n    var t0 = new Date().getMilliseconds();\n    try {\n        var editorState = new AtomEditorState(request.editor, request);\n        return suggestions.suggest(editorState, new FSProvider());\n    }\n    finally {\n        if (editorTools.aquireManager()) {\n            var m = editorTools.aquireManager();\n            if (m.performanceDebug) {\n                var t1 = new Date().getMilliseconds();\n                console.log(\"Completion calc:\" + (t1 - t0));\n            }\n        }\n    }\n}\nexports.getSuggestions = getSuggestions;\nfunction getAstNode(request, clearLastChar, allowNull) {\n    if (clearLastChar === void 0) { clearLastChar = true; }\n    if (allowNull === void 0) { allowNull = true; }\n    var p = request.editor.getPath();\n    var prj = rp.project.createProject(path.dirname(p));\n    var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n    var text = request.editor.getBuffer().getText();\n    var kind = search.determineCompletionKind(text, offset);\n    if (kind == search.LocationKind.KEY_COMPLETION && clearLastChar) {\n        var pos = offset > 0 ? offset - 1 : offset;\n        for (var i = pos; i > 0; i--) {\n            var c = text[i];\n            if (c == '\\r' || c == '\\n') {\n                break;\n            }\n            else {\n                if (c == ' ' || c == '\\t') {\n                    ilevel++;\n                }\n            }\n        }\n        var oldOfffset = offset;\n        text = text.substring(0, oldOfffset) + \"k:\" + text.substring(oldOfffset);\n    }\n    var ilevel = 0;\n    var unit = prj.setCachedUnitContent(path.basename(p), text);\n    var ast = unit.highLevel();\n    var cm = offset;\n    for (var pm = offset - 1; pm >= 0; pm--) {\n        var c = text[pm];\n        //if (c==' '||c=='\\t'||c=='\\r'||c=='\\n'){\n        //    cm=pm-1;\n        //    continue;\n        //}\n        if (c == ' ' || c == '\\t') {\n            cm = pm - 1;\n            continue;\n        }\n        break;\n    }\n    var astNode = ast.findElementAtOffset(cm);\n    if (astNode && astNode.parent() == null) {\n        if (ilevel > 0 && kind == search.LocationKind.KEY_COMPLETION) {\n            var attr = _.find(astNode.attrs(), function (attr) {\n                var at = attr;\n                return at.lowLevel().start() < offset && at.lowLevel().end() >= offset && !at.property().isKey();\n            });\n            if (!attr) {\n                if (allowNull) {\n                    return null;\n                }\n            }\n        }\n    }\n    if (!allowNull && !astNode) {\n        return ast;\n    }\n    return astNode;\n}\nexports.getAstNode = getAstNode;\nfunction saveUnit(unit) {\n    var unitPath = unit.absolutePath();\n    var unitText = unit.contents();\n    //first trying to find an opened text editor\n    var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n        var editorPath = editor.getPath();\n        return editorPath == unitPath;\n    });\n    if (openedEditor) {\n        openedEditor.setText(unitText);\n    }\n    else {\n        fs.writeFileSync(unitPath, unitText);\n    }\n}\nexports.saveUnit = saveUnit;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/suggestion/provider.js\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar path = require('path');\nvar fs = require('fs');\nvar atom_space_pen_views_1 = require(\"atom-space-pen-views\");\nvar provider = require('../suggestion/provider');\nvar tooltipManager = require(\"../core/tooltip-manager\");\nvar UI = require(\"atom-ui-lib\");\nvar outline = require(\"../editor-tools/outline-view\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar QuickOutlineDialog = (function () {\n    function QuickOutlineDialog(_editor) {\n        this._editor = _editor;\n    }\n    QuickOutlineDialog.prototype.extraContent = function (s) {\n    };\n    QuickOutlineDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var nodeToSelect = null;\n        var node = provider.getAstNode({ bufferPosition: this._editor.getCursorBufferPosition(), editor: this._editor }, false, false);\n        var vc = UI.section(\"Quick outline:\");\n        var section = outline.createTree(node.root(), function (x) {\n            if (x.selection) {\n                if (x.selection.elements.length > 0) {\n                    nodeToSelect = x.selection.elements[0];\n                    ok.setDisabled(false);\n                    return;\n                }\n            }\n            ok.setDisabled(true);\n        }, function (model) {\n            var editor = _this._editor;\n            var buffer = editor.getBuffer();\n            var posStart = buffer.positionForCharacterIndex(model.lowLevel().start());\n            editor.setCursorScreenPosition(posStart);\n            zz.destroy();\n        });\n        section.setStyle(\"max-height\", \"800px\");\n        section.addClass(\"tree-view-scroller\");\n        vc.addChild(section);\n        var cancel = UI.buttonSimple(\"Cancel\", function (x) { zz.destroy(); }, UI.Icon.NONE);\n        cancel.setStyle(\"float\", \"right\")\n            .margin(4, 10);\n        var ok = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) {\n            if (nodeToSelect) {\n                editorTools.aquireManager().setSelectedNode(nodeToSelect);\n            }\n            zz.destroy();\n        });\n        ok.setStyle(\"float\", \"right\")\n            .margin(4, 10);\n        ok.setDisabled(true);\n        vc.addChild(ok);\n        vc.addChild(cancel);\n        var html = vc.renderUI();\n        html.tabIndex = 0;\n        html.onkeypress = function (x) {\n            if (x.keyCode == 27) {\n                zz.destroy();\n            }\n        };\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return QuickOutlineDialog;\n})();\nfunction showQuickOutline(editor) {\n    new QuickOutlineDialog(editor).show();\n}\nfunction pixelPositionFromMouseEvent(editorView) {\n    var clientX = 0, clientY = 0;\n    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n    var top = clientY - linesClientRect.top;\n    var left = clientX - linesClientRect.left;\n    return { top: top, left: left };\n}\nfunction getFromShadowDom(element, selector) {\n    var el = element[0];\n    var found = el.rootElement.querySelectorAll(selector);\n    return atom_space_pen_views_1.$(found[0]);\n}\nfunction show() {\n    var ed = atom.workspace.getActiveTextEditor();\n    if (!ed) {\n        return;\n    }\n    var filePath = ed.getPath();\n    var filename = path.basename(filePath);\n    var ext = path.extname(filename);\n    if (!tooltipManager.isAllowedExtension(ext))\n        return;\n    if (!fs.existsSync(filePath)) {\n        return;\n    }\n    showQuickOutline(ed);\n}\nexports.show = show;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-outline/quick-outline.js\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar stubs = rp.stubs;\nvar universes = rp.universes;\nvar search = rp.search;\nvar _ = require(\"underscore\");\nvar provider = require(\"../suggestion/provider\");\nvar UI = require(\"atom-ui-lib\");\nvar SpacePenViews = require('atom-space-pen-views');\nvar def = rp.ds;\nvar services = def;\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar index_1 = require(\"raml-1-parser/dist/index\");\nfunction createGlobalSchema(attr) {\n    var r = attr.parent().root();\n    var t = attr.property().range().universe().type(\"GlobalSchema\");\n    var sc = stubs.createStubNode(t, t.universe().type(\"Api\").property(\"schemas\"), \"\" + attr.value());\n    sc.attrOrCreate(\"value\").setValue(\"!include \" + \"schemas/\" + attr.value() + \".json\");\n    r.add(sc);\n    var ed = atom.workspace.getActiveTextEditor();\n    ed.getBuffer().setText(r.lowLevel().unit().contents());\n    var sdir = path.resolve(path.dirname(ed.getPath()), \"schemas\");\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = path.resolve(sdir, attr.value() + \".json\");\n    fs.writeFileSync(shFile, \"\\n{\\n  \\\"$schema\\\" : \\\"http://json-schema.org/draft-04/schema\\\" ,\\n  \\\"type\\\" : \\\"object\\\" ,\\n  \\\"properties\\\" : {\\n   }\\n}\\n\");\n    atom.workspace.open(shFile, {});\n}\nexports.createGlobalSchema = createGlobalSchema;\nfunction createGlobalSchemaFromNameAndContent(root, name, schp, content, absolutePath) {\n    if (index_1.universeHelpers.isRAML10Node(root)) {\n        createGlobalSchemaFromNameAndContent10(root, name, schp, content, absolutePath);\n    }\n    else if (index_1.universeHelpers.isRAML08Node(root)) {\n        createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath);\n    }\n}\nexports.createGlobalSchemaFromNameAndContent = createGlobalSchemaFromNameAndContent;\nfunction createSchemaFile(content, schemaPath, absolutePath) {\n    var ed = getActiveEditor();\n    var sdir = absolutePath ? path.dirname(absolutePath) : path.resolve(path.dirname(ed.getPath()), path.dirname(schemaPath));\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = absolutePath ? absolutePath : path.resolve(path.dirname(ed.getPath()), schemaPath);\n    fs.writeFileSync(shFile, content);\n}\nfunction createGlobalSchemaFromNameAndContent10(root, name, schemaPath, content, absolutePath) {\n    var t = root.definition().universe().type(universes.Universe10.TypeDeclaration.name);\n    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe10.Api.name).property(universes.Universe10.Api.properties.types.name), \"\" + name);\n    sc.attrOrCreate(universes.Universe10.TypeDeclaration.properties.type.name).setValue(\"!include \" + schemaPath);\n    root.add(sc);\n    createSchemaFile(content, schemaPath, absolutePath);\n}\nexports.createGlobalSchemaFromNameAndContent10 = createGlobalSchemaFromNameAndContent10;\nfunction createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath) {\n    var t = root.definition().universe().type(universes.Universe08.GlobalSchema.name);\n    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe08.Api.name).property(universes.Universe08.Api.properties.schemas.name), \"\" + name);\n    sc.attrOrCreate(universes.Universe08.GlobalSchema.properties.value.name).setValue(\"!include \" + schp);\n    root.add(sc);\n    createSchemaFile(content, schp, absolutePath);\n}\nexports.createGlobalSchemaFromNameAndContent08 = createGlobalSchemaFromNameAndContent08;\nfunction saveExample(r, schp, content) {\n    var ed = getActiveEditor();\n    var sdir = path.resolve(path.dirname(ed.getPath()), path.dirname(schp));\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = path.resolve(path.dirname(ed.getPath()), schp);\n    fs.writeFileSync(shFile, content);\n}\nexports.saveExample = saveExample;\nvar NewProjectDialog = (function () {\n    function NewProjectDialog(title) {\n        if (title === void 0) { title = \"Create RAML Project\"; }\n        this.title = title;\n        this.apititle = \"New API\";\n        this.version = \"v1\";\n        this.baseUri = \"http://api.samplehost.com\";\n        this._raml1 = true;\n        this._defStructure = true;\n        this._createSampleResource = true;\n        this.sourceValue = path.resolve(this.generateDefaultProjectParentFolder(), \"newRamlProject\");\n    }\n    NewProjectDialog.prototype.generateDefaultProjectParentFolder = function () {\n        return UI.fdUtils.getHome();\n    };\n    NewProjectDialog.prototype.extraContent = function (s) {\n    };\n    NewProjectDialog.prototype.validateProjectLocation = function (value) {\n        var toValidate = value ? value.trim() : \"\";\n        if (!toValidate) {\n            return UI.errorStatus(\"Path should't be empty\");\n        }\n        var parentDirectory = path.dirname(toValidate);\n        if (!parentDirectory || parentDirectory == \".\")\n            return UI.errorStatus(\"Can not find path parent\");\n        if (!fs.existsSync(parentDirectory))\n            return UI.errorStatus(\"Parent directory does not exist\");\n        return UI.okStatus();\n    };\n    NewProjectDialog.prototype.validateTitle = function (value) {\n        var toValidate = value ? value.trim() : \"\";\n        if (!toValidate || toValidate.length < 1) {\n            return UI.errorStatus(\"Title field is required\");\n        }\n        return UI.okStatus();\n    };\n    NewProjectDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var section = UI.section(this.title, UI.Icon.BOOK, false, false, UI.h3(\"Please select location to place your project:\")).pad(10, 10);\n        var panel = new UI.Panel(UI.LayoutType.BLOCK);\n        var statusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n        var slf = new UI.CustomField(\"\", statusLabel, function (x) { return x; });\n        slf.setDisplay(this.validateProjectLocation(this.sourceValue).code == UI.StatusCode.ERROR);\n        panel.addChild(slf);\n        var projectLocationInput = UI.texfField(\"\", this.sourceValue, function (x) { return _this.sourceValue = x.getBinding().get(); });\n        projectLocationInput.getBinding().addValidator(function () { return _this.validateProjectLocation(_this.sourceValue); });\n        projectLocationInput.setStyle(\"width\", \"400px\");\n        projectLocationInput.getBinding().addListener(function (value) {\n            //var st = projectLocationInput.getBinding().status()\n            var st = _this.validateProjectLocation(value);\n            if (st.code != UI.StatusCode.ERROR) {\n                //this.updateUI(q, x)\n                statusLabel.setText(\"\");\n                statusLabel.setIcon(UI.Icon.NONE);\n                slf.setDisplay(false);\n            }\n            else {\n                statusLabel.setText(st.message);\n                statusLabel.setIcon(UI.Icon.BUG);\n                slf.setDisplay(true);\n            }\n        });\n        panel.addChild(\n        //UI.hc(\n        projectLocationInput);\n        panel.addChild(UI.h3(\"Title of your API:\"));\n        var titleStatusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n        var titleStatusMessage = new UI.CustomField(\"\", titleStatusLabel, function (x) { return x; });\n        titleStatusMessage.setDisplay(false);\n        panel.addChild(titleStatusMessage);\n        var titleTextField = UI.texfField(\"\", this.apititle, function (x) { return _this.apititle = x.getBinding().get(); });\n        titleTextField.getBinding().addValidator(function () { return _this.validateTitle(_this.apititle); });\n        titleTextField.getBinding().addListener(function (value) {\n            var status = _this.validateTitle(value);\n            if (status.code !== UI.StatusCode.ERROR) {\n                titleStatusLabel.setText(\"\");\n                titleStatusLabel.setIcon(UI.Icon.NONE);\n                titleStatusMessage.setDisplay(false);\n            }\n            else {\n                titleStatusLabel.setText(status.message);\n                titleStatusLabel.setIcon(UI.Icon.BUG);\n                titleStatusMessage.setDisplay(true);\n            }\n        });\n        panel.addChild(titleTextField);\n        panel.addChild(UI.h3(\"Version of your API\"));\n        panel.addChild(UI.texfField(\"\", this.version, function (x) { return _this.version = x.getBinding().get(); }));\n        panel.addChild(UI.h3(\"Base URI of your API\"));\n        panel.addChild(UI.texfField(\"\", this.baseUri, function (x) { return _this.baseUri = x.getBinding().get(); }));\n        section.addChild(panel);\n        var r1 = UI.checkBox(\"Use RAML 1.0\");\n        r1.setValue(this._raml1);\n        r1.getBinding().addListener(function (x) { return _this._raml1 = r1.getValue(); });\n        section.addChild(r1);\n        var r2 = UI.checkBox(\"Create default directory structure\");\n        r2.setValue(this._defStructure);\n        r2.getBinding().addListener(function (x) { return _this._defStructure = r2.getValue(); });\n        section.addChild(r2);\n        var r3 = UI.checkBox(\"Create sample resource and method\");\n        r3.setValue(this._createSampleResource);\n        r3.getBinding().addListener(function (x) { return _this._createSampleResource = r3.getValue(); });\n        section.addChild(r3);\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        buttonBar.addChild(UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            if (_this.validateTitle(_this.apititle).code === UI.StatusCode.ERROR) {\n                return;\n            }\n            if (_this.validateProjectLocation(_this.sourceValue).code === UI.StatusCode.ERROR) {\n                return;\n            }\n            _this.onOk(zz);\n            zz.destroy();\n        }));\n        section.addChild(buttonBar);\n        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n    };\n    NewProjectDialog.prototype.createIfNotExist = function (p) {\n        var ps = path.resolve(this.sourceValue, p);\n        if (!fs.existsSync(ps)) {\n            fs.mkdirSync(ps);\n        }\n    };\n    NewProjectDialog.prototype.onOk = function (zz) {\n        if (!fs.existsSync(this.sourceValue)) {\n            fs.mkdirSync(this.sourceValue);\n        }\n        if (this._defStructure) {\n            this.createIfNotExist(\"schemas\");\n            this.createIfNotExist(\"examples\");\n            this.createIfNotExist(\"traits\");\n            this.createIfNotExist(\"resourceTypes\");\n            this.createIfNotExist(\"securitySchemes\");\n            this.createIfNotExist(\"documentation\");\n            if (this._raml1) {\n                this.createIfNotExist(\"notebooks\");\n                this.createIfNotExist(\"scripts\");\n            }\n        }\n        var content = createRAMLFile(this.apititle, this.version, this.baseUri, this._createSampleResource, this._raml1);\n        var ps = path.resolve(this.sourceValue, \"api.raml\");\n        fs.writeFileSync(ps, content);\n        atom.open({ pathsToOpen: [this.sourceValue, ps] });\n    };\n    return NewProjectDialog;\n})();\nfunction createRAMLFile(title, version, baseUri, sample, raml1) {\n    if (sample === void 0) { sample = true; }\n    if (raml1 === void 0) { raml1 = true; }\n    var apiLines = [(raml1 ? \"#%RAML 1.0\" : \"#%RAML 0.8\"), (\"title: \" + title)];\n    if (version)\n        apiLines.push(\"version: \" + version);\n    if (baseUri)\n        apiLines.push(\"baseUri: \" + baseUri);\n    var typesLines = [\n        'types:',\n        '  TestType:',\n        '    type: object',\n        '    properties:',\n        '      id: number',\n        '      optional?: string',\n        '      expanded:',\n        '        type: object',\n        '        properties:',\n        '          count: number'\n    ], resourceLines = [\n        '/helloWorld:',\n        '  get:',\n        '    responses:',\n        '      200:',\n        '        body:',\n        '          application/json:',\n        '            example: |',\n        '              {',\n        '                \"message\" : \"Hello World\"',\n        '              }'\n    ];\n    var result = apiLines;\n    if (sample) {\n        if (raml1)\n            result = result.concat(typesLines);\n        result = result.concat(resourceLines);\n    }\n    return result.join('\\n') + '\\n';\n}\nexports.createRAMLFile = createRAMLFile;\nfunction newProject() {\n    new NewProjectDialog().show();\n}\nexports.newProject = newProject;\n// export function moveResource(h:hl.IHighLevelNode){\n//     new move.MoveElementsDialog(h, \"Resource Type\",true).show()\n// }\nfunction splitOnLines(text) {\n    var lines = text.match(/^.*((\\r\\n|\\n|\\r)|$)/gm);\n    return lines;\n}\nexports.splitOnLines = splitOnLines;\nfunction cleanEmptyLines(text) {\n    var lines = splitOnLines(text);\n    var rs = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (lines[i].trim().length > 0) {\n            rs.push(lines[i]);\n        }\n    }\n    return rs.join(\"\");\n}\nexports.cleanEmptyLines = cleanEmptyLines;\n//FIXME remove it from here duplication with jsyaml2lowLevel.ts\nfunction stripIndent(text, indent) {\n    var lines = splitOnLines(text);\n    var rs = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (i == 0) {\n            rs.push(lines[0]);\n        }\n        else {\n            rs.push(lines[i].substring(indent.length));\n        }\n    }\n    return rs.join(\"\");\n}\nvar leadingIndent = function (node, text) {\n    var leading = \"\";\n    var pos = node.start() - 1;\n    while (pos > 0) {\n        var ch = text[pos];\n        if (ch == '\\r' || ch == '\\n')\n            break;\n        leading = ch + leading;\n        pos--;\n    }\n    return leading;\n};\nfunction indent(line) {\n    var rs = \"\";\n    for (var i = 0; i < line.length; i++) {\n        var c = line[i];\n        if (c == '\\r' || c == '\\n') {\n            continue;\n        }\n        if (c == ' ' || c == '\\t') {\n            rs += c;\n            continue;\n        }\n        break;\n    }\n    return rs;\n}\nfunction getActiveEditor() {\n    var activeEditor = atom.workspace.getActiveTextEditor();\n    if (activeEditor) {\n        return activeEditor;\n    }\n    if (editorTools.aquireManager())\n        return editorTools.aquireManager().getCurrentEditor();\n    return null;\n}\nexports.getActiveEditor = getActiveEditor;\nvar MoveToNewFileDialog = (function () {\n    function MoveToNewFileDialog(node) {\n        this.node = node;\n    }\n    MoveToNewFileDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n        var errorLabel = UI.label(\"please enter correct destination path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        vc.addChild(UI.label(\"Please enter destination path\"));\n        var txt = UI.texfField(\"\", \"\", function (x) {\n            if (!txt) {\n                return;\n            }\n            _this.destination = txt.getBinding().get();\n            var isError = _this.destination.trim().length == 0;\n            if (!isError) {\n                if (path.extname(_this.destination) != '.raml') {\n                    isError = true;\n                }\n            }\n            if (!isError) {\n                var dir = path.resolve(path.dirname(getActiveEditor().getPath()), path.dirname(_this.destination));\n                if (!fs.existsSync(dir)) {\n                    isError = true;\n                }\n                else {\n                    var st = fs.statSync(dir);\n                    if (!st.isDirectory()) {\n                        isError = true;\n                    }\n                }\n            }\n            errorLabel.setDisplay(isError);\n            okButton.setDisabled(isError);\n        });\n        vc.addChild(UI.vc(txt));\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            var d = path.resolve(path.dirname(getActiveEditor().getPath()), _this.destination);\n            var dump = _this.node.lowLevel().dump();\n            var ci = splitOnLines(dump);\n            var li = ci.length > 1 ? indent(ci[1]) : indent(ci[0]);\n            dump = dump.substring(_this.node.lowLevel().keyEnd() - _this.node.lowLevel().start() + 1).trim();\n            dump = stripIndent(dump, li);\n            dump = \"#%RAML 0.8 \" + _this.node.definition().nameId() + \"\\n\" + dump;\n            fs.writeFileSync(d, dump);\n            //no we need to replace content of the node with text;\n            var txt = node.lowLevel().unit().contents();\n            var endPart = txt.substring(node.lowLevel().end());\n            var startPart = txt.substring(0, node.lowLevel().keyEnd() + 1);\n            var vl = startPart + \" !include \" + _this.destination + endPart;\n            getActiveEditor().setText(vl);\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return MoveToNewFileDialog;\n})();\nexports.MoveToNewFileDialog = MoveToNewFileDialog;\nfunction moveOut(h) {\n    new MoveToNewFileDialog(h).show();\n}\nexports.moveOut = moveOut;\nfunction renameRAMLElement() {\n    var ed = getActiveEditor();\n    var quickFixes = [];\n    if (ed) {\n        if (path.extname(ed.getPath()) == '.raml') {\n            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n            var node = provider.getAstNode(request, false);\n            if (!node) {\n                return;\n            }\n            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n            var kind = search.determineCompletionKind(ed.getBuffer().getText(), offset);\n            if (kind == search.LocationKind.VALUE_COMPLETION) {\n                var hlnode = node;\n                var attr = _.find(hlnode.attrs(), function (x) { return x.lowLevel().start() < offset && x.lowLevel().end() >= offset && !x.property().getAdapter(services.RAMLPropertyService).isKey(); });\n                if (attr) {\n                    if (attr.value()) {\n                        var p = attr.property();\n                        //FIXME INFRASTRUCTURE NEEDED\n                        var v = attr.value();\n                        var targets = search.referenceTargets(p, hlnode);\n                        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n                        if (t) {\n                            UI.prompt(\"New name for \" + attr.value(), function (newVal) {\n                                findUsagesImpl(function (n, r) {\n                                    //todo update nodes\n                                    r.reverse().forEach(function (x) {\n                                        var ua = x;\n                                        ua.asAttr().setValue(newVal);\n                                    });\n                                    n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n                                    var ed = getActiveEditor();\n                                    ed.getBuffer().setText(n.lowLevel().unit().contents());\n                                });\n                            }, attr.value());\n                        }\n                    }\n                }\n            }\n            if (kind == search.LocationKind.KEY_COMPLETION || kind == search.LocationKind.SEQUENCE_KEY_COPLETION) {\n                var hlnode = node;\n                UI.prompt(\"New name for \" + hlnode.name(), function (newVal) {\n                    findUsagesImpl(function (n, r) {\n                        var oldValue = n.attrValue(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId());\n                        //todo update nodes\n                        r.reverse().forEach(function (x) {\n                            var ua = x;\n                            renameInProperty(ua.asAttr(), oldValue, newVal);\n                        });\n                        n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n                        var ed = getActiveEditor();\n                        ed.getBuffer().setText(n.lowLevel().unit().contents());\n                    });\n                }, hlnode.name());\n            }\n        }\n    }\n}\nexports.renameRAMLElement = renameRAMLElement;\nfunction renameInProperty(property, contentToReplace, replaceWith) {\n    var oldPropertyValue = property.value();\n    if (typeof oldPropertyValue == 'string') {\n        var oldPropertyStringValue = oldPropertyValue;\n        var newPropertyStringValue = oldPropertyStringValue.replace(contentToReplace, replaceWith);\n        property.setValue(newPropertyStringValue);\n        if (oldPropertyStringValue.indexOf(contentToReplace) == -1) {\n            if (property.name().indexOf(contentToReplace) != -1) {\n                var newValue = property.name().replace(contentToReplace, replaceWith);\n                property.setKey(newValue);\n            }\n        }\n        return;\n    }\n    else if (oldPropertyValue && (typeof oldPropertyValue === \"object\")) {\n        var structuredValue = oldPropertyValue;\n        var oldPropertyStringValue = structuredValue.valueName();\n        if (oldPropertyStringValue.indexOf(contentToReplace) != -1) {\n            var convertedHighLevel = structuredValue.toHighLevel();\n            if (convertedHighLevel) {\n                var found = false;\n                if (convertedHighLevel.definition().isAnnotationType()) {\n                    var prop = getKey(convertedHighLevel.definition(), structuredValue.lowLevel());\n                    prop.setValue(\"(\" + replaceWith + \")\");\n                    return;\n                }\n                convertedHighLevel.attrs().forEach(function (attribute) {\n                    if (attribute.property().getAdapter(services.RAMLPropertyService).isKey()) {\n                        var oldValue = attribute.value();\n                        if (typeof oldValue == 'string') {\n                            found = true;\n                            var newValue = oldValue.replace(contentToReplace, replaceWith);\n                            attribute.setValue(newValue);\n                        }\n                    }\n                });\n                return;\n            }\n        }\n    }\n    //default case\n    property.setValue(replaceWith);\n}\nfunction getKey(t, n) {\n    var up = new def.UserDefinedProp(\"name\", null);\n    //up.withDomain(this);\n    up.withRange(this.universe().type(universes.Universe10.StringType.name));\n    up.withFromParentKey(true);\n    var node = t.getAdapter(services.RAMLService).getDeclaringNode();\n    //node:ll.ILowLevelASTNode, parent:hl.IHighLevelNode, private _def:hl.IValueTypeDefinition, private _prop:hl.IProperty, private fromKey:boolean = false\n    return stubs.createASTPropImpl(n, node, up.range(), up, true);\n    //rs.push(up);\n}\nvar getKeyValue = function (offset, txt) {\n    var m = offset;\n    for (var i = offset; i >= 0; i--) {\n        var c = txt.charAt(i);\n        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t') {\n            m = i + 1;\n            break;\n        }\n    }\n    var res = \"\";\n    for (var i = m; m < txt.length; i++) {\n        var c = txt.charAt(i);\n        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t' || c == ':') {\n            break;\n        }\n        res += c;\n    }\n    return res;\n};\nfunction select() {\n    var ed = getActiveEditor();\n    var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n    var node = provider.getAstNode(request, false);\n    if (!node) {\n        return;\n    }\n    var start = ed.getBuffer().positionForCharacterIndex(node.lowLevel().start());\n    var end = ed.getBuffer().positionForCharacterIndex(node.lowLevel().end());\n    ed.setSelectedBufferRange({ start: start, end: end }, {});\n}\nexports.select = select;\n//export function expandSignature(attr:hl.IAttribute){\n//    var tr=signature.convertToTrait(signature.parse(attr));\n//    //console.log('trait:\\n' + tr.highLevel().lowLevel().dump());\n//    var res = attr.parent();\n//    //pr.remove(attr); // incorrect usage!!! remove attributes as below\n//    attr.remove();\n//    tr.highLevel().elements().forEach(x=>{\n//        res.add(<any>x)\n//    });\n//    var ed=getActiveEditor();\n//    ed.setText(attr.root().lowLevel().unit().contents());\n//}\nfunction findUsagesImpl(f) {\n    if (f === void 0) { f = display; }\n    var ed = getActiveEditor();\n    if (ed) {\n        if (path.extname(ed.getPath()) == '.raml') {\n            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n            var p = request.editor.getPath();\n            var prj = rp.project.createProject(path.dirname(p));\n            var unit = prj.unit(path.basename(p));\n            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n            var text = request.editor.getBuffer().getText();\n            unit.updateContent(text);\n            var decl = search.findUsages(unit, offset);\n            if (decl.node) {\n                f(decl.node, decl.results);\n            }\n        }\n    }\n}\nexports.findUsagesImpl = findUsagesImpl;\nfunction findUsages() {\n    findUsagesImpl(display);\n}\nexports.findUsages = findUsages;\nvar SearchResultView = (function (_super) {\n    __extends(SearchResultView, _super);\n    function SearchResultView(query, _result) {\n        _super.call(this);\n        this.query = query;\n        this._result = _result;\n        this.isAttached = false;\n    }\n    SearchResultView.prototype.initialize = function () {\n        _super.prototype.initialize.apply(this, arguments);\n        return true;\n    };\n    SearchResultView.content = function () {\n        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n    };\n    SearchResultView.prototype.attached = function () {\n        if (this.isAttached) {\n            return;\n        }\n        this.load();\n        this.isAttached = true;\n    };\n    SearchResultView.prototype.setInput = function (query, _result) {\n        this.query = query;\n        this._result = _result;\n        this.load();\n    };\n    SearchResultView.prototype.load = function () {\n        var _this = this;\n        var section = UI.section(\"Find usages for \" + this.query, UI.Icon.SEARCH);\n        var view = UI.list(this._result, function (x) {\n            var p1 = getActiveEditor().getBuffer().positionForCharacterIndex(x.getLowLevelStart());\n            var res = UI.hc(UI.a(x.id(), function (y) {\n                openPropertyNode(getActiveEditor(), x);\n            }), UI.label(x.lowLevel().unit().path() + \" line:\", UI.Icon.NONE, UI.TextClasses.SUBTLE).pad(5, 5), UI.label(\"\" + p1.row, UI.Icon.NONE, UI.TextClasses.SUCCESS));\n            return res;\n        });\n        view.setStyle(\"max-height\", \"400px\");\n        section.addChild(view);\n        section.addChild(UI.button(\"Close\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) { _this.panel.destroy(); sv = null; }));\n        this.html(section.renderUI());\n    };\n    return SearchResultView;\n})(SpacePenViews.ScrollView);\nvar sv;\nfunction display(query, n) {\n    if (sv) {\n        sv.setInput(query.name(), n);\n    }\n    else {\n        sv = new SearchResultView(query.name() + \":\" + query.definition().nameId(), n);\n        sv.panel = atom.workspace.addBottomPanel({ item: sv });\n    }\n}\n//TODO REFACTOR COMMON LOGIC TO COFE\nvar openPropertyNode = function (ed, t) {\n    var p1 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelStart());\n    var p2 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelEnd());\n    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n};\n//TODO REFACTOR COMMON LOGIC TO COFE\nvar openNode = function (ed, t) {\n    openLowLevelNode(ed, t.lowLevel());\n};\n//TODO REFACTOR COMMON LOGIC TO COFE\nvar openLowLevelNode = function (ed, t) {\n    if (t.unit().absolutePath() != ed.getPath()) {\n        atom.workspace.open(t.unit().absolutePath(), {}).then(function (x) {\n            ed = getActiveEditor();\n            openLowLevelNode(ed, t);\n        });\n        return;\n    }\n    var p1 = ed.getBuffer().positionForCharacterIndex(t.start());\n    var p2 = ed.getBuffer().positionForCharacterIndex(t.end());\n    p2.column = p1.column + t.key() ? t.key().length : 0;\n    p2.row = p1.row;\n    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n};\nfunction gotoDeclaration() {\n    var ed = getActiveEditor();\n    if (ed) {\n        if (path.extname(ed.getPath()) == '.raml') {\n            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n            var p = request.editor.getPath();\n            var prj = rp.project.createProject(path.dirname(p));\n            var unit = prj.unit(path.basename(p));\n            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n            var text = request.editor.getBuffer().getText();\n            unit.updateContent(text);\n            var decl = search.findDeclaration(unit, offset);\n            if (decl) {\n                if (!decl.absolutePath) {\n                    openLowLevelNode(ed, decl.lowLevel());\n                }\n                else {\n                    var absolutePath = decl.absolutePath();\n                    if (absolutePath && absolutePath.toLowerCase().indexOf('http') === 0) {\n                        return;\n                    }\n                    atom.workspace.open(absolutePath, {});\n                }\n            }\n        }\n    }\n}\nexports.gotoDeclaration = gotoDeclaration;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/assist-utils.js\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar utils = rp.utils;\nvar rr = rp.utils;\nvar TextBuffer = require(\"basarat-text-buffer\");\nvar editorManager = require(\"./editorManager\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nexports.grammarScopes = ['source.raml'];\nexports.scope = 'file';\nexports.lintOnFly = true;\nvar lintersToDestroy = [];\nvar linterApiProxy = {};\nvar relint = function (editor) {\n    var editorPath = editor.getPath && editor.getPath();\n    var extName = editorPath && path.extname(editorPath);\n    var lowerCase = extName && extName.toLowerCase();\n    var linter = linterApiProxy.getEditorLinter(editor);\n    lintersToDestroy.push(linter);\n    if (lowerCase === '.raml' || lowerCase === '.yaml') {\n        var res = lint(editor);\n        if (!rr.hasAsyncRequests()) {\n            linterApiProxy.setMessages(linter, res);\n            console.log(\"Messages: \" + res.length);\n        }\n        setupLinterCallback(editor, function () { return linterApiProxy.deleteMessages(linter); });\n        linter.onDidDestroy(function () {\n            removeLinterCallback(editor);\n        });\n        editor.onDidDestroy(function () {\n            destroyLinter(linterApiProxy, linter);\n        });\n    }\n};\nfunction initEditorObservers(linterApi) {\n    linterApiProxy = linterApi;\n    rr.addLoadCallback(function (x) {\n        atom.workspace.getTextEditors().forEach(function (x) { return relint(x); });\n        var manager = editorTools.aquireManager();\n        if (manager) {\n            manager.updateDetails();\n        }\n    });\n    atom.workspace.observeTextEditors(relint);\n    return {\n        dispose: function () {\n            lintersToDestroy.forEach(function (linter) {\n                destroyLinter(linterApi, linter);\n            });\n        }\n    };\n}\nexports.initEditorObservers = initEditorObservers;\nfunction destroyLinter(linterApi, linter) {\n    linterApi.deleteMessages(linter);\n    linterApi.deleteLinter(linter);\n}\n;\nfunction setupLinterCallback(editor, callback) {\n    editor.linterCallback = callback;\n}\nfunction removeLinterCallback(editor) {\n    editor.linterCallback = null;\n}\nfunction execLinterCallback(editor) {\n    if (editor.linterCallback) {\n        editor.linterCallback();\n        removeLinterCallback(editor);\n    }\n}\nfunction lint(textEditor) {\n    var result = actualLint(textEditor);\n    if (rr.hasAsyncRequests()) {\n        return [];\n    }\n    return result;\n}\nexports.lint = lint;\nfunction isRAMLUnit(editor) {\n    var contents = editor.getBuffer().getText();\n    return contents.match(/^\\s*#%RAML\\s+(\\d\\.\\d)\\s*(\\w*)\\s*$/m);\n}\nvar combErrors = function (result) {\n    var map = {};\n    result.forEach(function (x) {\n        var original = JSON.parse(JSON.stringify(x));\n        original.trace = null;\n        var newKey = JSON.stringify(original);\n        var tr = map[newKey];\n        if (tr) {\n            tr.push(x);\n        }\n        else {\n            map[newKey] = [x];\n        }\n    });\n    var rs = [];\n    for (var i in map) {\n        var mes = JSON.parse(i);\n        mes.trace = [];\n        var ms = map[i];\n        ms.forEach(function (x) {\n            if (x.trace) {\n                mes.trace = mes.trace.concat(x.trace);\n            }\n        });\n        mes.trace = combErrors(mes.trace);\n        rs.push(mes);\n    }\n    return rs;\n};\nfunction actualLint(textEditor) {\n    execLinterCallback(textEditor);\n    if (rr.hasAsyncRequests()) {\n        return [];\n    }\n    if (!isRAMLUnit(textEditor))\n        return [];\n    var l = new Date().getTime();\n    var astNode = editorManager.ast(textEditor);\n    if (astNode == null) {\n        return [];\n    }\n    var result = [];\n    var acceptor = new Acceptor(textEditor, result, astNode.root());\n    var c = astNode.lowLevel() ? astNode.lowLevel().unit().contents() : \"\";\n    var tab = 0;\n    while (true) {\n        var tab = c.indexOf('\\t', tab);\n        if (tab != -1) {\n            var p1 = textEditor.getBuffer().positionForCharacterIndex(tab);\n            var p2 = textEditor.getBuffer().positionForCharacterIndex(tab + 1);\n            var t = \"Using tabs  can lead to unpredictable results\";\n            var message = {\n                type: (\"Warning\"),\n                filePath: textEditor.getPath(),\n                text: t,\n                trace: [],\n                range: [[p1.row, p1.column], [p2.row, p2.column]]\n            };\n            result.push(message);\n            tab++;\n        }\n        else {\n            break;\n        }\n    }\n    if (!astNode.lowLevel()) {\n        return [];\n    }\n    gatherValidationErrors(astNode, result, textEditor);\n    var l1 = new Date().getTime();\n    var rs = combErrors(result);\n    if (editorTools.aquireManager()) {\n        if (editorTools.aquireManager().performanceDebug) {\n            console.log(\"Linting took:\" + (l1 - l));\n        }\n    }\n    var warnings = 0;\n    return rs.filter(function (x) {\n        return x;\n    })\n        .filter(function (x) {\n        if (x.type === \"Warning\") {\n            if (warnings >= 20) {\n                return false;\n            }\n            warnings++;\n        }\n        return x;\n    });\n}\nvar Acceptor = (function (_super) {\n    __extends(Acceptor, _super);\n    function Acceptor(editor, errors, primaryUnit) {\n        _super.call(this, errors, primaryUnit);\n        this.editor = editor;\n        this.buffers = {};\n    }\n    Acceptor.prototype.accept = function (issue) {\n        var _this = this;\n        if (!issue) {\n            return;\n        }\n        this.transformIssue(issue);\n        var issueType = issue.isWarning ? \"Warning\" : 'Error';\n        var issuesArray = [];\n        while (issue) {\n            issuesArray.push(issue);\n            if (issue.extras && issue.extras.length > 0) {\n                issue = issue.extras[0];\n            }\n            else {\n                issue = null;\n            }\n        }\n        var issues = issuesArray.reverse().map(function (x) {\n            var result = _this.convertParserIssue(x, issueType);\n            issueType = \"Trace\";\n            return result;\n        });\n        for (var i = 0; i < issues.length - 1; i++) {\n            issues[0].trace.push(issues[i + 1]);\n        }\n        var message = issues[0];\n        this.errors.push(message);\n    };\n    Acceptor.prototype.convertParserIssue = function (x, iType) {\n        var t = x.message;\n        var buf = this.editor.getBuffer();\n        var ps = x.path;\n        if (x.unit) {\n            ps = x.unit.absolutePath();\n        }\n        if (ps) {\n            if (this.buffers[ps]) {\n                buf = this.buffers[ps];\n            }\n            else {\n                buf = new TextBuffer(x.unit.contents());\n                this.buffers[ps] = buf;\n            }\n        }\n        var p1 = buf.positionForCharacterIndex(x.start);\n        var p2 = buf.positionForCharacterIndex(x.end);\n        var trace = {\n            type: iType,\n            filePath: x.path ? ps : this.editor.getPath(),\n            text: t,\n            range: [[p1.row, p1.column], [p2.row, p2.column]],\n            trace: [],\n        };\n        return trace;\n    };\n    Acceptor.prototype.acceptUnique = function (issue) {\n        this.accept(issue);\n    };\n    Acceptor.prototype.end = function () {\n    };\n    return Acceptor;\n})(utils.PointOfViewValidationAcceptorImpl);\nfunction gatherValidationErrors(astNode, errors, editor) {\n    if (astNode) {\n        astNode.validate(new Acceptor(editor, errors, astNode.root()));\n    }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/linter-ui.js\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar _ = require(\"underscore\");\nexports.DYNAMIC_COMMAND_TAG = \"DYNAMIC_COMMAND_TAG\";\nvar commandIdToCommandInfo = {};\nvar tagToCommands = {};\n/**\n * Adds new managed command\n * @param selector - command CSS selector\n * @param id - command id. Must be unique across the managed commands.\n * @param callBack - called on command invocation\n * @param tag - optional action tag allowing to perform batch operations\n */\nfunction addCommand(selector, id, callBack, tag) {\n    if (_.find(listCommands(), function (commandId) {\n        if (commandId == id) {\n            return true;\n        }\n        return false;\n    })) {\n        return;\n    }\n    var disposable = atom.commands.add(selector, id, callBack);\n    var commandInfo = {\n        commandId: id,\n        tag: tag,\n        disposable: disposable\n    };\n    commandIdToCommandInfo[id] = commandInfo;\n    if (tag) {\n        var tagCommands = tagToCommands[tag];\n        if (!tagCommands) {\n            tagCommands = [];\n            tagToCommands[tag] = tagCommands;\n        }\n        tagCommands.push(commandInfo);\n    }\n}\nexports.addCommand = addCommand;\n/**\n * Deletes unmanaged command.\n * Generally, should not be called for managed actions, use the managed\n * version instead.\n * @param id - command id\n */\nfunction deleteUnmanagedCommand(id) {\n    atom.commands.registeredCommands[id] = null;\n    atom.commands.selectorBasedListenersByCommandName[id] = null;\n}\nexports.deleteUnmanagedCommand = deleteUnmanagedCommand;\n/**\n * Deletes managed action by id\n * @param id\n */\nfunction deleteManagedCommand(id) {\n    var commandInfo = commandIdToCommandInfo[id];\n    if (!commandInfo)\n        return;\n    commandInfo.disposable.dispose();\n    delete commandIdToCommandInfo[id];\n    if (commandInfo.tag) {\n        var tagCommands = tagToCommands[commandInfo.tag];\n        if (!tagCommands)\n            return;\n        var infoIndex = -1;\n        _.find(tagCommands, function (currentInfo, index) {\n            if (currentInfo.commandId == id) {\n                infoIndex = index;\n                return true;\n            }\n            return false;\n        });\n        if (infoIndex != -1)\n            tagCommands.splice(infoIndex, 1);\n    }\n}\nexports.deleteManagedCommand = deleteManagedCommand;\n/**\n * Deletes all managed commands tagged the the specific tag\n * @param tag\n */\nfunction deleteCommandsByTag(tag) {\n    var tagCommands = tagToCommands[tag];\n    if (!tagCommands)\n        return;\n    for (var index in tagCommands) {\n        var currentInfo = tagCommands[index];\n        currentInfo.disposable.dispose();\n        delete commandIdToCommandInfo[currentInfo.commandId];\n    }\n    delete tagToCommands[tag];\n}\nexports.deleteCommandsByTag = deleteCommandsByTag;\n/**\n * Lists all commands, both managed and unmanaged.\n * @returns {string[]}\n */\nfunction listCommands() {\n    var result = [];\n    for (var commandName in atom.commands.selectorBasedListenersByCommandName) {\n        result.push(commandName);\n    }\n    return result;\n}\nexports.listCommands = listCommands;\nvar initialized = false;\nfunction initialize() {\n    if (initialized)\n        return;\n    initialized = true;\n    try {\n        //forcing command palette to register itself\n        atom.packages.activatePackage('command-palette');\n        //registering our own listener to command palette's command\n        var listener = function () {\n            prePanelDisplay();\n        };\n        listener.commandManager = true;\n        atom.commands.add('atom-workspace', 'command-palette:toggle', listener);\n        ////and now swapping those listeners, so our one is called first\n        //var listenersArray = (<any>atom.commands.selectorBasedListenersByCommandName)\n        //    [\"command-palette:toggle\"]\n        //listenersArray.splice(0,0,listenersArray[1])\n        //listenersArray.splice(1, 1)\n        var listenersArray = atom.commands.selectorBasedListenersByCommandName[\"command-palette:toggle\"];\n        listenersArray.forEach(function (listener) {\n            if (listener.callback.commandManager) {\n                listener.sequenceNumber = 100500000;\n            }\n        });\n    }\n    catch (Error) {\n        console.error(Error.message);\n    }\n}\nexports.initialize = initialize;\nvar contributors = {};\nfunction registerContributor(contributor) {\n    contributors[contributor.id] = contributor;\n}\nexports.registerContributor = registerContributor;\nfunction prePanelDisplay() {\n    deleteCommandsByTag(exports.DYNAMIC_COMMAND_TAG);\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        if (contributor.calculationStarted) {\n            contributor.calculationStarted();\n        }\n    }\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        contributor.calculateItems().forEach(function (item) {\n            addCommand(item.selector, \"api-workbench:\" + item.id, item.callBack, exports.DYNAMIC_COMMAND_TAG);\n        });\n    }\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        if (contributor.calculationFinished) {\n            contributor.calculationFinished();\n        }\n    }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/command-manager.js\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar actions = require(\"raml-actions\");\nvar _ = require(\"underscore\");\nvar commandManager = require(\"../quick-commands/command-manager\");\nvar originalShowForEvent;\n/**\n * Must be called first, at startup, before the module is used.\n */\nfunction initialize() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    originalShowForEvent = atom.contextMenu.constructor.prototype.showForEvent;\n    atom.contextMenu.constructor.prototype.showForEvent = function (event) {\n        preMenuDisplay();\n        originalShowForEvent.apply(atom.contextMenu, [event]);\n        postMenuDisplay();\n    };\n}\nexports.initialize = initialize;\nvar initialized = false;\nfunction preMenuDisplay() {\n    try {\n        var treeRoots = actions.calculateMenuItemsTree();\n        var nodeSets = {};\n        cleanExistingSets();\n        commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG);\n        treeRoots.forEach(function (node) {\n            var itemSet = nodeSets[node.selector];\n            if (!itemSet) {\n                itemSet = findOrCreateItemSet(node.selector);\n                nodeSets[node.selector] = itemSet;\n            }\n            var menuItem = constructAtomMenuItem(node);\n            itemSet.items.push(menuItem);\n        });\n    }\n    catch (Error) {\n        console.log(Error.message);\n    }\n}\nfunction constructAtomMenuItem(node) {\n    var result = {\n        label: node.name,\n    };\n    if (node.children.length > 0) {\n        result.submenu = [];\n    }\n    else {\n        var commandName = \"api-workbench:\" + node.name;\n        var existingCommands = commandManager.listCommands();\n        commandManager.addCommand(node.selector, commandName, node.onClick, commandManager.DYNAMIC_COMMAND_TAG);\n        result.command = commandName;\n    }\n    node.children.forEach(function (child) {\n        var childMenuItem = constructAtomMenuItem(child);\n        result.submenu.push(childMenuItem);\n    });\n    return result;\n}\nvar DYNAMIC_SET_TAG = \"DYNAMIC_SET_TAG\";\n/**\n * Selector that were used at least once in the context menu\n * @type {Array}\n */\nvar usedSelectors = [];\nfunction findOrCreateItemSet(selector) {\n    var existingSet = _.find(atom.contextMenu.itemSets, function (currentSet) {\n        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n    });\n    if (!existingSet) {\n        existingSet = {\n            items: [],\n            selector: selector,\n            specificity: 11,\n            tag: DYNAMIC_SET_TAG\n        };\n        atom.contextMenu.itemSets.push(existingSet);\n        //saving used selector name\n        if (!_.find(usedSelectors, function (name) { return name == selector; })) {\n            usedSelectors.push(selector);\n        }\n    }\n    return existingSet;\n}\nfunction cleanExistingSets() {\n    var existingSets = _.filter(atom.contextMenu.itemSets, function (currentSet) {\n        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n    });\n    existingSets.forEach(function (existingSet) {\n        existingSet.items = [];\n    });\n}\nfunction postMenuDisplay() {\n    //commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG)\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/contextMenu.js\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar commandManager = require(\"../quick-commands/command-manager\");\nvar contextActions = require(\"raml-actions\");\nvar path = require('path');\nvar provider = require(\"../suggestion/provider\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nfunction initializeActionSupport() {\n    contextActions.intializeStandardActions();\n    contextActions.initializeActionBasedMenu('atom-text-editor[data-grammar=\"source raml\"],.raml-outline');\n    var editorCommandContributor = {\n        id: \"editorContextActionContributor\",\n        calculateItems: function () {\n            var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n            if (!currentActions)\n                return [];\n            var result = [];\n            currentActions.forEach(function (action) {\n                result.push({\n                    selector: 'atom-text-editor[data-grammar=\"source raml\"],.raml-outline',\n                    id: action.label ? action.label : action.name,\n                    callBack: action.onClick\n                });\n            });\n            return result;\n        }\n    };\n    commandManager.registerContributor(editorCommandContributor);\n}\nfunction initialize() {\n    var editorProvider = {\n        getCurrentEditor: function () {\n            var gotEditorFromOutline = false;\n            var editor = null;\n            if (atom.workspace.getActiveTextEditor()) {\n                editor = atom.workspace.getActiveTextEditor();\n            }\n            else if (editorTools.aquireManager()) {\n                editor = editorTools.aquireManager().getCurrentEditor();\n                gotEditorFromOutline = true;\n            }\n            return editor;\n        }\n    };\n    contextActions.setEditorProvider(editorProvider);\n    var astProvider = {\n        getASTRoot: function () {\n            return this.getSelectedNode().root();\n        },\n        getSelectedNode: function () {\n            var editor = null;\n            var gotEditorFromOutline = false;\n            if (editorTools.aquireManager()) {\n                editor = editorTools.aquireManager().getCurrentEditor();\n                gotEditorFromOutline = true;\n            }\n            if (!editor && atom.workspace.getActiveTextEditor()) {\n                editor = atom.workspace.getActiveTextEditor();\n            }\n            if (!editor)\n                return null;\n            if (path.extname(editor.getPath()) != '.raml')\n                return null;\n            var request = {\n                editor: editor,\n                bufferPosition: editor.getCursorBufferPosition()\n            };\n            var node = null;\n            if (gotEditorFromOutline) {\n                node = editorTools.aquireManager().getSelectedNode();\n            }\n            else {\n                if (editor.getBuffer()) {\n                    var lastPosition = editor.getBuffer().getEndPosition();\n                    if (lastPosition.column == request.bufferPosition.column\n                        && lastPosition.row == request.bufferPosition.row) {\n                        return null;\n                    }\n                    if (request.bufferPosition.row == 0 && request.bufferPosition.column == 0) {\n                        return null;\n                    }\n                }\n                node = provider.getAstNode(request, false);\n            }\n            return node;\n        }\n    };\n    contextActions.setASTProvider(astProvider);\n    var astModifier = {\n        deleteNode: function (node) {\n            var editorManager = editorTools.aquireManager();\n            if (editorManager && editorManager._view) {\n                editorManager._view.forEachViewer(function (x) { return x.remove(node); });\n            }\n            var parent = node.parent();\n            if (parent) {\n                parent.remove(node);\n                parent.resetChildren();\n            }\n        },\n        updateText: function (node) {\n            var editorManager = editorTools.aquireManager();\n            if (editorManager) {\n                editorManager.updateText(node);\n            }\n        }\n    };\n    contextActions.setASTModifier(astModifier);\n    initializeActionSupport();\n}\nexports.initialize = initialize;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/commonContextActions.js\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar path = require('path');\nvar contextActions = require(\"raml-actions\");\nvar rp = contextActions.parser;\nvar search = rp.search;\nvar stubs = rp.stubs;\nvar universeHelpers = rp.universeHelpers;\nvar su = rp.schema;\nvar _ = require(\"underscore\");\nvar UI = require(\"atom-ui-lib\");\nvar extract = require(\"../dialogs/extractElementsDialog\");\nvar def = rp.ds;\nvar move = require(\"../dialogs/moveElementsDialog\");\nvar assistUtils = require(\"../dialogs/assist-utils\");\n/**\n * For unknown reason, compiler cant merge highlevel coming from raml-1-parser direct import\n * and the one coming from actions, so we need to convert manually.\n * @param node\n */\nfunction hlConv(node) {\n    return node;\n}\nvar AbstractDialogWithValidation = (function () {\n    function AbstractDialogWithValidation(parentNode, name) {\n        this.parentNode = parentNode;\n        this.name = name;\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    AbstractDialogWithValidation.prototype.validate = function () {\n        return null;\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     */\n    AbstractDialogWithValidation.prototype.performOk = function () {\n    };\n    /**\n     * Indended for subclassing\n     * @param vc - parent section\n     */\n    AbstractDialogWithValidation.prototype.createBody = function (section) {\n    };\n    /**\n     * Call this to display the dialog.\n     */\n    AbstractDialogWithValidation.prototype.show = function () {\n        console.log(\"Original node tree:\");\n        if (this.getParentNode())\n            console.log(this.getParentNode().printDetails());\n        if (!this.getParentNode()) {\n            return;\n        }\n        var mainSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n        this.createValidationIndicator(mainSection);\n        this.createBody(mainSection);\n        this.createButtonBar(mainSection);\n        mainSection.setPercentWidth(100);\n        var html = mainSection.renderUI();\n        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n        this.performValidation();\n    };\n    AbstractDialogWithValidation.prototype.performValidation = function () {\n        var validationMessage = this.validate();\n        if (this.okButton) {\n            if (validationMessage)\n                this.okButton.setDisabled(true);\n            else\n                this.okButton.setDisabled(false);\n        }\n        if (this.errorLabel) {\n            if (validationMessage) {\n                this.errorLabel.setDisplay(true);\n                this.errorLabel.setText(validationMessage);\n            }\n            else {\n                this.errorLabel.setDisplay(false);\n                this.errorLabel.setText(\"\");\n            }\n        }\n    };\n    AbstractDialogWithValidation.prototype.createValidationIndicator = function (vc) {\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(this.errorLabel));\n    };\n    AbstractDialogWithValidation.prototype.saveUnit = function (unit) {\n        var unitPath = unit.absolutePath();\n        var unitText = unit.contents();\n        //first trying to find an opened text editor\n        var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n            var editorPath = editor.getPath();\n            return editorPath == unitPath;\n        });\n        if (openedEditor) {\n            openedEditor.setText(unitText);\n        }\n        else {\n            fs.writeFileSync(unitPath, unitText);\n        }\n    };\n    AbstractDialogWithValidation.prototype.createButtonBar = function (parentPanel) {\n        var _this = this;\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            _this.rootAtomPanel.destroy();\n        }).margin(10, 10));\n        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.performOk();\n            _this.rootAtomPanel.destroy();\n        });\n        this.okButton.setDisabled(true);\n        buttonBar.addChild(this.okButton);\n        parentPanel.addChild(buttonBar);\n    };\n    AbstractDialogWithValidation.prototype.getParentNode = function () {\n        return this.parentNode;\n    };\n    AbstractDialogWithValidation.prototype.getActiveEditor = function () {\n        return assistUtils.getActiveEditor();\n    };\n    AbstractDialogWithValidation.prototype.getNodeId = function (node) {\n        if (node.parent()) {\n            var parentId = this.getNodeId(node.parent());\n            parentId += \".\" + node.name();\n            var sameName = node.parent().directChildren().filter(function (x) { return x.name() == node.name(); });\n            if (sameName.length > 1) {\n                var ind = sameName.indexOf(node);\n                parentId += \"[\" + ind + \"]\";\n            }\n            return parentId;\n        }\n        else if (node.name()) {\n            if (node.definition && node.definition() && node.definition().name() == \"Api\") {\n                //no other way to get rid of a fake Api \"key\"\n                return \"\";\n            }\n            return \".\" + node.name();\n        }\n        return \"\";\n    };\n    AbstractDialogWithValidation.prototype.nodesEqualById = function (node1, node2) {\n        return this.getNodeId(node1) == this.getNodeId(node2);\n    };\n    AbstractDialogWithValidation.prototype.isParentOf = function (potentialParent, potentialChild) {\n        var current = potentialChild.parent();\n        while (current != null) {\n            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n                return true;\n            }\n            current = current.parent();\n        }\n        return false;\n    };\n    return AbstractDialogWithValidation;\n})();\nexports.AbstractDialogWithValidation = AbstractDialogWithValidation;\nvar MoveResourceStateCalculator = (function (_super) {\n    __extends(MoveResourceStateCalculator, _super);\n    function MoveResourceStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    MoveResourceStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return MoveResourceStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar CreateGlobalSchemaStateCalculator = (function (_super) {\n    __extends(CreateGlobalSchemaStateCalculator, _super);\n    function CreateGlobalSchemaStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    CreateGlobalSchemaStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION\n            && generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        //FIXME INFRASTRUCTURE NEEDED\n        if (!universeHelpers.isSchemaProperty(p))\n            return null;\n        var v = attr.value();\n        var targets = search.referenceTargets(p, highLevelNode);\n        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n        if (t)\n            return null;\n        return attr;\n    };\n    return CreateGlobalSchemaStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar ExtractJSONSchemaToTypeDialog = (function (_super) {\n    __extends(ExtractJSONSchemaToTypeDialog, _super);\n    function ExtractJSONSchemaToTypeDialog() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * Indended for subclassing\n     * @param vc - parent section\n     */\n    ExtractJSONSchemaToTypeDialog.prototype.createBody = function (section) {\n        var _this = this;\n        section.addChild(UI.label(\"Type name:\").pad(5, 0));\n        this.typeNameTextField = UI.texfField(\"\", \"NewType\", function (x) {\n            _this.performValidation();\n        });\n        section.addChild(this.typeNameTextField);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ExtractJSONSchemaToTypeDialog.prototype.validate = function () {\n        if (!this.typeNameTextField || !this.typeNameTextField.getBinding()) {\n            return null;\n        }\n        var schemaName = this.typeNameTextField.getBinding().get();\n        if (schemaName.trim().length == 0) {\n            return \"Enter type name\";\n        }\n        return null;\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     */\n    ExtractJSONSchemaToTypeDialog.prototype.performOk = function () {\n        var node = this.getParentNode();\n        var api = node.root();\n        var schema = node.attrValue('schema');\n        node.attr('schema').setValue('');\n        var schemaName = this.typeNameTextField.getBinding().get();\n        var types = su.createSchemaModelGenerator().generateTo(api, schema, schemaName);\n        if (types.length > 0) {\n            node.attrOrCreate('type').setValue(types[0]);\n        }\n        this.saveUnit(api.lowLevel().unit());\n    };\n    return ExtractJSONSchemaToTypeDialog;\n})(AbstractDialogWithValidation);\nexports.ExtractJSONSchemaToTypeDialog = ExtractJSONSchemaToTypeDialog;\nvar CreateGlobalSchemaDialog = (function (_super) {\n    __extends(CreateGlobalSchemaDialog, _super);\n    function CreateGlobalSchemaDialog() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * Indended for subclassing\n     * @param vc - parent section\n     */\n    CreateGlobalSchemaDialog.prototype.createBody = function (section) {\n        var _this = this;\n        section.addChild(UI.label(\"Schema name:\").pad(5, 0));\n        this.schemaNameTextField = UI.texfField(\"\", this.getDefaultSchemaName(), function (x) {\n            _this.performValidation();\n        });\n        section.addChild(this.schemaNameTextField);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    CreateGlobalSchemaDialog.prototype.validate = function () {\n        if (!this.schemaNameTextField || !this.schemaNameTextField.getBinding()) {\n            return null;\n        }\n        var schemaName = this.schemaNameTextField.getBinding().get();\n        if (schemaName.trim().length == 0) {\n            return \"Enter schema name\";\n        }\n        var attr = this.getParentNode();\n        var schemaContent = attr.value();\n        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n        if (fs.existsSync(schemaFilePath)) {\n            return \"Schema file \" + schemaFilePath + \" already exists\";\n        }\n        return null;\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     */\n    CreateGlobalSchemaDialog.prototype.performOk = function () {\n        var schemaName = this.schemaNameTextField.getBinding().get();\n        var attr = this.getParentNode();\n        var schemaContent = attr.value();\n        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n        var root = attr.parent().root();\n        var globalSchemaType = attr.property().range().universe().type(\"GlobalSchema\");\n        var schemaNode = stubs.createStubNode(globalSchemaType, globalSchemaType.universe().type(\"Api\").property(\"schemas\"), schemaName);\n        schemaNode.attrOrCreate(\"value\").setValue(\"!include \" + this.getSchemaRelativePath(schemaName, schemaContent));\n        root.add(schemaNode);\n        attr.setValue(schemaName);\n        this.saveUnit(attr.lowLevel().unit());\n        var schemaDir = path.dirname(schemaFilePath);\n        if (!fs.existsSync(schemaDir)) {\n            fs.mkdirSync(schemaDir);\n        }\n        fs.writeFileSync(schemaFilePath, schemaContent);\n    };\n    CreateGlobalSchemaDialog.prototype.getSchemaFilePath = function (schemaName, schemaContent) {\n        var parentDirectory = path.resolve(path.dirname(this.getActiveEditor().getPath()), \"schemas\");\n        var schemaExtension = this.determineSchemaExtension(schemaContent);\n        var fileName = schemaName + \".\" + schemaExtension;\n        return path.resolve(parentDirectory, fileName);\n    };\n    CreateGlobalSchemaDialog.prototype.getSchemaRelativePath = function (schemaName, schemaContent) {\n        var schemaExtension = this.determineSchemaExtension(schemaContent);\n        var fileName = schemaName + \".\" + schemaExtension;\n        return \"schemas/\" + fileName;\n    };\n    CreateGlobalSchemaDialog.prototype.determineSchemaExtension = function (schemaContent) {\n        var trim = schemaContent.trim();\n        if (trim.indexOf(\"{\") == 0 || trim.indexOf(\"[\") == 0) {\n            return \"json\";\n        }\n        return \"xsd\";\n    };\n    CreateGlobalSchemaDialog.prototype.getDefaultSchemaName = function () {\n        return \"NewSchema\";\n    };\n    return CreateGlobalSchemaDialog;\n})(AbstractDialogWithValidation);\nexports.CreateGlobalSchemaDialog = CreateGlobalSchemaDialog;\nfunction createGlobalSchema(attr) {\n    new CreateGlobalSchemaDialog(attr, \"Create Global Schema\").show();\n}\nexports.createGlobalSchema = createGlobalSchema;\nvar ExpandSignatureStateCalculator = (function (_super) {\n    __extends(ExpandSignatureStateCalculator, _super);\n    function ExpandSignatureStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExpandSignatureStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        return attr;\n    };\n    return ExpandSignatureStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nfunction updateEditor(node) {\n    var ed = assistUtils.getActiveEditor();\n    ed.setText(assistUtils.cleanEmptyLines(node.root().lowLevel().unit().contents()));\n}\nvar ExtractResourceTypeStateCalculator = (function (_super) {\n    __extends(ExtractResourceTypeStateCalculator, _super);\n    function ExtractResourceTypeStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractResourceTypeStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return ExtractResourceTypeStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar ExtractTraitStateCalculator = (function (_super) {\n    __extends(ExtractTraitStateCalculator, _super);\n    function ExtractTraitStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractTraitStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isMethodType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return ExtractTraitStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar MoveContentStateCalculator = (function (_super) {\n    __extends(MoveContentStateCalculator, _super);\n    function MoveContentStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    MoveContentStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (highLevelNode.children().length == 0)\n            return null;\n        return highLevelNode;\n    };\n    return MoveContentStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar ConvertJsonSchemaToTypeStateCalculator = (function (_super) {\n    __extends(ConvertJsonSchemaToTypeStateCalculator, _super);\n    function ConvertJsonSchemaToTypeStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ConvertJsonSchemaToTypeStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        if (!universeHelpers.isSchemaProperty(p))\n            return null;\n        if (typeof attr.value() != 'string' || attr.value().indexOf(\"{\") == -1) {\n            return null;\n        }\n        return highLevelNode;\n        //var txt=generalState.editor.getText();\n        //var res = getKeyValue(generalState.offset, txt);\n        //if(res != 'schema') return null;\n        //var schema = highLevelNode.attrValue('schema');\n        //if(!schema) return null;\n        //return (schema.length > 0 && schema[0] == '{')? highLevelNode : null;\n        //return true; //res == 'schema'? highLevelNode : null;\n    };\n    return ConvertJsonSchemaToTypeStateCalculator;\n})(contextActions.CommonASTStateCalculator);\n// function indent(line:string) {\n//     var rs = \"\";\n//     for (var i = 0; i < line.length; i++) {\n//         var c = line[i];\n//         if (c == '\\r' || c == '\\n') {\n//             continue;\n//         }\n//         if (c == ' ' || c == '\\t') {\n//             rs += c;\n//             continue;\n//         }\n//         break;\n//     }\n//     return rs;\n// }\n//FIXME remove it from here duplication with jsyaml2lowLevel.ts\n// function stripIndent(text:string, indent:string) {\n//     var lines = assistUtils.splitOnLines(text);\n//     var rs = [];\n//     for (var i = 0; i < lines.length; i++) {\n//         if (i == 0) {\n//             rs.push(lines[0]);\n//         }\n//         else {\n//             rs.push(lines[i].substring(indent.length));\n//         }\n//     }\n//     return rs.join(\"\");\n// }\nvar ExtractLibraryStateCalculator = (function (_super) {\n    __extends(ExtractLibraryStateCalculator, _super);\n    function ExtractLibraryStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractLibraryStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        while (current.parent() != null) {\n            current = current.parent();\n        }\n        return current;\n    };\n    return ExtractLibraryStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar ExtractOverlayStateCalculator = (function (_super) {\n    __extends(ExtractOverlayStateCalculator, _super);\n    function ExtractOverlayStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractOverlayStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        while (current.parent() != null) {\n            current = current.parent();\n        }\n        return current;\n    };\n    return ExtractOverlayStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar ModifyOverlayStateCalculator = (function (_super) {\n    __extends(ModifyOverlayStateCalculator, _super);\n    function ModifyOverlayStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ModifyOverlayStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        while (current.parent() != null) {\n            current = current.parent();\n        }\n        if (current.definition\n            && universeHelpers.isOverlayType(current.definition())) {\n            return current;\n        }\n        return null;\n    };\n    return ModifyOverlayStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar AbstractMoveTypePropertiesCalculator = (function (_super) {\n    __extends(AbstractMoveTypePropertiesCalculator, _super);\n    function AbstractMoveTypePropertiesCalculator() {\n        _super.apply(this, arguments);\n    }\n    AbstractMoveTypePropertiesCalculator.prototype.isTypeNode = function (node) {\n        return node.property\n            && node.property().range\n            && universeHelpers.isTypeDeclarationType(node.property().range())\n            && universeHelpers.isTypesProperty(node.property());\n    };\n    return AbstractMoveTypePropertiesCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar PullUpStateCalculator = (function (_super) {\n    __extends(PullUpStateCalculator, _super);\n    function PullUpStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    PullUpStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        if (!current)\n            return null;\n        while (current.parent() != null) {\n            if (this.isTypeNode(current)) {\n                //so, we're inside the type\n                //but we also want to double check that there are superclasses\n                var superTypes = extract.findUserDefinedSupertypes(hlConv(current));\n                if (superTypes && superTypes.length > 0)\n                    return current;\n                else\n                    return null;\n            }\n            current = current.parent();\n        }\n        return null;\n    };\n    return PullUpStateCalculator;\n})(AbstractMoveTypePropertiesCalculator);\nvar ExtractSupertypeCalculator = (function (_super) {\n    __extends(ExtractSupertypeCalculator, _super);\n    function ExtractSupertypeCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractSupertypeCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        if (!current)\n            return null;\n        while (current.parent() != null) {\n            if (this.isTypeNode(current)) {\n                //so, we're inside the type\n                //but we also want to double check that there are no superclasses\n                var superTypes = extract.findUserDefinedSupertypes(hlConv(current));\n                if (!superTypes || superTypes.length == 0)\n                    return current;\n                else\n                    return null;\n            }\n            current = current.parent();\n        }\n        return null;\n    };\n    return ExtractSupertypeCalculator;\n})(AbstractMoveTypePropertiesCalculator);\nvar GenerateExampleCalculator = (function (_super) {\n    __extends(GenerateExampleCalculator, _super);\n    function GenerateExampleCalculator() {\n        _super.apply(this, arguments);\n    }\n    GenerateExampleCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        var txt = generalState.editor.getText();\n        //var res = getKeyValue(generalState.offset, txt);\n        //return (res == 'type')? highLevelNode: null;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        var p = attr.property();\n        if (!universeHelpers.isExampleProperty(p))\n            return null;\n        var typeAttr = highLevelNode.attr('type');\n        if (!typeAttr)\n            return null;\n        var type = typeAttr.value();\n        if (!type)\n            return null;\n        return highLevelNode;\n    };\n    return GenerateExampleCalculator;\n})(contextActions.CommonASTStateCalculator);\nfunction initialize() {\n    contextActions.addAction({\n        name: \"Create global schema\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) { return createGlobalSchema(state); },\n        stateCalculator: new CreateGlobalSchemaStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Move resource\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new move.MoveElementsDialog(hlConv(state), \"Resource Type\", true).show();\n        },\n        stateCalculator: new MoveResourceStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Resource Type\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractTypesAndTraitsDialog(hlConv(state), \"Resource Type\", true).show();\n        },\n        stateCalculator: new ExtractResourceTypeStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Trait\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractTypesAndTraitsDialog(hlConv(state), \"Trait\", false).show();\n        },\n        stateCalculator: new ExtractTraitStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Convert JSON schema to type\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new ExtractJSONSchemaToTypeDialog(state, \"Convert JSON schema to type\").show();\n        },\n        stateCalculator: new ConvertJsonSchemaToTypeStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Library\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractLibraryDialog(hlConv(state), \"Extract Library\").show();\n        },\n        stateCalculator: new ExtractLibraryStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Overlay\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) {\n            new extract.ExtractOverlayDialog(hlConv(state), \"Extract Overlay\").show();\n        },\n        stateCalculator: new ExtractOverlayStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Modify Overlay\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) {\n            new extract.ModifyOverlayDialog(hlConv(state), \"Modify Overlay\").show();\n        },\n        stateCalculator: new ModifyOverlayStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Pull Up\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.PullUpDialog(hlConv(state), \"Pull Up\").show();\n        },\n        stateCalculator: new PullUpStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Supertype\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractSupertypeDialog(hlConv(state), \"Extract Supertype\").show();\n        },\n        stateCalculator: new ExtractSupertypeCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n}\nexports.initialize = initialize;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/quickFix.js\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar fs = require('fs');\nvar path = require('path');\nvar contextActions = require(\"raml-actions\");\nvar rp = contextActions.parser;\nvar su = rp.schema;\nvar UI = require(\"atom-ui-lib\");\nvar xmlutil = require(\"../../util/xmlutil\");\nvar shemagen = require(\"../../util/schemaGenerator\");\nvar assistUtils = require(\"../dialogs/assist-utils\");\nvar MoveToNewFileDialog = (function () {\n    function MoveToNewFileDialog(callback) {\n        this.callback = callback;\n    }\n    MoveToNewFileDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n        var errorLabel = UI.label(\"Please enter destination file path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        vc.addChild(UI.label(\"Please enter destination path\"));\n        var txt = UI.texfField(\"\", \"\", function (x) {\n            if (!txt) {\n                return;\n            }\n            var errorMessage = null;\n            _this.destination = txt.getBinding().get();\n            if (_this.destination.trim().length == 0) {\n                errorMessage = \"Please enter destination file path\";\n            }\n            else if (!path.extname(_this.destination) || path.extname(_this.destination).trim().length <= 2) {\n                errorMessage = \"Please enter destination file extension\";\n            }\n            else {\n                var dir = path.resolve(path.dirname(assistUtils.getActiveEditor().getPath()), path.dirname(_this.destination));\n                if (!fs.existsSync(dir)) {\n                    errorMessage = \"Parent directory does not exist\";\n                }\n                else {\n                    var st = fs.statSync(dir);\n                    if (!st.isDirectory()) {\n                        errorMessage = \"Parent path is not a directory\";\n                    }\n                    if (!errorMessage) {\n                        var canWrite = true;\n                        try {\n                            fs.accessSync(dir, fs.W_OK);\n                        }\n                        catch (exception) {\n                            canWrite = false;\n                        }\n                        if (!canWrite) {\n                            errorMessage = \"Can't write to specified directory, access denied. Please, check your permissions.\";\n                        }\n                    }\n                }\n            }\n            if (errorMessage) {\n                errorLabel.setDisplay(true);\n                errorLabel.setText(errorMessage);\n                okButton.setDisabled(true);\n            }\n            else {\n                errorLabel.setDisplay(false);\n                okButton.setDisabled(false);\n            }\n        });\n        vc.addChild(UI.vc(txt));\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            zz.destroy();\n        }).margin(10, 10));\n        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            zz.destroy();\n            _this.callback(_this.destination);\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return MoveToNewFileDialog;\n})();\nexports.MoveToNewFileDialog = MoveToNewFileDialog;\nvar FillBodyDialog = (function () {\n    function FillBodyDialog(callback, title) {\n        if (title === void 0) { title = \"Fill body\"; }\n        this.callback = callback;\n        this.title = title;\n        this.name = \"\";\n        this.needXML = true;\n        this.needJSON = true;\n        this.jsexample = '{\\n \"message\":\"Hello world\"\\n}';\n        this.xmlexample = \"\";\n        this.xmlschema = \"\";\n        this.jsschema = \"\";\n    }\n    FillBodyDialog.prototype.extraContent = function (s) {\n    };\n    FillBodyDialog.prototype.updateButtons = function () {\n        if (!this.createButton) {\n            return;\n        }\n        if (this.name.length == 0) {\n            this.createButton.setDisabled(true);\n            this.em.setDisplay(true);\n            this.em.setText(\"Please type name of your payload\");\n            return;\n        }\n        if (this.needJSON) {\n            try {\n                JSON.parse(this.jsexample);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"JSON example is not correct\");\n                return;\n            }\n            try {\n                var so = su.getJSONSchema(this.jsschema, null);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"JSON schema is not correct\");\n                return;\n            }\n        }\n        if (this.needXML) {\n            try {\n                xmlutil(this.xmlexample);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"XML example is not correct\");\n                return;\n            }\n            try {\n                var so = su.getXMLSchema(this.xmlschema);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"XML schema is not correct\");\n                return;\n            }\n        }\n        this.em.setDisplay(false);\n        this.createButton.setDisabled(false);\n    };\n    FillBodyDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        this.em = UI.label(\"Please type name of your payload\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        var section = UI.section(this.title, UI.Icon.BOOK, false, false, this.em, UI.h3(\"Please type name for your payload\")).pad(10, 10);\n        section.addChild(UI.texfField(\"\", this.name, function (x) {\n            _this.name = x.getBinding().get();\n            _this.updateButtons();\n        }));\n        var r1 = UI.checkBox(\"Create XML body\");\n        r1.setValue(this.needXML);\n        r1.getBinding().addListener(function (x) {\n            _this.needXML = r1.getValue();\n            _this.updateButtons();\n        });\n        section.addChild(r1);\n        var r2 = UI.checkBox(\"Create JSON body\");\n        r2.setValue(this.needJSON);\n        r2.getBinding().addListener(function (x) {\n            _this.needJSON = r2.getValue();\n            _this.updateButtons();\n        });\n        section.addChild(r2);\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            zz.destroy();\n        }).margin(10, 10));\n        this.createButton = UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.onOk(zz);\n            zz.destroy();\n        });\n        buttonBar.addChild(this.createButton);\n        var tf = new UI.TabFolder();\n        this.createButton.setDisabled(true);\n        this.createTextSection(tf, \"JSON Example\", \"source.json\", \"jsexample\");\n        this.createTextSection(tf, \"JSON Schema\", \"source.json\", \"jsschema\");\n        this.createTextSection(tf, \"XML Example\", \"text.xml\", \"xmlexample\");\n        this.createTextSection(tf, \"XML Schema\", \"text.xml\", \"xmlschema\");\n        tf.setOnSelected(function () {\n            var c = tf.selectedComponent();\n            var te = c.children()[1];\n            te.setText(_this[c.id()]);\n        });\n        section.addChild(tf);\n        section.addChild(buttonBar);\n        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n    };\n    FillBodyDialog.prototype.createTextSection = function (tf, caption, lang, code) {\n        var _this = this;\n        var hs = UI.vc();\n        hs.setCaption(caption);\n        hs.setId(code);\n        var ts = new UI.AtomEditorElement(\"\", function (x) { return x; });\n        ts.setMini(false);\n        ts.getBinding().addListener(function (x) {\n            _this[code] = ts.getValue();\n            _this.updateButtons();\n        });\n        //ts.setCaption(code)\n        ts.setText(\"\" + this[code]);\n        ts.setCaption(caption);\n        ts.setGrammar(lang);\n        ts.setStyle(\"height\", \"400px\");\n        ts.setStyle(\"border\", \"solid\");\n        ts.setStyle(\"border-width\", \"1px\");\n        hs.addChild(UI.h3(\"Please type your example here:\"));\n        hs.addChild(ts);\n        if (code == 'jsexample') {\n            var b = UI.button(\"Generate JSON schema\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n                try {\n                    var rs = shemagen.generateSchema(_this.jsexample, \"application/json\");\n                    _this.jsschema = rs;\n                    tf.setSelectedIndex(1);\n                }\n                catch (e) {\n                    _this.jsschema = e.message;\n                    tf.setSelectedIndex(1);\n                }\n            });\n            hs.addChild(b.margin(5, 5, 5, 5));\n        }\n        if (code == 'xmlexample') {\n            var b = UI.button(\"Generate JSON example\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n                try {\n                    var rs = xmlutil(_this.xmlexample);\n                    _this.jsexample = JSON.stringify(rs, null, 2);\n                    tf.setSelectedIndex(0);\n                }\n                catch (e) {\n                    _this.jsexample = e.message;\n                    tf.setSelectedIndex(0);\n                }\n            });\n            hs.addChild(b.margin(5, 5, 5, 5));\n        }\n        tf.add(caption, null, hs);\n    };\n    FillBodyDialog.prototype.onOk = function (zz) {\n        var uiState = {\n            name: this.name,\n            needJSON: this.needJSON,\n            needXML: this.needXML,\n            jsexample: this.jsexample,\n            xmlexample: this.xmlexample,\n            jsschema: this.jsschema,\n            xmlschema: this.xmlschema,\n        };\n        this.callback(uiState);\n    };\n    return FillBodyDialog;\n})();\nfunction register() {\n    contextActions.uiActions.registerMoveContentsAction(function (uiFinishedCallback) {\n        new MoveToNewFileDialog(uiFinishedCallback).show();\n    });\n    contextActions.uiActions.registerCompleteBodyAction(function (uiFinishedCallback) {\n        new FillBodyDialog(uiFinishedCallback).show();\n    });\n}\nexports.register = register;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/actions.js\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = require(\"atom-ui-lib\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom-ui-lib\"\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = require(\"child_process\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"child_process\"\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = require(\"xmlhttprequest\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xmlhttprequest\"\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = require(\"mkdirp\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mkdirp\"\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = require(\"url\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"url\"\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = require(\"raml-actions\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-actions\"\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = require(\"raml-1-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-1-parser\"\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = require(\"atom-space-pen-views\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom-space-pen-views\"\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = require(\"underscore\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = require(\"raml-suggestions\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-suggestions\"\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = require(\"basarat-text-buffer\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"basarat-text-buffer\"\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = require(\"raml-1-parser/dist/index\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-1-parser/dist/index\"\n ** module id = 29\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * Created by kor on 22/06/15.\n */\nvar SpacePenViews = require('atom-space-pen-views');\nvar Scrollable = (function (_super) {\n    __extends(Scrollable, _super);\n    function Scrollable() {\n        _super.call(this);\n        this._children = [];\n    }\n    Scrollable.content = function () {\n        var v = this.div({ class: 'scrollpad pane-item padded', tabindex: -1, style: \"overflow:scroll;\" });\n        return v;\n    };\n    Scrollable.prototype.dispose = function () {\n    };\n    Scrollable.prototype.caption = function () { return \"\"; };\n    Scrollable.prototype.scroll = function (top, left) {\n        this.element.scrollTop = top;\n        this.element.scrollLeft = left;\n    };\n    Scrollable.prototype.size = function () {\n        return {\n            top: this.element.scrollTop,\n            left: this.element.scrollLeft,\n            bottom: this.element.scrollTop + this.element.clientHeight,\n            right: this.element.scrollLeft + this.element.clientWidth\n        };\n    };\n    Scrollable.prototype.changed = function () { };\n    Scrollable.prototype.refresh = function () { };\n    Scrollable.prototype.ui = function () {\n        return this.element;\n    };\n    Scrollable.prototype.setParent = function (p) {\n        if (this._parent != null)\n            this._parent.removeChild(this);\n        this._parent = p;\n    };\n    //TODO REMOVE COPY PASTE\n    Scrollable.prototype.addChild = function (child) {\n        child.setParent(this);\n        this._children.push(child);\n        //this.changed();\n    };\n    Scrollable.prototype.removeChild = function (child) {\n        this._children = this._children.filter(function (x) { return x != child; });\n        // this.changed();\n    };\n    Scrollable.prototype.doRender = function () {\n        return this.innerRenderUI();\n    };\n    /**\n     *\n     * @returns not null element;\n     */\n    Scrollable.prototype.selfRender = function () {\n        return document.createElement(\"div\");\n    };\n    Scrollable.prototype.attached = function () {\n        this.html(this.innerRenderUI());\n    };\n    Scrollable.prototype.innerRenderUI = function () {\n        var start = this.selfRender();\n        this._children.forEach(function (x) {\n            var el = x.renderUI();\n            if (el) {\n                start.appendChild(el);\n            }\n        });\n        return start;\n    };\n    Scrollable.prototype.renderUI = function () {\n        return this.element;\n    };\n    Scrollable.prototype.parent = function () {\n        return null;\n    };\n    Scrollable.prototype.children = function () {\n        return this._children;\n    };\n    Scrollable.prototype.isAttached = function () {\n        return true;\n    };\n    return Scrollable;\n})(SpacePenViews.ScrollView);\nexports.Scrollable = Scrollable;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/util/ScrollViewUI.js\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar Workspace = (function () {\n    function Workspace() {\n    }\n    Workspace.prototype.onDidChangeActivePaneItem = function (callback) {\n        return atom.workspace.onDidChangeActivePaneItem(callback);\n    };\n    Workspace.prototype.addModalPanel = function (arg) {\n        return atom.workspace.addModalPanel(arg);\n    };\n    Workspace.prototype.getActiveTextEditor = function () {\n        return atom.workspace.getActiveTextEditor();\n    };\n    Workspace.prototype.getActivePane = function () {\n        return atom.workspace.getActivePane();\n    };\n    Workspace.prototype.getActiveEditor = function () {\n        return atom.workspace.getActiveEditor();\n    };\n    Workspace.prototype.addRightPanel = function (arg) {\n        return atom.workspace.addRightPanel(arg);\n    };\n    Workspace.prototype.paneForItem = function (arg) {\n        return atom.workspace.paneForItem(arg);\n    };\n    Workspace.prototype.getPaneItems = function () {\n        return atom.workspace.getPaneItems();\n    };\n    Workspace.prototype.onDidAddPaneItem = function (callback) {\n        return atom.workspace.onDidAddPaneItem(callback);\n    };\n    Workspace.prototype.onDidDestroyPane = function (callback) {\n        return atom.workspace.onDidDestroyPane(callback);\n    };\n    Workspace.prototype.open = function (path, args) {\n        atom.workspace.open(path, args);\n    };\n    return Workspace;\n})();\nexports.Workspace = Workspace;\nfunction open(pathsToOpen) {\n    atom.open(pathsToOpen);\n}\nexports.open = open;\nexports.workspace = new Workspace();\nvar CommandManager = (function () {\n    function CommandManager() {\n    }\n    CommandManager.prototype.add = function (selector, type, callback) {\n        return atom.commands.add(selector, type, callback);\n    };\n    return CommandManager;\n})();\nexports.CommandManager = CommandManager;\nexports.commands = new CommandManager();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/atomWrapper.js\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar atom = require('../core/atomWrapper');\nvar aspv = require('atom-space-pen-views');\n/*\n * List viewer for commands. accepts confirmation function, label function and key for fuzzy filtering.\n */\nvar SelectListView = (function (_super) {\n    __extends(SelectListView, _super);\n    function SelectListView(_confirmed, label, filterKey) {\n        if (filterKey === void 0) { filterKey = ''; }\n        _super.call(this, []);\n        this._confirmed = _confirmed;\n        this.label = label;\n        this.filterKey = filterKey;\n    }\n    SelectListView.prototype.getFilterKey = function () { return this.filterKey; };\n    SelectListView.prototype.viewForItem = function (item) {\n        return \"<li>\" + this.label(item) + \"</li>\";\n    };\n    SelectListView.prototype.cancel = function () {\n        this.panel.hide();\n        _super.prototype.cancel.call(this);\n    };\n    SelectListView.prototype.hide = function () {\n        if (!this.panel)\n            return;\n        this.panel.hide();\n    };\n    SelectListView.prototype.confirmed = function (item) {\n        this._confirmed(item);\n        this.hide();\n        return this.getSelectedItemView();\n    };\n    SelectListView.prototype.show = function (commands) {\n        this.storeFocusedElement();\n        if (!this.panel)\n            this.panel = atom.workspace.addModalPanel({ item: this });\n        this.setItems(commands);\n        this.panel.show();\n        this.focusFilterEditor();\n    };\n    return SelectListView;\n})(aspv.SelectListView);\nexports.SelectListView = SelectListView;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/quick-commands-ui.js\n ** module id = 32\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar contextActions = require(\"raml-actions\");\nvar dialogs = require(\"../dialogs/dialogs\");\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar services = rp.ds;\nvar universeHelpers = rp.universeHelpers;\nvar AddNewResourceStateCalculator = (function (_super) {\n    __extends(AddNewResourceStateCalculator, _super);\n    function AddNewResourceStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    AddNewResourceStateCalculator.prototype.calculate = function () {\n        //usually we dont need to check the editor, CommonASTStateCalculator does this for us\n        //but in this case we accept null generalState, so double-checking for opened file\n        var editor = this.getEditor();\n        if (!editor)\n            return null;\n        if (path.extname(editor.getPath()) != '.raml')\n            return null;\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isResourceType(highLevelNode.definition()) &&\n            !universeHelpers.isApiType(highLevelNode.definition()))\n            return null;\n        if (!highLevelNode.lowLevel()) {\n            return null;\n        }\n        return highLevelNode;\n    };\n    return AddNewResourceStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nvar CreateNewAPIStateCalculator = (function (_super) {\n    __extends(CreateNewAPIStateCalculator, _super);\n    function CreateNewAPIStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    CreateNewAPIStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (generalState)\n            return null;\n        var editor = this.getEditor();\n        if (!editor)\n            return null;\n        if (path.extname(editor.getPath()) != '.raml')\n            return null;\n        var text = editor.getText().trim();\n        if (text != \"\")\n            return null;\n        return {};\n    };\n    return CreateNewAPIStateCalculator;\n})(contextActions.CommonASTStateCalculator);\nfunction getResourceParent(node) {\n    if (!node || !node.property())\n        return null;\n    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n        return node;\n    return getResourceParent(node.parent());\n}\nexports.getResourceParent = getResourceParent;\nfunction getMethodParent(node) {\n    if (!node || !node.property())\n        return null;\n    if ((universeHelpers.isMethodType(node.definition()) || universeHelpers.isTraitType(node.definition())) && !node.definition().getAdapter(services.RAMLService).isUserDefined()) {\n        return node;\n    }\n    return null;\n}\nfunction getParent(node, name) {\n    if (!node || !node.property())\n        return null;\n    if ((node.definition().isAssignableFrom(name))) {\n        return node;\n    }\n    return null;\n}\nfunction getResourceParentOrRoot(node) {\n    var rp = getResourceParent(node);\n    return rp ? rp : editorTools.aquireManager().ast;\n}\nfunction toResource(node) {\n    if (!node || !node.property())\n        return null;\n    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n        return node;\n    return null;\n}\nexports.toResource = toResource;\nfunction registerQuickCommands(cm) {\n    if (!editorTools.aquireManager())\n        editorTools.initEditorTools(false);\n    var commands = [];\n    commands.forEach(function (x) { return x['__module__'] = 'editorTools'; });\n    contextActions.addAction({\n        name: \"Add new resource\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Add new...\"],\n        onClick: function (state) { return dialogs.newResource(editorTools.aquireManager().getSelectedNode()); },\n        stateCalculator: new AddNewResourceStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Create new API\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Add new...\"],\n        onClick: function (state) { return dialogs.newApi(); },\n        stateCalculator: new CreateNewAPIStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addSimpleAction(\"Add new method\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newMethod(toResource(editorTools.aquireManager().getSelectedNode())); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && toResource(editorTools.aquireManager().getSelectedNode()) != null; });\n    contextActions.addSimpleAction(\"Create new URI Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(toResource(editorTools.aquireManager().getSelectedNode()), \"Create new URI Parameter\", \"uriParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (toResource(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Query Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Query Parameter\", \"queryParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Response Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n    contextActions.addSimpleAction(\"Create new Response Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Response Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n    contextActions.addSimpleAction(\"Create new Property\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\"), \"Create new Property\", \"properties\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\") != null); });\n    contextActions.addSimpleAction(\"Create new Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Response\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Response\", \"responses\", \"200\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n}\nexports.registerQuickCommands = registerQuickCommands;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/code-commands.js\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar UI = require(\"atom-ui-lib\");\nvar SC = require(\"../util/ScrollViewUI\");\nvar CompositeDisposable = UI.CompositeDisposable;\nvar rp = require(\"raml-1-parser\");\nvar universes = rp.universes;\nvar editorTools = require(\"./editor-tools\");\nvar index_1 = require(\"raml-1-parser/dist/index\");\nvar RamlOutline = (function (_super) {\n    __extends(RamlOutline, _super);\n    function RamlOutline() {\n        _super.call(this);\n        this.disposables = new CompositeDisposable();\n        this.fire = true;\n        this.createTree(null);\n        this.addClass('raml-outline');\n        this.addChild(this._rs);\n    }\n    RamlOutline.prototype.createTree = function (p) {\n        var _this = this;\n        this._rs = createTree(p, function (sender) {\n            if (editorTools.aquireManager()._details && sender.selection && sender.selection.elements && _this.fire == true) {\n                if (sender.selection.elements.length > 0 && sender.selection.elements[0]) {\n                    editorTools.aquireManager().setSelectedNode(sender.selection.elements[0]);\n                }\n            }\n        });\n        this._viewers = [0, 1, 2, 3].map(function (i) { return _this._rs.get(i).content; });\n    };\n    RamlOutline.prototype.getTitle = function () { return \"Outline\"; };\n    RamlOutline.prototype.getNodePType = function (node) {\n        while (node.parent() && node.parent().parent()) {\n            node = node.parent();\n        }\n        return getNodeType(node);\n    };\n    RamlOutline.prototype.setSelection = function (node) {\n        //if (this._selectedNode == node) return;\n        this._selectedNode = node;\n        this.fire = false;\n        try {\n            var index = this.getNodePType(node);\n            var viewer = this._viewers[index];\n            if (viewer != null) {\n                viewer.setSelection(node);\n                this._rs.setSelectedIndex(index);\n            }\n        }\n        finally {\n            this.fire = true;\n        }\n    };\n    RamlOutline.prototype.setUnit = function (unit, force) {\n        if (force === void 0) { force = false; }\n        this._children = [];\n        this.createTree(unit);\n        this.addClass('raml-outline');\n        this.addChild(this._rs);\n        this.html(this.innerRenderUI());\n    };\n    RamlOutline.prototype.attach = function () {\n        if (!this._isAttached) {\n            var $this = $(this);\n            $this.html(this._rs.renderUI().outerHTML);\n            this._isAttached = true;\n        }\n    };\n    RamlOutline.prototype.forEachViewer = function (command) {\n        this._viewers.forEach(command);\n    };\n    RamlOutline.prototype.refresh = function () {\n        var unit = this.unit;\n        this.setUnit(null);\n        this.setUnit(unit);\n    };\n    RamlOutline.prototype.destroy = function () {\n        editorTools.aquireManager()._view = null;\n        this._selectedNode = null;\n        this.unit = null;\n        this._viewers = [];\n        this._rs = null;\n        this._children = [];\n        this.disposables.dispose();\n    };\n    return RamlOutline;\n})(SC.Scrollable);\nexports.RamlOutline = RamlOutline;\n/*\n *\n */\nfunction treeSection(input, name, icon, filterFunc, l, opener) {\n    if (opener === void 0) { opener = null; }\n    var v = UI.treeViewerSection(name, icon, input, function (x) { return getChildren(x).filter(function (x) { return filterFunc(x); }); }, new HLRenderer(opener));\n    v.viewer.setBasicLabelFunction(function (x) { return x ? x.name() : ''; });\n    v.viewer.setKeyProvider({\n        key: function (p) {\n            return \"\" + p.lowLevel().start();\n        }\n    });\n    v.viewer.addSelectionListener(l);\n    return v;\n}\nexports.treeSection = treeSection;\nvar HLNodeType;\n(function (HLNodeType) {\n    HLNodeType[HLNodeType[\"Resource\"] = 0] = \"Resource\";\n    HLNodeType[HLNodeType[\"Schema\"] = 1] = \"Schema\";\n    HLNodeType[HLNodeType[\"Type\"] = 2] = \"Type\";\n    HLNodeType[HLNodeType[\"Trait\"] = 3] = \"Trait\";\n    HLNodeType[HLNodeType[\"Unknown\"] = 4] = \"Unknown\";\n})(HLNodeType || (HLNodeType = {}));\nfunction getNodeType(node) {\n    if (isResource(node))\n        return HLNodeType.Resource;\n    else if (isOther(node))\n        return HLNodeType.Trait;\n    else if (isResourceTypeOrTrait(node))\n        return HLNodeType.Type;\n    else if (isSchemaOrType(node))\n        return HLNodeType.Schema;\n    else\n        return HLNodeType.Unknown;\n}\nfunction isResource(p) {\n    return (p.definition().key() === universes.Universe08.Resource || p.definition().key() === universes.Universe10.Resource);\n}\nvar prohibit = {\n    resources: true,\n    schemas: true,\n    types: true,\n    resourceTypes: true,\n    traits: true\n};\nfunction isOther(p) {\n    if (p.property()) {\n        var nm = p.property().nameId();\n        if (prohibit[nm]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isResourceTypeOrTrait(p) {\n    var pc = p.definition().key();\n    return (pc === universes.Universe08.ResourceType\n        || pc === universes.Universe10.ResourceType ||\n        pc === universes.Universe08.Trait\n        ||\n            pc === universes.Universe10.Trait);\n}\nfunction isApi(p) {\n    var pc = p.definition().key();\n    return pc === universes.Universe08.Api || pc === universes.Universe10.Api;\n}\nfunction isDocumentation(p) {\n    var pc = p.definition().key();\n    return (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem);\n}\nfunction isSchemaOrType(p) {\n    var pc = p.definition().key();\n    return (pc === universes.Universe08.GlobalSchema) || (p.property() && p.property().nameId()\n        == universes.Universe10.LibraryBase.properties.types.name);\n}\nfunction getChildren(p) {\n    if (p == null)\n        return [];\n    if (p.isAttr()) {\n        return [];\n    }\n    if (p.isUnknown()) {\n        return [];\n    }\n    var ch = p.children();\n    return ch.filter(function (x) {\n        if (x.isAttr()) {\n            return false;\n        }\n        if (x.isUnknown()) {\n            return false;\n        }\n        var e = x;\n        //return false;\n        return true;\n    });\n}\nfunction keyProvider(node) {\n    if (!node)\n        return null;\n    if (node && !node.parent())\n        return node.name();\n    else\n        return node.name() + \" :: \" + keyProvider(node.parent());\n}\nfunction fullPath(node) {\n    if (node == null)\n        return \"\";\n    else\n        return fullPath(node.parent()) + \"/\" + node.name();\n}\nfunction simpleTree(input, selectionListener, filterFunc, opener) {\n    if (opener === void 0) { opener = null; }\n    var viewer = UI.treeViewer(function (x) {\n        if (x === null) {\n            return [];\n        }\n        if (x.parent() == null) {\n            return getChildren(x).filter(function (x) { return filterFunc(x); });\n        }\n        return getChildren(x);\n    }, new HLRenderer(opener), fullPath);\n    viewer.setBasicLabelFunction(function (x) { return x.name(); });\n    viewer.setKeyProvider({ key: keyProvider });\n    viewer.addSelectionListener(selectionListener);\n    viewer.getBinding().set(input);\n    return viewer;\n}\nexports.simpleTree = simpleTree;\nfunction createTree(p, selectionListener, opener) {\n    if (opener === void 0) { opener = null; }\n    var outline = simpleTree(p, { selectionChanged: selectionListener }, function (x) { return (isResource(x)); }, opener);\n    var schemas = simpleTree(p, { selectionChanged: selectionListener }, isSchemaOrType, opener);\n    var types = simpleTree(p, { selectionChanged: selectionListener }, isResourceTypeOrTrait, opener);\n    var other = simpleTree(p, { selectionChanged: selectionListener }, function (x) { return (isOther(x)); }, opener);\n    var folder = new UI.TabFolder();\n    folder.add(\"Resources\", UI.Icon.SEARCH, outline, 'raml-icon-custom');\n    folder.add(\"Schemas & Types\", UI.Icon.SEARCH, schemas, 'raml-icon-custom');\n    folder.add(\"Resource Types & Traits\", UI.Icon.SEARCH, types, 'raml-icon-custom');\n    folder.add(\"Other\", UI.Icon.SEARCH, other, 'raml-icon-custom');\n    folder.setSelectedIndex(0);\n    folder.setOnSelected(function () {\n        var selectedTab = folder.selectedComponent();\n        if (selectedTab) {\n            var selection = selectedTab.getSelection();\n            if (selection && selection.elements && selection.elements.length > 0) {\n                selectionListener(new UI.SelectionChangedEvent(selectedTab, null, selection));\n            }\n            selectedTab.customizePanel(true);\n        }\n    });\n    return folder;\n}\nexports.createTree = createTree;\nvar HLRenderer = (function () {\n    function HLRenderer(opener) {\n        this.opener = opener;\n    }\n    HLRenderer.prototype.render = function (model) {\n        try {\n            if (model.isAttr()) {\n                var attr = model;\n                return UI.hc(UI.label(attr.name() + \":\" + attr.value()), UI.a(\"\", function (x) {\n                    var p1 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().start());\n                    var p2 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().end());\n                    editorTools.aquireManager().getCurrentEditor().setSelectedBufferRange({ start: p1, end: p1 }, {});\n                }, UI.Icon.ARROW_SMALL_LEFT, null, null));\n            }\n            if (model.isUnknown()) {\n                return UI.label(\"unknown\");\n            }\n            var icon = UI.Icon.DASH;\n            var highLight = UI.TextClasses.NORMAL;\n            var node = model;\n            var pc = node.definition().key();\n            if (pc === universes.Universe08.Resource || pc === universes.Universe10.Resource) {\n                icon = UI.Icon.PRIMITIVE_SQUARE;\n                highLight = UI.TextClasses.HIGHLIGHT;\n            }\n            if (pc === universes.Universe08.Method || pc === universes.Universe10.Method) {\n                icon = UI.Icon.PRIMITIVE_DOT;\n                highLight = UI.TextClasses.WARNING;\n            }\n            if (pc === universes.Universe08.AbstractSecurityScheme || pc === universes.Universe10.AbstractSecurityScheme) {\n                icon = UI.Icon.LOCK;\n                highLight = UI.TextClasses.HIGHLIGHT;\n            }\n            if (pc === universes.Universe08.AbstractSecurityScheme || pc == universes.Universe10.AbstractSecurityScheme) {\n                icon = UI.Icon.FILE_SUBMODULE;\n                highLight = UI.TextClasses.NORMAL;\n            }\n            if (pc == universes.Universe10.TypeDeclaration && index_1.universeHelpers.isAnnotationTypesProperty(node.property())) {\n                icon = UI.Icon.TAG;\n                highLight = UI.TextClasses.HIGHLIGHT;\n            }\n            if (node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name) ||\n                node.definition().isAssignableFrom(universes.Universe08.Parameter.name)) {\n                if (node.property() && node.property().nameId() == universes.Universe10.ObjectTypeDeclaration.properties.properties.name) {\n                    icon = UI.Icon.FILE_BINARY;\n                    highLight = UI.TextClasses.SUCCESS;\n                }\n                else {\n                    icon = UI.Icon.FILE_BINARY;\n                    highLight = UI.TextClasses.SUCCESS;\n                }\n            }\n            var nm = model.name();\n            var hnode = model;\n            if (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem) {\n                icon = UI.Icon.BOOK;\n                var a = hnode.attr(\"title\");\n                if (a) {\n                    nm = a.value();\n                }\n            }\n            var extraText = \"\";\n            var extraClass = UI.TextClasses.NORMAL;\n            var hc = UI.hc(UI.label(nm, icon, highLight));\n            var tp = node.attr(\"type\");\n            if (tp) {\n                var vl = tp.value();\n                if (vl == null) {\n                    vl = \"\";\n                }\n                var sv = \"\";\n                if (typeof vl === \"object\") {\n                    sv = \":\" + vl.valueName();\n                }\n                else {\n                    sv = \":\" + vl;\n                }\n                hc.addChild(UI.label(sv, UI.Icon.NONE, UI.TextClasses.WARNING).margin(2, 0, 0, 0));\n            }\n            if (node.lowLevel().unit() != node.root().lowLevel().unit()) {\n                highLight = UI.TextClasses.SUBTLE;\n                hc.addChild(UI.label(\"(\" + node.lowLevel().unit().path() + \")\", UI.Icon.NONE, highLight).margin(5, 0, 0, 0));\n            }\n            hc.addClass(\"outline\");\n            return hc;\n        }\n        catch (e) {\n            console.log(e);\n            return UI.hc(UI.label(\"Illegal node\", UI.Icon.ARROW_SMALL_LEFT, null, null));\n        }\n    };\n    return HLRenderer;\n})();\nexports.HLRenderer = HLRenderer;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/outline-view.js\n ** module id = 34\n ** module chunks = 0\n **/","var emissary = require('emissary');\nvar Subscriber = emissary.Subscriber;\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar sp = require(\"atom-space-pen-views\");\nvar $ = sp.$;\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View(options) {\n        _super.call(this);\n        this.options = options;\n        this.init();\n    }\n    Object.defineProperty(View.prototype, \"$\", {\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    View.content = function () {\n        throw new Error('Must override the base View static content member');\n    };\n    View.prototype.init = function () { };\n    return View;\n})(sp.View);\nvar ScrollView = (function (_super) {\n    __extends(ScrollView, _super);\n    function ScrollView(options) {\n        _super.call(this);\n        this.options = options;\n        this.init();\n    }\n    Object.defineProperty(ScrollView.prototype, \"$\", {\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScrollView.content = function () {\n        throw new Error('Must override the base View static content member');\n    };\n    ScrollView.prototype.init = function () { };\n    return ScrollView;\n})(sp.ScrollView);\nvar TooltipView = (function (_super) {\n    __extends(TooltipView, _super);\n    function TooltipView(rect) {\n        _super.call(this, rect);\n        this.rect = rect;\n        $(document.body).append(this.$);\n        this.updatePosition();\n    }\n    TooltipView.content = function () {\n        var _this = this;\n        return this.div({ class: 'atom-typescript-tooltip tooltip' }, function () {\n            _this.div({ class: 'tooltip-inner', outlet: 'inner' });\n        });\n    };\n    TooltipView.prototype.updateText = function (text) {\n        this.inner.html(text);\n        this.updatePosition();\n        this.$.fadeTo(300, 1);\n    };\n    TooltipView.prototype.updatePosition = function () {\n        var offset = 10;\n        var left = this.rect.right;\n        var top = this.rect.bottom;\n        var right = undefined;\n        if (left + this.$[0].offsetWidth >= $(document.body).width())\n            left = $(document.body).width() - this.$[0].offsetWidth - offset;\n        //this.$.css({ 'max-width': '500px'})\n        if (left < 0) {\n            this.$.css({ 'white-space': 'pre-wrap' });\n            left = offset;\n            right = offset;\n        }\n        if (top + this.$[0].offsetHeight >= $(document.body).height()) {\n            top = this.rect.top - this.$[0].offsetHeight;\n        }\n        this.$.css({ left: left, top: top });\n    };\n    return TooltipView;\n})(View);\nfunction getFromShadowDom(element, selector) {\n    var el = element[0];\n    var found = el.rootElement.querySelectorAll(selector);\n    return sp.$(found[0]);\n}\nexports.getFromShadowDom = getFromShadowDom;\nfunction getEditorPositionForBufferPosition(editor, bufferPos) {\n    var buffer = editor.getBuffer();\n    return buffer.characterIndexForPosition(bufferPos);\n}\nfunction isAllowedExtension(ext) {\n    return (ext == '.raml' || ext == '.yaml');\n}\nexports.isAllowedExtension = isAllowedExtension;\nfunction attach(editorView, editor) {\n    //console.log(\"Attach\")\n    //console.log(editorView)\n    //var rawView = editorView;\n    //var filePath = editor.getPath();\n    //var filename = path.basename(filePath);\n    //var ext = path.extname(filename);\n    //if (!isAllowedExtension(ext))\n    //    return;\n    //if (!fs.existsSync(filePath)) {\n    //    return;\n    //}\n    //var scroll = getFromShadowDom([editorView], '.scroll-view');\n    //var subscriber = new Subscriber();\n    //var exprTypeTimeout = null;\n    //var exprTypeTooltip = null;\n    //var lastExprTypeBufferPt;\n    //subscriber.subscribe(scroll, 'mousemove', function (e) {\n    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n    //    if (lastExprTypeBufferPt && lastExprTypeBufferPt.isEqual(bufferPt) && exprTypeTooltip)\n    //        return;\n    //    lastExprTypeBufferPt = bufferPt;\n    //    clearExprTypeTimeout();\n    //    exprTypeTimeout = setTimeout(function () { return showExpressionType(e); }, 1000);\n    //});\n    //subscriber.subscribe(scroll, 'mouseout', function (e) { return clearExprTypeTimeout(); });\n    //subscriber.subscribe(scroll, 'keydown', function (e) { return clearExprTypeTimeout(); });\n    //editor.onDidDestroy(function () { return deactivate(); });\n    //function showExpressionType(e) {\n    //    if (exprTypeTooltip)\n    //        return;\n    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n    //    pixelPt.top += editor.displayBuffer.getScrollTop();\n    //    pixelPt.left += editor.displayBuffer.getScrollLeft();\n    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n    //    var curCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column]);\n    //    var nextCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column + 1]);\n    //    if (curCharPixelPt.left >= nextCharPixelPt.left)\n    //        return;\n    //    var offset = editor.getLineHeightInPixels() * 0.7;\n    //    var tooltipRect = {\n    //        left: e.clientX,\n    //        right: e.clientX,\n    //        top: e.clientY - offset,\n    //        bottom: e.clientY + offset\n    //    };\n    //    exprTypeTooltip = new TooltipView(tooltipRect);\n    //    // var position = getEditorPositionForBufferPosition(editor, bufferPt);\n    //    var node=provider.getAstNode({\n    //        editor:editor,\n    //        bufferPosition:bufferPt\n    //    },false);\n    //    if (node) {\n    //        var hl=<hl.IHighLevelNode>node;\n    //        var pos=getEditorPositionForBufferPosition(editor,bufferPt);\n    //        var doc=docHelper.getDocumentation(hl,pos);\n    //        if (doc){\n    //            exprTypeTooltip.updateText(doc);\n    //        }\n    //    }\n    //\n    //}\n    //function deactivate() {\n    //    subscriber.unsubscribe();\n    //    clearExprTypeTimeout();\n    //}\n    //function clearExprTypeTimeout() {\n    //    if (exprTypeTimeout) {\n    //        clearTimeout(exprTypeTimeout);\n    //        exprTypeTimeout = null;\n    //    }\n    //    hideExpressionType();\n    //}\n    //function hideExpressionType() {\n    //    if (!exprTypeTooltip)\n    //        return;\n    //    exprTypeTooltip.$.remove();\n    //    exprTypeTooltip = null;\n    //}\n}\nexports.attach = attach;\nfunction pixelPositionFromMouseEvent(editorView, event) {\n    var clientX = event.clientX, clientY = event.clientY;\n    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n    var top = clientY - linesClientRect.top;\n    var left = clientX - linesClientRect.left;\n    return { top: top, left: left };\n}\nfunction screenPositionFromMouseEvent(editorView, event) {\n    return editorView.getModel().screenPositionForPixelPosition(pixelPositionFromMouseEvent(editorView, event));\n}\nexports.screenPositionFromMouseEvent = screenPositionFromMouseEvent;\nfunction screenPositionFromMouse(editor, event) {\n    var editorView = sp.$(atom.views)[0].getView(editor);\n    var pos = pixelPositionFromMouseEvent(editorView, event);\n    pos.top -= editor.displayBuffer.getScrollTop();\n    pos.left -= editor.displayBuffer.getScrollLeft();\n    var clientRect = editorView.getBoundingClientRect();\n    pos.top += clientRect.top;\n    pos.left += clientRect.left;\n    return pos;\n}\nexports.screenPositionFromMouse = screenPositionFromMouse;\n//export function turnOn()\n//{\n//    (<any>atom.workspace).observeTextEditors(editor=> {\n//        var editorView = (<any>sp.$((<any>atom).views))[0].getView(editor);\n//        attach(editorView, editor);\n//    });\n//}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/tooltip-manager.js\n ** module id = 35\n ** module chunks = 0\n **/","/**\n * Created by kor on 24/07/15.\n */\n/// <reference path=\"../../../typings/main.d.ts\" />\nvar path = require('path');\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar rp = require(\"raml-1-parser\");\nvar project = rp.project;\nfunction ast(editor) {\n    var man = editorTools.aquireManager();\n    if (editorTools.aquireManager()) {\n        if (man.getCurrentEditor() == editor) {\n            return man.ast;\n        }\n    }\n    var p = editor.getPath();\n    var prj = project.createProject(path.dirname(p));\n    var unit = prj.unit(path.basename(p));\n    var text = editor.getBuffer().getText();\n    if (!unit) {\n        return null;\n    }\n    unit.updateContent(text);\n    var ast = unit.highLevel();\n    return ast;\n}\nexports.ast = ast;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/editorManager.js\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar stubs = rp.stubs;\nvar _ = require(\"underscore\");\nvar provider = require(\"../suggestion/provider\");\nvar UI = require(\"atom-ui-lib\");\nvar outlineView = require(\"../editor-tools/outline-view\");\nvar def = rp.ds;\nvar assist = require(\"./assist-utils\");\nvar yaml = require(\"yaml-ast-parser\");\nvar universeHelpers = rp.universeHelpers;\nvar universeModule = rp.universes;\nvar search = rp.search;\nvar util = require(\"../../util/index\");\nvar ExtractTypesAndTraitsDialog = (function () {\n    function ExtractTypesAndTraitsDialog(node, name, _resourceType) {\n        this.node = node;\n        this.name = name;\n        this._resourceType = _resourceType;\n        this.filters = new NodeFilters();\n    }\n    ExtractTypesAndTraitsDialog.prototype.getActiveEditor = function () {\n        return assist.getActiveEditor();\n    };\n    ExtractTypesAndTraitsDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Extract \" + this.name + \":\", UI.Icon.GIST_NEW, false, false);\n        vc.addChild(UI.label(\"Extracted element name:\").pad(5, 0));\n        var errorLabel = UI.label(\"Please type valid name for \" + this.name, UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        var tf = UI.texfField(\"\", \"\", function (x) {\n            if (!okButton) {\n                return;\n            }\n            var isErr = tf.getBinding().get().trim().length == 0;\n            okButton.setDisabled(isErr);\n            errorLabel.setDisplay(isErr);\n            stub.attr(\"name\").setValue(tf.getBinding().get());\n        });\n        vc.addChild(tf);\n        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n        var el = UI.hc();\n        vc.setPercentWidth(100);\n        el.setPercentWidth(100);\n        var filterFunc = function (x) {\n            if (_this._resourceType) {\n                if (universeHelpers.isResourceType(x.definition())) {\n                    return false;\n                }\n            }\n            if (_.find(_this.filters.removals, function (y) { return x == y; })) {\n                return false;\n            }\n            return true;\n        };\n        var stub = this.createNodeStub(node);\n        var v = createSmallSelectionPanel(node, filterFunc, \"400px\", \"47%\");\n        var v1 = createSmallSelectionPanel(stub, function (x) { return true; }, \"400px\", \"47%\", \"right\");\n        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = v.getSelection().elements;\n            _this.moveRight(z, stub, node, v, v1);\n        });\n        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = v1.getSelection().elements;\n            _this.moveLeft(z, stub, node, v, v1);\n        });\n        var allRight = UI.button(\">>\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = node.elements().filter(function (x) { return filterFunc(x); });\n            _this.moveRight(z, stub, node, v, v1);\n        });\n        var allLeft = UI.button(\"<<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = stub.elements();\n            _this.moveLeft(z, stub, node, v, v1);\n        });\n        el.addChild(UI.vc(moveRight, moveLeft, allRight, allLeft));\n        el.addChild(v);\n        el.addChild(v1);\n        vc.addChild(el);\n        v.addSelectionListener({\n            selectionChanged: function (ev) {\n                var rs = ev.selection.elements;\n                var m = (_.find(rs, function (x) { return x.parent() != node; }) != undefined);\n                moveRight.setDisabled(m || (rs.length == 0));\n            }\n        });\n        v1.addSelectionListener({\n            selectionChanged: function (ev) {\n                var nodesToMove = ev.selection.elements;\n                var unregisteredNode = _.find(nodesToMove, function (nodeToMove) {\n                    var registeredNode = _.find(_this.filters.removals, function (movedNode) { return nodeToMove.id() == movedNode.id(); });\n                    return registeredNode == undefined;\n                }) != undefined;\n                //var m=(_.find(rs, x=>x.parent() != stub)!=undefined )\n                moveLeft.setDisabled(unregisteredNode || (nodesToMove.length == 0));\n            }\n        });\n        moveLeft.setDisabled(true);\n        moveRight.setDisabled(true);\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        var okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.apply(node, stub, tf.getBinding().get());\n            //this.onOk(zz);\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    ExtractTypesAndTraitsDialog.prototype.apply = function (node, stub, newTypeName) {\n        this.filters.removals.forEach(function (x) { return node.remove(x); });\n        var stub2 = this.createNodeStub(node);\n        stub.elements().forEach(function (child) { return stub2.add(child); });\n        stub2.attr(\"name\").setValue(newTypeName);\n        var typeOrTraitValueToReplace = \"_________TEMPORARY_TYPE_OR_TRAIT_VALUE_________\";\n        var replacements = [];\n        var superAttributeName = this._resourceType ?\n            universeModule.Universe10.ResourceType.properties.type.name :\n            universeModule.Universe10.Trait.properties.is.name;\n        var superAttributes = node.attributes(superAttributeName);\n        var superAttrProperty = stub2.definition().property(superAttributeName);\n        if (superAttributes && superAttributes.length > 0) {\n            for (var i = 0; i < superAttributes.length; i++) {\n                var superAttribute = superAttributes[i];\n                var superAttributeLL = superAttribute.lowLevel();\n                var start = superAttributeLL.valueStart();\n                var end = superAttributeLL.valueEnd();\n                if (start <= 0) {\n                    start = superAttributeLL.start();\n                    end = superAttributeLL.end();\n                }\n                var typeOrTraitValueToReplaceWith = superAttributeLL.unit().contents().substr(start, end - start);\n                replacements.push(typeOrTraitValueToReplaceWith);\n            }\n            for (var i = 0; i < superAttributes.length; i++) {\n                var superAttribute = superAttributes[i];\n                node.remove(superAttribute);\n            }\n            var stubAttributeValue = typeOrTraitValueToReplace;\n            if (superAttributes.length > 1) {\n                stubAttributeValue = \"[\" + stubAttributeValue + \"]\";\n            }\n            var stubSuperAttribute = stubs.createAttr(superAttrProperty, stubAttributeValue);\n            stub2.add(stubSuperAttribute);\n            node.resetChildren();\n            stub2.resetChildren();\n        }\n        if (this._resourceType) {\n            node.add(stubs.createAttr(node.definition().property(superAttributeName), stub.name()));\n        }\n        else {\n            node.add(stubs.createAttr(node.definition().property(superAttributeName), \"[\" + stub.name() + \"]\"));\n        }\n        node.root().add(stub2);\n        var cl = node.lowLevel().unit().contents();\n        if (replacements.length == 1) {\n            var totalRepalcement = replacements[0];\n            if (superAttrProperty.isMultiValue()) {\n                totalRepalcement = \"[\" + totalRepalcement + \"]\";\n            }\n            cl = cl.replace(typeOrTraitValueToReplace, totalRepalcement);\n        }\n        else if (replacements.length > 1) {\n            var totalReplacement = \"\";\n            for (var i = 0; i < replacements.length - 1; i++) {\n                totalReplacement += replacements[i] + \", \";\n            }\n            totalReplacement += replacements[replacements.length - 1];\n            cl = cl.replace(typeOrTraitValueToReplace, totalReplacement);\n        }\n        this.getActiveEditor().setText(assist.cleanEmptyLines(cl));\n    };\n    ExtractTypesAndTraitsDialog.prototype.createNodeStub = function (node) {\n        var universe = node.definition().universe();\n        var rtypes = node.root().definition().property(\"resourceTypes\");\n        var traits = node.root().definition().property(\"traits\");\n        var stub = stubs.createStubNode(universe.type(\"ResourceType\"), rtypes);\n        if (!this._resourceType) {\n            stub = stubs.createStubNode(universe.type(\"Trait\"), traits);\n        }\n        return stub;\n    };\n    ExtractTypesAndTraitsDialog.prototype.moveLeft = function (z, stub, node, v, v1) {\n        var _this = this;\n        if (z.length > 0) {\n            z.forEach(function (x) { return _this.filters.removals = _this.filters.removals.filter(function (y) { return y.id() != x.id(); }); });\n            z.forEach(function (x) {\n                stub.remove(x);\n                var k = 0;\n                k++;\n            });\n        }\n        stub.resetChildren();\n        v.setInput(node);\n        v1.setInput(stub);\n    };\n    ExtractTypesAndTraitsDialog.prototype.moveRight = function (z, stub, node, v, v1) {\n        if (z.length > 0) {\n            this.filters.removals = this.filters.removals.concat(z);\n        }\n        z.forEach(function (x) { return stub.add(x.copy()); });\n        stub.resetChildren();\n        v.setInput(node);\n        v1.setInput(stub);\n    };\n    return ExtractTypesAndTraitsDialog;\n})();\nexports.ExtractTypesAndTraitsDialog = ExtractTypesAndTraitsDialog;\nvar NodeFilters = (function () {\n    function NodeFilters() {\n        this.removals = [];\n    }\n    return NodeFilters;\n})();\nfunction createSmallSelectionPanel(node, filter, height, width, float) {\n    if (float === void 0) { float = \"left\"; }\n    var v = createVIewer(node, filter);\n    v.setTagName(\"atom-panel\");\n    v.setStyle(\"width\", width);\n    v.setStyle(\"border\", \"solid\");\n    v.setStyle(\"border-width\", \"1px\");\n    v.setStyle(\"height\", height);\n    v.setStyle(\"overflow\", \"scroll\");\n    if (float) {\n        v.setStyle(\"float\", float);\n    }\n    v.margin(3, 3, 3, 3);\n    return v;\n}\nexports.createSmallSelectionPanel = createSmallSelectionPanel;\nfunction createVIewer(h, filter) {\n    var v = UI.treeViewer(function (x) {\n        return x.elements().filter(function (x) { return filter(x); });\n    }, new outlineView.HLRenderer(function (model) {\n    }));\n    v.setInput(h);\n    return v;\n}\nexports.createVIewer = createVIewer;\nvar AbstractlMoveElementsDialog = (function () {\n    function AbstractlMoveElementsDialog(parentNode, name) {\n        this.parentNode = parentNode;\n        this.name = name;\n        /**\n         * A list of moved nodes.\n         */\n        this.movedNodes = [];\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    AbstractlMoveElementsDialog.prototype.checkNode = function (nodeToFilter) {\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    AbstractlMoveElementsDialog.prototype.validate = function () {\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    AbstractlMoveElementsDialog.prototype.createHeader = function (parentPanel) {\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    AbstractlMoveElementsDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n    };\n    /**\n     * Call this to display the dialog.\n     */\n    AbstractlMoveElementsDialog.prototype.show = function () {\n        console.log(\"Original file tree:\");\n        if (this.getParentNode())\n            console.log(this.getParentNode().printDetails());\n        if (!this.getParentNode()) {\n            return;\n        }\n        var extractSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n        this.stubRoot = this.createStub(this.getParentNode());\n        this.createValidationIndicator(extractSection);\n        this.createHeader(extractSection);\n        this.createPanels(extractSection);\n        this.createButtonBar(extractSection);\n        extractSection.setPercentWidth(100);\n        var html = extractSection.renderUI();\n        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n        this.performValidation();\n    };\n    AbstractlMoveElementsDialog.prototype.performValidation = function () {\n        var validationMessage = this.validate();\n        if (this.okButton) {\n            if (validationMessage)\n                this.okButton.setDisabled(true);\n            else\n                this.okButton.setDisabled(false);\n        }\n        if (this.errorLabel) {\n            if (validationMessage) {\n                this.errorLabel.setDisplay(true);\n                this.errorLabel.setText(validationMessage);\n            }\n            else {\n                this.errorLabel.setDisplay(false);\n                this.errorLabel.setText(\"\");\n            }\n        }\n    };\n    AbstractlMoveElementsDialog.prototype.createValidationIndicator = function (vc) {\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(this.errorLabel));\n    };\n    AbstractlMoveElementsDialog.prototype.getNodeId = function (node) {\n        if (node.parent()) {\n            var parentId = this.getNodeId(node.parent());\n            parentId += \".\" + node.name();\n            var sameName = (node.parent()).asElement().directChildren().filter(function (x) { return x.name() == node.name(); });\n            if (sameName.length > 1) {\n                var ind = sameName.indexOf(node);\n                parentId += \"[\" + ind + \"]\";\n            }\n            return parentId;\n        }\n        else if (node.name()) {\n            if (node.definition && node.definition() && universeHelpers.isApiType(node.definition())) {\n                //no other way to get rid of a fake Api \"key\"\n                return \"\";\n            }\n            return \".\" + node.name();\n        }\n        return \"\";\n    };\n    AbstractlMoveElementsDialog.prototype.nodesEqualById = function (node1, node2) {\n        return this.getNodeId(node1) == this.getNodeId(node2);\n    };\n    /**\n     * The root of the tree, which is being dynamically build from the moved nodes.\n     * The parents of the moved nodes are being copied to the tree, so the temp AST\n     * is complete. The root itself is always a stub (not copy) of the root node provided at the dialog open.\n     */\n    AbstractlMoveElementsDialog.prototype.createMovedNodesTree = function () {\n        //cleaning the current tree by removing all the children of the root\n        //this.stubRoot.children().forEach(x=>(<any>this.stubRoot).remove(x))\n        var _this = this;\n        //instead just re-creating parent stub node\n        this.stubRoot = this.createStub(this.getParentNode());\n        this.movedNodes.forEach(function (movedNode) {\n            //collecting node parents till we meet the dialog root\n            var parents = [];\n            var currentParent = movedNode.parent();\n            while (currentParent) {\n                if (currentParent == _this.getParentNode())\n                    break;\n                parents.push(currentParent);\n                currentParent = currentParent.parent();\n            }\n            parents.reverse();\n            //now creating copies of parents\n            var currentStubPointer = _this.stubRoot;\n            parents.forEach(function (currentParent) {\n                var stubAnalogueOfParent = _.find(currentStubPointer.children(), function (currentStubElement) {\n                    return _this.nodesEqualById(currentStubElement, currentParent);\n                });\n                if (!stubAnalogueOfParent) {\n                    //we did not find an analogue, so we should create one\n                    stubAnalogueOfParent = _this.createStub(currentParent);\n                    //lets add the new parent to the stub hierarchy\n                    currentStubPointer.add(stubAnalogueOfParent);\n                    stubAnalogueOfParent.setParent(currentStubPointer);\n                }\n                currentStubPointer = stubAnalogueOfParent;\n            });\n            //okay, we found or created all parents of the new moved node, lets create the node itself\n            var newNode = _this.createMovedNode(movedNode);\n            /*(<hl.IHighLevelNode>movedNode)*/\n            currentStubPointer.add(newNode);\n            newNode.setParent(currentStubPointer);\n        });\n        console.log(\"New tree moved:\");\n        console.log(this.stubRoot.printDetails());\n    };\n    AbstractlMoveElementsDialog.prototype.createMovedNode = function (originalNode) {\n        return originalNode.copy();\n    };\n    AbstractlMoveElementsDialog.prototype.saveUnit = function (unit) {\n        provider.saveUnit(unit);\n    };\n    AbstractlMoveElementsDialog.prototype.createStub = function (node) {\n        var stub = stubs.createStubNode(node.definition(), node.property(), node.lowLevel().key());\n        //if (node.parent() == null && node.lowLevel().key() == null){\n        //    //cleaning out the fake key\n        //    stub.children().forEach(x=>(<any>stub).remove(x))\n        //}\n        return stub;\n    };\n    AbstractlMoveElementsDialog.prototype.createStubRoot = function (node, type) {\n        var lowLevel = stubs.createMap();\n        var result = stubs.createASTNodeImpl(lowLevel, null, type, null);\n        result.children();\n        return result;\n    };\n    AbstractlMoveElementsDialog.prototype.createPanels = function (vc) {\n        var _this = this;\n        var el = UI.hc();\n        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n        var leftDisplayFilter = function (nodeToCheck) {\n            if (!_this.checkNode(nodeToCheck).display)\n                return false;\n            if (_.find(_this.movedNodes, function (movedNode) {\n                return movedNode == nodeToCheck; /*|| this.isParentOf(nodeToCheck, movedNode)*/\n            }))\n                return false;\n            return true;\n        };\n        this.leftPanel = createSmallSelectionPanel(this.getParentNode(), leftDisplayFilter, \"400px\", \"47%\");\n        var rightDisplayFilter = function (nodeToCheck) {\n            if (!_this.checkNode(nodeToCheck).display)\n                return false;\n            //if (_.find(this.movedNodes, movedNode => movedNode == nodeToCheck)) return false\n            return true;\n        };\n        this.rightPanel = createSmallSelectionPanel(this.stubRoot, rightDisplayFilter, \"400px\", \"47%\", \"right\");\n        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = _this.leftPanel.getSelection().elements;\n            _this.moveRight(z);\n        });\n        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = _this.rightPanel.getSelection().elements;\n            _this.moveLeft(z);\n        });\n        //var allRight=UI.button(\">>\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n        //    var z=this.parentNode.elements().filter(x=>leftFilter(x));\n        //    this.moveRight(z);\n        //});\n        //\n        //var allLeft=UI.button(\"<<\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n        //    var z=stub.elements();\n        //    this.moveLeft(z);\n        //\n        //});\n        el.addChild(UI.vc(moveRight, moveLeft /*,allRight,allLeft*/));\n        el.addChild(this.leftPanel);\n        el.addChild(this.rightPanel);\n        vc.addChild(el);\n        this.leftPanel.addSelectionListener({\n            selectionChanged: function (ev) {\n                var rs = ev.selection.elements;\n                //var m=(_.find(rs, x=>x.parent() != this.getParentNode())!=undefined )\n                moveRight.setDisabled((rs.length == 0));\n            }\n        });\n        this.rightPanel.addSelectionListener({\n            selectionChanged: function (ev) {\n                var rs = ev.selection.elements;\n                //var m=(_.find(rs, x=>x.parent() != this.stubRoot)!=undefined )\n                moveLeft.setDisabled(rs.length == 0);\n            }\n        });\n        moveLeft.setDisabled(true);\n        moveRight.setDisabled(true);\n        el.setPercentWidth(100);\n    };\n    AbstractlMoveElementsDialog.prototype.createButtonBar = function (parentPanel) {\n        var _this = this;\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { _this.rootAtomPanel.destroy(); }).margin(10, 10));\n        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.performOk(_this.movedNodes, _this.stubRoot);\n            _this.rootAtomPanel.destroy();\n        });\n        this.okButton.setDisabled(true);\n        buttonBar.addChild(this.okButton);\n        parentPanel.addChild(buttonBar);\n    };\n    AbstractlMoveElementsDialog.prototype.getParentNode = function () {\n        return this.parentNode;\n    };\n    AbstractlMoveElementsDialog.prototype.isParentOf = function (potentialParent, potentialChild) {\n        var current = potentialChild.parent();\n        while (current != null) {\n            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n                return true;\n            }\n            current = current.parent();\n        }\n        return false;\n    };\n    AbstractlMoveElementsDialog.prototype.mergeTrees = function (sourceTreeRoot, targetTreeRoot, mergeProperties) {\n        var _this = this;\n        if (mergeProperties === void 0) { mergeProperties = false; }\n        if (sourceTreeRoot.directChildren()) {\n            sourceTreeRoot.directChildren().forEach(function (child) {\n                _this.mergeNode(child, targetTreeRoot);\n            });\n        }\n    };\n    AbstractlMoveElementsDialog.prototype.getActiveEditor = function () {\n        return assist.getActiveEditor();\n    };\n    AbstractlMoveElementsDialog.prototype.mergeNode = function (sourceNode, targetParent, mergeProperties) {\n        var _this = this;\n        if (mergeProperties === void 0) { mergeProperties = false; }\n        if (!mergeProperties && !(sourceNode.isElement())) {\n            return;\n        }\n        var targetChildren = targetParent.directChildren();\n        if (!targetChildren) {\n            targetParent.add(sourceNode);\n            sourceNode.setParent(targetParent);\n            return;\n        }\n        var analogueChild = _.find(targetChildren, function (child) {\n            return _this.nodesEqualById(child, sourceNode);\n        });\n        if (!analogueChild) {\n            targetParent.add(sourceNode);\n            sourceNode.setParent(targetParent);\n            return;\n        }\n        if (sourceNode.directChildren()) {\n            sourceNode.directChildren().forEach(function (sourceChild) {\n                return _this.mergeNode(sourceChild, analogueChild);\n            });\n        }\n    };\n    AbstractlMoveElementsDialog.prototype.moveLeft = function (nodesToMove) {\n        var _this = this;\n        if (nodesToMove.length > 0) {\n            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n                if (_.find(nodesToMove, function (nodeToMove) {\n                    //removing the node itself and all of its children subsequently\n                    return _this.nodesEqualById(nodeToMove, currentNode)\n                        || _this.isParentOf(nodeToMove, currentNode);\n                }))\n                    return false;\n                return true;\n            });\n            this.createMovedNodesTree();\n        }\n        this.leftPanel.setInput(this.getParentNode());\n        this.stubRoot.resetChildren();\n        this.rightPanel.setInput(this.stubRoot);\n        this.performValidation();\n    };\n    AbstractlMoveElementsDialog.prototype.moveRight = function (nodesToMove) {\n        var _this = this;\n        if (nodesToMove.length > 0) {\n            //removing from already moved nodes any children of the nodes to move\n            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n                if (_.find(nodesToMove, function (nodeToMove) { return _this.isParentOf(nodeToMove, currentNode); }))\n                    return false;\n                return true;\n            });\n            nodesToMove.forEach(function (x) { return _this.movedNodes.push(x); });\n            //this.movedNodes = this.movedNodes.concat(nodesToMove)\n            this.createMovedNodesTree();\n        }\n        this.leftPanel.setInput(this.getParentNode());\n        this.stubRoot.resetChildren();\n        this.rightPanel.setInput(this.stubRoot);\n        this.performValidation();\n    };\n    return AbstractlMoveElementsDialog;\n})();\nexports.AbstractlMoveElementsDialog = AbstractlMoveElementsDialog;\nvar ExtractLibraryDialog = (function (_super) {\n    __extends(ExtractLibraryDialog, _super);\n    function ExtractLibraryDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    ExtractLibraryDialog.prototype.checkNode = function (nodeToFilter) {\n        var range = null;\n        if (nodeToFilter.property() && nodeToFilter.property().range()) {\n            range = nodeToFilter.property().range();\n        }\n        var prrr = nodeToFilter.property();\n        var blah = universeHelpers.isTypesProperty(prrr);\n        var isTp = universeHelpers.isTypeDeclarationType(range)\n            && blah;\n        if (range &&\n            (universeHelpers.isResourceTypeType(range) ||\n                universeHelpers.isTraitType(range) ||\n                universeHelpers.isGlobalSchemaType(range) ||\n                universeHelpers.isSecuritySchemaType(range) ||\n                isTp)) {\n            return {\n                visitChildren: false,\n                display: true,\n                canBeMoved: true\n            };\n        }\n        return {\n            visitChildren: false,\n            display: false,\n            canBeMoved: false\n        };\n    };\n    ExtractLibraryDialog.prototype.createStub = function (node) {\n        if (node.definition().key() == universeModule.Universe10.Api ||\n            node.definition().key() == universeModule.Universe08.Api) {\n            var universe = rp.ds.getUniverse(\"RAML10\");\n            var nodeClass = universe.type(universeModule.Universe10.Library.name);\n            var stub = this.createStubRoot(node, nodeClass);\n            return stub;\n        }\n        return _super.prototype.createStub.call(this, node);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ExtractLibraryDialog.prototype.validate = function () {\n        if (!this.libraryPath)\n            return null;\n        if (!this.stubRoot)\n            return null;\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        if (!this.libraryNamespace)\n            return null;\n        if (!this.getLibraryQualifier()) {\n            return \"Enter library namespace\";\n        }\n        if (this.getLibraryQualifier().trim().length == 0) {\n            return \"Enter library namespace\";\n        }\n        var originalValue = this.libraryPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return \"Empty library path\";\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return \"Library path should be a RAML file\";\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return \"Library path directory does not exist\";\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return \"Library path parent is not a directory\";\n        }\n        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n        if (fs.existsSync(absolutePath)) {\n            return \"Destination library already exists\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ExtractLibraryDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Library namespace:\").pad(5, 0));\n        this.libraryNamespace = UI.texfField(\"\", this.getDefaultLibraryNamespace(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.libraryNamespace);\n        parentPanel.addChild(UI.label(\"Library path:\").pad(5, 0));\n        this.libraryPath = UI.texfField(\"\", this.generateDefaultLibraryPath(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.libraryPath);\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    ExtractLibraryDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var _this = this;\n        var project = this.createProject();\n        var libraryUnit = this.createLibraryUnit(project);\n        var libraries = search.globalDeclarations(this.getParentNode()).filter(function (found) { return found && found.definition && found.definition().nameId() === universeModule.Universe10.Library.name; });\n        var universe = this.getParentNode().definition().universe();\n        var libraryClass = universe.type(universeModule.Universe10.Library.name);\n        movedNodes.forEach(function (movedNode) {\n            var librariesToExport = libraries.filter(function (library) {\n                return _.find(library.findReferences(), function (reference) { return _this.isParentOf(movedNode, reference); }) ? true : false;\n            });\n            librariesToExport.forEach(function (library) {\n                var currentPath = library.lowLevel()._node.value && library.lowLevel()._node.value.value;\n                if (!currentPath) {\n                    return;\n                }\n                var relativePath;\n                if (isWebPath(currentPath) || path.isAbsolute(currentPath)) {\n                    relativePath = currentPath;\n                }\n                else {\n                    var currentDirectory = path.dirname(_this.getParentNode().lowLevel().unit().absolutePath());\n                    var relativePath = path.relative(path.dirname(libraryUnit.absolutePath()), path.resolve(currentDirectory, currentPath));\n                }\n                var lowLevel = stubs.createMapping(library.lowLevel().key(), \"!include \" + relativePath);\n                var stubLibrary = stubs.createASTNodeImpl(lowLevel, null, libraryClass, null);\n                stubTreeRoot.wrapperNode().addToProp(stubLibrary.wrapperNode(), universeModule.Universe10.FragmentDeclaration.properties.uses.name);\n            });\n        });\n        this.updateLibraryUnit(libraryUnit, stubTreeRoot);\n        this.saveUnit(libraryUnit);\n        var modifiedUnits = [];\n        modifiedUnits.push(this.getParentNode().lowLevel().unit());\n        var libraryQualifier = this.getLibraryQualifier();\n        movedNodes.forEach(function (movedNode) {\n            //changing node references\n            var movedNodeReferences = movedNode.findReferences();\n            if (movedNodeReferences) {\n                movedNodeReferences.forEach(function (reference) {\n                    if (!(reference.isAttr())) {\n                        return;\n                    }\n                    if (_.find(movedNodes, function (movedNode) { return _this.isParentOf(movedNode, reference); })) {\n                        return;\n                    }\n                    var property = reference;\n                    var oldValue = property.value();\n                    if (typeof oldValue != \"string\") {\n                        return;\n                    }\n                    var oldStringValue = oldValue;\n                    var textToReplace = movedNode.name();\n                    var textToReplanceWith = libraryQualifier + \".\" + textToReplace;\n                    var newStringValue = oldStringValue.replace(textToReplace, textToReplanceWith);\n                    property.setValue(newStringValue);\n                    var modifiedPropertyUnit = property.lowLevel().unit();\n                    if (_.find(modifiedUnits, function (modifiedUnit) { return modifiedUnit == modifiedPropertyUnit; })) {\n                        modifiedUnits.push(modifiedPropertyUnit);\n                    }\n                });\n            }\n            //deleting the node itself\n            movedNode.parent().remove(movedNode);\n        });\n        modifiedUnits.forEach(function (modifiedUnit) { return _this.saveUnit(modifiedUnit); });\n        this.addUsesNode(libraryQualifier, this.getLibraryPath());\n    };\n    ExtractLibraryDialog.prototype.generateDefaultLibraryPath = function () {\n        var node = this.getParentNode();\n        var currentFilePath = node.lowLevel().unit().absolutePath();\n        var parent = path.dirname(currentFilePath);\n        return path.resolve(parent, \"NewLibrary.raml\");\n    };\n    ExtractLibraryDialog.prototype.getLibraryName = function () {\n        return this.libraryNamespace.getBinding().get();\n    };\n    ExtractLibraryDialog.prototype.getLibraryQualifier = function () {\n        return this.libraryNamespace.getBinding().get();\n    };\n    ExtractLibraryDialog.prototype.getDefaultLibraryNamespace = function () {\n        return \"NewLibrary\";\n    };\n    ExtractLibraryDialog.prototype.getLibraryPath = function () {\n        var originalValue = this.libraryPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return null;\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return null;\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return null;\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return null;\n        }\n        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n    };\n    ExtractLibraryDialog.prototype.createProject = function () {\n        var targetLibraryPath = this.getLibraryPath();\n        return rp.project.createProject(path.dirname(targetLibraryPath));\n    };\n    ExtractLibraryDialog.prototype.createLibraryUnit = function (project) {\n        var targetLibraryPath = this.getLibraryPath();\n        fs.writeFileSync(targetLibraryPath, \"#%RAML 1.0 Library\\n\");\n        return project.unit(path.basename(targetLibraryPath));\n    };\n    ExtractLibraryDialog.prototype.updateLibraryUnit = function (libraryUnit, stubTreeRoot) {\n        var targetLibraryAst = libraryUnit.highLevel();\n        //adding top-level children from stub AST to the target library AST\n        stubTreeRoot.children().forEach(function (child) {\n            if (!child.getKind()) {\n                return;\n            }\n            targetLibraryAst.add(child);\n        });\n    };\n    ExtractLibraryDialog.prototype.addUsesNode = function (libraryQualifier, fileName) {\n        //TODO this must be done via AST manipulation, but it is impossible atm due to AST bugs\n        var relativePath = path.relative(path.dirname(this.getParentNode().lowLevel().unit().absolutePath()), fileName);\n        var existingFirstUsesNode = _.find(this.getParentNode().children(), function (child) {\n            var childAny = child;\n            return childAny.definition &&\n                universeHelpers.isLibraryType(childAny.definition()) &&\n                childAny.property() &&\n                universeHelpers.isUsesProperty(childAny.property());\n        });\n        var usesMapping = null;\n        var sequenceFound = false;\n        if (existingFirstUsesNode) {\n            var currentNode = existingFirstUsesNode.lowLevel();\n            while (currentNode != null) {\n                if (currentNode.kind() == yaml.Kind.MAPPING\n                    && currentNode.key() == universeModule.Universe10.FragmentDeclaration.properties.uses.name) {\n                    usesMapping = currentNode;\n                    break;\n                }\n                if (currentNode.kind() == yaml.Kind.SEQ) {\n                    sequenceFound = true;\n                }\n                currentNode = currentNode.parent();\n            }\n        }\n        if (usesMapping) {\n            //existing \"uses\" found, inserting there\n            var positionToInsert = usesMapping.keyEnd() + 1;\n            var text = \"\\n  \" + (sequenceFound ? \"- \" : \"\") + libraryQualifier + \": \" + relativePath;\n            this.insertTextToActiveEditor(positionToInsert, text);\n        }\n        else {\n            var titleNode = _.find(this.getParentNode().children(), function (child) {\n                var childAny = child;\n                return childAny.definition &&\n                    universeHelpers.isStringTypeType(childAny.definition()) &&\n                    childAny.property() &&\n                    universeHelpers.isTitleProperty(childAny.property());\n            });\n            if (titleNode) {\n                //title node found, inserting after it\n                var positionToInsert = titleNode.lowLevel().valueEnd();\n                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n                this.insertTextToActiveEditor(positionToInsert, text);\n            }\n            else {\n                //nothing happens, inserting in the end of the file\n                var positionToInsert = this.getParentNode().lowLevel().end();\n                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n                this.insertTextToActiveEditor(positionToInsert, text);\n            }\n        }\n    };\n    ExtractLibraryDialog.prototype.insertTextToActiveEditor = function (positionToInsert, text) {\n        var txt = this.getParentNode().lowLevel().unit().contents();\n        var endPart = txt.substring(positionToInsert);\n        var startPart = txt.substring(0, positionToInsert);\n        var vl = startPart + text + endPart;\n        this.getActiveEditor().setText(vl);\n    };\n    ExtractLibraryDialog.prototype.createUsesNode = function (libraryQualifier, fileName) {\n        var universe = this.getParentNode().definition().universe();\n        var usesProperty = this.getParentNode().root().definition().property(\"uses\");\n        var usesNode = stubs.createStubNode(universe.type(\"Library\"), usesProperty, libraryQualifier);\n        return usesNode;\n    };\n    return ExtractLibraryDialog;\n})(AbstractlMoveElementsDialog);\nexports.ExtractLibraryDialog = ExtractLibraryDialog;\nvar ExtractOverlayDialog = (function (_super) {\n    __extends(ExtractOverlayDialog, _super);\n    function ExtractOverlayDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n    }\n    ExtractOverlayDialog.prototype.createStub = function (node) {\n        if (node.definition().key() == universeModule.Universe10.Api ||\n            node.definition().key() == universeModule.Universe08.Api) {\n            var universe = rp.ds.getUniverse(\"RAML10\");\n            var nodeClass = universe.type(universeModule.Universe10.Overlay.name);\n            var stub = this.createStubRoot(node, nodeClass);\n            return stub;\n        }\n        return _super.prototype.createStub.call(this, node);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    ExtractOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n        //we can move everything\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ExtractOverlayDialog.prototype.validate = function () {\n        if (!this.overlayPath)\n            return null;\n        if (!this.stubRoot)\n            return null;\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        var originalValue = this.overlayPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return \"Empty overlay path\";\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return \"Overlay path should be a RAML file\";\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return \"Overlay path directory does not exist\";\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return \"Overlay path parent is not a directory\";\n        }\n        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n        if (fs.existsSync(absolutePath)) {\n            return \"Destination overlay already exists\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ExtractOverlayDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Overlay path:\").pad(5, 0));\n        this.overlayPath = UI.texfField(\"\", this.generateDefaultOverlayPath(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.overlayPath);\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    ExtractOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var project = this.createProject();\n        var overlayUnit = this.createOverlayUnit(project);\n        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n        var overlayPath = this.getOverlayPath();\n        var originalUnitPath = this.getParentNode().lowLevel().unit().absolutePath();\n        var relativePath = path.relative(path.dirname(overlayPath), originalUnitPath);\n        this.addMasterReference(overlayUnit, relativePath);\n        this.saveUnit(overlayUnit);\n    };\n    ExtractOverlayDialog.prototype.generateDefaultOverlayPath = function () {\n        var node = this.getParentNode();\n        var currentFilePath = node.lowLevel().unit().absolutePath();\n        var parent = path.dirname(currentFilePath);\n        return path.resolve(parent, \"NewOverlay.raml\");\n    };\n    ExtractOverlayDialog.prototype.createProject = function () {\n        var targetOverlayPath = this.getOverlayPath();\n        return rp.project.createProject(path.dirname(targetOverlayPath));\n    };\n    ExtractOverlayDialog.prototype.createOverlayUnit = function (project) {\n        var targetOverlayPath = this.getOverlayPath();\n        fs.writeFileSync(targetOverlayPath, \"#%RAML 1.0 Overlay\\ntitle: Extension\\n\");\n        return project.unit(path.basename(targetOverlayPath));\n    };\n    ExtractOverlayDialog.prototype.updateOverlayUnit = function (overlayUnit, stubTreeRoot) {\n        var targetOverlayAst = overlayUnit.highLevel();\n        //adding top-level children from stub AST to the target overlay AST\n        stubTreeRoot.children().forEach(function (child) {\n            if (!child.getKind()) {\n                return;\n            }\n            targetOverlayAst.add(child);\n        });\n    };\n    ExtractOverlayDialog.prototype.getOverlayPath = function () {\n        var originalValue = this.overlayPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return null;\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return null;\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return null;\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return null;\n        }\n        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n    };\n    ExtractOverlayDialog.prototype.addMasterReference = function (overlayUnit, path) {\n        var targetLibraryAst = overlayUnit.highLevel();\n        var masterRefAttribute = targetLibraryAst.attrOrCreate(universeModule.Universe10.Overlay.properties.extends.name);\n        masterRefAttribute.setValue(path);\n    };\n    ExtractOverlayDialog.prototype.createMovedNode = function (originalNode) {\n        //we do not want to make a complete copy of the moved node.\n        //instead, we want an empty stub\n        return this.createStub(originalNode);\n    };\n    return ExtractOverlayDialog;\n})(AbstractlMoveElementsDialog);\nexports.ExtractOverlayDialog = ExtractOverlayDialog;\nvar ModifyOverlayDialog = (function (_super) {\n    __extends(ModifyOverlayDialog, _super);\n    function ModifyOverlayDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n        this.overlayASTRoot = parentNode;\n        console.log(\"Overlay AST root:\");\n        console.log(this.overlayASTRoot.printDetails());\n        this.masterASTRoot = this.createMasterAST();\n        this.overlayASTLeafNodes = [];\n        this.calculateLeafNodes(this.overlayASTRoot, this.overlayASTLeafNodes);\n    }\n    ModifyOverlayDialog.prototype.getParentNode = function () {\n        return this.masterASTRoot;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    ModifyOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n        var _this = this;\n        //we can move everything except leaf nodes already defined in out AST\n        if (_.find(this.overlayASTLeafNodes, function (currentNode) {\n            return currentNode == nodeToFilter || _this.nodesEqualById(currentNode, nodeToFilter);\n        })) {\n            return {\n                visitChildren: false,\n                display: false,\n                canBeMoved: false\n            };\n        }\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ModifyOverlayDialog.prototype.validate = function () {\n        if (!this.stubRoot)\n            return null;\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ModifyOverlayDialog.prototype.createHeader = function (parentPanel) {\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    ModifyOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var overlayUnit = this.getOverlayUnit();\n        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n        this.saveUnit(overlayUnit);\n    };\n    ModifyOverlayDialog.prototype.createMasterAST = function () {\n        var masterAbsolutePath = this.findMasterAbsolutePath();\n        if (!masterAbsolutePath) {\n            return null;\n        }\n        var project = this.createProject(masterAbsolutePath);\n        var masterUnit = project.unit(path.basename(masterAbsolutePath));\n        return masterUnit.highLevel();\n    };\n    ModifyOverlayDialog.prototype.calculateLeafNodes = function (root, toReportTo) {\n        var _this = this;\n        if (!root)\n            return;\n        var children = root.directChildren() ? root.directChildren() : null;\n        if (root.isElement()) {\n            if (children) {\n                if (!_.find(children, function (child) { return child.isElement(); })) {\n                    toReportTo.push(root);\n                    return;\n                }\n            }\n            else {\n                toReportTo.push(root);\n                return;\n            }\n        }\n        if (children)\n            children.forEach(function (child) { return _this.calculateLeafNodes(child, toReportTo); });\n    };\n    ModifyOverlayDialog.prototype.findMasterAbsolutePath = function () {\n        try {\n            var masterRefAttribute = this.overlayASTRoot.attr(\"masterRef\");\n            if (!masterRefAttribute) {\n                return null;\n            }\n            var reference = masterRefAttribute.value();\n            if (!reference) {\n                return null;\n            }\n            var overlayAbsolutePath = this.getOverlayUnit().absolutePath();\n            var masterAbsolutePath = path.resolve(path.dirname(overlayAbsolutePath), reference);\n            //if (!fs.existsSync(masterAbsolutePath)) {\n            //    return null\n            //}\n            return masterAbsolutePath;\n        }\n        catch (Error) {\n            console.error(Error.message);\n            return null;\n        }\n    };\n    ModifyOverlayDialog.prototype.createProject = function (targetPath) {\n        return rp.project.createProject(path.dirname(targetPath));\n    };\n    ModifyOverlayDialog.prototype.getOverlayUnit = function () {\n        return this.overlayASTRoot.lowLevel().unit();\n    };\n    ModifyOverlayDialog.prototype.updateOverlayUnit = function (libraryUnit, stubTreeRoot) {\n        var targetLibraryAst = libraryUnit.highLevel();\n        //merging the new nodes into existing overlay tree\n        this.mergeTrees(stubTreeRoot, this.overlayASTRoot);\n    };\n    ModifyOverlayDialog.prototype.createMovedNode = function (originalNode) {\n        //we do not want to make a complete copy of the moved node.\n        //instead, we want an empty stub\n        return this.createStub(originalNode);\n    };\n    return ModifyOverlayDialog;\n})(AbstractlMoveElementsDialog);\nexports.ModifyOverlayDialog = ModifyOverlayDialog;\n/**\n * Intended for subclassing, should not be instantiated.\n */\nvar AbstractMoveTypePropertiesDialog = (function (_super) {\n    __extends(AbstractMoveTypePropertiesDialog, _super);\n    function AbstractMoveTypePropertiesDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n        this.sourceType = parentNode;\n    }\n    /**\n     * Intended for overriding, should return the target type.\n     * Will only be called during performOk() execution, so it is assumed that\n     * UI already have required user input before the calowLevel.\n     * @returns {null}\n     */\n    AbstractMoveTypePropertiesDialog.prototype.getTargetType = function () {\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    AbstractMoveTypePropertiesDialog.prototype.checkNode = function (nodeToFilter) {\n        //we can move everything inside the type\n        //and as the type is our root, we can move just everything\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * This particular method should be called in a subclass before or after\n     * its own check, and the results should be joined.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    AbstractMoveTypePropertiesDialog.prototype.validate = function () {\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    AbstractMoveTypePropertiesDialog.prototype.createHeader = function (parentPanel) {\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    AbstractMoveTypePropertiesDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var sourceUnit = this.sourceType.lowLevel().unit();\n        var targetType = this.getTargetType();\n        if (!targetType) {\n            return;\n        }\n        var targetUnit = targetType.lowLevel().unit();\n        this.mergeTrees(stubTreeRoot, targetType);\n        this.movedNodes.forEach(function (movedNode) {\n            movedNode.parent().remove(movedNode);\n        });\n        this.postMerge();\n        this.saveUnit(sourceUnit);\n        if (targetUnit)\n            this.saveUnit(targetUnit);\n    };\n    AbstractMoveTypePropertiesDialog.prototype.postMerge = function () {\n    };\n    return AbstractMoveTypePropertiesDialog;\n})(AbstractlMoveElementsDialog);\nexports.AbstractMoveTypePropertiesDialog = AbstractMoveTypePropertiesDialog;\nfunction findUserDefinedSupertypes(typeNode) {\n    var result = [];\n    var nodeType = typeNode.localType();\n    if (!nodeType || !nodeType.isUserDefined()) {\n        return result;\n    }\n    addUserDefinedSupertypes(nodeType, result);\n    return result;\n}\nexports.findUserDefinedSupertypes = findUserDefinedSupertypes;\nfunction addUserDefinedSupertypes(type, typesToAddTo) {\n    if (!type.isUserDefined()) {\n        return;\n    }\n    var superTypes = (type).superTypes();\n    if (superTypes)\n        superTypes.forEach(function (superType) {\n            if (superType.isUserDefined()) {\n                typesToAddTo.push(superType);\n            }\n            addUserDefinedSupertypes(superType, typesToAddTo);\n        });\n}\nvar PullUpDialog = (function (_super) {\n    __extends(PullUpDialog, _super);\n    function PullUpDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n        this.superTypeNames = [];\n        this.superTypeNames = this.findSuperTypeNames();\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    PullUpDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Select supertype:\").pad(5, 0));\n        var select = new UI.Select(\"\", function (selection) {\n            _this.selectedSuperType = select.getValue();\n        });\n        select.setOptions(this.superTypeNames);\n        select.setValue(this.superTypeNames[0]);\n        this.selectedSuperType = this.superTypeNames[0];\n        parentPanel.addChild(select);\n    };\n    PullUpDialog.prototype.show = function () {\n        //if no supertypes are found, we're not displaying anything\n        //Actually, state calculator should not allow action launching in this case\n        if (this.superTypeNames.length == 0) {\n            return;\n        }\n        _super.prototype.show.call(this);\n    };\n    /**\n     * Intended for overriding, should return the target type.\n     * Will only be called during performOk() execution, so it is assumed that\n     * UI already have required user input before the calowLevel.\n     * @returns {null}\n     */\n    PullUpDialog.prototype.getTargetType = function () {\n        var _this = this;\n        var foundSuperType = _.find(this.superTypes, function (superType) {\n            return superType.nameId() == _this.selectedSuperType;\n        });\n        if (!foundSuperType)\n            return null;\n        return foundSuperType.getAdapter(def.RAMLService).getDeclaringNode();\n    };\n    PullUpDialog.prototype.findSuperTypeNames = function () {\n        var result = [];\n        this.superTypes = findUserDefinedSupertypes(this.sourceType);\n        this.superTypes.forEach(function (superType) {\n            result.push(superType.nameId());\n        });\n        return result;\n    };\n    return PullUpDialog;\n})(AbstractMoveTypePropertiesDialog);\nexports.PullUpDialog = PullUpDialog;\nvar ExtractSupertypeDialog = (function (_super) {\n    __extends(ExtractSupertypeDialog, _super);\n    function ExtractSupertypeDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ExtractSupertypeDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Supertype name:\").pad(5, 0));\n        this.superTypeName = UI.texfField(\"\", this.generateDefaultSupertypeName(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.superTypeName);\n    };\n    /**\n     * Intended for overriding, should return the target type.\n     * Will only be called during performOk() execution, so it is assumed that\n     * UI already have required user input before the calowLevel.\n     * @returns {null}\n     */\n    ExtractSupertypeDialog.prototype.getTargetType = function () {\n        var astRoot = this.sourceType.root();\n        var universe = astRoot.definition().universe();\n        var rtypes = astRoot.root().definition().property(universeModule.Universe10.LibraryBase.properties.types.name);\n        //var typeStub=(<def.NodeClass>universe.getType(\"ObjectField\")).createStubNode(rtypes, this.superTypeName.getBinding().get());\n        var typeWrapper = rp.parser.modify.createObjectTypeDeclaration(this.superTypeName.getBinding().get());\n        var typeStub = typeWrapper.highLevel();\n        this.typeWrapper = typeWrapper;\n        this.astRoot = astRoot;\n        //astRoot.add(typeStub);\n        //var unit = astRoot.lowLevel().unit();\n        //this.saveUnit(unit);\n        //\n        //var newAstRoot = <hl.IHighLevelNode>hl.fromUnit(unit);\n        //this.sourceType = <hl.IHighLevelNode> _.find(newAstRoot.children(), child=>{\n        //    return (<hl.IHighLevelNode>child).property\n        //    && (<hl.IHighLevelNode>child).property().range\n        //    && (<hl.IHighLevelNode>child).property().range().name() == \"DataElement\"\n        //    && (<hl.IHighLevelNode>child).property().name() == \"types\"\n        //    && (<hl.IHighLevelNode>child).name() == this.superTypeName.getBinding().get()\n        //})\n        return typeStub;\n    };\n    ExtractSupertypeDialog.prototype.validate = function () {\n        var superValidate = _super.prototype.validate.call(this);\n        if (superValidate) {\n            return superValidate;\n        }\n        if (!this.superTypeName.getBinding().get() ||\n            this.superTypeName.getBinding().get().trim().length == 0) {\n            return \"Enter supertype name\";\n        }\n        return null;\n    };\n    ExtractSupertypeDialog.prototype.postMerge = function () {\n        this.astRoot.wrapperNode().addToProp(this.typeWrapper, 'types');\n        this.sourceType.attrOrCreate(\"type\").setValue(this.typeWrapper.highLevel().name());\n        //var runtimeDef = this.typeWrapper.highLevel().definition().toRuntime()\n        //(<hlimpl.ASTNodeImpl>this.sourceType).patchType(runtimeDef)\n    };\n    ExtractSupertypeDialog.prototype.generateDefaultSupertypeName = function () {\n        return this.sourceType.name() + \"SuperType\";\n    };\n    return ExtractSupertypeDialog;\n})(AbstractMoveTypePropertiesDialog);\nexports.ExtractSupertypeDialog = ExtractSupertypeDialog;\nfunction isWebPath(str) {\n    if (str == null)\n        return false;\n    return util.stringStartsWith(str, \"http://\") || util.stringStartsWith(str, \"https://\");\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/extractElementsDialog.js\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar hl = require(\"raml-1-parser\");\nvar UI = require(\"atom-ui-lib\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar extract = require(\"./extractElementsDialog\");\nvar assist = require(\"./assist-utils\");\nvar universes = hl.universes;\nvar MoveElementsDialog = (function () {\n    function MoveElementsDialog(node, name, _resourceType) {\n        this.node = node;\n        this.name = name;\n        this._resourceType = _resourceType;\n    }\n    MoveElementsDialog.prototype.getActiveEditor = function () {\n        var activeEditor = atom.workspace.getActiveTextEditor();\n        if (activeEditor) {\n            return activeEditor;\n        }\n        if (editorTools.aquireManager())\n            return editorTools.aquireManager().getCurrentEditor();\n        return null;\n    };\n    MoveElementsDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Move resource \", UI.Icon.GIST_NEW, false, false);\n        var errorLabel = UI.label(\"please select destination resource\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        vc.addChild(UI.label(\"Please select destination resource\"));\n        var el = UI.hc();\n        vc.setPercentWidth(100);\n        el.setPercentWidth(100);\n        var filterFunc = function (x) {\n            if (_this._resourceType) {\n                if (x.definition().key() != universes.Universe08.Resource &&\n                    x.definition().key() != universes.Universe10.Resource) {\n                    return false;\n                }\n                if (x == node || x == node.parent()) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        var universe = node.definition().universe();\n        var v = extract.createSmallSelectionPanel(node.root(), filterFunc, \"400px\", \"100%\");\n        el.addChild(v);\n        vc.addChild(el);\n        v.addSelectionListener({\n            selectionChanged: function (ev) {\n                errorLabel.setDisplay(ev.selection.isEmpty());\n                okButton.setDisabled(ev.selection.isEmpty());\n            }\n        });\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            var target = v.getSelection().elements[0];\n            node.parent().remove(node);\n            target.add(node);\n            var rs = node.lowLevel().unit().contents();\n            _this.getActiveEditor().setText(assist.cleanEmptyLines(rs));\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return MoveElementsDialog;\n})();\nexports.MoveElementsDialog = MoveElementsDialog;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/moveElementsDialog.js\n ** module id = 38\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/main.d.ts\" />\nvar DomParser = require(\"xmldom\");\nfunction xmlToJson(xml) {\n    // Create the return object\n    var obj = {};\n    if (xml.nodeType == 1) {\n        // do attributes\n        if (xml.attributes.length > 0) {\n            for (var j = 0; j < xml.attributes.length; j++) {\n                var attribute = xml.attributes.item(j);\n                obj[\"@\" + attribute.nodeName] = attribute.nodeValue;\n            }\n        }\n    }\n    else if (xml.nodeType == 3) {\n        obj = xml.nodeValue;\n    }\n    // do children\n    if (xml.hasChildNodes()) {\n        for (var i = 0; i < xml.childNodes.length; i++) {\n            var item = xml.childNodes.item(i);\n            var nodeName = item.nodeName;\n            if (nodeName == undefined) {\n                continue;\n            }\n            if (typeof (obj[nodeName]) == \"undefined\") {\n                obj[nodeName] = xmlToJson(item);\n            }\n            else {\n                if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                }\n                obj[nodeName].push(xmlToJson(item));\n            }\n        }\n    }\n    return obj;\n}\n;\nfunction cleanupText(j) {\n    for (var p in j) {\n        if (typeof (j[p]) == \"object\") {\n            for (var k in j[p]) {\n                if (k == '#text') {\n                    var txt = j[p]['#text'];\n                    if (typeof (txt) != 'string') {\n                        txt = txt.join(\"\");\n                    }\n                    txt = txt.trim();\n                    if (txt.length == 0) {\n                        delete j[p]['#text'];\n                    }\n                }\n            }\n            cleanupText(j[p]);\n        }\n    }\n    return j;\n}\nfunction cleanupJson(j) {\n    for (var p in j) {\n        if (typeof (j[p]) == \"object\") {\n            var keys = Object.keys(j[p]);\n            if (keys.length == 1) {\n                if (keys[0] == '#text') {\n                    j[p] = j[p]['#text'];\n                }\n            }\n            cleanupJson(j[p]);\n        }\n    }\n    return j;\n}\nfunction parseXML(value) {\n    var v = new DomParser.DOMParser();\n    if (!value || value.trim().indexOf(\"<<\") == 0)\n        return null;\n    var parsed = v.parseFromString(value);\n    return cleanupJson(cleanupText(xmlToJson(parsed)));\n}\nmodule.exports = parseXML;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/xmlutil.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\n * Created by Sviridov on 5/1/2015.\n */\n/// <reference path=\"../../typings/main.d.ts\" />\nvar JsonSchemaGenerator = (function () {\n    function JsonSchemaGenerator() {\n    }\n    JsonSchemaGenerator.prototype.generateSchema = function (obj) {\n        var sch = {};\n        sch['required'] = true;\n        sch['$schema'] = 'http://json-schema.org/draft-03/schema';\n        this.pass(obj, sch);\n        return sch;\n    };\n    JsonSchemaGenerator.prototype.pass = function (value, property) {\n        var valueType = this.detectType(value);\n        property['type'] = valueType;\n        if (!value || value == null) {\n        }\n        else if (Array.isArray(value)) {\n            this.passArray(value, property);\n        }\n        else if (value instanceof Object) {\n            this.passObject(value, property);\n        }\n    };\n    JsonSchemaGenerator.prototype.passObject = function (obj, sch) {\n        var _this = this;\n        Object.keys(obj).forEach(function (x) { return _this.registerProperty(x, obj[x], sch); });\n    };\n    JsonSchemaGenerator.prototype.registerProperty = function (propName, value, sch) {\n        var properties = sch['properties'];\n        if (!properties) {\n            properties = {};\n            sch['properties'] = properties;\n        }\n        var property = properties[propName];\n        if (!property) {\n            property = {};\n            properties[propName] = property;\n        }\n        property['required'] = false;\n        this.pass(value, property);\n    };\n    JsonSchemaGenerator.prototype.passArray = function (array, property) {\n        var _this = this;\n        var items = property['items'];\n        if (!items) {\n            items = [];\n            property['items'] = items;\n        }\n        var l = array.length;\n        var itemSet = [];\n        array.forEach(function (value) {\n            var item = {};\n            _this.pass(value, item);\n            itemSet.push(item);\n        });\n        items.push(itemSet[0]);\n    };\n    JsonSchemaGenerator.prototype.detectType = function (value) {\n        if (Array.isArray(value)) {\n            return 'array';\n        }\n        return typeof value;\n    };\n    return JsonSchemaGenerator;\n})();\nexports.JsonSchemaGenerator = JsonSchemaGenerator;\nfunction generateSchema(text, mediaType) {\n    var generator = new JsonSchemaGenerator();\n    var obj = JSON.parse(text);\n    var schemaObject = generator.generateSchema(obj);\n    var schemaString = JSON.stringify(schemaObject, null, 2);\n    return schemaString;\n}\nexports.generateSchema = generateSchema;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/schemaGenerator.js\n ** module id = 40\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar UI = require(\"atom-ui-lib\");\nvar SC = require(\"../util/ScrollViewUI\");\nvar path = require('path');\nvar CompositeDisposable = UI.CompositeDisposable;\nvar hl = require(\"raml-1-parser\");\nvar details = require(\"./details\");\nvar schemaUI = require(\"./schemaUI\");\nvar editorTools = require(\"./editor-tools\");\nvar dialogs = require(\"../dialogs/dialogs\");\nvar fs = require(\"fs\");\nvar universeHelpers = hl.universeHelpers;\nvar RamlDetails = (function (_super) {\n    __extends(RamlDetails, _super);\n    function RamlDetails(allowStructureChanges) {\n        if (allowStructureChanges === void 0) { allowStructureChanges = true; }\n        _super.call(this);\n        this.allowStructureChanges = allowStructureChanges;\n        this.disposables = new CompositeDisposable();\n        this.addClass('raml-details');\n    }\n    RamlDetails.prototype.getTitle = function () {\n        return \"Details\";\n    };\n    RamlDetails.prototype.attached = function () {\n        try {\n            this.element.innerHTML = \"<div></div>\";\n            this._children = [];\n            this.container = UI.vc();\n            this.addChild(this.container);\n            this.ui().appendChild(this.container.ui());\n            _super.prototype.attached.call(this);\n        }\n        catch (e) {\n        }\n    };\n    RamlDetails.prototype.setSchema = function (node) {\n        if (this.wasSchema) {\n            this.schemaView.dispose();\n            this.schemaView = null;\n        }\n        var key = node.attr(\"key\"), value = node.attr(\"value\");\n        var ssto = 12;\n        if (value == null) {\n            this.container.clear();\n            var errLabel = UI.h3(\"Selected schema has incorrect node so cannot be displayed.\");\n            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n            this.container.addChild(errLabel);\n            return;\n        }\n        //FIXME\n        setInterval(function () {\n            if (ssto++ != 12)\n                return;\n            if (value) {\n                value.setValue(schemaText);\n                schemaUI._updatePreview(treeView, schemaText);\n            }\n        }, 100);\n        var schemaText = value.value();\n        this.container.clear();\n        var textView = dialogs.smallEditor(function (e, v) {\n            if (value.lowLevel().includePath()) {\n                try {\n                    var sm = path.dirname(node.lowLevel().unit().absolutePath());\n                    var relative = path.resolve(sm, value.lowLevel().includePath());\n                    if (!value.lowLevel().includeReference()) {\n                        fs.writeFileSync(relative, v);\n                    }\n                }\n                catch (e) {\n                    console.log(e);\n                }\n            }\n            // if (v!=schemaText) textView.setText(schemaText); // read-only variant\n            schemaText = v;\n            ssto = 0;\n        });\n        dialogs._updateEditor(textView, schemaText);\n        var treeView = schemaUI._schemaPreview();\n        schemaUI._updatePreview(treeView, schemaText);\n        var schemaTab = new UI.TabFolder();\n        schemaTab.add(\"Tree view\", UI.Icon.GIT_MERGE, treeView);\n        schemaTab.add(\"Text view\", UI.Icon.FILE_TEXT, textView);\n        this.container.addChild(schemaTab);\n        window['detailsnode'] = node;\n        if (details.oldItem) {\n            details.oldItem.detach();\n            details.oldItem = null;\n        }\n        this.schemaView = textView;\n        this.wasSchema = true;\n    };\n    RamlDetails.prototype.setResource = function (node) {\n        if (this.wasSchema) {\n            this.schemaView.dispose();\n            this.schemaView = null;\n        }\n        this.wasSchema = false;\n        var hnode = node;\n        window[\"detailsnode\"] = hnode;\n        if (hnode == null || hnode.lowLevel() == null)\n            this.displayEmpty();\n        console.log(\"Displaying details for node \" + hnode.name());\n        details.updateDetailsPanel(hnode, this.container, true);\n    };\n    RamlDetails.prototype.update = function () {\n        if (window[\"detailsnode\"]) {\n            this.setResource(window[\"detailsnode\"]);\n        }\n    };\n    RamlDetails.prototype.displayEmpty = function () {\n        this.container.clear();\n        if (!editorTools.aquireManager().ast) {\n            this.container.addChild(UI.h3(\"Our API is fabulously empty\").margin(8, 8, 20, 8));\n            var create = new UI.Button(\"Create new API\", UI.ButtonSizes.LARGE, UI.ButtonHighlights.SUCCESS, UI.Icon.REPO_CLONE, function () { return dialogs.newApi(); });\n            create.margin(8, 8, 20, 0);\n            this.container.addChild(create);\n        }\n    };\n    RamlDetails.prototype.destroy = function () {\n        editorTools.aquireManager()._details = null;\n        this.disposables.dispose();\n        this._node = null;\n        this.container.dispose();\n        this.container = null;\n        window[\"detailsnode\"] = null;\n        this._children = [];\n        if (details.oldItem) {\n            details.oldItem.detach();\n        }\n        if (this.wasSchema) {\n            this.schemaView.dispose();\n            this.schemaView = null;\n        }\n        details.oldItem = null;\n    };\n    RamlDetails.prototype.show = function (node) {\n        if (this._node == node)\n            return;\n        this._node = node;\n        try {\n            if (isSchema(node))\n                this.setSchema(this._node);\n            else\n                this.setResource(node);\n        }\n        catch (e) { }\n    };\n    return RamlDetails;\n})(SC.Scrollable);\nexports.RamlDetails = RamlDetails;\nfunction isSchema(p) {\n    if (!p) {\n        return false;\n    }\n    return universeHelpers.isGlobalSchemaType(p.definition());\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/details-view.js\n ** module id = 41\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar Atom = require('atom');\nvar React = require('react');\nvar SpacePenViews = require('atom-space-pen-views');\nvar pathwatcher = require('../../util/pathwatcherProxy');\nvar extend = require('xtend');\nvar path = require('path');\nvar popsicle = require('popsicle');\nvar AtomUtil = require('../util/atom');\nvar rp = require(\"raml-1-parser\");\nvar Render = require('./render');\nvar CompositeDisposable = Atom.CompositeDisposable;\nfunction template(str, replace, defaults) {\n    return str.replace(/\\{([^{}]+)\\}/g, function (match, key) {\n        if (replace && replace[key] != null) {\n            return replace[key];\n        }\n        if (defaults && defaults[key] != null) {\n            return defaults[key];\n        }\n        return '';\n    });\n}\n/**\n * Export the console view instance which provides rendering and live-updating.\n */\nvar RAMLConsoleView = (function (_super) {\n    __extends(RAMLConsoleView, _super);\n    function RAMLConsoleView(options) {\n        var _this = this;\n        _super.call(this);\n        this.loaded = false;\n        this.isAttached = false;\n        this.isParsing = false;\n        this.disposables = new CompositeDisposable();\n        this.pageState = {};\n        // Track files and editor watchers.\n        this.paths = {};\n        this.editors = {};\n        this.resolver = new ConsoleResolver(function (path) { return _this.readFileSync(path); });\n        this.state = extend({\n            view: {},\n            parameters: {},\n            headers: {},\n            uriParameters: {},\n            baseUriParameters: {},\n            queryParameters: {},\n            bodies: {}\n        }, options.state);\n        this.filename = options.filename;\n        this.editorId = options.editorId;\n        // Handle manually passed in RAML wrapper.\n        if (options.raml) {\n            this.raml = rp.expander.expandTraitsAndResourceTypes(options.raml);\n            this.project = options.raml.highLevel().lowLevel().unit().project().cloneWithResolver(this.resolver);\n            this.loaded = true;\n        }\n    }\n    /**\n     * Atom uses the `content` as the wrapper element.\n     */\n    RAMLConsoleView.content = function () {\n        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n    };\n    RAMLConsoleView.getUriForFilename = function (path) {\n        return 'raml-console://file/' + path;\n    };\n    RAMLConsoleView.getUriForEditor = function (editor) {\n        return 'raml-console://editor/' + editor.id;\n    };\n    RAMLConsoleView.prototype.attached = function () {\n        var _this = this;\n        if (this.isAttached) {\n            return;\n        }\n        this.render();\n        this.isAttached = true;\n        if (this.editorId) {\n            this.resolveEditor(this.editorId);\n        }\n        else if (this.filename) {\n            this.resolveFilename(this.filename);\n        }\n        this.disposables.add(atom.workspace.observeTextEditors(function (editor) {\n            var path = editor.getPath();\n            // Upgrade from file watching to editor watching.\n            if (_this.paths[path]) {\n                _this.watchEditor(editor);\n                _this.stopWatchingPath(path);\n            }\n        }));\n    };\n    RAMLConsoleView.prototype.resolveEditor = function (editorId) {\n        var _this = this;\n        var resolve = function () {\n            _this.editor = AtomUtil.getEditorById(editorId);\n            if (_this.editor) {\n                _this.trigger('title-changed');\n                _this.loadRAML();\n                return;\n            }\n            var view = _this.parents('.pane').view();\n            return view && view.destroyItem(_this);\n        };\n        if (atom.workspace) {\n            resolve();\n        }\n        else {\n            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n        }\n    };\n    RAMLConsoleView.prototype.resolveFilename = function (filename) {\n        var _this = this;\n        var resolve = function () {\n            _this.file = new pathwatcher.File(filename);\n            _this.trigger('title-changed');\n            _this.loadRAML();\n        };\n        if (atom.workspace) {\n            resolve();\n        }\n        else {\n            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n        }\n    };\n    RAMLConsoleView.prototype.readFileSync = function (path) {\n        var editor = AtomUtil.getEditorByPath(path);\n        var contents;\n        if (editor) {\n            contents = editor.getText();\n            this.watchEditor(editor);\n        }\n        else {\n            try {\n                contents = fs.readFileSync(path, 'utf8');\n            }\n            catch (err) {\n                if (err.code === 'ENOENT') {\n                    this.watchForFile(path);\n                    return;\n                }\n                throw err;\n            }\n            this.watchFile(path);\n        }\n        return contents;\n    };\n    RAMLConsoleView.prototype.watchEditor = function (editor) {\n        var _this = this;\n        var path = editor.getPath();\n        if (this.editors[path]) {\n            return;\n        }\n        var disposables = new CompositeDisposable();\n        this.editors[path] = disposables;\n        // Changes can be as simple as updating the cache.\n        disposables.add(editor.onDidStopChanging(function () {\n            _this.updateUnit(path, editor.getText());\n        }));\n        // Callback to dispose of listeners and force an update. This happens\n        // because the updated path or file may not be used by the RAML parser.\n        var cb = function () {\n            _this.stopWatchingEditor(path);\n            _this.updateUnit(path, _this.readFileSync(path));\n        };\n        disposables.add(editor.onDidDestroy(cb));\n        disposables.add(editor.onDidChangePath(cb));\n    };\n    RAMLConsoleView.prototype.getActiveEditor = function () {\n        return atom.workspace.getActiveTextEditor();\n    };\n    RAMLConsoleView.prototype.stopWatchingPath = function (path) {\n        var watcher = this.paths[path];\n        if (watcher) {\n            watcher.close();\n            delete this.paths[path];\n        }\n    };\n    RAMLConsoleView.prototype.stopWatchingEditor = function (path) {\n        var disposables = this.editors[path];\n        if (disposables) {\n            disposables.dispose();\n            delete this.editors[path];\n        }\n    };\n    RAMLConsoleView.prototype.watchFile = function (path) {\n        var _this = this;\n        if (this.paths[path]) {\n            return;\n        }\n        var watcher = pathwatcher.watch(path, function (event) {\n            if (event === 'change') {\n                _this.updateUnit(path, _this.readFileSync(path));\n            }\n            else {\n                _this.stopWatchingPath(path);\n                _this.deleteUnit(path);\n            }\n        });\n        this.paths[path] = watcher;\n    };\n    RAMLConsoleView.prototype.watchForFile = function (filename) {\n        var _this = this;\n        this.watchForPath(filename, function () {\n            _this.updateUnit(filename, _this.readFileSync(filename));\n        });\n    };\n    RAMLConsoleView.prototype.watchForPath = function (filename, cb) {\n        var _this = this;\n        var parent = path.dirname(filename);\n        var watch = function () {\n            var watcher = pathwatcher.watch(parent, function (event, newFilename) {\n                if (event === 'change') {\n                    if (newFilename === filename) {\n                        _this.stopWatchingPath(parent);\n                        cb();\n                    }\n                }\n                else {\n                    _this.watchForPath(parent, watch);\n                    _this.stopWatchingPath(parent);\n                }\n            });\n            _this.paths[parent] = watcher;\n        };\n        try {\n            watch();\n        }\n        catch (e) {\n            this.watchForPath(parent, watch);\n        }\n    };\n    RAMLConsoleView.prototype.stopWatching = function () {\n        var _this = this;\n        Object.keys(this.paths).forEach(function (path) {\n            _this.stopWatchingPath(path);\n        });\n        Object.keys(this.editors).forEach(function (path) {\n            _this.stopWatchingEditor(path);\n        });\n    };\n    RAMLConsoleView.prototype.navigate = function (state) {\n        var view = typeof state === 'string' ? { id: state } : extend(this.state.view, state);\n        // Reset `pageState` before re-render.\n        this.pageState = {};\n        this.setState({ view: view }, function () {\n            // Scroll the view to the top, as if we'd just navigated.\n            document.getElementById('raml-console-view').scrollTop = 0;\n        });\n        this.abortRequest();\n    };\n    /**\n     * Render the UI with React.\n     */\n    RAMLConsoleView.prototype.render = function (cb) {\n        var _this = this;\n        var props = {\n            state: this.state,\n            raml: this.raml,\n            loaded: this.loaded,\n            errors: this.errors,\n            pageState: this.pageState,\n            setParameter: function (group, name, value) { return _this.setParameter(group, name, value); },\n            setState: function (state) { return _this.setState(state); },\n            navigate: function (view) { return _this.navigate(view); },\n            execRequest: function () { return _this.execRequest(); }\n        };\n        React.render(React.createElement(Render.Console, props), this.element, cb);\n    };\n    RAMLConsoleView.prototype.execRequest = function () {\n        var _this = this;\n        this.abortRequest();\n        var baseUri = this.raml.baseUri();\n        var node = this.raml.highLevel().findById(this.state.view.id).wrapperNode();\n        // Remove old request errors.\n        this.setPageState({ requestError: undefined });\n        if (baseUri == null) {\n            this.setPageState({ requestError: 'Unable to execute request, `baseUri` is missing' });\n            return;\n        }\n        var securityScheme = this.state.securityScheme ?\n            this.raml.securitySchemes().filter(function (x) { return x.name() === _this.state.securityScheme; })[0] : undefined;\n        var defaultBaseUriParameters = this.toDefaultParameters(this.raml.allBaseUriParameters());\n        var defaultUriParameters = this.toDefaultParameters(node.parent().allUriParameters());\n        var methodHeaders = node.headers();\n        var methodQuery = node.queryParameters();\n        var url = template(baseUri.value() || '', this.state.baseUriParameters, defaultBaseUriParameters).replace(/\\/$/, '');\n        var path = template(node.parent().completeRelativeUri(), this.state.uriParameters, defaultUriParameters);\n        if (securityScheme) {\n            methodQuery = methodQuery.concat(securityScheme.describedBy().queryParameters());\n            methodHeaders = methodHeaders.concat(securityScheme.describedBy().headers());\n        }\n        this.request = popsicle.request({\n            url: url + path,\n            method: node.method(),\n            headers: extend({ 'User-Agent': 'API Workbench: Console' }, this.usedParameters(this.state.headers, methodHeaders)),\n            query: this.usedParameters(this.state.queryParameters, methodQuery),\n            body: this.state.bodies[this.state.body],\n            use: [\n                popsicle.plugins.headers(),\n                popsicle.plugins.unzip(),\n                popsicle.plugins.concatStream('string')\n            ]\n        });\n        this.request.progress(function () {\n            _this.setPageState({ requestProgress: _this.request.completed });\n        });\n        // Handle request completion.\n        this.request.then(function (response) {\n            _this.setPageState({ requestResponse: response.toJSON(), requestProgress: undefined });\n            _this.request = undefined;\n        }, function (error) {\n            _this.setPageState({ requestError: error.message, requestProgress: undefined });\n            _this.request = undefined;\n        });\n    };\n    RAMLConsoleView.prototype.toDefaultParameters = function (parameters) {\n        var params = {};\n        parameters.forEach(function (parameter) {\n            if (parameter.default()) {\n                params[parameter.name()] = parameter.default();\n            }\n        });\n        return params;\n    };\n    RAMLConsoleView.prototype.usedParameters = function (state, parameters) {\n        var params = {};\n        parameters.forEach(function (param) {\n            if (state[param.name()]) {\n                params[param.name()] = state[param.name()];\n            }\n        });\n        return params;\n    };\n    RAMLConsoleView.prototype.abortRequest = function () {\n        if (this.request) {\n            this.request.abort();\n            this.request = undefined;\n        }\n    };\n    RAMLConsoleView.prototype.updateRAML = function () {\n        this.isParsing = true;\n        try {\n            var baseUnit = this.getUnit(this.getFilename());\n            var errors = baseUnit.ast().errors();\n            this.errors = errors;\n            if (!errors.length) {\n                var originalRoot = baseUnit.highLevel().asElement().wrapperNode();\n                this.raml = rp.expander.expandTraitsAndResourceTypes(originalRoot);\n            }\n        }\n        catch (error) {\n            this.raml = undefined;\n            this.errors = [error];\n        }\n        finally {\n            this.loaded = true;\n            this.isParsing = false;\n            this.render();\n            this.trigger('title-changed');\n        }\n    };\n    RAMLConsoleView.prototype.loadRAML = function () {\n        // Reset all watchers, consider it a fresh parse.\n        this.stopWatching();\n        this.project = rp.project.createProject(path.dirname(this.getFilename()), this.resolver);\n        this.updateRAML();\n    };\n    RAMLConsoleView.prototype.serialize = function () {\n        return {\n            deserializer: 'RAMLConsoleView',\n            filename: this.getFilename(),\n            state: this.state\n        };\n    };\n    RAMLConsoleView.prototype.getFilename = function () {\n        if (this.file) {\n            return this.file.getPath();\n        }\n        if (this.editor) {\n            return this.editor.getPath();\n        }\n    };\n    RAMLConsoleView.prototype.getTitle = function () {\n        var name = 'RAML';\n        if (this.raml && this.raml.title() != null) {\n            name = this.raml.title();\n        }\n        else if (this.file) {\n            name = path.basename(this.getFilename());\n        }\n        else if (this.editor) {\n            name = this.editor.getTitle();\n        }\n        return name + ' Console';\n    };\n    RAMLConsoleView.prototype.destroy = function () {\n        this.stopWatching();\n        this.disposables.dispose();\n        React.unmountComponentAtNode(this.element);\n    };\n    RAMLConsoleView.prototype.setState = function (state, cb) {\n        this.state = extend(this.state, state);\n        this.render(cb);\n    };\n    RAMLConsoleView.prototype.setPageState = function (pageState, cb) {\n        this.pageState = extend(this.pageState, pageState);\n        this.render(cb);\n    };\n    RAMLConsoleView.prototype.setParameter = function (group, name, value) {\n        // TODO(blakeembrey): Use computed properties on TypeScript 1.5+.\n        var state = {};\n        var groupState = extend(this.state[group]);\n        // Remove falsy values from view.\n        if (value) {\n            groupState[name] = value;\n        }\n        else {\n            delete groupState[name];\n        }\n        state[group] = groupState;\n        this.setState(state);\n    };\n    RAMLConsoleView.prototype.getURI = function () {\n        return RAMLConsoleView.getUriForFilename(this.getFilename());\n    };\n    RAMLConsoleView.prototype.getUnit = function (path) {\n        return this.project.unit(path, true);\n    };\n    RAMLConsoleView.prototype.deleteUnit = function (path) {\n        this.project.deleteUnit(path);\n        this.updateRAML();\n    };\n    RAMLConsoleView.prototype.updateUnit = function (path, contents) {\n        this.getUnit(path).updateContent(this.readFileSync(path));\n        this.updateRAML();\n    };\n    return RAMLConsoleView;\n})(SpacePenViews.ScrollView);\nexports.RAMLConsoleView = RAMLConsoleView;\nvar FSResolverImpl = (function () {\n    function FSResolverImpl() {\n    }\n    FSResolverImpl.prototype.content = function (path) {\n        if (!fs.existsSync(path)) {\n            return null;\n        }\n        try {\n            return fs.readFileSync(path).toString();\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    FSResolverImpl.prototype.list = function (path) {\n        return fs.readdirSync(path);\n    };\n    FSResolverImpl.prototype.contentAsync = function (path) {\n        return new Promise(function (resolve, reject) {\n            fs.readFile(path, function (err, data) {\n                if (err != null) {\n                    return reject(err);\n                }\n                var content = data.toString();\n                resolve(content);\n            });\n        });\n    };\n    FSResolverImpl.prototype.listAsync = function (path) {\n        return new Promise(function (reject, resolve) {\n            fs.readdir(path, function (err, files) {\n                if (err != null) {\n                    return reject(err);\n                }\n                resolve(files);\n            });\n        });\n    };\n    return FSResolverImpl;\n})();\nexports.FSResolverImpl = FSResolverImpl;\n/**\n * Create a console resolver class.\n */\nvar ConsoleResolver = (function (_super) {\n    __extends(ConsoleResolver, _super);\n    function ConsoleResolver(readFileSync) {\n        _super.call(this);\n        this.readFileSync = readFileSync;\n    }\n    ConsoleResolver.prototype.content = function (path) {\n        return this.readFileSync(path);\n    };\n    return ConsoleResolver;\n})(FSResolverImpl);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/console/console-view.js\n ** module id = 42\n ** module chunks = 0\n **/","module.exports = require(\"yaml-ast-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"yaml-ast-parser\"\n ** module id = 43\n ** module chunks = 0\n **/","module.exports = require(\"emissary\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"emissary\"\n ** module id = 44\n ** module chunks = 0\n **/","module.exports = require(\"xmldom\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xmldom\"\n ** module id = 45\n ** module chunks = 0\n **/","module.exports = require(\"react\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 46\n ** module chunks = 0\n **/","module.exports = require(\"xtend\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xtend\"\n ** module id = 47\n ** module chunks = 0\n **/","module.exports = require(\"popsicle\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"popsicle\"\n ** module id = 48\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar UI = require(\"atom-ui-lib\");\nvar khttp = require(\"know-your-http-well\");\n/**\n * Created by kor on 13/05/15.\n */\nvar rp = require(\"raml-1-parser\");\nvar path = require('path');\nvar defs = rp.ds;\nvar stubs = rp.stubs;\nvar services = defs;\nvar search = rp.search;\nvar fs = require(\"fs\");\nvar assistUtils = require(\"./assist-utils\");\nvar details2 = require(\"../editor-tools/details2\");\nvar details = require(\"../editor-tools/details\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar schemaUI = require(\"../editor-tools/schemaUI\");\nvar remote = require('remote');\nvar dialog = remote.require('dialog');\nvar pair = require(\"../../util/pair\");\nvar universeModule = rp.universes;\nvar universeHelpers = rp.universeHelpers;\nvar _dialogPanels = [];\nfunction showError(message, details) {\n    dialog.showMessageBox(remote.getCurrentWindow(), { type: 'error', buttons: ['Okay'], title: 'Error', message: message, detail: details });\n}\nexports.showError = showError;\nvar _methodDescriptions = null;\nfunction getMethodDescriptions() {\n    if (!_methodDescriptions) {\n        _methodDescriptions = Object.create(null);\n        var methodsProperty = editorTools.aquireManager().ast.definition().property(universeModule.Universe10.Api.properties.resources.name)\n            .range().property(universeModule.Universe10.ResourceBase.properties.methods.name);\n        var list = methodsProperty.enumOptions();\n        khttp.methods.filter(function (x) { return list.indexOf(x.method.toLowerCase()) > -1; }).forEach(function (method) {\n            var desc = method.description.trim().match(/^\\\"(.*)\\\"$/)[1];\n            _methodDescriptions[method.method.toLowerCase()] = desc ? desc : method.description;\n        });\n    }\n    return _methodDescriptions;\n}\nvar _statusCodeDescriptions = null;\nfunction getStatusCodeDescriptions() {\n    if (!_statusCodeDescriptions) {\n        _statusCodeDescriptions = Object.create(null);\n        khttp.statusCodes.forEach(function (code) {\n            var m, desc = code.description.trim();\n            if (m = desc.match(/^\\\"(.*)\\\"/))\n                desc = m[1];\n            _statusCodeDescriptions[code.code] = desc;\n        });\n        _statusCodeDescriptions['7xx'] = \"is for developer errors.\";\n    }\n    return _statusCodeDescriptions;\n}\nexports.getStatusCodeDescriptions = getStatusCodeDescriptions;\nfunction newApi() {\n    var title = \"\", version = \"\", baseUri = \"\", sample = true, raml1 = true;\n    var tfTitle = new UI.TextField(\"API Title*\", title, function (e, v) { return title = v; });\n    var tfVersion = new UI.TextField(\"Version\", version, function (e, v) { return version = v; });\n    var tfBaseURI = new UI.TextField(\"Base URI\", baseUri, function (e, v) { return baseUri = v; });\n    tfTitle.setTabIndex(100);\n    tfTitle.margin(0, 0, 8, 0);\n    tfVersion.setTabIndex(101);\n    tfVersion.margin(0, 0, 8, 0);\n    tfBaseURI.setTabIndex(102);\n    tfBaseURI.margin(0, 0, 8, 0);\n    var cbSample = new UI.CheckBox(\"Create sample resource\", null, function (e, v) { return sample = v; });\n    cbSample.setValue(sample);\n    var cbRaml1 = new UI.CheckBox(\"Generate 1.0 model\", null, function (e, v) { return raml1 = v; });\n    cbRaml1.setValue(raml1);\n    var panel = UI.section(\"Create new API\", UI.Icon.DASHBOARD, false, false, tfTitle, tfVersion, tfBaseURI, UI.hc(cbSample, cbRaml1).margin(0, 0, 12, 12));\n    _dialog(panel, function () {\n        if (title == '') {\n            showError(\"Cannot create API\", \"Title must not be empty\");\n            return false;\n        }\n        editorTools.aquireManager().setText(assistUtils.createRAMLFile(title, version, baseUri, sample, raml1));\n        return true;\n    }, tfTitle)(this);\n    tfTitle.getActualField().ui().focus();\n}\nexports.newApi = newApi;\nvar typeValues = function (parent) {\n    var isSchema = false;\n    var tp = parent.definition().universe().type(universeModule.Universe10.TypeDeclaration.name);\n    if (!tp) {\n        isSchema = true;\n        tp = parent.definition().universe().type(universeModule.Universe08.BodyLike.name);\n    }\n    var sh = tp.property(universeModule.Universe10.TypeDeclaration.properties.schema.name);\n    var types = [];\n    if (sh) {\n        types = search.enumValues(sh, parent);\n    }\n    return { isSchema: isSchema, types: types };\n};\nfunction newMethod(parent, method) {\n    var mdesc = getMethodDescriptions();\n    var cdesc = getStatusCodeDescriptions();\n    var NO_RESPONCE = \"No response\";\n    var NO_RESPONCE_BT = \"No response body type\";\n    var code = null, bodyType = null;\n    if (method == null)\n        method = \"get\";\n    var mdescLabel = new UI.LabelField();\n    var cdescLabel = new UI.LabelField();\n    [mdescLabel, cdescLabel].forEach(function (x) { return x.addClass('wizard-description'); });\n    mdescLabel.getActualField().margin(0, 0, 18, 8);\n    cdescLabel.getActualField().margin(0, 0, 8, 8);\n    var methodSelect = new UI.SelectField(\"Method:\", function (e, v) {\n        method = v;\n        mdescLabel.setText(\"Method \" + v + \" \" + mdesc[v]);\n    }, null);\n    methodSelect.getActualField().setOptions(Object.keys(mdesc));\n    methodSelect.getActualField().setValue(method, true);\n    var responseSelect = new UI.SelectField(\"Status code:\", function (e, v) {\n        if (v == NO_RESPONCE) {\n            v = null;\n            responseTypeSelect.getActualField().setValue(NO_RESPONCE_BT);\n        }\n        code = v;\n        responseTypeSelect.setDisabled(v == null);\n        cdescLabel.setText(v ? \"Status code \" + v + \" \" + cdesc[v] : '');\n    }, null);\n    responseSelect.getActualField().setOptions([NO_RESPONCE].concat(Object.keys(cdesc)));\n    var responseTypeSelect = new UI.SelectField(\"Generate default response with media type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT) {\n            v = null;\n            typeOfValue.setDisabled(true);\n        }\n        else\n            typeOfValue.setDisabled(false);\n        bodyType = v;\n    }, null);\n    responseTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n    responseTypeSelect.setDisabled(true);\n    responseTypeSelect.margin(0, 0, 0, 12);\n    var realBodyType = null;\n    var bodyTypeSelect = new UI.SelectField(\"Generate default body with media type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT) {\n            v = null;\n            bodyTypeOfValue.setDisabled(true);\n        }\n        else\n            bodyTypeOfValue.setDisabled(false);\n        realBodyType = v;\n    }, null);\n    bodyTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n    bodyTypeSelect.margin(0, 0, 0, 12);\n    var actualType = null;\n    var bodyTypeString = null;\n    var typeOfValue = new UI.SelectField(\"Generate default response body with type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT)\n            v = null;\n        actualType = v;\n    }, null);\n    typeOfValue.setDisabled(true);\n    typeOfValue.margin(0, 0, 0, 12);\n    var __ret = typeValues(parent);\n    var isSchema = __ret.isSchema;\n    var types = __ret.types;\n    if (types) {\n        types = [\"\"].concat(types);\n        typeOfValue.getActualField().setOptions(types);\n    }\n    var bodyTypeOfValue = new UI.SelectField(\"Generate default body with type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT)\n            v = null;\n        bodyTypeString = v;\n    }, null);\n    bodyTypeOfValue.setDisabled(true);\n    bodyTypeOfValue.margin(0, 0, 0, 12);\n    var isSchema = __ret.isSchema;\n    var types = __ret.types;\n    if (types) {\n        types = [\"\"].concat(types);\n        bodyTypeOfValue.getActualField().setOptions(types);\n    }\n    var responseSection = UI.section(\"\");\n    responseSection.addChild(UI.h3(\"Body\"));\n    responseSection.addChild(bodyTypeSelect);\n    responseSection.addChild(bodyTypeOfValue);\n    responseSection.addChild(UI.h3(\"Response\"));\n    responseSection.addChild(responseSelect);\n    responseSection.addChild(cdescLabel);\n    responseSection.addChild(responseTypeSelect);\n    responseSection.addChild(typeOfValue);\n    responseSection.ui();\n    var panel = UI.section(\"Creating a new method\", UI.Icon.CODE, false, false, methodSelect, mdescLabel, responseSection);\n    var __ret = typeValues(parent);\n    //panel.addChild(typeOfValue)\n    _dialog(panel, function () {\n        var oldNode = parent.elementsOfKind('methods').filter(function (el) { return (el.attr('method').value() == method); })[0];\n        if (oldNode) {\n            showError(\"Method \" + method + \" already exists\", \"Node contents will be overwritten\");\n            parent.remove(oldNode);\n        }\n        var methodNode = stubs.createMethodStub(parent, method);\n        if (realBodyType) {\n            var bodyNode = stubs.createBodyStub(methodNode, realBodyType);\n            if (bodyTypeString) {\n                if (isSchema) {\n                    bodyNode.attrOrCreate(\"schema\").setValue(bodyTypeString);\n                }\n                else\n                    bodyNode.attrOrCreate(\"type\").setValue(bodyTypeString);\n            }\n            methodNode.add(bodyNode);\n        }\n        if (code) {\n            var codeNode = stubs.createResponseStub(methodNode, code);\n            methodNode.add(codeNode);\n            if (bodyType) {\n                var bodyNode = stubs.createBodyStub(codeNode, bodyType);\n                if (actualType) {\n                    if (isSchema) {\n                        bodyNode.attrOrCreate(\"schema\").setValue(actualType);\n                    }\n                    else\n                        bodyNode.attrOrCreate(\"type\").setValue(actualType);\n                }\n                codeNode.add(bodyNode);\n            }\n        }\n        parent.add(methodNode);\n        editorTools.updateAndSelect(methodNode);\n        return true;\n    })(this);\n}\nexports.newMethod = newMethod;\nfunction getStringValue(x) {\n    if (typeof x === \"object\")\n        return x.valueName();\n    else\n        return x;\n}\nexports.getStringValue = getStringValue;\nfunction typeEditDialog(name, value, node, onDone) {\n    var typePanel = UI.vc();\n    typePanel.margin(8, 8, 20, 8);\n    var typeProperty = node.definition().property(name);\n    var toPropagate = svMap(node, name);\n    var typeList = editorTools.aquireManager().ast.elementsOfKind(\"resourceType\").map(function (x) { return x.name(); });\n    var typeName = getStringValue(value);\n    var select = new UI.SelectField('Type: ', function (e, v) {\n        if (v == EMPTY_VALUE) {\n            value = \"\";\n            typePanel.clear();\n            typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n            return;\n        }\n        value = rp.utils.genStructuredValue(v, node, typeProperty);\n        var typeNode = ((typeof value) === \"object\") ? value.toHighLevel(editorTools.aquireManager().ast) : null;\n        propagateValues(typeNode, toPropagate);\n        details.updateDetailsPanel(typeNode, typePanel);\n        if (typeNode && typeNode.definition().allProperties().length == 0) {\n            value = v;\n        }\n    });\n    var EMPTY_VALUE = \"(no value)\";\n    select.getActualField().setOptions([EMPTY_VALUE].concat(typeList));\n    select.setPercentWidth(100);\n    if (typeList.indexOf(typeName) < 0) {\n        select.getActualField().setValue(EMPTY_VALUE);\n        if (typeName != \"\")\n            typePanel.addChild(UI.label(\"Type `\" + typeName + \"` does not exists\", null, UI.TextClasses.ERROR).setStyle(\"display\", \"block\"));\n        typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n    }\n    else\n        select.getActualField().setValue(typeName, true);\n    var panel = UI.section(\"Editing type value `\" + name + '`:', UI.Icon.CIRCUIT_BOARD, null, null, select, typePanel);\n    return _dialog(panel, function () { onDone(value); return true; });\n}\nexports.typeEditDialog = typeEditDialog;\nfunction svMap(node, attr) {\n    try {\n        var map = new pair.Map();\n        var values = node.attributes(attr).map(function (x) { return x.value(); }).filter(function (x) { return typeof x === \"object\"; });\n        values.forEach(function (val) { return val.lowLevel().children().forEach(function (c) { return map.set(c.key(), c.value()); }); });\n        return map;\n    }\n    catch (e) {\n        return null;\n    }\n}\nfunction propagateValues(node, map) {\n    if (!node || !map)\n        return;\n    map.pairs().forEach(function (pair) {\n        if (node.definition().property(pair.key))\n            node.attrOrCreate(pair.key).setValue(pair.value);\n    });\n}\nfunction getResourceParent(node) {\n    if (!node || !node.property())\n        return null;\n    if (universeHelpers.isResourcesProperty(node.property()))\n        return node;\n    return getResourceParent(node.parent());\n}\nexports.getResourceParent = getResourceParent;\nfunction enumEditDialog(name, value, onDone) {\n    var _cp = {\n        elements: function (model) { return model; },\n        init: function (viewer) { },\n        dispose: function () { }\n    };\n    var renderer = {\n        render: function (model) { return UI.hc(UI.label(model, UI.Icon.GIT_COMMIT), UI.a(\"\", function (e) {\n            value = value.filter(function (x) { return x != e.id(); });\n            list.remove(e.id());\n        }, UI.Icon.TRASHCAN).pad(8, 8).setId(model)).addClass(\"outline\"); }\n    };\n    var list = new UI.ListView(_cp, renderer);\n    list.setBasicLabelFunction(function (x) { return x; });\n    list.setInput(value, true);\n    var text = UI.texfField(\"\", \"\", function (x) { return x; }).margin(0, 0, 4, 4);\n    text.addKeyPressListener(function (i, e) {\n        if (e.keyCode != 13)\n            return;\n        var b = i.getBinding();\n        var newValue = b.get();\n        b.set(\"\");\n        value.push(newValue);\n        list.setInput(value, true);\n    });\n    var panel = UI.section(\"Editing enum value `\" + name + '`:', UI.Icon.LIST_UNORDERED, null, null, UI.h3(\"List of elements in enum:\").margin(0, 0, 20, 0), list.margin(20, 20), UI.h3(\"Add new element:\").margin(0, 0, 20, 0), text);\n    return _dialog(panel, function () { onDone(value); return true; }, text); //\n}\nexports.enumEditDialog = enumEditDialog;\nfunction calculatesParentURIPath(resource) {\n    var result = resource.attrValue(\"relativeUri\");\n    if (!result)\n        return null;\n    var current = getResourceParent(resource.parent());\n    while (current) {\n        var segment = current.attrValue(\"relativeUri\");\n        if (!segment)\n            return null;\n        result = segment + result;\n        current = getResourceParent(current.parent());\n    }\n    return result;\n}\nfunction newResource(parent) {\n    var uri = \"/\";\n    var uriLable = \"\";\n    var resourceParent = getResourceParent(parent);\n    var parentsPath = null;\n    if (resourceParent) {\n        parentsPath = calculatesParentURIPath(resourceParent);\n        if (parentsPath) {\n            uriLable = parentsPath;\n        }\n    }\n    var uriTF = uriTF = new UI.TextField(uriLable, uri, function (e, v) {\n        uri = v;\n    });\n    uriTF.margin(0, 0, 6, 12);\n    var methods = {};\n    var methodsPanel = UI.vc().margin(0, 0, 0, 12);\n    Object.keys(getMethodDescriptions())\n        .forEach(function (val) {\n        var ch = new UI.CheckBox(val, null, function (x) {\n            if (methods[val]) {\n                delete methods[val];\n            }\n            else {\n                methods[val] = x;\n            }\n        }).addClass(\"checkbox-group\");\n        var hcp = UI.vc().margin(0, 0, 15, 0);\n        hcp.addChild(ch);\n        var desc = val + \":\" + getMethodDescriptions()[val];\n        methodsPanel.addChild(UI.vc(hcp));\n        var label = UI.label(desc, UI.Icon.NONE, UI.TextClasses.SUBTLE).margin(5, 10, -4, 0);\n        methodsPanel.addChild(label);\n    });\n    var node = stubs.createResourceStub(parent, uri);\n    var resourceTypeProp = UI.select(\"type\");\n    var sm = search.globalDeclarations(parent).filter(function (x) { return universeHelpers.isResourceTypeType(x.definition()) && !x.definition().getAdapter(services.RAMLService).isUserDefined(); });\n    var options = sm.map(function (x) { return rp.search.qName(x, parent); });\n    var options = [\"\"].concat(options);\n    resourceTypeProp.setOptions(options);\n    //var resourceTypeProp = details.property2(node, \"type\");\n    var panel = UI.section(\"Creating a new resource\", UI.Icon.BOOK, false, false);\n    panel.addChild(UI.label(\"New resource URI:\"));\n    panel.addChild(uriTF);\n    panel.addChild(UI.label(\"Type:\"));\n    panel.addChild(resourceTypeProp);\n    panel.addChild(UI.label(\"Add additional methods:\").margin(0, 0, 18, 6));\n    panel.addChild(methodsPanel);\n    _dialog(panel, function () {\n        if (uri.indexOf('/') != 0)\n            return false;\n        node.attrOrCreate(\"relativeUri\").setValue(uri);\n        Object.keys(methods).filter(function (x) { return methods[x]; }).forEach(function (method) {\n            var stub = stubs.createMethodStub(node, method);\n            stub.attrOrCreate(\"method\").setValue(method);\n            node.add(stub);\n        });\n        var vl = resourceTypeProp.getValue();\n        if (vl) {\n            node.attrOrCreate(\"type\").setValue(vl);\n        }\n        parent.add(node);\n        editorTools.updateAndSelect(node);\n        return true;\n    }, uriTF, true)(this);\n    uriTF.getActualField().ui().focus();\n    //(<UI.TextField>resourceTypeProp).hideLabel();\n    if (!parentsPath) {\n        uriTF.hideLabel();\n    }\n    else {\n        uriTF.makeLabelNextToField();\n    }\n}\nexports.newResource = newResource;\nfunction newNode(parent, title, property, key) {\n    if (key === void 0) { key = \"key\"; }\n    var name = \"\", type = \"\";\n    if (parent == null) {\n        return;\n    }\n    if (property == \"body\") {\n        key = \"application/json\";\n    }\n    var stub = stubs.createStub(parent, property, key);\n    var item = details2.buildItem(stub, true);\n    item.setTitle(title);\n    var panel = item.render({ showDescription: true });\n    panel.margin(8, 8, 8, 8);\n    _dialog(panel, function () {\n        stub._parent = null;\n        stub.lowLevel()._unit = null;\n        parent.add(stub);\n        editorTools.updateAndSelect(stub);\n        return true;\n    }, null)(this);\n}\nexports.newNode = newNode;\nfunction traitsEditDialog(name, values, node, onDone) {\n    var toPropagate = svMap(node, name);\n    var tabs = new UI.TabFolder();\n    var sel = UI.vc(UI.h3(\"Enabled traits: \")).margin(10, 10, 0, 0);\n    tabs.margin(0, 0, 20, 10);\n    tabs.add(\"Traits\", UI.Icon.FILE_SUBMODULE, sel);\n    var traitProperty = node.definition().property(name);\n    var ui = {};\n    var index = 0;\n    var returnv = node.root().elementsOfKind('traits').map(function (trait) {\n        var traitName = trait.name();\n        var traitValue = rp.utils.genStructuredValue(traitName, node, traitProperty);\n        var traitNode = (typeof traitValue === \"object\") ? traitValue.toHighLevel() : null;\n        if (traitNode && traitNode.definition().allProperties().length == 0)\n            traitValue = traitName;\n        var returnee = {\n            index: index,\n            name: traitName,\n            value: traitValue,\n            enabled: values.filter(function (x) { return getStringValue(x) == traitName; }).length > 0\n        };\n        propagateValues(traitNode, toPropagate);\n        var tcb = UI.checkBox(returnee.name, function (e) {\n            returnee.enabled = tcb.getValue();\n            tabs.toggle(1 + returnee.index, returnee.enabled);\n        });\n        tcb.margin(12, 12);\n        tcb.setValue(returnee.enabled);\n        sel.addChild(tcb);\n        var traitPanel = UI.vc();\n        traitPanel.margin(8, 8, 20, 8);\n        details.updateDetailsPanel(traitNode, traitPanel);\n        tabs.add(traitName, UI.Icon.CIRCUIT_BOARD, traitPanel);\n        tabs.toggle(1 + index, returnee.enabled);\n        index += 1;\n        return returnee;\n    });\n    var panel = UI.section(\"Editing trait value `\" + name + \"`:\", UI.Icon.CIRCUIT_BOARD, null, null, tabs);\n    return _dialog(panel, function () { onDone(returnv); return true; });\n}\nexports.traitsEditDialog = traitsEditDialog;\nfunction getNewSchemaPath(schema) {\n    return path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath()) + '/' + (schema.length > 0 ? schema + '.raml' : \"\");\n}\nfunction schemaText(nameOrValue) {\n    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n    return schema ? schema.value().value() : \"\";\n}\nfunction schemaEditDialog(name, value, onDone) {\n    var NEW_SCHEMA = \"(New Schema)\";\n    var schemas = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }); // list of all available schema names\n    var refValue = schemas.indexOf(value) >= 0;\n    var text = refValue ? _schemaText(value) : value;\n    var sname = refValue ? value : \"\";\n    var timeout = 0;\n    var editor = smallEditor(function (e, v) { timeout = 0; });\n    var preview = schemaUI._schemaPreview();\n    var intervalId = setInterval(function () {\n        if (timeout++ < 5)\n            return;\n        timeout = 0;\n        schemaUI._updatePreview(preview, editor.getValue());\n    }, 100);\n    var select = new UI.SelectField('Select schema: ', function (e, v) {\n        sname = v;\n        text = schemaText(v);\n        _updateEditor(editor, text);\n    });\n    select.getActualField().setOptions([NEW_SCHEMA].concat(schemas));\n    select.setPercentWidth(100);\n    if (refValue)\n        select.getActualField().setValue(sname);\n    _updateEditor(editor, text);\n    var tabs = new UI.TabFolder();\n    tabs.add(\"Write\", UI.Icon.FILE_TEXT, editor);\n    tabs.add(\"Preview\", UI.Icon.GIT_MERGE, preview);\n    var panel = UI.section(\"Editing schema value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, select, tabs);\n    var NoSchema = function () {\n        showError(\"No schema entered\", \"Please enter a valid schema or select one from the list before proceeding.\");\n        return false;\n    };\n    var InvalidSchema = function () {\n        showError(\"Invalid schema\", \"Please fix the errors in the schema before saving it.\");\n        return false;\n    };\n    return _dialog2(panel, [\n        {\n            name: \"Save as reference\",\n            highlight: UI.ButtonHighlights.INFO,\n            action: function () {\n                var newText = editor.getValue();\n                var isChanged = (text != newText);\n                if (!isChanged && sname == NEW_SCHEMA)\n                    return NoSchema();\n                else if (validateSchema(newText) == false)\n                    return InvalidSchema();\n                if (isChanged) {\n                    var res = saveSchema(sname, newText);\n                    if (res) {\n                        onDone(res);\n                        clearInterval(intervalId);\n                        return true;\n                    }\n                    else\n                        return false;\n                }\n                else {\n                    onDone(sname);\n                    clearInterval(intervalId);\n                    return true;\n                }\n            }\n        },\n        {\n            name: \"Save as text\",\n            highlight: UI.ButtonHighlights.WARNING,\n            action: function () {\n                var newText = editor.getValue();\n                var isChanged = (text != newText);\n                if (newText == \"\")\n                    return NoSchema();\n                else if (validateSchema(newText) == false)\n                    return InvalidSchema();\n                select.getActualField().setValue(NEW_SCHEMA);\n                sname = \"Untitled\";\n                onDone(newText);\n                clearInterval(intervalId);\n                return true;\n            }\n        },\n        {\n            name: \"Cancel\",\n            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n            action: function () { clearInterval(intervalId); return true; }\n        }\n    ]);\n}\nexports.schemaEditDialog = schemaEditDialog;\nfunction _updateEditor(editor, value) {\n    var schema = rp.schema.createSchema(value, null);\n    var schemaType = (schema == null || schema.getType == null) ? \"text/plain\" : schema.getType();\n    editor.setGrammar(schemaType);\n    editor.setText(value);\n}\nexports._updateEditor = _updateEditor;\nfunction validateSchema(schema) {\n    return true;\n}\nfunction saveSchema(name, value) {\n    var schema = rp.schema.createSchema(value, null);\n    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n    var projectFolder = path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath());\n    var ext;\n    var filter;\n    switch (schema.getType()) {\n        case 'source.json':\n            filter = [filterJSON];\n            ext = \".json\";\n            break;\n        case 'text.xml':\n            filter = [filterXML];\n            ext = \".xsd\";\n            break;\n        default:\n            filter = [];\n    }\n    var result = dialog.showSaveDialog(remote.getCurrentWindow(), {\n        title: 'Save schema',\n        defaultPath: path.resolve(projectFolder, \"schemas\", name + ext),\n        filters: filter\n    });\n    if (result == null)\n        return null;\n    var fname = path.basename(result);\n    var ename = path.extname(fname);\n    var sname = fname.substr(0, fname.indexOf(ename));\n    var rpath = path.relative(projectFolder, result);\n    if (editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }).indexOf(sname) == -1)\n        assistUtils.createGlobalSchemaFromNameAndContent(editorTools.aquireManager().ast.root(), sname, rpath, value, result);\n    return sname;\n}\nfunction markdown(name, values, onDone) {\n    var editor = new UI.AtomEditorElement(values.join('\\n'), function (e) { });\n    editor.margin(0, 0, 6, 12);\n    editor.setMini(false);\n    editor.setGrammar('source.gfm');\n    var panel = UI.section(\"Editing markdown value `\" + name + '`:', UI.Icon.FILE_TEXT, false, false, UI.h3(\"Please note that lines might be long enough so window would scroll.\").margin(0, 0, 20, 0), editor);\n    return _dialog(panel, function () { onDone(editor.getBinding().get()); return true; }, editor);\n}\nexports.markdown = markdown;\nfunction exampleEditorDialog(name, rpath, value, onDone) {\n    var editor = smallEditor(function (e, v) {\n        if (v.indexOf('xml') > 0)\n            editor.setGrammar('text.xml');\n        else\n            editor.setGrammar('source.json');\n    });\n    editor.setText(value);\n    var projectPath = path.dirname(editorTools.aquireManager().getPath());\n    var refPath = new UI.TextField(\"Referenced from\", rpath, function (e, v) { return rpath = v; }, null, \"No reference path provided\");\n    refPath.addChild(new UI.Button(\"Browse\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.NO_HIGHLIGHT, null, function () {\n        var res = UI.fdUtils.openFileDialogModal(\"Open a reference\", path.resolve(projectPath, rpath), []);\n        if (!res)\n            return;\n        refPath.getActualField().setText(path.relative(projectPath, rpath = res[0]));\n        value = fs.readFileSync(res[0]).toString(\"UTF-8\");\n        editor.setText(value);\n    }).margin(4, 0));\n    var reui = refPath.getActualField().ui();\n    reui.onclick = function (e) {\n        reui.blur();\n        if (reui.nextSibling['onclick'])\n            reui.nextSibling['onclick'](e);\n    };\n    var refFrom = UI.vc(UI.h3(\"Referenced\"));\n    var panel = UI.section(\"Editing example value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, refPath.margin(12, 12, 20, 12), editor.margin(12, 12, 20, 12));\n    return _dialog2(panel, [\n        {\n            name: \"Save as reference\",\n            highlight: UI.ButtonHighlights.INFO,\n            action: function () {\n                var newText = editor.getValue();\n                if ((value != newText)) {\n                    var res = saveExample(path.resolve(projectPath, rpath), newText);\n                    if (res) {\n                        onDone(path.relative(projectPath, res));\n                        return true;\n                    }\n                    else\n                        return false;\n                }\n                else {\n                    onDone(rpath);\n                    return true;\n                }\n            }\n        },\n        {\n            name: \"Save as text\",\n            highlight: UI.ButtonHighlights.WARNING,\n            action: function () { return onDone(editor.getValue()) == undefined || true; }\n        },\n        {\n            name: \"Cancel\",\n            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n            action: function () { return true; }\n        }\n    ]);\n}\nexports.exampleEditorDialog = exampleEditorDialog;\nvar mdp = null;\nfunction _closeDialog() {\n    _dialogPanels.pop();\n    if (_dialogPanels.length == 0)\n        mdp.destroy();\n    else\n        mdp = atom.workspace.addModalPanel({ item: _dialogPanels[_dialogPanels.length - 1].ui() });\n}\nfunction saveExample(filePath, value) {\n    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n    var ext = value.indexOf('xml') < 0 ? 'json' : 'xml';\n    var filename = UI.fdUtils.saveFileDialogModal('Save an example', filePath, [filterJSON, filterXML, filterAll]);\n    if (filename)\n        fs.writeFileSync(filename, value);\n    return filename;\n}\nfunction _dialog2(panel, actions, toFocus, stretch) {\n    if (stretch === void 0) { stretch = false; }\n    var buttonBar = UI.hc().setPercentWidth(100);\n    actions.reverse().forEach(function (a) {\n        var button = UI.button(a.name, UI.ButtonSizes.NORMAL, a.highlight, UI.Icon.NONE, function (x) { if (a.action())\n            _closeDialog(); });\n        if (a.isPrimary) {\n            var st = panel.getBinding().status();\n            if (st) {\n                if (st.code == UI.StatusCode.ERROR) {\n                    button.setDisabled(true);\n                }\n            }\n            panel.getBinding().addStatusListener(function (x) {\n                var st = panel.getBinding().status();\n                if (st) {\n                    if (st.code != UI.StatusCode.ERROR) {\n                        button.setDisabled(false);\n                    }\n                    else {\n                        button.setDisabled(true);\n                    }\n                }\n            });\n        }\n        button.setStyle(\"float\", \"right\")\n            .margin(4, 10);\n        buttonBar.addChild(button);\n    });\n    panel.addChild(buttonBar);\n    var ui = panel.ui();\n    return function (e) {\n        _dialogPanels.push(panel);\n        var eventListener = function () {\n            if (!stretch) {\n                return;\n            }\n            var parent = ui.parentElement;\n            var height = document.body.clientHeight;\n            if (!parent) {\n                return;\n            }\n            var style = window.getComputedStyle(parent);\n            [\"paddingBottom\", \"paddingTop\", \"marginBottom\", \"marginTop\"].forEach(function (property) {\n                height -= parseFloat(style[property] || 0);\n            });\n            ui.style.height = height + \"px\";\n            ui.style.overflowY = \"scroll\";\n        };\n        window.addEventListener('resize', eventListener);\n        mdp = atom.workspace.addModalPanel({ item: ui });\n        mdp.onDidDestroy(function () {\n            window.removeEventListener('resize', eventListener);\n        });\n        eventListener();\n        if (toFocus)\n            toFocus.ui().focus();\n    };\n}\nfunction msg(m) {\n    showError(m, \"\");\n}\nexports.msg = msg;\nfunction smallEditor(onChange) {\n    if (!onChange)\n        onChange = function (e, v) { };\n    var editor = new UI.AtomEditorElement(\"\", onChange);\n    editor.setMini(false);\n    editor.setStyle(\"height\", \"400px\");\n    editor.setStyle(\"border\", \"solid\");\n    editor.setStyle(\"border-width\", \"1px\");\n    return editor;\n}\nexports.smallEditor = smallEditor;\nfunction _schemaText(nameOrValue) {\n    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n    return schema ? schema.value().value() : \"\";\n}\nfunction _dialog(panel, onDone, toFocus, stretch) {\n    if (stretch === void 0) { stretch = false; }\n    return _dialog2(panel, [\n        { name: \"Ok\", isPrimary: true, highlight: UI.ButtonHighlights.PRIMARY, action: onDone },\n        { name: \"Cancel\", highlight: UI.ButtonHighlights.NO_HIGHLIGHT, action: function () { return true; } }\n    ], toFocus, stretch);\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/dialogs.js\n ** module id = 49\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/main.d.ts\" />\nvar _ = require(\"underscore\");\nvar Opt = require(\"../Opt\");\nexports.defined = function (x) { return (x !== null) && (x !== undefined); };\n/**\n * Arrays of Objects are common in RAML08.\n * @param x\n * @returns {{}}\n */\nfunction flattenArrayOfObjects(x) {\n    var res = {};\n    x.forEach(function (v) { return Object.keys(v).forEach(function (k) { return res[k] = v[k]; }); });\n    return res;\n}\nexports.flattenArrayOfObjects = flattenArrayOfObjects;\nfunction find(xs, f) {\n    return new Opt(_.find(xs || [], f));\n}\nexports.find = find;\nexports.isInstance = function (v, C) { return (v instanceof C) ? [v] : []; };\nexports.ifInstanceOf = function (v, C, f) { return (v instanceof C) ? f(v) : null; };\nfunction toTuples(map) {\n    return Object.keys(map).map(function (k) { return [k, map[k]]; });\n}\nexports.toTuples = toTuples;\nfunction fromTuples(tuples) {\n    var obj = {};\n    tuples.forEach(function (x) { return obj[x[0]] = x[1]; });\n    return obj;\n}\nexports.fromTuples = fromTuples;\nexports.collectInstancesOf = function (xs, C) { return tap([], function (res) { return xs.forEach(function (v) { return exports.ifInstanceOf(v, C, function (x) { return res.push(x); }); }); }); };\nexports.collectInstancesOfInMap = function (map, C) {\n    return Object.keys(map).map(function (k) { return [k, map[k]]; }).filter(function (x) { return x[1] instanceof C; }).map(function (x) { return x; });\n};\nexports.asArray = function (v) { return exports.defined(v) ? ((v instanceof Array) ? v : [v]) : []; };\nexports.shallowCopy = function (obj) { return tap({}, function (copy) { return Object.keys(obj).forEach(function (k) { return copy[k] = obj[k]; }); }); };\nexports.flatMap = function (xs, f) { return exports.flatten(xs.map(f)); };\nexports.flatten = function (xss) { return Array.prototype.concat.apply([], xss); };\nexports.takeWhile = function (xs, f) { return tap([], function (res) {\n    for (var i = 0; i < xs.length; i++) {\n        if (!f(xs[i]))\n            break;\n        res.push(xs[i]);\n    }\n}); };\nfunction tap(v, f) {\n    f(v);\n    return v;\n}\nexports.tap = tap;\nfunction kv(obj, iter) {\n    if (typeof obj === 'object')\n        Object.keys(obj).forEach(function (k) { return iter(k, obj[k]); });\n}\nexports.kv = kv;\nfunction indexed(objects, key, delKey) {\n    if (delKey === void 0) { delKey = false; }\n    var obj = {};\n    objects.forEach(function (original) {\n        var copy = exports.shallowCopy(original);\n        if (delKey)\n            delete copy[key];\n        obj[original[key]] = copy;\n    });\n    return obj;\n}\nexports.indexed = indexed;\nfunction stringEndsWith(str, search) {\n    var dif = str.length - search.length;\n    return dif >= 0 && str.lastIndexOf(search) === dif;\n}\nexports.stringEndsWith = stringEndsWith;\nfunction stringStartsWith(str, search) {\n    return str.length - search.length >= 0 && str.substring(0, search.length) === search;\n}\nexports.stringStartsWith = stringStartsWith;\nfunction lazypropkeyfilter(k) {\n    return k[k.length - 1] == \"_\"; // ends with underscore\n}\nexports.lazypropkeyfilter = lazypropkeyfilter;\nfunction lazyprop(obj, key, func) {\n    var result, ready = false;\n    obj[key] = function () {\n        if (!ready) {\n            ready = true;\n            result = func.apply(obj);\n        }\n        return result;\n    };\n}\nfunction lazyprops(obj, keyfilter) {\n    if (keyfilter === void 0) { keyfilter = lazypropkeyfilter; }\n    for (var k in obj) {\n        if (keyfilter(k)) {\n            exports.ifInstanceOf(obj[k], Function, function (vf) { return (vf.length === 0) ? lazyprop(obj, k, vf) : null; });\n        }\n    }\n}\nexports.lazyprops = lazyprops;\nfunction iff(v, f) {\n    if (v !== undefined)\n        f(v);\n}\nexports.iff = iff;\nfunction isRAMLUrl(str) {\n    if (typeof str !== 'string' || str == '')\n        return false;\n    return stringEndsWith(str, \".raml\");\n}\nexports.isRAMLUrl = isRAMLUrl;\nfunction getAllRequiredExternalModulesFromCode(code) {\n    var match;\n    var mods = [];\n    // both quoting styles\n    var r1 = new RegExp(\"require\\\\('([^']+)'\\\\)\", \"gi\");\n    while (match = r1.exec(code)) {\n        mods.push(match[1]);\n    }\n    var r2 = new RegExp('require\\\\(\"([^\"]+)\"\\\\)', \"gi\");\n    while (match = r2.exec(code)) {\n        mods.push(match[1]);\n    }\n    mods = _.unique(mods).filter(function (x) { return x != \"\"; });\n    mods.sort();\n    return mods;\n}\nexports.getAllRequiredExternalModulesFromCode = getAllRequiredExternalModulesFromCode;\nexports.serial = (function () { var i = 0; return function () { return i++; }; })();\nfunction isEssential(arg) {\n    return typeof arg !== 'undefined' && arg != null;\n}\nexports.isEssential = isEssential;\nfunction firstToUpper(q) {\n    if (q.length == 0) {\n        return q;\n    }\n    return q.charAt(0).toUpperCase() + q.substr(1);\n}\nexports.firstToUpper = firstToUpper;\nfunction updateObject(source, target, addNewFields) {\n    if (addNewFields === void 0) { addNewFields = false; }\n    var keySet = Object.keys(target);\n    if (addNewFields) {\n        var map = {};\n        keySet.forEach(function (x) { return map[x] = true; });\n        Object.keys(source).forEach(function (x) { return map[x] = true; });\n        keySet = Object.keys(map);\n    }\n    keySet.forEach(function (x) {\n        var value = source[x];\n        if (value instanceof Object) {\n            if (!target[x]) {\n                target[x] = {};\n            }\n            updateObject(value, target[x], true);\n        }\n        else if (value != undefined) {\n            target[x] = source[x];\n        }\n    });\n}\nexports.updateObject = updateObject;\n;\n/**\n * In 'str' replace all occurences of 'map' keys to their values.\n */\nfunction replaceMap(str, map) {\n    Object.keys(map).forEach(function (x) { return str = replace(str, x, map[x]); });\n    return str;\n}\nexports.replaceMap = replaceMap;\n/**\n * Replace all occurences of 'x' in 'str' to 'r' without thinking if 'x' can be passed without\n * escaping as argument to RegExp constructor\n */\nfunction replace(str, x, r) {\n    var result = '';\n    var prev = 0;\n    for (var i = str.indexOf(x); i < str.length && i >= 0; i = str.indexOf(x, prev)) {\n        result += str.substring(prev, i);\n        result += r;\n        prev = i + x.length;\n    }\n    result += str.substring(prev, str.length);\n    return result;\n}\nexports.replace = replace;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/index.js\n ** module id = 50\n ** module chunks = 0\n **/","module.exports = [\n\t{\n\t\t\"id\": 31423945,\n\t\t\"name\": \"AmazonS3\",\n\t\t\"full_name\": \"raml-apis/AmazonS3\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/AmazonS3\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:35Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:35Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:01Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/AmazonS3.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/AmazonS3.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/AmazonS3.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\"homepage\": null,\n\t\t\"size\": 264,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423955,\n\t\t\"name\": \"Box\",\n\t\t\"full_name\": \"raml-apis/Box\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Box\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Box\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Box/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Box/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Box/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Box/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Box/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Box/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Box/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Box/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Box/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Box/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Box/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Box/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Box/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Box/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Box/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Box/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Box/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Box/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Box/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Box/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Box/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Box/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Box/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Box/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Box/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Box/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Box/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Box/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Box/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Box/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Box/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Box/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Box/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Box/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Box/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:41Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:41Z\",\n\t\t\"pushed_at\": \"2015-07-28T23:37:53Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Box.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Box.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Box.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Box\",\n\t\t\"homepage\": null,\n\t\t\"size\": 224,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423957,\n\t\t\"name\": \"Bufferapp\",\n\t\t\"full_name\": \"raml-apis/Bufferapp\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bufferapp\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:42Z\",\n\t\t\"updated_at\": \"2015-02-27T15:08:44Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:27Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Bufferapp.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Bufferapp.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Bufferapp.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\"homepage\": null,\n\t\t\"size\": 172,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423973,\n\t\t\"name\": \"FuelEconomy\",\n\t\t\"full_name\": \"raml-apis/FuelEconomy\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/FuelEconomy\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:49Z\",\n\t\t\"pushed_at\": \"2015-04-04T00:32:59Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/FuelEconomy.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/FuelEconomy.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/FuelEconomy.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\"homepage\": null,\n\t\t\"size\": 172,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423980,\n\t\t\"name\": \"GoogleContacts\",\n\t\t\"full_name\": \"raml-apis/GoogleContacts\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleContacts\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:52Z\",\n\t\t\"updated_at\": \"2015-10-31T15:35:32Z\",\n\t\t\"pushed_at\": \"2015-05-21T12:01:57Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleContacts.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleContacts.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleContacts.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\"homepage\": null,\n\t\t\"size\": 260,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423986,\n\t\t\"name\": \"Instagram\",\n\t\t\"full_name\": \"raml-apis/Instagram\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Instagram\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Instagram/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Instagram/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Instagram/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Instagram/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Instagram/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Instagram/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Instagram/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Instagram/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Instagram/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Instagram/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Instagram/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Instagram/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Instagram/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Instagram/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Instagram/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Instagram/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Instagram/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Instagram/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Instagram/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Instagram/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Instagram/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Instagram/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Instagram/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:56Z\",\n\t\t\"updated_at\": \"2015-09-08T12:55:09Z\",\n\t\t\"pushed_at\": \"2015-10-14T07:16:39Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Instagram.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Instagram.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Instagram.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\"homepage\": null,\n\t\t\"size\": 187,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423979,\n\t\t\"name\": \"GoogleCalendar\",\n\t\t\"full_name\": \"raml-apis/GoogleCalendar\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:51Z\",\n\t\t\"updated_at\": \"2015-02-27T15:09:48Z\",\n\t\t\"pushed_at\": \"2015-05-21T02:57:16Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleCalendar.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\"homepage\": null,\n\t\t\"size\": 252,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423964,\n\t\t\"name\": \"Facebook\",\n\t\t\"full_name\": \"raml-apis/Facebook\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Facebook\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Facebook/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Facebook/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Facebook/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Facebook/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Facebook/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Facebook/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Facebook/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Facebook/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Facebook/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Facebook/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Facebook/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Facebook/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Facebook/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Facebook/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Facebook/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Facebook/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Facebook/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Facebook/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Facebook/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Facebook/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Facebook/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Facebook/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Facebook/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:45Z\",\n\t\t\"updated_at\": \"2015-10-21T23:11:31Z\",\n\t\t\"pushed_at\": \"2015-07-06T13:46:05Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Facebook.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Facebook.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Facebook.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\"homepage\": null,\n\t\t\"size\": 272,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424019,\n\t\t\"name\": \"Stormpath\",\n\t\t\"full_name\": \"raml-apis/Stormpath\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stormpath\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stormpath/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stormpath/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stormpath/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stormpath/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stormpath/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stormpath/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stormpath/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stormpath/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stormpath/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stormpath/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stormpath/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stormpath/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stormpath/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stormpath/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stormpath/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stormpath/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:33Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Stormpath.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Stormpath.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Stormpath.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\"homepage\": null,\n\t\t\"size\": 188,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424034,\n\t\t\"name\": \"XKCD\",\n\t\t\"full_name\": \"raml-apis/XKCD\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/XKCD\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/XKCD/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/XKCD/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/XKCD/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/XKCD/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/XKCD/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/XKCD/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/XKCD/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/XKCD/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/XKCD/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/XKCD/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/XKCD/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/XKCD/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/XKCD/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/XKCD/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/XKCD/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/XKCD/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/XKCD/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/XKCD/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/XKCD/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/XKCD/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/XKCD/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/XKCD/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/XKCD/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:21Z\",\n\t\t\"updated_at\": \"2015-03-09T16:53:13Z\",\n\t\t\"pushed_at\": \"2015-08-07T05:17:33Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/XKCD.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/XKCD.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/XKCD.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\"homepage\": null,\n\t\t\"size\": 148,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424012,\n\t\t\"name\": \"SlideShare\",\n\t\t\"full_name\": \"raml-apis/SlideShare\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/SlideShare\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SlideShare/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SlideShare/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SlideShare/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SlideShare/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SlideShare/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SlideShare/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SlideShare/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SlideShare/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SlideShare/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SlideShare/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SlideShare/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SlideShare/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SlideShare/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SlideShare/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SlideShare/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SlideShare/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:11Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:11Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:13Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/SlideShare.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/SlideShare.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/SlideShare.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424024,\n\t\t\"name\": \"Twilio\",\n\t\t\"full_name\": \"raml-apis/Twilio\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twilio\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twilio/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twilio/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twilio/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twilio/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twilio/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twilio/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twilio/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twilio/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twilio/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twilio/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twilio/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twilio/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twilio/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twilio/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twilio/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twilio/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twilio/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twilio/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twilio/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twilio/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twilio/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twilio/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twilio/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:16Z\",\n\t\t\"updated_at\": \"2015-03-09T16:42:14Z\",\n\t\t\"pushed_at\": \"2015-08-21T10:07:35Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Twilio.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Twilio.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Twilio.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\"homepage\": null,\n\t\t\"size\": 340,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424029,\n\t\t\"name\": \"WeatherUnderground\",\n\t\t\"full_name\": \"raml-apis/WeatherUnderground\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:19Z\",\n\t\t\"updated_at\": \"2015-10-31T15:36:51Z\",\n\t\t\"pushed_at\": \"2015-07-30T15:19:32Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/WeatherUnderground.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\"homepage\": null,\n\t\t\"size\": 248,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424039,\n\t\t\"name\": \"Zuora\",\n\t\t\"full_name\": \"raml-apis/Zuora\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zuora\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zuora/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zuora/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zuora/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zuora/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zuora/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zuora/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zuora/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zuora/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zuora/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zuora/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zuora/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zuora/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zuora/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zuora/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zuora/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zuora/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zuora/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zuora/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zuora/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zuora/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zuora/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zuora/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zuora/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\"updated_at\": \"2015-03-09T16:43:10Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:15:34Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Zuora.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Zuora.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Zuora.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\"homepage\": null,\n\t\t\"size\": 184,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423938,\n\t\t\"name\": \"AccuWeather\",\n\t\t\"full_name\": \"raml-apis/AccuWeather\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/AccuWeather\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:24Z\",\n\t\t\"updated_at\": \"2015-03-09T16:51:18Z\",\n\t\t\"pushed_at\": \"2015-11-06T07:20:20Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/AccuWeather.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/AccuWeather.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/AccuWeather.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\"homepage\": null,\n\t\t\"size\": 278,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424026,\n\t\t\"name\": \"Twitch\",\n\t\t\"full_name\": \"raml-apis/Twitch\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitch\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitch/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitch/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitch/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitch/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitch/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitch/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitch/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitch/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitch/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitch/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitch/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitch/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitch/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitch/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitch/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitch/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitch/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitch/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitch/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitch/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitch/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitch/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitch/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:17Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:17Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:49Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Twitch.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitch.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Twitch.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423975,\n\t\t\"name\": \"Geonames\",\n\t\t\"full_name\": \"raml-apis/Geonames\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Geonames\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Geonames/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Geonames/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Geonames/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Geonames/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Geonames/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Geonames/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Geonames/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Geonames/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Geonames/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Geonames/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Geonames/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Geonames/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Geonames/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Geonames/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Geonames/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Geonames/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Geonames/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Geonames/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Geonames/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Geonames/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Geonames/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Geonames/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Geonames/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\"updated_at\": \"2015-03-16T03:36:21Z\",\n\t\t\"pushed_at\": \"2015-07-24T13:32:52Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Geonames.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Geonames.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Geonames.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\"homepage\": null,\n\t\t\"size\": 248,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 1,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 1,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 34848402,\n\t\t\"name\": \"Uber\",\n\t\t\"full_name\": \"raml-apis/Uber\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\"description\": \"\",\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Uber\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Uber/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Uber/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Uber/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Uber/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Uber/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Uber/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Uber/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Uber/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Uber/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Uber/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Uber/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Uber/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Uber/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Uber/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Uber/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Uber/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Uber/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Uber/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Uber/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Uber/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Uber/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Uber/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Uber/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Uber/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Uber/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Uber/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Uber/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Uber/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Uber/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Uber/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Uber/releases{/id}\",\n\t\t\"created_at\": \"2015-04-30T10:18:59Z\",\n\t\t\"updated_at\": \"2015-04-30T10:18:59Z\",\n\t\t\"pushed_at\": \"2015-10-15T05:35:23Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Uber.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Uber.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Uber.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\"homepage\": null,\n\t\t\"size\": 193,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": true,\n\t\t\"has_wiki\": true,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 3,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 3,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"staging\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423987,\n\t\t\"name\": \"Jira\",\n\t\t\"full_name\": \"raml-apis/Jira\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Jira\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Jira/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Jira/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Jira/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Jira/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Jira/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Jira/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Jira/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Jira/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Jira/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Jira/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Jira/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Jira/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Jira/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Jira/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Jira/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Jira/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Jira/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Jira/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Jira/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Jira/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Jira/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Jira/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Jira/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Jira/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Jira/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Jira/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Jira/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Jira/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Jira/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Jira/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Jira/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:57Z\",\n\t\t\"updated_at\": \"2015-09-30T16:37:10Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:12:56Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Jira.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Jira.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Jira.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\"homepage\": null,\n\t\t\"size\": 240,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424011,\n\t\t\"name\": \"Slack\",\n\t\t\"full_name\": \"raml-apis/Slack\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Slack\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Slack/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Slack/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Slack/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Slack/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Slack/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Slack/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Slack/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Slack/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Slack/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Slack/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Slack/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Slack/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Slack/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Slack/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Slack/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Slack/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Slack/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Slack/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Slack/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Slack/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Slack/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Slack/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Slack/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Slack/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Slack/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Slack/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Slack/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Slack/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Slack/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Slack/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Slack/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:10Z\",\n\t\t\"updated_at\": \"2015-02-27T15:12:05Z\",\n\t\t\"pushed_at\": \"2015-10-14T05:29:57Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Slack.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Slack.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Slack.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\"homepage\": null,\n\t\t\"size\": 237,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423977,\n\t\t\"name\": \"GitHub\",\n\t\t\"full_name\": \"raml-apis/GitHub\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GitHub\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GitHub/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GitHub/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GitHub/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GitHub/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GitHub/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GitHub/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GitHub/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GitHub/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GitHub/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GitHub/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GitHub/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GitHub/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GitHub/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GitHub/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GitHub/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GitHub/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GitHub/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GitHub/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GitHub/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GitHub/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GitHub/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GitHub/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GitHub/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:50Z\",\n\t\t\"updated_at\": \"2015-11-04T16:18:02Z\",\n\t\t\"pushed_at\": \"2015-10-16T09:54:09Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GitHub.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GitHub.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GitHub.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\"homepage\": null,\n\t\t\"size\": 366,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 2,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 2,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423990,\n\t\t\"name\": \"LinkedIn\",\n\t\t\"full_name\": \"raml-apis/LinkedIn\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/LinkedIn\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:59Z\",\n\t\t\"updated_at\": \"2015-02-27T15:11:03Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:13:06Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/LinkedIn.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/LinkedIn.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/LinkedIn.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\"homepage\": null,\n\t\t\"size\": 184,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424036,\n\t\t\"name\": \"Yammer\",\n\t\t\"full_name\": \"raml-apis/Yammer\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Yammer\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Yammer/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Yammer/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Yammer/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Yammer/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Yammer/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Yammer/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Yammer/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Yammer/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Yammer/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Yammer/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Yammer/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Yammer/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Yammer/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Yammer/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Yammer/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Yammer/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Yammer/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Yammer/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Yammer/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Yammer/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Yammer/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Yammer/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Yammer/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:22Z\",\n\t\t\"updated_at\": \"2015-03-09T16:52:23Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:15:18Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Yammer.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Yammer.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Yammer.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\"homepage\": null,\n\t\t\"size\": 168,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423985,\n\t\t\"name\": \"HealthCare\",\n\t\t\"full_name\": \"raml-apis/HealthCare\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/HealthCare\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/HealthCare/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/HealthCare/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/HealthCare/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/HealthCare/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/HealthCare/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/HealthCare/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/HealthCare/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/HealthCare/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/HealthCare/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/HealthCare/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/HealthCare/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/HealthCare/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/HealthCare/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/HealthCare/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/HealthCare/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/HealthCare/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:55Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:55Z\",\n\t\t\"pushed_at\": \"2015-07-30T16:44:45Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/HealthCare.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/HealthCare.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/HealthCare.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\"homepage\": null,\n\t\t\"size\": 200,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423954,\n\t\t\"name\": \"Blogger\",\n\t\t\"full_name\": \"raml-apis/Blogger\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Blogger\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Blogger/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Blogger/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Blogger/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Blogger/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Blogger/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Blogger/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Blogger/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Blogger/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Blogger/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Blogger/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Blogger/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Blogger/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Blogger/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Blogger/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Blogger/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Blogger/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Blogger/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Blogger/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Blogger/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Blogger/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Blogger/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Blogger/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Blogger/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:40Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:40Z\",\n\t\t\"pushed_at\": \"2015-05-28T11:21:49Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Blogger.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Blogger.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Blogger.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\"homepage\": null,\n\t\t\"size\": 200,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 41861038,\n\t\t\"name\": \"SalesforceChatter\",\n\t\t\"full_name\": \"raml-apis/SalesforceChatter\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\"description\": \"\",\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/releases{/id}\",\n\t\t\"created_at\": \"2015-09-03T13:24:46Z\",\n\t\t\"updated_at\": \"2015-09-03T13:36:51Z\",\n\t\t\"pushed_at\": \"2015-10-22T12:08:05Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/SalesforceChatter.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\"homepage\": null,\n\t\t\"size\": 412,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"RAML\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": true,\n\t\t\"has_wiki\": true,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"production\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423959,\n\t\t\"name\": \"Elasticsearch\",\n\t\t\"full_name\": \"raml-apis/Elasticsearch\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Elasticsearch\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:43Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:43Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:32Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Elasticsearch.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Elasticsearch.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Elasticsearch.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\"homepage\": null,\n\t\t\"size\": 228,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423981,\n\t\t\"name\": \"GoogleDrive\",\n\t\t\"full_name\": \"raml-apis/GoogleDrive\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleDrive\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:53Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:53Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:30:50Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleDrive.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleDrive.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleDrive.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\"homepage\": null,\n\t\t\"size\": 268,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424001,\n\t\t\"name\": \"PagerDuty\",\n\t\t\"full_name\": \"raml-apis/PagerDuty\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/PagerDuty\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:04Z\",\n\t\t\"updated_at\": \"2015-03-09T16:43:49Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:37:18Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/PagerDuty.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/PagerDuty.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/PagerDuty.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\"homepage\": null,\n\t\t\"size\": 232,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424037,\n\t\t\"name\": \"Zendesk\",\n\t\t\"full_name\": \"raml-apis/Zendesk\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zendesk\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zendesk/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zendesk/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zendesk/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zendesk/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zendesk/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zendesk/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zendesk/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zendesk/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zendesk/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zendesk/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zendesk/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zendesk/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zendesk/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zendesk/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zendesk/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zendesk/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:23Z\",\n\t\t\"updated_at\": \"2015-03-09T16:51:58Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:15:23Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Zendesk.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Zendesk.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Zendesk.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\"homepage\": null,\n\t\t\"size\": 320,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423982,\n\t\t\"name\": \"GoogleMail\",\n\t\t\"full_name\": \"raml-apis/GoogleMail\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleMail\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:54Z\",\n\t\t\"updated_at\": \"2015-02-27T15:10:17Z\",\n\t\t\"pushed_at\": \"2015-10-15T11:27:34Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleMail.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleMail.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleMail.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\"homepage\": null,\n\t\t\"size\": 208,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423998,\n\t\t\"name\": \"NewRelic\",\n\t\t\"full_name\": \"raml-apis/NewRelic\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/NewRelic\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/NewRelic/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/NewRelic/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/NewRelic/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/NewRelic/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/NewRelic/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/NewRelic/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/NewRelic/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/NewRelic/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/NewRelic/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/NewRelic/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/NewRelic/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/NewRelic/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/NewRelic/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/NewRelic/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/NewRelic/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/NewRelic/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:02Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:02Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:13:24Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/NewRelic.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/NewRelic.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/NewRelic.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\"homepage\": null,\n\t\t\"size\": 248,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424027,\n\t\t\"name\": \"Twitter\",\n\t\t\"full_name\": \"raml-apis/Twitter\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitter\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitter/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitter/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitter/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitter/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitter/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitter/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitter/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitter/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitter/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitter/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitter/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitter/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitter/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitter/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitter/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitter/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitter/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitter/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitter/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitter/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitter/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitter/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitter/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:18Z\",\n\t\t\"updated_at\": \"2015-04-28T22:37:52Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:26:44Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Twitter.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitter.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Twitter.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\"homepage\": null,\n\t\t\"size\": 256,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424038,\n\t\t\"name\": \"Zillow\",\n\t\t\"full_name\": \"raml-apis/Zillow\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zillow\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zillow/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zillow/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zillow/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zillow/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zillow/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zillow/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zillow/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zillow/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zillow/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zillow/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zillow/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zillow/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zillow/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zillow/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zillow/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zillow/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zillow/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zillow/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zillow/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zillow/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zillow/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zillow/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zillow/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\"updated_at\": \"2015-03-09T16:51:44Z\",\n\t\t\"pushed_at\": \"2015-07-24T13:33:15Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Zillow.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Zillow.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Zillow.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\"homepage\": null,\n\t\t\"size\": 232,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 34780551,\n\t\t\"name\": \"FlightStats\",\n\t\t\"full_name\": \"raml-apis/FlightStats\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\"description\": \"\",\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/FlightStats\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FlightStats/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FlightStats/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FlightStats/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FlightStats/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FlightStats/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FlightStats/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FlightStats/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FlightStats/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FlightStats/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FlightStats/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FlightStats/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FlightStats/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FlightStats/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FlightStats/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FlightStats/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FlightStats/releases{/id}\",\n\t\t\"created_at\": \"2015-04-29T08:03:54Z\",\n\t\t\"updated_at\": \"2015-04-29T08:03:54Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:10:56Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/FlightStats.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/FlightStats.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/FlightStats.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\"homepage\": null,\n\t\t\"size\": 460,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": true,\n\t\t\"has_wiki\": true,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"staging\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424005,\n\t\t\"name\": \"PivotalTracker\",\n\t\t\"full_name\": \"raml-apis/PivotalTracker\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/PivotalTracker\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:07Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:07Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:50:22Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/PivotalTracker.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/PivotalTracker.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/PivotalTracker.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\"homepage\": null,\n\t\t\"size\": 196,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424014,\n\t\t\"name\": \"SmartSheet\",\n\t\t\"full_name\": \"raml-apis/SmartSheet\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/SmartSheet\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:12Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:12Z\",\n\t\t\"pushed_at\": \"2015-05-22T15:01:12Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/SmartSheet.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/SmartSheet.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/SmartSheet.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\"homepage\": null,\n\t\t\"size\": 224,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424018,\n\t\t\"name\": \"StackExchange\",\n\t\t\"full_name\": \"raml-apis/StackExchange\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/StackExchange\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/StackExchange/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/StackExchange/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/StackExchange/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/StackExchange/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/StackExchange/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/StackExchange/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/StackExchange/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/StackExchange/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/StackExchange/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/StackExchange/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/StackExchange/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/StackExchange/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/StackExchange/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/StackExchange/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/StackExchange/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/StackExchange/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:28Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/StackExchange.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/StackExchange.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/StackExchange.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424002,\n\t\t\"name\": \"Parse\",\n\t\t\"full_name\": \"raml-apis/Parse\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Parse\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Parse/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Parse/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Parse/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Parse/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Parse/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Parse/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Parse/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Parse/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Parse/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Parse/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Parse/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Parse/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Parse/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Parse/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Parse/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Parse/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Parse/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Parse/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Parse/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Parse/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Parse/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Parse/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Parse/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Parse/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Parse/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Parse/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Parse/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Parse/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Parse/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Parse/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Parse/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:05Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:05Z\",\n\t\t\"pushed_at\": \"2015-07-28T19:32:46Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Parse.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Parse.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Parse.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\"homepage\": null,\n\t\t\"size\": 224,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423952,\n\t\t\"name\": \"Bitly\",\n\t\t\"full_name\": \"raml-apis/Bitly\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bitly\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bitly/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bitly/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bitly/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bitly/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bitly/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bitly/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bitly/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bitly/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bitly/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bitly/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bitly/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bitly/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bitly/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bitly/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bitly/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bitly/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bitly/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bitly/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bitly/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bitly/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bitly/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bitly/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bitly/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\"updated_at\": \"2015-02-27T15:08:16Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:12Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Bitly.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Bitly.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Bitly.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\"homepage\": null,\n\t\t\"size\": 204,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424021,\n\t\t\"name\": \"Stripe\",\n\t\t\"full_name\": \"raml-apis/Stripe\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stripe\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stripe/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stripe/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stripe/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stripe/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stripe/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stripe/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stripe/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stripe/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stripe/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stripe/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stripe/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stripe/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stripe/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stripe/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stripe/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stripe/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stripe/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stripe/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stripe/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stripe/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stripe/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stripe/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stripe/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:15Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:15Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:38Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Stripe.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Stripe.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Stripe.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\"homepage\": null,\n\t\t\"size\": 380,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423951,\n\t\t\"name\": \"AzureTableStorage\",\n\t\t\"full_name\": \"raml-apis/AzureTableStorage\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:39Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:07Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/AzureTableStorage.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\"homepage\": null,\n\t\t\"size\": 152,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424016,\n\t\t\"name\": \"Squareup\",\n\t\t\"full_name\": \"raml-apis/Squareup\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Squareup\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Squareup/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Squareup/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Squareup/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Squareup/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Squareup/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Squareup/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Squareup/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Squareup/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Squareup/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Squareup/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Squareup/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Squareup/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Squareup/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Squareup/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Squareup/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Squareup/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Squareup/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Squareup/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Squareup/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Squareup/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Squareup/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Squareup/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Squareup/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:13Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:13Z\",\n\t\t\"pushed_at\": \"2015-03-16T16:14:08Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Squareup.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Squareup.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Squareup.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\"homepage\": null,\n\t\t\"size\": 176,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424009,\n\t\t\"name\": \"Salesforce\",\n\t\t\"full_name\": \"raml-apis/Salesforce\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Salesforce\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Salesforce/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Salesforce/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Salesforce/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Salesforce/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Salesforce/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Salesforce/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Salesforce/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Salesforce/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Salesforce/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Salesforce/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Salesforce/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Salesforce/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Salesforce/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Salesforce/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Salesforce/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Salesforce/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:09Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:09Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:02Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Salesforce.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Salesforce.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Salesforce.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t}\n];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/config/apiList.json\n ** module id = 51\n ** module chunks = 0\n **/","var rp = require(\"raml-1-parser\");\nvar def = rp.ds;\nvar UI = require(\"atom-ui-lib\");\nvar schemautil = rp.schema;\nvar editorTools = require(\"./editor-tools\");\nvar details2 = require(\"./details2\");\nvar HTTPANDHTTPS = \"HTTP, HTTPS\";\nvar HTTPHTTPS = \"HTTP/HTTPS\";\nexports.nodes = {\n    Api: {\n        properties: [\"title\", \"version\", \"baseUri\", \"mediaType\", \"protocols\"],\n        actions: []\n    },\n    Resource: {\n        properties: [\"relativeUri\", \"displayName\", \"description\", \"is\", \"type\"]\n    },\n    Method: {\n        properties: [\"method\", \"displayName\", \"description\", \"is\", \"type\", \"protocols\", \"securedBy\"]\n    },\n    DataElement: {\n        properties: [\"name\", \"displayName\", \"description\", \"default\", \"required\"]\n    },\n    Response: {\n        properties: [\"code\", \"description\"]\n    }\n};\nexports.filterOut = {\n    properties: [\"location\", \"annotations\", \"repeat\", \"locationKind\", \"signature\"]\n};\n//export function property2(node: hl.IHighLevelNode, name: string, descriptionLabel?: UI.TextElement<any>, updateTextOnDone: boolean = false) {\n//    var pinfo = propertyInfo(node, name);\n//\n//    return property(name, pinfo.required, pinfo.type, pinfo.value, pinfo.values, node, descriptionLabel, updateTextOnDone);\n//}\nvar focusedPropertyName = null;\nvar focusedPosition = -1;\nvar toFocus = null;\nfunction updateDetailsPanel(node, panel, updateTextOnDone) {\n    if (updateTextOnDone === void 0) { updateTextOnDone = false; }\n    panel.clear();\n    var cfg = atom.config;\n    var l = atom.styles.emitter.handlersByEventName;\n    var sadd = [].concat(l['did-add-style-element']);\n    var sremove = [].concat(l['did-remove-style-element']);\n    var schange = [].concat(l['did-update-style-element']);\n    var cfgCh = [].concat(cfg.emitter.handlersByEventName['did-change']);\n    var grammars = atom.grammars.emitter.handlersByEventName;\n    var addGrammar = [].concat(grammars[\"did-add-grammar\"]);\n    var updateGrammar = [].concat(grammars[\"did-update-grammar\"]);\n    var emptyGrammarListeners = [].concat(atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"]);\n    try {\n        var empty = true;\n        var pcmp = function (a, b) {\n            var ap = a.getAdapter(def.RAMLPropertyService).priority(), bp = b.getAdapter(def.RAMLPropertyService).priority();\n            if (ap != bp)\n                return bp - ap;\n            else\n                return a.nameId().localeCompare(b.nameId());\n        };\n        if (false && exports.nodes[node.definition().nameId()] && !node.definition().getAdapter(def.RAMLService).isUserDefined()) {\n            var info = exports.nodes[node.definition().nameId()];\n            info.properties.forEach(function (pn) {\n                try {\n                    //panel.addChild(property2(node, pn, <UI.TextElement<any>> descLabel2, updateTextOnDone));\n                    empty = false;\n                }\n                catch (e) {\n                    console.log(\"Error while updating details panel for node \", node, \"(property \", pn, \"): \", e);\n                }\n            });\n        }\n        else {\n            var item = details2.buildItem(node, false);\n            item.addListener(function (x) {\n                editorTools.aquireManager().updateText(null);\n            });\n            var rend = item.render({});\n            //var oldDispose=rend.dispose;\n            if (exports.oldItem) {\n                exports.oldItem.detach();\n            }\n            exports.oldItem = item;\n            panel.addChild(rend);\n            empty = false;\n        }\n        if (toFocus) {\n            var field = toFocus.getActualField().ui();\n            field.focus();\n            field.getModel().setCursorBufferPosition(focusedPosition);\n            toFocus = null;\n            focusedPosition = null;\n            focusedPropertyName = null;\n        }\n        if (empty) {\n            var errLabel = UI.h3(\"Object `\" + node.name() + \"` has no additional properties.\");\n            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n            panel.addChild(errLabel);\n        }\n        ;\n    }\n    finally {\n        cfg.emitter.handlersByEventName['did-change'] = cfgCh;\n        l['did-add-style-element'] = sadd;\n        l['did-remove-style-element'] = sremove;\n        l['did-update-style-element'] = schange;\n        grammars[\"did-add-grammar\"] = addGrammar;\n        grammars[\"did-update-grammar\"] = updateGrammar;\n        atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"] = emptyGrammarListeners;\n    }\n}\nexports.updateDetailsPanel = updateDetailsPanel;\n//export function property(name: string, required: boolean, type: string, value: string, values: any[], node: hl.IHighLevelNode, descriptionLabel: UI.TextElement<any>, updateText: boolean = false) {\n//    var bonclick = (e)=>{};\n//    var attr = node.attr(name);\n//    var useModalEditor = false;\n//\n//    var tfValue = new UI.BasicBinding(dialogs.getStringValue(value));\n//    var updateViewModel = function(value) {\n//        if (updateText) editorTools.aquireManager().updateText(node.lowLevel());\n//\n//        fire = false;\n//        if (type==\"protocols\"){\n//            if (value==HTTPANDHTTPS){\n//                value=HTTPHTTPS\n//            }\n//        }\n//        tfValue.set(value);\n//        fire = true;\n//    }\n//    var disabledMessage: string = null;\n//    var res;\n//    switch (type) {\n//        case 'markdown':\n//            bonclick = dialogs.markdown(name, values, (newValue) => {\n//                node.attrOrCreate(name).setValue(value = newValue);\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'schema':\n//            bonclick = dialogs.schemaEditDialog(name, values.length > 0 ? values[0] : value, (newValue) => {\n//                node.attrOrCreate(name).setValue(newValue);\n//                if (updateText) editorTools.aquireManager().updateText();\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'schexample':\n//            bonclick = dialogs.exampleEditorDialog(name, values[1], values[0], (newValue) => {\n//                var value = newValue;\n//                if (fs.exists(newValue))\n//                    value = \"!include \" + path.relative(node.lowLevel().unit().path(), newValue);\n//                node.attrOrCreate(name).setValue(value);\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'enum':\n//            bonclick = dialogs.enumEditDialog(name, values, (values)=>{\n//                node.attributes(name).forEach(attr => attr.remove());\n//                values.forEach(val => node.attrOrCreate(name).addValue(val));\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'protocols':\n//            break;\n//        case 'type':\n//            bonclick = dialogs.typeEditDialog(name, value, node, (newValue) => {\n//                node.attrOrCreate(name).setValue(newValue);\n//                updateViewModel(stringView(node, name));\n//            });\n//            if (editorTools.aquireManager().ast.elementsOfKind('resourceTypes').length < 1) disabledMessage = \"No resource types defined\";\n//            else useModalEditor = true;\n//            break;\n//        case 'trait':\n//            bonclick = dialogs.traitsEditDialog(name, values, node, (newTraits) => {\n//                node.attributes(name).forEach(attr => attr.remove());\n//\n//                newTraits\n//                    .filter(trait => trait.enabled)\n//                    .filter(trait => typeof trait.value == \"string\") // FIXME should only be trait => trait.enabled\n//                    .forEach(trait => node.attrOrCreate(name).addValue(trait.value));\n//\n//                updateViewModel(stringView(node, name));\n//            });\n//\n//            useModalEditor = true;\n//            break;\n//        default:\n//    }\n//\n//    var fire = true;\n//    var updateValueDeferred = (newValue)=>{ uvdTimeout = 0; }\n//\n//    if (!useModalEditor && node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node).length > 0 || name == 'code') {\n//        var ores = new UI.SelectField(name + (required ? \"*\" : \"\"), (e, v) => {\n//            if (fire == false) return;\n//            if (v == \"(no value)\") v = \"\";\n//            if (type==\"protocols\"){\n//                node.attributes(name).forEach(attr => attr.remove());\n//                if( v==HTTPHTTPS){\n//                    [\"HTTP\",\"HTTPS\"].forEach(val => node.attrOrCreate(name).addValue(val));\n//                }\n//                else{\n//                    if (v) {\n//                        node.attrOrCreate(name).setValue(v);\n//                    }\n//                }\n//                updateViewModel(stringView(node, name));\n//                return;\n//            }\n//            updateValueDeferred(v);\n//        });\n//        var options = [];\n//        if (name == 'code')\n//            options = Object.keys(dialogs.getStatusCodeDescriptions());\n//        else {\n//            var enumValues = node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node);\n//            options = node.definition().property(name).getAdapter(services.RAMLPropertyService).isKey() ? enumValues : [\"(no value)\"].concat(enumValues);\n//\n//            if (type=='protocols'){\n//                if (tfValue.get()==HTTPANDHTTPS){\n//                    tfValue.set(HTTPHTTPS)\n//                }\n//                options =[\"(no value)\",\"HTTP\",\"HTTPS\",HTTPHTTPS]\n//            }\n//        }\n//\n//        ores.getActualField().setOptions(options);\n//        ores.setBinding(tfValue);\n//\n//        res = ores;\n//    } else {\n//        if (!res) {\n//            res = new UI.TextField(name + (required ? \"*\" : \"\"), tfValue, (e, v)=> {\n//                if (fire == false) return;\n//                if (useModalEditor && res && res.getActualField())\n//                    res.getActualField().setText(value, false); // do not re-call onChange\n//                else\n//                    updateValueDeferred(v);\n//            }, null, editorTools.aquireManager().placeholder ? name + \" has no value\" : '');\n//            if (name == focusedPropertyName) toFocus = res;\n//        }\n//    }\n//    var uvdTimeout = 12;\n//\n//    setInterval(()=>{\n//        if (uvdTimeout++ != 10) return;\n//        var newValue = res.getActualField().getValue();\n//        var attrEx = node.attr(name)\n//        var attr = node.attrOrCreate(name);\n//        attr.setValue(newValue);\n//        if (updateText) {\n//            if (res instanceof UI.TextField) {\n//                focusedPropertyName = name;\n//                focusedPosition = (<any> res.getActualField()).ui().getModel().getCursorBufferPosition();\n//            }\n//            editorTools.aquireManager().updateText(newValue == '' || attr == null ? node.lowLevel() : attr.lowLevel());\n//\n//        }\n//\n//    }, 50);\n//\n//    res.getActualField().addClass(\"ate\").addClass(type).setStyle(\"margin-bottom\", \"0px !important\");\n//    res.margin(0, 0, 0, 6);\n//    if (useModalEditor) {\n//        res.getActualField().ui().addEventListener('focus', (e) => {\n//            bonclick(e);\n//            res.getActualField().ui().blur();\n//        });\n//        res.addChild(UI.button(\"(edit)\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, null, bonclick).margin(4, 0, 0, 0));\n//    } else if (disabledMessage) {\n//        if (editorTools.aquireManager().placeholder) res.getActualField().setPlaceholder(disabledMessage);\n//        res.getActualField().ui().addEventListener('focus', (e) => res.getActualField().ui().blur());\n//    }\n//    if (descriptionLabel) {\n//        res.ui().addEventListener('mouseenter', () => {\n//            descriptionLabel.setStyle(\"opacity\", \"1\")\n//            descriptionLabel.setText(node.definition().property(name).description());\n//        });\n//        res.ui().addEventListener('mouseleave', () => {\n//            descriptionLabel.setStyle(\"opacity\", \"0\");\n//        });\n//    }\n//    return res;\n//}\nfunction getSchemaType(value) {\n    var schema = schemautil.createSchema(value, null);\n    if (!schema || !schema.getType)\n        return \"Invalid\";\n    switch (schema.getType()) {\n        case \"source.json\":\n            return \"JSON\";\n        case \"text.xml\":\n            return \"XML\";\n        default:\n            return \"Unknown type\";\n    }\n}\nfunction getStringValue(x) {\n    if (typeof x === \"object\")\n        return x.valueName();\n    else\n        return x;\n}\nexports.getStringValue = getStringValue;\nfunction propertyInfo(node, name) {\n    var prop = node.definition().property(name);\n    if (prop.isValueProperty() == false)\n        return null;\n    var isMulti = prop.isMultiValue();\n    var required = prop.isRequired();\n    var value;\n    var values = [];\n    var type;\n    var ipath;\n    var rangeName = prop.range().nameId();\n    if (isMulti) {\n        values = node.attributes(name).map(function (x) { return x.value(); });\n        value = values.map(function (x) { return getStringValue(x); }).join(\", \");\n        switch (rangeName) {\n            case \"StringType\":\n                type = 'enum';\n                if (!node.definition().getAdapter(def.RAMLService).isUserDefined() && name == \"protocols\") {\n                    type = \"protocols\";\n                }\n                break;\n            case \"TraitRef\":\n                type = 'trait';\n                break;\n            default:\n                type = 'unknown';\n        }\n    }\n    else {\n        var attr = node.attr(name);\n        value = attr && attr.value() ? attr.value() : \"\";\n        switch (rangeName) {\n            case \"MarkdownString\":\n                type = 'markdown';\n                values = value.split(\"\\n\");\n                value = values[0];\n                break;\n            case \"SchemaString\":\n                type = 'schema';\n                if (value.indexOf(\"\\n\") >= 0) {\n                    values = [value];\n                    value = \"(\" + getSchemaType(value) + \" Schema)\";\n                }\n                break;\n            case \"ExampleString\":\n                type = 'schexample';\n                try {\n                    ipath = attr.lowLevel().includePath();\n                }\n                catch (e) {\n                    ipath = \"\";\n                }\n                values = [value, ipath];\n                value = \"Example\" + (ipath != \"\" ? \" (referenced from \" + ipath + \")\" : \"\");\n                break;\n            case \"ResourceTypeRef\":\n                type = \"type\";\n                break;\n            default:\n                type = 'string';\n        }\n        if (type == \"string\") {\n            if (value.indexOf(\"\\n\") >= 0) {\n                values = value.split(\"\\n\");\n                value = \"(\" + values.length + \" lines) \" + values[0].substring(0, 20) + \" ...\";\n                type = \"multiline\";\n            }\n            if (attr)\n                ipath = attr.lowLevel().includePath();\n            if (ipath) {\n                value = \"(included from \" + ipath + \")\";\n                type = \"include\";\n            }\n        }\n    }\n    var ret = {\n        value: value,\n        values: values,\n        type: type,\n        include: ipath,\n        required: required,\n    };\n    return ret;\n}\nexports.propertyInfo = propertyInfo;\nfunction stringView(node, name) {\n    return getStringValue(propertyInfo(node, name).value);\n}\nexports.stringView = stringView;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/details.js\n ** module id = 52\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar UI = require(\"atom-ui-lib\");\nvar rp = require(\"raml-1-parser\");\nvar Opt = require(\"../../Opt\");\nvar schemautil = rp.schema;\nvar SchemaRenderer = (function () {\n    function SchemaRenderer() {\n    }\n    SchemaRenderer.prototype.render = function (elem) {\n        var icon;\n        var tc;\n        switch (elem.type) {\n            case 'object':\n                icon = UI.Icon.CIRCUIT_BOARD;\n                tc = UI.TextClasses.INFO;\n                break;\n            case 'array':\n                icon = UI.Icon.LIST_UNORDERED;\n                tc = UI.TextClasses.ERROR;\n                break;\n            case 'unspecified':\n                icon = UI.Icon.QUESTION;\n                tc = UI.TextClasses.WARNING;\n                break;\n            default:\n                icon = UI.Icon.CODE;\n                tc = UI.TextClasses.SUCCESS;\n        }\n        return UI.hc(UI.label(elem.name + \": \", icon), UI.label(elem.type, null, tc, null).pad(4, 0));\n    };\n    return SchemaRenderer;\n})();\nexports.SchemaRenderer = SchemaRenderer;\nfunction _schemaPreview() {\n    var hashkey = function (n) {\n        if (n == null)\n            return \"\";\n        return hashkey(n.parent) + \"::[\" + (n.name + \":\" + n.type + \"]\" + (n.children.length > 0 ? \"*\" : \"\"));\n    };\n    var treeViewer = UI.treeViewer(function (x) { return x.children; }, new SchemaRenderer(), function (x) { return x.name + \":\" + x.type; });\n    treeViewer.setComparator(function (x, y) { return x.name == y.name && x.type == y.type; });\n    return treeViewer;\n}\nexports._schemaPreview = _schemaPreview;\nfunction getSchemaTree(name, contents) {\n    if (contents.type instanceof Array)\n        if (contents.type.indexOf('object') >= 0)\n            contents.type = 'object';\n        else if (contents.type.indexOf('array') >= 0)\n            contents.type = 'array';\n    var typeString = contents.type ? (contents.type instanceof Array ? contents.type.join(\"|\") : contents.type).toLowerCase() : 'unspecified';\n    var children = [];\n    if (contents.properties)\n        children = Object.keys(contents.properties).map(function (el) { return getSchemaTree(el, contents.properties[el]); });\n    else if (contents.items)\n        children = contents.items instanceof Array ? contents.items.map(function (el) { return getSchemaTree(\"item\", el); }) : getSchemaTree(\"item\", contents.items);\n    if (children instanceof Array == false)\n        children = [children];\n    var result = {\n        type: typeString,\n        name: name,\n        parent: null,\n        children: children\n    };\n    result.children.forEach(function (x) { return x.parent = result; });\n    return result;\n}\nexports.getSchemaTree = getSchemaTree;\nfunction _updatePreview(treeView, value) {\n    try {\n        var schema = schemautil.createSchema(value, null);\n        if (schema == null || schema.getType == null) {\n            treeView.setInput({}, true);\n            return;\n        }\n        var schemaType = schema.getType();\n        var schemaModel = schemaType == \"source.json\" ? JSON.parse(value) : rootElements(value);\n        var schemaTree = schemaType == \"source.json\" ? getSchemaTree(\"schema\", schemaModel) : getXMLSchemaTree(schemaModel);\n        treeView.setInput(schemaTree, true);\n    }\n    catch (e) {\n        console.log(e);\n    }\n}\nexports._updatePreview = _updatePreview;\nvar jsonix = require('jsonix');\nfunction parseSchema(schema) {\n    var XSD_1_0 = require('w3c-schemas').XSD_1_0;\n    var context = new jsonix.Jsonix.Context([XSD_1_0]);\n    var unmarshaller = context.createUnmarshaller();\n    var schemaObject = unmarshaller.unmarshalString(schema);\n    return schemaObject;\n}\n;\nfunction rootElements(schema) {\n    var schemaObj = parseSchema(schema);\n    return getRootElements(schemaObj);\n}\nvar TypeDescription = (function () {\n    function TypeDescription(owner, _name, _isSimple, _object) {\n        var _this = this;\n        this.owner = owner;\n        this._name = _name;\n        this._isSimple = _isSimple;\n        this._object = _object;\n        this.name = function () { return _this._name; };\n        this.isSimple = function () { return _this._isSimple; };\n        this.object = function () { return _this._object; };\n    }\n    TypeDescription.prototype.isChoice = function () {\n        return this.object && (this.object['choice'] ||\n            (this.object['complexContent'] && this.object['complexContent']['choice']));\n    };\n    TypeDescription.prototype.elements = function () {\n        var _this = this;\n        var elementObjects = [];\n        if (this._object) {\n            elementObjects = this.collectElements(this._object);\n            if (elementObjects.length == 0) {\n                var complexContent = this.object['complexContent'];\n                if (complexContent) {\n                    elementObjects = this.collectElements(complexContent);\n                }\n            }\n        }\n        var result = elementObjects.map(function (x) { return new ElementDescription(_this.owner, x); });\n        return result;\n    };\n    TypeDescription.prototype.attributes = function () {\n        var _this = this;\n        var result = [];\n        var objects = [this._object];\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n            if (!obj) {\n                continue;\n            }\n            if (obj['attributeGroup']) {\n                var attributeGroups = obj['attributeGroup'].filter(function (x) { return x['otherAttributes']; });\n                for (var j = 0; j < attributeGroups.length; j++) {\n                    var groupRef = attributeGroups[j]['otherAttributes']['ref'];\n                    var groupDef = this.owner.attributeGroups[groupRef];\n                    objects.push(groupDef);\n                }\n            }\n            if (obj['attribute']) {\n                obj['attribute'].forEach(function (x) { return result.push(new AttributeDescription(_this.owner, x)); });\n            }\n        }\n        return result;\n    };\n    TypeDescription.prototype.base = function () {\n        if (!this._object) {\n            return Opt.empty();\n        }\n        var baseObj;\n        if (this._object['restriction']) {\n            var restriction = this._object['restriction'];\n            baseObj = restriction['base'];\n        }\n        else if (this._object['complexContent']) {\n            var complexContent = this.object['complexContent'];\n            var resExt = complexContent['restriction'] || complexContent['extension'];\n            if (resExt) {\n                baseObj = resExt['base'];\n            }\n        }\n        if (!baseObj) {\n            return Opt.empty();\n        }\n        var typeName = extractName(baseObj);\n        var isSimple = false;\n        var typeObject;\n        var sType = this.owner.simpleTypes[typeName];\n        if (sType) {\n            typeObject = sType;\n            isSimple = true;\n        }\n        var cType = this.owner.complexTypes[typeName];\n        if (cType) {\n            typeObject = cType;\n        }\n        if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n            if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n                isSimple = true;\n            }\n        }\n        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n        return new Opt(result);\n    };\n    TypeDescription.prototype.getBaseName = function () {\n        var typeOpt = new Opt(this);\n        var result = '';\n        while (typeOpt.isDefined()) {\n            var t = typeOpt.getOrThrow();\n            result = t.name();\n            typeOpt = t.base();\n        }\n        return result;\n    };\n    TypeDescription.prototype.collectElements = function (obj) {\n        var result = [];\n        var containers = [obj['sequence'], obj['any'], obj['choice']];\n        for (var i = 0; i < containers.length; i++) {\n            var x = containers[i];\n            if (!x) {\n                continue;\n            }\n            if (x['group']) {\n                var groups = x['group'].filter(function (gr) { return gr['otherAttributes']; });\n                for (var j = 0; j < groups.length; j++) {\n                    var groupRef = groups[j]['otherAttributes']['ref'];\n                    var groupDef = this.owner.elementGroups[groupRef];\n                    if (groupDef) {\n                        if (groupDef['sequence']) {\n                            containers = containers.concat(groupDef['sequence']);\n                        }\n                        if (groupDef['any']) {\n                            containers = containers.concat(groupDef['any']);\n                        }\n                        if (groupDef['choice']) {\n                            containers = containers.concat(groupDef['choice']);\n                        }\n                    }\n                }\n            }\n            if (x['element']) {\n                result = result.concat(x['element']);\n            }\n            result = result.concat(this.collectElements(x));\n        }\n        return result;\n    };\n    return TypeDescription;\n})();\nvar PropertyDescription = (function () {\n    function PropertyDescription(owner, _object) {\n        var _this = this;\n        this.owner = owner;\n        this._object = _object;\n        this.name = function () { return _this._object['name']; };\n    }\n    PropertyDescription.prototype.type = function () {\n        var typeName;\n        var typeObject;\n        var isSimple = false;\n        if (this._object['type']) {\n            var typeObj = this._object['type'];\n            typeName = extractName(typeObj);\n            var sType = this.owner.simpleTypes[typeName];\n            if (sType) {\n                typeObject = sType;\n                isSimple = true;\n            }\n            var cType = this.owner.complexTypes[typeName];\n            if (cType) {\n                typeObject = cType;\n            }\n            if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n                if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n                    isSimple = true;\n                }\n            }\n        }\n        else if (this._object['complexType']) {\n            typeObject = this._object['complexType'];\n        }\n        else if (this._object['simpleType']) {\n            typeObject = this._object['simpleType'];\n        }\n        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n        return new Opt(result);\n    };\n    PropertyDescription.prototype.optional = function () {\n        throw new Error(\"This method is abstract.\");\n    };\n    PropertyDescription.prototype.isArray = function () {\n        throw new Error(\"This method is abstract.\");\n    };\n    PropertyDescription.prototype.isAttribute = function () {\n        return false;\n    };\n    return PropertyDescription;\n})();\nexports.PropertyDescription = PropertyDescription;\nvar ElementDescription = (function (_super) {\n    __extends(ElementDescription, _super);\n    function ElementDescription(owner, object) {\n        _super.call(this, owner, object);\n    }\n    ElementDescription.prototype.isArray = function () {\n        var otherAttributes = this._object['otherAttributes'];\n        if (!otherAttributes) {\n            return false;\n        }\n        var maxOccurs = otherAttributes['maxOccurs'];\n        if (!maxOccurs) {\n            return false;\n        }\n        if (maxOccurs == 'unbounded') {\n            return true;\n        }\n        try {\n            var mo = parseInt(maxOccurs);\n            return mo > 1;\n        }\n        catch (e) { }\n        return false;\n    };\n    ElementDescription.prototype.optional = function () {\n        var otherAttributes = this._object['otherAttributes'];\n        if (!otherAttributes) {\n            return true;\n        }\n        var minOccurs = otherAttributes['minOccurs'];\n        if (!minOccurs) {\n            return true;\n        }\n        try {\n            var mo = parseInt(minOccurs);\n            return mo == 0;\n        }\n        catch (e) {\n        }\n        return true;\n    };\n    return ElementDescription;\n})(PropertyDescription);\nexports.ElementDescription = ElementDescription;\nfunction extractName(typeObj) {\n    var prefix = typeObj['prefix'];\n    var localPart = typeObj['localPart'];\n    var typeName = prefix + (prefix.length > 0 ? ':' : '') + localPart;\n    return typeName;\n}\n;\nvar AttributeDescription = (function (_super) {\n    __extends(AttributeDescription, _super);\n    function AttributeDescription(owner, object) {\n        _super.call(this, owner, object);\n    }\n    AttributeDescription.prototype.optional = function () {\n        var otherAttributes = this._object['otherAttributes'];\n        if (!otherAttributes) {\n            return false;\n        }\n        var use = otherAttributes['use'];\n        if (!use) {\n            return false;\n        }\n        return use != 'required';\n    };\n    AttributeDescription.prototype.isArray = function () {\n        return false;\n    };\n    AttributeDescription.prototype.isAttribute = function () {\n        return true;\n    };\n    return AttributeDescription;\n})(PropertyDescription);\nexports.AttributeDescription = AttributeDescription;\nfunction getRootElements(obj) {\n    var _this = this;\n    var objValue = obj['value'];\n    var result = [];\n    if (objValue) {\n        var groups = objValue['group'];\n        if (groups) {\n            groups.forEach(function (x) { return _this.elementGroups[x.name] = x; });\n        }\n        var attributeGroups = objValue['attributeGroup'];\n        if (attributeGroups) {\n            attributeGroups.forEach(function (x) { return _this.attributeGroups[x.name] = x; });\n        }\n        var simpleTypes = objValue['simpleType'];\n        if (simpleTypes) {\n            simpleTypes.forEach(function (x) { return _this.simpleTypes[x.name] = x; });\n        }\n        var complexTypes = objValue['complexType'];\n        if (complexTypes) {\n            complexTypes.forEach(function (x) { return _this.complexTypes[x.name] = x; });\n        }\n        var rootElements = objValue['element'];\n        if (rootElements) {\n            result = rootElements.map(function (x) { return new ElementDescription(_this, x); });\n        }\n    }\n    return result;\n}\nvar XSD_2_TS_TYPE_MAP = {\n    \"ENTITIES\": \"string\",\n    \"ENTITY\": \"string\",\n    \"ID\": \"string\",\n    \"IDREF\": \"string\",\n    \"IDREFS\": \"string\",\n    \"language\": \"string\",\n    \"Name\": \"string\",\n    \"NCName\": \"string\",\n    \"NMTOKEN\": \"string\",\n    \"NMTOKENS\": \"string\",\n    \"normalizedString\": \"string\",\n    \"QName\": \"string\",\n    \"string\": \"string\",\n    \"token\": \"string\",\n    \"date\": \"string\",\n    \"dateTime\": \"string\",\n    \"duration\": \"string\",\n    \"gDay\": \"string\",\n    \"gMonth\": \"string\",\n    \"gMonthDay\": \"string\",\n    \"gYear\": \"string\",\n    \"gYearMonth\": \"string\",\n    \"time\": \"string\",\n    \"anyURI\": \"string\",\n    \"base64Binary\": \"string\",\n    \"hexBinary\": \"string\",\n    \"NOTATION\": \"string\",\n    \"boolean\": \"boolean\",\n    \"double\": \"number\",\n    \"float\": \"number\",\n    \"byte\": \"number\",\n    \"decimal\": \"number\",\n    \"int\": \"number\",\n    \"integer\": \"number\",\n    \"long\": \"number\",\n    \"negativeInteger\": \"number\",\n    \"nonNegativeInteger\": \"number\",\n    \"nonPositiveInteger\": \"number\",\n    \"positiveInteger\": \"number\",\n    \"short\": \"number\",\n    \"unsignedLong\": \"number\",\n    \"unsignedInt\": \"number\",\n    \"unsignedShort\": \"number\",\n    \"unsignedByte\": \"number\"\n};\nfunction getTSType(xmltype) {\n    return XSD_2_TS_TYPE_MAP[xmltype];\n}\nexports.getTSType = getTSType;\nfunction getXMLSchemaTree(roots) {\n    var getSType = function (type) {\n        if (!type)\n            return 'Unknown';\n        type = type.substr(type.indexOf(':') + 1);\n        return getTSType(type);\n    };\n    return roots.map(function (root) {\n        var result;\n        var t = root.type().value();\n        if (root.isArray())\n            result = {\n                type: 'Array',\n                name: root.name(),\n                parent: null,\n                children: getXMLSchemaTree(t.elements())\n            };\n        else if (t.isSimple())\n            result = {\n                type: getSType(t.name()),\n                name: root.name(),\n                parent: null,\n                children: []\n            };\n        else\n            result = {\n                type: 'Object',\n                name: root.name(),\n                parent: null,\n                children: getXMLSchemaTree(t.elements())\n            };\n        result.children.forEach(function (x) { return x.parent = result; });\n        return result;\n    });\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/schemaUI.js\n ** module id = 53\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/main.d.ts\" />\nvar File = (function () {\n    function File(path) {\n        this.path = path;\n    }\n    File.prototype.getPath = function () {\n        return this.path;\n    };\n    File.prototype.close = function () { };\n    return File;\n})();\nexports.File = File;\nfunction watch(path, f) {\n    return { close: function () { } };\n}\nexports.watch = watch;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/pathwatcherProxy.js\n ** module id = 54\n ** module chunks = 0\n **/","var mime = require('mime');\nmime.define({\n    'text/xml': ['xml']\n});\nfunction getEditorById(editorId) {\n    var editors = atom.workspace.getTextEditors();\n    for (var i = 0; i < editors.length; i++) {\n        var editor = editors[i];\n        if (String(editor.id) === editorId) {\n            return editor;\n        }\n    }\n}\nexports.getEditorById = getEditorById;\nfunction getEditorByPath(path) {\n    var editors = atom.workspace.getTextEditors();\n    for (var i = 0; i < editors.length; i++) {\n        var editor = editors[i];\n        if (editor.getPath() === path) {\n            return editor;\n        }\n    }\n}\nexports.getEditorByPath = getEditorByPath;\nfunction getGrammerFromMime(mimeType) {\n    if (mimeType == null) {\n        return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n    }\n    var extension = mime.extension(mimeType);\n    var grammars = atom.grammars.getGrammars();\n    for (var i = 0; i < grammars.length; i++) {\n        var grammar = grammars[i];\n        if (grammar.fileTypes.indexOf(extension) > -1) {\n            return grammar;\n        }\n    }\n    return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n}\nexports.getGrammerFromMime = getGrammerFromMime;\n/**\n * Create an Atom text editor instance for syntax highlighting.\n *\n * Source: https://github.com/atom/markdown-preview/blob/6d672aca4cff48420977708c31290018622bb166/lib/renderer.coffee#L102-L126\n */\nfunction codeToEditorElement(code, grammar) {\n    var editorElement = document.createElement('atom-text-editor');\n    editorElement.setAttributeNode(document.createAttribute('gutter-hidden'));\n    editorElement.removeAttribute('tabindex'); // Make read-only.\n    var editor = editorElement.getModel();\n    editor.getDecorations({ class: 'cursor-line', type: 'line' })[0].destroy();\n    editor.setText(code);\n    editor.setGrammar(grammar);\n    return editorElement;\n}\nexports.codeToEditorElement = codeToEditorElement;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/util/atom.js\n ** module id = 55\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar marked = require('marked');\nvar React = require('react');\nvar extend = require('xtend');\nvar classnames = require('classnames');\nvar PureComponent = require('react-pure-render/component');\nvar pretty = require('pretty-data');\nvar rp = require(\"raml-1-parser\");\nvar highLevelAst = rp.hl;\nvar RamlWrapper1 = rp.api10;\nvar RamlWrapper08 = rp.api08;\nvar atomUtil = require('../util/atom');\nvar services = rp.ds;\nvar BULLET_TEXT = '\\u00b7';\nvar METHOD_CLASS_MAP = {\n    'get': 'btn-primary',\n    'get?': 'btn-primary',\n    'post': 'btn-success',\n    'post?': 'btn-success',\n    'delete': 'btn-error',\n    'delete?': 'btn-error',\n    'put': 'btn-warning',\n    'put?': 'btn-warning',\n    'patch': 'btn-info',\n    'patch?': 'btn-info'\n};\n//Methods moved to the parser as: 1) Custom type guards like isApi() for each node interface and 2) RAMLVersion() method for each node.\n//\n// /**\n//  * Returns whether the node is instance of interface by interface name.\n//  * DOES NOT CHECK SUPER INTERFACES!\n//  * @param node\n//  * @param interfaceShortName - interface name, does not include namespace.\n//  * @param ramlVersion - optionally also checks if node belongs to \"RAML10\" or \"RAML08\" RAML.\n//  * @returns {boolean}\n//  */\n// function nodeInstanceOf(node : core.BasicNode, interfaceShortName : string, ramlVersion? : string) : boolean {\n//   var nodeKind = node.kind();\n//\n//   if (nodeKind != interfaceShortName) return false;\n//\n//   if (ramlVersion) {\n//     if (ramlVersion != nodeRAMLVersion(node)) return false;\n//   }\n//\n//   return true;\n// }\n//\n// function nodeInstanceOf10(node : core.BasicNode, interfaceShortName : string) {\n//   return nodeInstanceOf(node, interfaceShortName, \"RAML10\");\n// }\n//\n// function nodeInstanceOf08(node : core.BasicNode, interfaceShortName : string) {\n//   return nodeInstanceOf(node, interfaceShortName, \"RAML08\");\n// }\n//\n// /**\n//  * Returns node version.\n//  * @param node\n//  * @returns {string} : \"RAML10\" for RAML 1.0 and \"RAML08\" for RAML 0.8\n//  */\n// function nodeRAMLVersion(node : core.BasicNode) : string {\n//   return node.highLevel().definition().universe().version();\n// }\n//\nfunction isRAML10(node) {\n    return node.RAMLVersion() == \"RAML10\";\n}\nfunction isRAML08(node) {\n    return node.RAMLVersion() == \"RAML08\";\n}\nvar Console = (function (_super) {\n    __extends(Console, _super);\n    function Console() {\n        _super.apply(this, arguments);\n    }\n    Console.prototype.isSupportedNode = function (node) {\n        return !(RamlWrapper1.isObjectTypeDeclaration(node) ||\n            RamlWrapper1.isResponse(node) ||\n            RamlWrapper1.isTypeDeclaration(node) ||\n            RamlWrapper1.isLibrary(node) ||\n            RamlWrapper1.isSecuritySchemePart(node) ||\n            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n            RamlWrapper08.isResponse(node) ||\n            RamlWrapper08.isSecuritySchemePart(node) ||\n            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n            RamlWrapper08.isOAuth2SecurityScheme(node));\n    };\n    Console.prototype.renderNode = function (node) {\n        var props = extend(this.props, { node: node });\n        if (RamlWrapper1.isTrait(node) ||\n            RamlWrapper08.isTrait(node)) {\n            return React.createElement(Trait, props);\n        }\n        if (RamlWrapper1.isResourceType(node) ||\n            RamlWrapper08.isResourceType(node)) {\n            return React.createElement(ResourceType, props);\n        }\n        if (RamlWrapper1.isAbstractSecurityScheme(node) ||\n            RamlWrapper08.isAbstractSecurityScheme(node) ||\n            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n            RamlWrapper08.isOAuth2SecurityScheme(node)) {\n            return React.createElement(SecurityScheme, props);\n        }\n        if (RamlWrapper1.isResource(node) ||\n            RamlWrapper08.isResource(node)) {\n            return React.createElement(Resource, props);\n        }\n        if (RamlWrapper1.isDocumentationItem(node) ||\n            RamlWrapper08.isDocumentationItem(node)) {\n            return React.createElement(Documentation, props);\n        }\n        if (RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n            return React.createElement(Method, props);\n        }\n        if (RamlWrapper1.isApi(node) || RamlWrapper08.isApi(node) ||\n            RamlWrapper1.isExtension(node) || RamlWrapper1.isOverlay(node)) {\n            return React.createElement(Root, props);\n        }\n        // Psuedo \"404\" in case a view isn't implemented.\n        return React.createElement(Block, null, React.createElement(TitleText, { title: '404' }), React.createElement(Block, null, 'How did you get here? You shouldn\\'t be here! Please ', React.createElement('a', {\n            href: 'https://github.com/mulesoft/api-workbench/issues'\n        }, 'report me'), '.'), React.createElement(Block, null, React.createElement('strong', null, \"Reference: \" + node.wrapperClassName())));\n    };\n    Console.prototype.renderBreadcrumb = function (node, renderedNode) {\n        var _this = this;\n        var parts = [];\n        var nodes = [];\n        var currentNode = node;\n        // Render \"Errors\" as a breadcrumb.\n        if (this.props.errors.length) {\n            parts.push(React.createElement('span', { key: 'errors' }, 'Errors'));\n        }\n        else {\n            do {\n                nodes.unshift(currentNode);\n            } while (currentNode = currentNode.parent());\n            nodes.forEach(function (node, index) {\n                var lastNode = index === nodes.length - 1;\n                if (node.getKind() === highLevelAst.NodeKind.NODE &&\n                    _this.isSupportedNode(node.wrapperNode()) &&\n                    node.wrapperNode() !== renderedNode) {\n                    parts.push(React.createElement('a', {\n                        key: node.id(),\n                        onClick: function () { return _this.props.navigate(node.id()); }\n                    }, getNodeLabel(node)));\n                }\n                else {\n                    parts.push(React.createElement('span', { key: \"value\" + index }, getNodeLabel(node)));\n                }\n                if (!lastNode) {\n                    parts.push(React.createElement('span', { key: \"sep\" + index }, \" \" + BULLET_TEXT + \" \"));\n                }\n            });\n        }\n        return React.createElement(Block, { className: 'padded', style: { margin: 0, flex: '0 0 auto' } }, parts);\n    };\n    Console.prototype.getCurrentNode = function () {\n        var raml = this.props.raml;\n        var state = this.props.state;\n        if (!raml) {\n            return null;\n        }\n        if (state.view.id) {\n            var idNode = raml.highLevel().findById(state.view.id);\n            if (idNode) {\n                return idNode;\n            }\n        }\n        return raml.highLevel();\n    };\n    Console.prototype.wrapBody = function (element) {\n        return React.createElement(Block, {\n            id: 'raml-console-view',\n            className: 'padded',\n            style: {\n                overflow: 'auto',\n                height: '100%'\n            }\n        }, element);\n    };\n    Console.prototype.wrapContent = function (breadcrumb, element) {\n        return React.createElement(Block, { style: { height: '100%', display: 'flex', flexDirection: 'column' } }, breadcrumb, this.wrapBody(element));\n    };\n    Console.prototype.render = function () {\n        if (!this.props.loaded) {\n            return React.createElement(Loading);\n        }\n        var highLevelNode = this.getCurrentNode();\n        if (!highLevelNode) {\n            return React.createElement(Block, null, React.createElement(TitleText, { title: 'Unsupported fragment' }), React.createElement(Block, null, 'This type of fragment is not supported. Only APIs, Overlays and Extensions can be displayed.'));\n        }\n        var node;\n        if (this.props.errors.length) {\n            return this.wrapBody(React.createElement(Errors, { errors: this.props.errors }));\n        }\n        if (!highLevelNode.isElement()) {\n            var referencedNode = highLevelNode.findReferencedValue();\n            if (!referencedNode) {\n                return this.wrapContent(this.renderBreadcrumb(highLevelNode), React.createElement(MissingReference, extend(this.props, { highLevelNode: highLevelNode })));\n            }\n            node = referencedNode.wrapperNode();\n        }\n        else {\n            node = highLevelNode.wrapperNode();\n        }\n        // Traverse upwards to rendered nodes.\n        while (!this.isSupportedNode(node)) {\n            node = node.parent();\n        }\n        return this.wrapContent(this.renderBreadcrumb(highLevelNode, node), this.renderNode(node));\n    };\n    return Console;\n})(PureComponent);\nexports.Console = Console;\nvar Errors = (function (_super) {\n    __extends(Errors, _super);\n    function Errors() {\n        _super.apply(this, arguments);\n    }\n    Errors.prototype.render = function () {\n        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Errors' }), React.createElement('ul', null, this.props.errors.map(function (error, index) {\n            // TODO(blakeembrey): Use `error.mark` to open text editor to issue.\n            return React.createElement('li', { key: index }, error.message);\n        })));\n    };\n    return Errors;\n})(PureComponent);\nvar Root = (function (_super) {\n    __extends(Root, _super);\n    function Root() {\n        _super.apply(this, arguments);\n    }\n    Root.prototype.render = function () {\n        var _this = this;\n        var raml = this.props.node;\n        return React.createElement('div', null, React.createElement(TitleText, { title: raml.title() }), React.createElement(ResourceTypesAndTraits, this.props), raml.documentation().length ? React.createElement(InsetPanel, null, React.createElement('h3', { style: { marginTop: 0 } }, 'Documentation'), React.createElement('ul', null, raml.documentation().map(function (documentation) {\n            var id = documentation.highLevel().id();\n            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, documentation.title()));\n        }))) : null, React.createElement(ResourceChildren, this.props));\n    };\n    return Root;\n})(PureComponent);\nvar MethodButton = (function (_super) {\n    __extends(MethodButton, _super);\n    function MethodButton() {\n        _super.apply(this, arguments);\n    }\n    MethodButton.prototype.render = function () {\n        var _this = this;\n        var verb = this.props.method.method();\n        return React.createElement('div', {\n            onClick: function () { return _this.props.navigate(_this.props.method.highLevel().id()); },\n            className: classnames('btn inline-block', METHOD_CLASS_MAP[verb])\n        }, verb.toUpperCase());\n    };\n    return MethodButton;\n})(PureComponent);\nvar MissingReference = (function (_super) {\n    __extends(MissingReference, _super);\n    function MissingReference() {\n        _super.apply(this, arguments);\n    }\n    MissingReference.prototype.render = function () {\n        var node = this.props.highLevelNode;\n        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Missing Reference' }), 'Unable to resolve reference: ', React.createElement('strong', null, node.id()));\n    };\n    return MissingReference;\n})(PureComponent);\n// class GlobalSchema extends PureComponent<NodeProps<RamlWrapper1.GlobalSchema>, {}> {\n//\n//   render () {\n//     var node = this.props.node\n//\n//     return React.createElement(\n//       Block,\n//       null,\n//       React.createElement(TitleText, { node, title: node.key(), type: 'Schema' }),\n//       React.createElement(Markup, { content: node.value().value(), setState: this.props.setState, state: this.props.state })\n//     )\n//   }\n//\n// }\nvar Loading = (function (_super) {\n    __extends(Loading, _super);\n    function Loading() {\n        _super.apply(this, arguments);\n    }\n    Loading.prototype.render = function () {\n        return React.createElement(Block, null, React.createElement('div', {\n            className: 'loading-spinner-medium inline-block'\n        }), React.createElement('span', {\n            className: 'inline-block'\n        }, 'Loading RAML\\u2026'));\n    };\n    return Loading;\n})(PureComponent);\nvar Trait = (function (_super) {\n    __extends(Trait, _super);\n    function Trait() {\n        _super.apply(this, arguments);\n    }\n    Trait.prototype.render = function () {\n        var node = this.props.node;\n        var references = node.highLevel().findReferences();\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Trait' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractMethod, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n    };\n    return Trait;\n})(PureComponent);\nvar TitleText = (function (_super) {\n    __extends(TitleText, _super);\n    function TitleText() {\n        _super.apply(this, arguments);\n    }\n    TitleText.prototype.render = function () {\n        var title = this.props.title;\n        return React.createElement('h1', { style: { marginTop: 0 } }, this.props.node ? React.createElement(OpenInEditor, { node: this.props.node }, title) : title, this.props.type ? React.createElement('small', null, \" (\" + this.props.type + \")\") : null);\n    };\n    return TitleText;\n})(PureComponent);\nvar SimpleText = (function (_super) {\n    __extends(SimpleText, _super);\n    function SimpleText() {\n        _super.apply(this, arguments);\n    }\n    SimpleText.prototype.render = function () {\n        var text = this.props.text;\n        if (!text) {\n            return null;\n        }\n        return React.createElement(Block, null, React.createElement('strong', null, this.props.title + \": \"), text);\n    };\n    return SimpleText;\n})(PureComponent);\nvar References = (function (_super) {\n    __extends(References, _super);\n    function References() {\n        _super.apply(this, arguments);\n    }\n    References.prototype.formatNode = function (node) {\n        var parts = [];\n        do {\n            parts.unshift(getNodeLabel(node));\n        } while (node = node.parent());\n        return parts.join(\" \" + BULLET_TEXT + \" \");\n    };\n    References.prototype.render = function () {\n        var _this = this;\n        var references = this.props.references;\n        if (!references.length) {\n            return null;\n        }\n        return React.createElement(InsetPanel, null, React.createElement('h3', null, \"References (\" + references.length + \" Found)\"), React.createElement('ul', null, references.map(function (reference) {\n            var id = reference.id();\n            var parent = reference.parent();\n            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(parent.id()); } }, _this.formatNode(parent)));\n        })));\n    };\n    return References;\n})(PureComponent);\nvar AbstractResource = (function (_super) {\n    __extends(AbstractResource, _super);\n    function AbstractResource() {\n        _super.apply(this, arguments);\n    }\n    AbstractResource.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        var navigate = this.props.navigate;\n        var methods = node.methods();\n        var uriParameters = node.uriParameters();\n        return React.createElement(Block, null, React.createElement(ResourceTypesAndTraits, this.props), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), methods.length ? React.createElement(Block, null, methods.map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })) : null, React.createElement(ParametersBlock, { parameters: uriParameters, title: 'URI Parameters', navigate: navigate }));\n    };\n    return AbstractResource;\n})(PureComponent);\nvar ResourceType = (function (_super) {\n    __extends(ResourceType, _super);\n    function ResourceType() {\n        _super.apply(this, arguments);\n    }\n    ResourceType.prototype.render = function () {\n        var node = this.props.node;\n        var references = node.highLevel().findReferences();\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Resource Type' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractResource, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n    };\n    return ResourceType;\n})(PureComponent);\nvar SecurityScheme = (function (_super) {\n    __extends(SecurityScheme, _super);\n    function SecurityScheme() {\n        _super.apply(this, arguments);\n    }\n    SecurityScheme.prototype.render = function () {\n        var node = this.props.node;\n        var references = node.highLevel().findReferences();\n        // TODO(blakeembrey): Render `settings`.\n        var displayName = \"\";\n        if (isRAML08(node)) {\n            displayName = node.name();\n        }\n        else {\n            displayName = node.displayName();\n        }\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Security Scheme' }), React.createElement(SimpleText, { title: 'Type', text: node.type() }), React.createElement(SimpleText, { title: 'Display Name', text: displayName }), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), React.createElement(AbstractMethod, extend(this.props, { node: node.describedBy() })), React.createElement(References, { references: references, navigate: this.props.navigate }));\n    };\n    return SecurityScheme;\n})(PureComponent);\nvar Resource = (function (_super) {\n    __extends(Resource, _super);\n    function Resource() {\n        _super.apply(this, arguments);\n    }\n    Resource.prototype.render = function () {\n        var node = this.props.node;\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.relativeUri().value(), type: 'Resource' }), React.createElement(AbstractResource, this.props), React.createElement(ResourceChildren, this.props));\n    };\n    return Resource;\n})(PureComponent);\nvar ParameterInfo = (function (_super) {\n    __extends(ParameterInfo, _super);\n    function ParameterInfo() {\n        _super.apply(this, arguments);\n    }\n    ParameterInfo.prototype.render = function () {\n        var node = this.props.node;\n        if (node == null) {\n            return null;\n        }\n        var nodeType = node.type();\n        if (!nodeType)\n            nodeType = \"string\";\n        return React.createElement(Block, null, React.createElement(Block, null, React.createElement('span', {\n            key: nodeType,\n            className: 'highlight',\n            style: { marginRight: 5 }\n        }, nodeType)));\n    };\n    return ParameterInfo;\n})(PureComponent);\nvar TypeInfo = (function (_super) {\n    __extends(TypeInfo, _super);\n    function TypeInfo() {\n        _super.apply(this, arguments);\n    }\n    TypeInfo.prototype.hasNamedSuperTypes = function (type) {\n        var superTypes = type.superTypes();\n        if (!superTypes)\n            return false;\n        var namedTypeFound = false;\n        superTypes.forEach(function (superType) {\n            if (superType.nameId() && superType.nameId().indexOf(\"application/\") != 0)\n                namedTypeFound = true;\n        });\n        return namedTypeFound;\n    };\n    TypeInfo.prototype.renderDefinition = function (definition, renderNameId) {\n        return React.createElement(Block, null, \n        // TODO(blakeembrey): Fix `renderNameId` check, currently hacky because\n        // the media type is being printed out sometimes.\n        renderNameId ? React.createElement(Block, null, React.createElement('span', {\n            className: 'highlight'\n        }, definition.nameId())) : null, this.hasNamedSuperTypes(definition) ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Super Types:')), definition.superTypes().map(function (x) {\n            return React.createElement('span', {\n                className: 'highlight',\n                style: { marginRight: 5 }\n            }, x.nameId());\n        })) : null, definition.allProperties().length ? React.createElement(Block, null, React.createElement('h5', null, 'Properties'), definition.allProperties().map(function (property) {\n            return React.createElement(Block, { key: property.nameId() }, React.createElement(Block, null, React.createElement('strong', null, property.nameId()), property.isRequired() ? ' (required)' : ''), React.createElement(Block, null, property.description()));\n        })) : null, definition.hasUnionInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Left: ')), this.renderDefinition(definition.unionInHierarchy().leftType(), true), React.createElement(Block, null, React.createElement('strong', null, 'Right: ')), this.renderDefinition(definition.unionInHierarchy().rightType(), true)) : null, definition.hasArrayInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Item: ')), this.renderDefinition(definition.arrayInHierarchy().componentType(), true)) : null);\n    };\n    TypeInfo.prototype.render = function () {\n        var node = this.props.node;\n        // Array items can be `null`.\n        if (node == null) {\n            return null;\n        }\n        var definition = node.runtimeDefinition();\n        if (definition && definition.hasGenuineUserDefinedTypeInHierarchy()\n            && !definition.isGenuineUserDefinedType()) {\n            definition = definition.genuineUserDefinedTypeInHierarchy();\n        }\n        return React.createElement(Block, null, typeof node.type === 'function' ? React.createElement(Block, null, node.type().map(function (type) {\n            return React.createElement('span', {\n                key: type,\n                className: 'highlight',\n                style: { marginRight: 5 }\n            }, type);\n        })) : null, this.renderDefinition(definition, false));\n    };\n    return TypeInfo;\n})(PureComponent);\nvar ParametersBlock = (function (_super) {\n    __extends(ParametersBlock, _super);\n    function ParametersBlock() {\n        _super.apply(this, arguments);\n    }\n    ParametersBlock.prototype.summary = function (param) {\n        var parts = [];\n        if (RamlWrapper1.isFileTypeDeclaration(param) /*param.wrapperClassName() === 'FileTypeDeclarationImpl'*/) {\n            if (param.fileTypes()) {\n                parts.push(\"fileTypes: \" + param.fileTypes());\n            }\n            if (param.minLength()) {\n                parts.push(\"minLength: \" + param.minLength());\n            }\n            if (param.maxLength()) {\n                parts.push(\"maxLength: \" + param.maxLength());\n            }\n        }\n        if (RamlWrapper1.isIntegerTypeDeclaration(param) /*param.wrapperClassName() === 'IntegerTypeDeclarationImpl'*/) {\n            if (param.minimum() != null) {\n                parts.push(\"minimum: \" + param.minimum());\n            }\n            if (param.maximum() != null) {\n                parts.push(\"maximum: \" + param.maximum());\n            }\n        }\n        if (param.required()) {\n            parts.push('required');\n        }\n        return parts.join(', ');\n    };\n    ParametersBlock.prototype.render = function () {\n        var _this = this;\n        if (!this.props.parameters.length) {\n            return null;\n        }\n        var navigate = this.props.navigate;\n        return React.createElement(Block, null, React.createElement('h3', null, this.props.title), this.props.parameters.map(function (parameter) {\n            return React.createElement(Block, { key: parameter.name() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: parameter }, parameter.name())), React.createElement(isRAML10(parameter) ? TypeInfo : ParameterInfo, { node: parameter }), React.createElement(Block, null, React.createElement('strong', null, _this.summary(parameter))), React.createElement(MarkdownBlock, { content: (parameter.description() ? parameter.description().value() : null) }));\n        }));\n    };\n    return ParametersBlock;\n})(PureComponent);\nvar ResourceChildren = (function (_super) {\n    __extends(ResourceChildren, _super);\n    function ResourceChildren() {\n        _super.apply(this, arguments);\n    }\n    ResourceChildren.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        return React.createElement(Block, null, node.resources().map(function (resource) {\n            var id = resource.highLevel().id();\n            var children = resource.resources().length;\n            return React.createElement(InsetPanel, { key: id }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: resource }, resource.completeRelativeUri()), ' ', children ? React.createElement('small', null, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, \"View \" + children + \" more \" + plural(children, 'resource', 'resources'))) : null), React.createElement(MarkdownBlock, {\n                content: (resource.description() ? resource.description().value() : null)\n            }), React.createElement(Block, null, resource.methods().map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })));\n        }));\n    };\n    return ResourceChildren;\n})(PureComponent);\nvar Documentation = (function (_super) {\n    __extends(Documentation, _super);\n    function Documentation() {\n        _super.apply(this, arguments);\n    }\n    Documentation.prototype.render = function () {\n        var node = this.props.node;\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.title(), type: 'Documentation' }), React.createElement(MarkdownBlock, { content: (this.props.node.content() ? this.props.node.content().value() : null) }));\n    };\n    return Documentation;\n})(PureComponent);\nvar AbstractMethod = (function (_super) {\n    __extends(AbstractMethod, _super);\n    function AbstractMethod() {\n        _super.apply(this, arguments);\n    }\n    AbstractMethod.prototype.renderBody = function (body) {\n        // TODO(blakeembrey): Render more properties from `ObjectField`.\n        var parts = [];\n        //link to open body in the editor\n        parts.push(React.createElement('h4', null, React.createElement(OpenInEditor, { node: body }, body.name())));\n        //type block for 1.0 raml\n        if (isRAML10(body)) {\n            parts.push(React.createElement(TypeInfo, { node: body }));\n        }\n        //if there is schema, we render it\n        //TODO for 1.0 case this should be replaced with external type rendering in TypeInfo\n        var schemaPart = this.createSchemaPart(body);\n        if (schemaPart)\n            parts.push(schemaPart);\n        //adding examples if available\n        parts.push(this.createExampleParts(body));\n        return React.createElement(Block, { key: body.name() }, parts);\n    };\n    AbstractMethod.prototype.exampleToString = function (example) {\n        var exampleValue = example.value();\n        if (exampleValue == null)\n            return null;\n        if (typeof (exampleValue) == \"string\") {\n            return exampleValue;\n        }\n        return JSON.stringify(exampleValue, null, 2);\n    };\n    AbstractMethod.prototype.createExampleParts = function (body) {\n        var _this = this;\n        if (isRAML10(body)) {\n            var bodyType = body;\n            var runtimeType = bodyType.runtimeType();\n            if (runtimeType) {\n                var examples = runtimeType.examples(true);\n                if (examples && examples.length > 0) {\n                    return examples.map(function (example) {\n                        var exampleName = example.name() ? example.name() : \"Example\";\n                        var displayName = example.displayName() ? example.displayName() : exampleName;\n                        return React.createElement(MarkupBlock, {\n                            key: displayName,\n                            content: example.asString(),\n                            title: \"Example\",\n                            name: exampleName,\n                            mime: body.name(),\n                            setState: _this.props.setState,\n                            state: _this.props.state\n                        });\n                    });\n                }\n            }\n        }\n        else if (RamlWrapper08.isBodyLike(body)) {\n            var exampleNode = body.example();\n            if (!exampleNode)\n                return [];\n            var exampleContent = exampleNode.value();\n            if (!exampleContent)\n                return [];\n            return [React.createElement(MarkupBlock, {\n                    content: exampleContent,\n                    title: 'Example',\n                    mime: body.name(),\n                    setState: this.props.setState,\n                    state: this.props.state\n                })];\n        }\n        return [];\n    };\n    AbstractMethod.prototype.createSchemaPart = function (body) {\n        var schemaName = null;\n        var schemaContent = null;\n        if (RamlWrapper08.isBodyLike(body)) {\n            schemaName = body.schema() ? body.schema().value() : \"\";\n            //this is probably not an external scheme reference, but inplace schema.\n            if (!schemaName || schemaName.indexOf(\"{\") != -1 && schemaName.indexOf(\"}\") != -1)\n                schemaName = \"\";\n            schemaContent = body.schemaContent();\n        }\n        else if (isRAML10(body)) {\n            var bodyAsType = body;\n            if (body.runtimeType() && bodyAsType.runtimeType().hasExternalInHierarchy()) {\n                var externalType = bodyAsType.runtimeType().externalInHierarchy();\n                if (externalType) {\n                    schemaName = body.runtimeType().superTypes() != null && body.runtimeType().superTypes().length == 1 &&\n                        body.runtimeType().superTypes()[0].nameId();\n                    schemaContent = externalType.schema();\n                }\n            }\n        }\n        if (schemaContent) {\n            return React.createElement(MarkupBlock, {\n                key: undefined,\n                content: schemaContent,\n                title: 'Schema',\n                mime: body.name(),\n                name: schemaName,\n                setState: this.props.setState,\n                state: this.props.state\n            });\n        }\n        return null;\n    };\n    AbstractMethod.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        var navigate = this.props.navigate;\n        if (!node) {\n            return null;\n        }\n        var methodBodies = node.body();\n        return React.createElement(Block, null, React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), node.queryParameters().length ? React.createElement(InsetPanel, null, React.createElement(ParametersBlock, {\n            parameters: node.queryParameters(),\n            title: 'Query Parameters',\n            navigate: navigate\n        })) : null, React.createElement(ParametersBlock, {\n            parameters: node.headers(),\n            title: 'Headers',\n            navigate: navigate\n        }), methodBodies.length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Body'), methodBodies.map(function (body) { return _this.renderBody(body); })) : null, node.responses().length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Responses'), node.responses().map(function (response) {\n            return React.createElement(Block, { key: response.code().value() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: response.code() }, response.code().value())), React.createElement(MarkdownBlock, { content: (response.description() ? response.description().value() : null) }), React.createElement(ParametersBlock, {\n                parameters: response.headers(),\n                title: 'Headers',\n                navigate: navigate\n            }), response.body().map(function (body) { return _this.renderBody(body); }));\n        })) : null);\n    };\n    return AbstractMethod;\n})(PureComponent);\nvar Method = (function (_super) {\n    __extends(Method, _super);\n    function Method() {\n        _super.apply(this, arguments);\n    }\n    Method.prototype.render = function () {\n        var props = this.props;\n        var node = props.node;\n        var demo = props.state.view.demo;\n        var canDemo = node.parent().wrapperClassName() === 'ResourceImpl';\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.method().toUpperCase(), type: 'Method' }), React.createElement(ResourceTypesAndTraits, props), canDemo ? React.createElement(Block, null, React.createElement('div', {\n            className: 'btn btn-primary',\n            onClick: function () { return props.navigate({ demo: !demo }); }\n        }, demo ? 'Read Documentation' : 'Make an API Request')) : null, canDemo && demo ? React.createElement(MethodDemo, props) : React.createElement(AbstractMethod, props));\n    };\n    return Method;\n})(PureComponent);\nvar MethodDemo = (function (_super) {\n    __extends(MethodDemo, _super);\n    function MethodDemo() {\n        _super.apply(this, arguments);\n    }\n    MethodDemo.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        var method = node.method();\n        var contentType = this.props.state.body;\n        var securityScheme = this.props.state.securityScheme;\n        var progress = this.props.pageState.requestProgress;\n        var bodies = node.body().map(function (x) { return x.name(); });\n        var securitySchemes = node.allSecuredBy().map(function (x) { return x.securityScheme(); });\n        var currentSecurityScheme = securitySchemes.filter(function (x) { return x != null && x.name() === securityScheme; })[0];\n        if (!this.props.state.bodies || Object.keys(this.props.state.bodies).length === 0) {\n            this.props.state.bodies = {};\n            node.body().forEach(function (body) {\n                var name = body.name();\n                var example = body.example() || body.examples()[0];\n                example && (_this.props.state.bodies[name] = example.value());\n            });\n        }\n        return React.createElement(Block, null, securitySchemes.length ? React.createElement(Block, null, React.createElement('h3', null, 'Security Scheme'), React.createElement(Block, null, React.createElement('select', {\n            onChange: function (e) { return _this.props.setState({ securityScheme: e.target.value }); },\n            className: 'form-control',\n            value: securityScheme\n        }, securitySchemes.map(function (x) {\n            var name = x != null ? x.name() : 'null';\n            return React.createElement('option', { key: name, value: x == null ? '' : x.name() }, name);\n        }))), currentSecurityScheme ? React.createElement(Block, null, React.createElement(EditParameters, {\n            title: undefined,\n            prefix: \"Security Scheme Query Parameter\",\n            parameters: (currentSecurityScheme.describedBy() && currentSecurityScheme.describedBy().queryParameters()) || [],\n            values: this.props.state.queryParameters,\n            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n        }), React.createElement(EditParameters, {\n            title: undefined,\n            prefix: \"Security Scheme Header\",\n            parameters: (currentSecurityScheme.describedBy() && currentSecurityScheme.describedBy().headers()) || [],\n            values: this.props.state.headers,\n            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n        })) : null) : null, React.createElement(EditParameters, {\n            title: 'Base URI Parameters',\n            prefix: undefined,\n            parameters: node.ownerApi().allBaseUriParameters(),\n            values: this.props.state.baseUriParameters,\n            change: function (name, value) { return _this.props.setParameter('baseUriParameters', name, value); }\n        }), null, React.createElement(EditParameters, {\n            title: 'URI Parameters',\n            prefix: undefined,\n            parameters: localParameters(node.parent()),\n            values: this.props.state.uriParameters,\n            change: function (name, value) { return _this.props.setParameter('uriParameters', name, value); }\n        }), React.createElement(EditParameters, {\n            title: 'Query Parameters',\n            prefix: undefined,\n            parameters: node.queryParameters(),\n            values: this.props.state.queryParameters,\n            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n        }), React.createElement(EditParameters, {\n            title: 'Headers',\n            prefix: undefined,\n            parameters: node.headers(),\n            values: this.props.state.headers,\n            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n        }), bodies.length ? React.createElement(Block, null, React.createElement('h3', null, 'Body'), React.createElement(Block, null, React.createElement('select', {\n            onChange: function (e) { return _this.props.setState({ body: e.target.value }); },\n            className: 'form-control',\n            value: contentType || bodies[0]\n        }, bodies.map(function (x) { return React.createElement('option', { key: x }, x); }))), React.createElement(TextEditor, {\n            mini: false,\n            value: this.props.state.bodies[contentType || bodies[0]],\n            onChange: function (body) {\n                return _this.props.setParameter('bodies', contentType || bodies[0], body);\n            }\n        })) : null, React.createElement(Block, null, React.createElement('div', {\n            className: classnames('btn inline-block', METHOD_CLASS_MAP[method]),\n            onClick: function () {\n                if (!_this.props.state.body) {\n                    _this.props.state.body = contentType || bodies[0];\n                }\n                return _this.props.execRequest();\n            }\n        }, method.toUpperCase()), progress == null ? null : React.createElement('progress', {\n            style: { marginLeft: 5 },\n            className: 'inline-block',\n            max: isNaN(progress) ? null : '1',\n            value: isNaN(progress) ? null : String(progress)\n        })), React.createElement(Response, this.props));\n    };\n    return MethodDemo;\n})(PureComponent);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response() {\n        _super.apply(this, arguments);\n    }\n    Response.prototype.render = function () {\n        var error = this.props.pageState.requestError;\n        var response = this.props.pageState.requestResponse;\n        if (error) {\n            return React.createElement(Block, { className: 'text-error' }, error);\n        }\n        if (response) {\n            var mime = getCaseless(response.headers, 'content-type');\n            // readonly: boolean\n            // grammar: any\n            // gutter: boolean\n            // mini: boolean\n            // value: string\n            // placeholder: string\n            // onChange: (value: string) => any\n            return React.createElement(Block, null, React.createElement('h3', null, 'Response'), React.createElement(Block, null, React.createElement('div', null, React.createElement('strong', null, 'Status Code: '), response.status), React.createElement('div', null, React.createElement('strong', null, 'Status Text: '), response.statusText), React.createElement('div', null, React.createElement('strong', null, 'URL: '), response.url)), React.createElement(Block, null, React.createElement('h4', null, 'Headers'), React.createElement(Block, null, response.rawHeaders.map(function (value, index) {\n                if (index % 2 === 0) {\n                    return React.createElement('strong', { key: index }, value + \": \");\n                }\n                return React.createElement('span', { key: index }, value, React.createElement('br'));\n            }))), response.body ? React.createElement(Block, null, React.createElement('h4', null, 'Body'), React.createElement(Markup, {\n                content: response.body,\n                mime: mime,\n                setState: this.props.setState,\n                state: this.props.state\n            })) : null);\n        }\n        return null;\n    };\n    return Response;\n})(PureComponent);\nvar EditParameters = (function (_super) {\n    __extends(EditParameters, _super);\n    function EditParameters() {\n        _super.apply(this, arguments);\n    }\n    EditParameters.prototype.render = function () {\n        var _this = this;\n        var values = this.props.values || {};\n        var params = this.props.parameters;\n        if (!params.length) {\n            return null;\n        }\n        return React.createElement(Block, null, this.props.title ? React.createElement('h3', {\n            className: 'sub-title'\n        }, this.props.title) : null, params.map(function (parameter) {\n            var name = parameter.name();\n            var input;\n            var value = values[name];\n            var label = _this.props.prefix == null ? name : _this.props.prefix + \": \" + name;\n            input = React.createElement(TextEditor, {\n                mini: true,\n                value: value,\n                placeholder: parameter.default(),\n                onChange: function (value) { return _this.props.change(name, value); }\n            });\n            return React.createElement(Block, { key: name }, React.createElement('label', null, label, parameter.required() ? ' *' : ''), input);\n        }));\n    };\n    return EditParameters;\n})(PureComponent);\nvar TextEditor = (function (_super) {\n    __extends(TextEditor, _super);\n    function TextEditor() {\n        _super.apply(this, arguments);\n    }\n    TextEditor.prototype.componentDidMount = function () {\n        var editor = this.editor = document.createElement('atom-text-editor');\n        this.updateModel(this.props);\n        this.refs.container.getDOMNode().appendChild(editor);\n    };\n    TextEditor.prototype.updateModel = function (props) {\n        var editor = this.editor;\n        var model = editor.getModel();\n        this.cleanup();\n        model.setMini(props.mini);\n        model.setPlaceholderText(props.placeholder);\n        model.setGrammar(props.grammar);\n        model.setText(props.value || '');\n        if (props.readonly) {\n            editor.removeAttribute('tabindex');\n        }\n        else {\n            editor.setAttribute('tabindex', '0');\n        }\n        if (props.gutter === false) {\n            editor.setAttribute('gutter-hidden', '');\n        }\n        else {\n            editor.removeAttribute('gutter-hidden');\n        }\n        if (props.onChange) {\n            this.disposable = model.onDidChange(function () {\n                var position = model.cursors[0].getBufferPosition();\n                props.onChange(model.getText());\n                model.cursors[0].setBufferPosition(position);\n            });\n        }\n    };\n    TextEditor.prototype.cleanup = function () {\n        if (this.disposable) {\n            this.disposable.dispose();\n            this.disposable = null;\n        }\n    };\n    TextEditor.prototype.componentWillUnmount = function () {\n        this.cleanup();\n    };\n    TextEditor.prototype.componentDidUpdate = function () {\n        this.updateModel(this.props);\n    };\n    TextEditor.prototype.render = function () {\n        return React.createElement('div', { ref: 'container' });\n    };\n    return TextEditor;\n})(PureComponent);\nvar MarkupBlock = (function (_super) {\n    __extends(MarkupBlock, _super);\n    function MarkupBlock() {\n        _super.apply(this, arguments);\n        this.state = { visible: false };\n    }\n    MarkupBlock.prototype.render = function () {\n        var _this = this;\n        if (!this.props.content) {\n            return null;\n        }\n        var visible = this.state.visible;\n        return React.createElement(Block, { key: this.props.key }, React.createElement('a', { onClick: function () { return _this.setState({ visible: !visible }); } }, (visible ? 'Hide' : 'Show') + \" \" + this.props.title), this.props.name ? \" (\" + this.props.name + \")\" : null, visible ? React.createElement('div', { style: { marginTop: 5 } }, React.createElement(Markup, this.props)) : null);\n    };\n    return MarkupBlock;\n})(PureComponent);\nvar Markup = (function (_super) {\n    __extends(Markup, _super);\n    function Markup() {\n        _super.apply(this, arguments);\n    }\n    Markup.prototype.render = function () {\n        var _this = this;\n        var grammar = atomUtil.getGrammerFromMime(this.props.mime);\n        var content = this.props.content;\n        var isXml = grammar.fileTypes.indexOf('xml') > -1 || isXML(content);\n        var isJson = grammar.fileTypes.indexOf('json') > -1 || isJSON(content);\n        var isCss = grammar.fileTypes.indexOf('css') > -1;\n        var canPrettify = isXml || isJson || isCss;\n        if (this.props.state.pretty) {\n            try {\n                if (isXml) {\n                    content = pretty.pd.xml(content);\n                }\n                else if (isJson) {\n                    content = pretty.pd.json(content);\n                }\n                else if (isCss) {\n                    content = pretty.pd.css(content);\n                }\n            }\n            catch (e) {\n            }\n        }\n        return React.createElement(Block, null, React.createElement(TextEditor, {\n            value: content,\n            grammar: grammar,\n            readonly: true\n        }), canPrettify ? React.createElement(Block, null, React.createElement('label', null, React.createElement('input', {\n            type: 'checkbox',\n            onChange: function (e) { return _this.props.setState({ pretty: e.target.checked }); },\n            checked: this.props.state.pretty,\n            style: { marginRight: 5 }\n        }), React.createElement('span', null, 'Pretty data'))) : null);\n    };\n    return Markup;\n})(PureComponent);\nvar NavigateLabel = (function (_super) {\n    __extends(NavigateLabel, _super);\n    function NavigateLabel() {\n        _super.apply(this, arguments);\n    }\n    NavigateLabel.prototype.getName = function (node) {\n        var value = node.value();\n        return typeof value === 'string' ? value : value.valueName();\n    };\n    NavigateLabel.prototype.render = function () {\n        var node = this.props.node;\n        // Ignore empty node values.\n        if (node.value() == null) {\n            return null;\n        }\n        var navigate = this.props.navigate;\n        var title = this.props.title;\n        var id = node.highLevel().id();\n        return React.createElement('span', {\n            className: 'highlight',\n            style: {\n                margin: '0 5px 5px 0',\n                cursor: 'pointer',\n                display: 'inline-block'\n            },\n            onClick: function () { return navigate(id); }\n        }, React.createElement('strong', null, title + \": \"), this.getName(node));\n    };\n    return NavigateLabel;\n})(PureComponent);\nvar ResourceTypesAndTraits = (function (_super) {\n    __extends(ResourceTypesAndTraits, _super);\n    function ResourceTypesAndTraits() {\n        _super.apply(this, arguments);\n    }\n    ResourceTypesAndTraits.prototype.render = function () {\n        var types = [];\n        var node = this.props.node;\n        var navigate = this.props.navigate;\n        if ((RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node))\n            && node.type()) {\n            types.push(React.createElement(\"NavigateLabel\", { title: 'Type', key: 'type', node: node.type(), navigate: navigate }));\n        }\n        if (RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node)\n            || RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n            node.is().forEach(function (is, index) {\n                types.push(React.createElement(\"NavigateLabel\", { title: 'Trait', key: \"is:\" + index, node: is, navigate: navigate }));\n            });\n        }\n        node.securedBy().forEach(function (securedBy, index) {\n            types.push(React.createElement(\"NavigateLabel\", { title: 'Secured By', key: \"securedBy:\" + index, node: securedBy, navigate: navigate }));\n        });\n        return React.createElement(Block, null, types);\n    };\n    return ResourceTypesAndTraits;\n})(PureComponent);\nvar Block = (function (_super) {\n    __extends(Block, _super);\n    function Block() {\n        _super.apply(this, arguments);\n    }\n    Block.prototype.render = function () {\n        return React.createElement('div', extend(this.props, {\n            className: classnames(this.props.className, 'block')\n        }), this.props.children);\n    };\n    return Block;\n})(PureComponent);\nvar InsetPanel = (function (_super) {\n    __extends(InsetPanel, _super);\n    function InsetPanel() {\n        _super.apply(this, arguments);\n    }\n    InsetPanel.prototype.render = function () {\n        return React.createElement(Block, null, React.createElement('atom-panel', null, React.createElement('div', { className: 'padded' }, this.props.children)));\n    };\n    return InsetPanel;\n})(PureComponent);\nvar Icon = (function (_super) {\n    __extends(Icon, _super);\n    function Icon() {\n        _super.apply(this, arguments);\n    }\n    Icon.prototype.render = function () {\n        return React.createElement('i', {\n            className: classnames('icon icon-' + this.props.name, this.props.className)\n        });\n    };\n    return Icon;\n})(PureComponent);\nvar OpenInEditor = (function (_super) {\n    __extends(OpenInEditor, _super);\n    function OpenInEditor() {\n        _super.apply(this, arguments);\n    }\n    OpenInEditor.prototype.openInEditor = function (node) {\n        var editors = atom.workspace.getTextEditors();\n        var path = node.unit().absolutePath();\n        var start = node.start();\n        // TODO(blakeembrey): Review logic if atom/atom#9258 lands.\n        function resolve(editor) {\n            var position = editor.getBuffer().positionForCharacterIndex(start);\n            editor.setCursorBufferPosition(position);\n        }\n        var split;\n        // Split is disabled for the console, just open it without any bells.\n        if (atom.config.get('api-workbench.openConsoleInSplitPane')) {\n            // Attempt to render onto the preferred side of the console.\n            var panes = atom.workspace.getPanes();\n            var activePane = atom.workspace.getActivePane();\n            if (panes.length === 1) {\n                split = 'left';\n                activePane.splitLeft({});\n            }\n            else {\n                split = activePane === panes[0] ? 'right' : 'left';\n            }\n        }\n        atom.workspace.open(path, { searchAllPanes: true, split: split }).then(resolve);\n    };\n    OpenInEditor.prototype.render = function () {\n        var _this = this;\n        var lowLevel = this.props.node.highLevel().lowLevel();\n        var hasUnit = lowLevel.unit() != null;\n        if (!hasUnit) {\n            return React.createElement('span', null, this.props.children);\n        }\n        return React.createElement('a', {\n            onClick: function () { return _this.openInEditor(lowLevel); }\n        }, this.props.children);\n    };\n    return OpenInEditor;\n})(PureComponent);\nvar MarkdownBlock = (function (_super) {\n    __extends(MarkdownBlock, _super);\n    function MarkdownBlock() {\n        _super.apply(this, arguments);\n    }\n    MarkdownBlock.prototype.render = function () {\n        var content = this.props.content;\n        if (content == null) {\n            return null;\n        }\n        return React.createElement(Block, { dangerouslySetInnerHTML: { __html: marked(content) } });\n    };\n    return MarkdownBlock;\n})(PureComponent);\nfunction plural(count, singular, plural) {\n    return count === 1 ? singular : plural;\n}\nfunction getCaseless(obj, key) {\n    var keys = Object.keys(obj);\n    var match = key.toLowerCase();\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i].toLowerCase() === match) {\n            return obj[keys[i]];\n        }\n    }\n}\nfunction getNodeLabel(node) {\n    var name = node.getKind() === highLevelAst.NodeKind.ATTRIBUTE ? node.value() : node.name();\n    if (typeof name !== 'string') {\n        name = name.valueName();\n    }\n    if (!name && node.getKind() === highLevelAst.NodeKind.NODE) {\n        var wrapper = node.wrapperNode();\n        if (RamlWrapper1.isDocumentationItem(wrapper) ||\n            RamlWrapper08.isDocumentationItem(wrapper)) {\n            return wrapper.title();\n        }\n        if (RamlWrapper1.isApi(wrapper) || RamlWrapper08.isApi(wrapper) ||\n            RamlWrapper1.isExtension(wrapper) || RamlWrapper1.isOverlay(wrapper)) {\n            return 'Home';\n        }\n    }\n    return name;\n}\nfunction isXML(content) {\n    if (typeof content !== 'string') {\n        return false;\n    }\n    var trimmed = content.trim();\n    if (trimmed.length < 1) {\n        return false;\n    }\n    if (trimmed.charAt(0) === \"<\" && trimmed.charAt(trimmed.length - 1) === \">\") {\n        return true;\n    }\n    return false;\n}\nfunction isJSON(content) {\n    try {\n        JSON.parse(content);\n        return true;\n    }\n    catch (exception) {\n        return false;\n    }\n}\nfunction localParameters(node) {\n    var baseUriParams = node.ownerApi().baseUriParameters().map(function (param) { return param.name(); });\n    return filter(node.absoluteUriParameters(), function (param) { return baseUriParams.indexOf(param.name()) < 0; });\n}\nfunction filter(array, condition) {\n    var result = [];\n    array.forEach(function (element) { return condition(element) && result.push(element); });\n    return result;\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/console/render.js\n ** module id = 56\n ** module chunks = 0\n **/","module.exports = require(\"know-your-http-well\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"know-your-http-well\"\n ** module id = 57\n ** module chunks = 0\n **/","module.exports = require(\"remote\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"remote\"\n ** module id = 58\n ** module chunks = 0\n **/","module.exports = require(\"jsonix\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jsonix\"\n ** module id = 59\n ** module chunks = 0\n **/","module.exports = require(\"w3c-schemas\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"w3c-schemas\"\n ** module id = 60\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar rp = require(\"raml-1-parser\");\nvar def = rp.ds;\nvar search = rp.search;\nvar _ = require(\"underscore\");\nvar provider = require(\"../suggestion/provider\");\nvar UI = require(\"atom-ui-lib\");\nvar contextActions = require(\"raml-actions\");\nvar suggestions = require(\"./suggestions-panel\");\nvar universe = rp.universes;\nvar universehelpers = rp.universeHelpers;\nvar typeDisplay = require(\"./typeDisplay\");\nvar defaultValues = require('./default-values');\nvar resourceRegistry = rp.utils;\nvar Item = (function () {\n    function Item(_title, description) {\n        if (description === void 0) { description = \"\"; }\n        this._title = _title;\n        this.description = description;\n        this.listeners = [];\n    }\n    Item.prototype.needsSeparateLabel = function () {\n        return false;\n    };\n    Item.prototype.detach = function () {\n        this.dispose();\n        this.children().forEach(function (x) { return x.detach(); });\n    };\n    Item.prototype.addListener = function (r) {\n        this.listeners.push(r);\n    };\n    Item.prototype.removeListener = function (r) {\n        this.listeners = this.listeners.filter(function (x) { return x != r; });\n    };\n    Item.prototype.add = function (i) {\n        throw new Error(\"Not supported\");\n    };\n    Item.prototype.root = function () {\n        if (this.parent) {\n            return this.parent.root();\n        }\n        return this;\n    };\n    Item.prototype.title = function () {\n        return this._title;\n    };\n    Item.prototype.children = function () {\n        return [];\n    };\n    Item.prototype.setDescription = function (desc) {\n        this.description = desc;\n    };\n    Item.prototype.setTitle = function (t) {\n        this._title = t;\n    };\n    Item.prototype.render = function (r) {\n        if (r === void 0) { r = {}; }\n        throw new Error(\"Not Implemented\");\n    };\n    Item.prototype.item = function (name) {\n        return null;\n    };\n    Item.prototype.setError = function (text) {\n    };\n    Item.prototype.clearErrors = function () {\n    };\n    return Item;\n})();\nexports.Item = Item;\nvar TypeDisplayItem = (function (_super) {\n    __extends(TypeDisplayItem, _super);\n    function TypeDisplayItem(node) {\n        _super.call(this, \"Type\", \"\");\n        this.node = node;\n    }\n    TypeDisplayItem.prototype.render = function (r) {\n        return typeDisplay.render(this.node);\n    };\n    TypeDisplayItem.prototype.dispose = function () {\n    };\n    return TypeDisplayItem;\n})(Item);\nexports.TypeDisplayItem = TypeDisplayItem;\nvar Category = (function (_super) {\n    __extends(Category, _super);\n    function Category() {\n        _super.apply(this, arguments);\n        this._children = [];\n    }\n    Category.prototype.add = function (i) {\n        i.parent = this;\n        this._children.push(i);\n    };\n    Category.prototype.children = function () {\n        return this._children;\n    };\n    Category.prototype.plainChildren = function () {\n        return this._children.filter(function (x) { return !(x instanceof Category); });\n    };\n    Category.prototype.categories = function () {\n        return this._children.filter(function (x) { return (x instanceof Category); });\n    };\n    Category.prototype.item = function (name) {\n        var it;\n        this._children.forEach(function (x) {\n            if (x.title() == name) {\n                it = x;\n            }\n            var rr = x.item(name);\n            if (rr) {\n                it = rr;\n            }\n        });\n        return it;\n    };\n    Category.prototype.render = function (r) {\n        var _this = this;\n        if (r === void 0) { r = {}; }\n        var section = this.createSection(r);\n        this._result = section;\n        if (this.description && r.showDescription) {\n            this.descriptionLabel = UI.label(this.description);\n            section.addChild(this.descriptionLabel);\n        }\n        this.contributeTop(section);\n        this.plainChildren().forEach(function (x) { return _this.addChild(section, x); });\n        var wrappedChild = this.createWrappedChild(section);\n        this.subCategories = wrappedChild;\n        var cats = this.categories();\n        var remap = {};\n        cats.forEach(function (x) { return remap[x.title()] = x; });\n        var newCats = [];\n        if (remap[\"General\"]) {\n            newCats.push(remap[\"General\"]);\n            delete remap[\"General\"];\n        }\n        if (remap[\"Facets\"]) {\n            newCats.push(remap[\"Facets\"]);\n            delete remap[\"Facets\"];\n        }\n        for (var c in remap) {\n            newCats.push(remap[c]);\n        }\n        newCats.forEach(function (x) { return _this.addChild(wrappedChild, x); });\n        return section;\n    };\n    Category.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        this._result.dispose();\n    };\n    Category.prototype.createSection = function (r) {\n        if (r.showHeader) {\n            return new UI.Section(UI.h3(this.title()), false);\n        }\n        var pnl = new UI.Panel();\n        pnl.setCaption(this.title());\n        return pnl;\n    };\n    Category.prototype.createWrappedChild = function (section) {\n        return section;\n    };\n    Category.prototype.addChild = function (section, item) {\n        var child = item.render();\n        if (section instanceof UI.TabFolder) {\n            var tf = section;\n            tf.add(child.caption(), UI.Icon.NONE, child);\n        }\n        else {\n            if (item.needsSeparateLabel()) {\n                var firstLabel = UI.label(item.title());\n                firstLabel.margin(0, 5, 0, 0);\n                section.addChild(firstLabel);\n                section.addChild(UI.label(item.description));\n            }\n            section.addChild(child);\n        }\n    };\n    Category.prototype.contributeTop = function (section) {\n    };\n    Category.prototype.dispose = function () {\n    };\n    Category.prototype.setError = function (text) {\n    };\n    Category.prototype.clearErrors = function () {\n        this._children.forEach(function (x) { return x.clearErrors(); });\n    };\n    Category.prototype.update = function (i) {\n    };\n    return Category;\n})(Item);\nvar lastSelectedCaption;\nvar inRender = false;\nvar TopLevelNode = (function (_super) {\n    __extends(TopLevelNode, _super);\n    function TopLevelNode(node) {\n        _super.call(this, node.definition().nameId(), node.definition().description());\n        this.node = node;\n        this.ep = null;\n    }\n    TopLevelNode.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        this._result.dispose();\n    };\n    TopLevelNode.prototype.createWrappedChild = function (section) {\n        var tf = new UI.TabFolder();\n        tf.setOnSelected(function () {\n            if (!inRender) {\n                lastSelectedCaption = (tf.selectedComponent().caption());\n            }\n        });\n        section.addChild(tf);\n        return tf;\n    };\n    TopLevelNode.prototype.subCategoryByNameOrCreate = function (name) {\n        var item = _.find(this.children(), function (x) { return x.title() == name; });\n        if (!item) {\n            var rs = new Category(name);\n            this.add(rs);\n            return rs;\n        }\n        return item;\n    };\n    TopLevelNode.prototype.addItemToCategory = function (name, it) {\n        if (name == null) {\n            this._children.push(it);\n            it.parent = this;\n            return;\n        }\n        this.subCategoryByNameOrCreate(name).add(it);\n    };\n    TopLevelNode.prototype.contributeTop = function (section) {\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n        this.ep = UI.hc(this.errorLabel);\n        this.ep.setDisplay(false);\n        section.addChild(this.ep);\n    };\n    TopLevelNode.prototype.render = function (r) {\n        if (r === void 0) { r = {}; }\n        inRender = true;\n        try {\n            var result = _super.prototype.render.call(this, r);\n            this._options = r;\n            this._panel = result;\n            var tf = this.subCategories;\n            for (var n = 0; n < tf.tabsCount(); n++) {\n                var item = tf.get(n);\n                if (item.header == lastSelectedCaption) {\n                    tf.setSelectedIndex(n);\n                    return result;\n                }\n            }\n            var documentation = \"\";\n            if (this.node.property()) {\n                documentation = this.node.property().description();\n            }\n            else {\n                documentation = this.node.definition().description();\n            }\n            if (documentation.length && !r.showDescription) {\n                result.addChild(UI.html(\"<hr/>\"));\n                result.addChild(UI.label(documentation, UI.Icon.INBOX, UI.TextClasses.SUBTLE));\n            }\n            this.update(this);\n            return result;\n        }\n        finally {\n            inRender = false;\n        }\n    };\n    TopLevelNode.prototype.dispose = function () {\n        this.node = null;\n    };\n    TopLevelNode.prototype.update = function (i) {\n        var _this = this;\n        //this.listeners.forEach(x=>x(i));\n        if (!this._panel) {\n            return;\n        }\n        if (i instanceof PropertyEditorInfo) {\n            var prInfo = i;\n            if (prInfo.property.getAdapter(def.RAMLPropertyService).isTypeExpr() || prInfo.property.isDescriminator()) {\n                rp.utils.updateType(this.node);\n                var extras = this.item(\"Facets\");\n                if (extras && extras._result) {\n                    extras._result.clear();\n                }\n                var item = buildItem(this.node, false);\n                var newExtras = item.item(\"Facets\");\n                if (newExtras) {\n                    if (extras && extras._result) {\n                        extras._children = newExtras._children;\n                        extras._children.forEach(function (x) { return x.parent = extras; });\n                        if (extras._children.length > 0) {\n                            extras._result.setDisplay(true);\n                        }\n                        newExtras.children().forEach(function (x) {\n                            extras._result.addChild(x.render(_this._options));\n                        });\n                    }\n                    else {\n                        this._children.push(newExtras);\n                        if (this._panel) {\n                            this._panel.addChild(newExtras.render(this._options));\n                        }\n                    }\n                }\n                else {\n                    if (extras && extras._result) {\n                        extras._result.setDisplay(false);\n                    }\n                }\n            }\n        }\n        var kp = null;\n        this.node.definition().allProperties().forEach(function (x) {\n            if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n                kp = x;\n            }\n        });\n        if (kp) {\n            var keyItem = this.item(kp.nameId());\n            if (keyItem) {\n                var m = keyItem.fld;\n                var vl = m.getBinding().get();\n                if ((!vl) || vl.trim().length == 0) {\n                    this._panel.getBinding().setStatus(UI.errorStatus(\"\"));\n                }\n                else {\n                    this._panel.getBinding().setStatus(UI.okStatus());\n                }\n            }\n        }\n        var errors;\n        if (this.node.property() && universehelpers.isExampleProperty(this.node.property())) {\n            var parent = this.node.parent();\n            if (parent) {\n                var parsed = parent.parsedType();\n                var exampleMeta = _.find(parsed.metaInfo || [], function (meta) {\n                    return meta && meta._name === 'example';\n                });\n                if (exampleMeta) {\n                    var validateObject = exampleMeta.validateSelf(this.node.types().getAnnotationTypeRegistry());\n                    errors = ((validateObject && validateObject.getErrors()) || []).map(function (error) {\n                        return _this.node.createIssue(error);\n                    });\n                }\n            }\n        }\n        else {\n            errors = this.node.errors();\n        }\n        this.clearErrors();\n        this.ep.setDisplay(false);\n        if (!resourceRegistry.hasAsyncRequests() && errors && errors.length > 0) {\n            var notFound = [];\n            errors.forEach(function (error) {\n                if (error.extras && error.extras.length > 0) {\n                    error = error.extras[0];\n                }\n                var item = _this.item(error.node.name());\n                if (item) {\n                    item.setError(error.message);\n                }\n                else {\n                    notFound.push(error);\n                }\n            });\n            if (notFound.length > 0) {\n                this.errorLabel.setIcon(UI.Icon.BUG);\n                var et = notFound.map(function (x) { return x.node.name() + \":\" + x.message; }).join(\",\");\n                if (et.length > 100) {\n                    et = et.substring(0, 100) + \"...\";\n                }\n                this.errorLabel.setText(et);\n                this.ep.setDisplay(true);\n            }\n            else {\n                this.ep.setDisplay(false);\n            }\n        }\n    };\n    return TopLevelNode;\n})(Category);\nvar CheckBox2 = (function (_super) {\n    __extends(CheckBox2, _super);\n    function CheckBox2() {\n        _super.apply(this, arguments);\n    }\n    CheckBox2.prototype.setLabelWidth = function (n) {\n        this.setStyle(\"margin-left\", (n + 2) + \"ch\");\n    };\n    return CheckBox2;\n})(UI.CheckBox);\nvar PropertyEditorInfo = (function (_super) {\n    __extends(PropertyEditorInfo, _super);\n    function PropertyEditorInfo(property, node) {\n        var _this = this;\n        _super.call(this, property.nameId(), property.description());\n        this.property = property;\n        this.node = node;\n        this.rendered = false;\n        this.update = function (newValue, oldValue) {\n            if (!_this.rendered) {\n                return;\n            }\n            _this.fromEditorToModel(newValue, oldValue);\n        };\n    }\n    PropertyEditorInfo.prototype.dispose = function () {\n        this.property = null;\n        this.node = null;\n        this.fld.getBinding().removeListener(this.update);\n    };\n    PropertyEditorInfo.prototype.getDefaultValue = function () {\n        return defaultValues.getDefaultValue(this.node, this.property);\n    };\n    PropertyEditorInfo.prototype.hasDefault = function () {\n        return defaultValues.hasDefault(this.property);\n    };\n    PropertyEditorInfo.prototype.clearErrors = function () {\n        this.setError(null);\n    };\n    PropertyEditorInfo.prototype.setError = function (text) {\n        if (text) {\n            this.errorLabel.setText(text);\n            this.errorLabel.setDisplay(true);\n        }\n        else {\n            if (this.errorLabel) {\n                this.errorLabel.setDisplay(false);\n            }\n        }\n    };\n    PropertyEditorInfo.prototype.fromEditorToModel = function (newValue, oldValue) {\n        var field = this.fld;\n        var vl = this.toLocalValue(field.getBinding().get());\n        if (vl == null) {\n            vl = \"\";\n        }\n        if (vl === true) {\n            vl = \"true\";\n        }\n        if (vl === false) {\n            vl = \"\";\n        }\n        var attr = this.node.attr(this.property.nameId());\n        var av = \"\";\n        if (attr) {\n            var l = this.toLocalValue(this.toUIValue(attr.value()));\n            if (l) {\n                av = \"\" + l;\n            }\n        }\n        if (av == vl) {\n            return;\n        }\n        if (vl.length > 0) {\n            if (attr && attr.lowLevel().includePath()) {\n                var path = attr.lowLevel().includePath();\n                var actualUnit = attr.lowLevel().unit().resolve(path);\n                if (actualUnit) {\n                    var apath = actualUnit.absolutePath();\n                    fs.writeFileSync(apath, vl);\n                }\n                return;\n            }\n            if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n                return;\n            }\n            attr = this.node.attrOrCreate(this.property.nameId());\n            attr.setValue(\"\" + vl);\n        }\n        else {\n            if (attr) {\n                if (!this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n                    attr.remove();\n                }\n            }\n        }\n        if (attr.lowLevel() && attr.lowLevel().unit() && attr.lowLevel().unit() != this.node.lowLevel().unit()) {\n            provider.saveUnit(attr.lowLevel().unit());\n        }\n        var root = this.root();\n        if (root) {\n            root.update(this);\n        }\n    };\n    PropertyEditorInfo.prototype.toLocalValue = function (inputValue) {\n        return inputValue;\n    };\n    PropertyEditorInfo.prototype.toUIValue = function (value) {\n        return value;\n    };\n    PropertyEditorInfo.prototype.fromModelToEditor = function () {\n        var attr = this.node.attr(this.property.nameId());\n        if (attr || this.hasDefault()) {\n            var value;\n            if (this.property.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n                value = inheritedContent(this.node);\n            }\n            var val = value || (attr ? attr.value() : this.getDefaultValue());\n            if (val == null) {\n                val = \"\";\n            }\n            this.fld.getBinding().set(this.toUIValue(\"\" + val));\n        }\n    };\n    PropertyEditorInfo.prototype.render = function () {\n        var container = new UI.WrapPanel();\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n        this.errorLabel.setDisplay(false);\n        this.errorLabel.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n        var field = this.createField();\n        this.fld = field;\n        field.getBinding().addListener(this.update);\n        container.setCaption(this.title());\n        this.fromModelToEditor();\n        container.addChild(field);\n        var attr = this.node.attr(this.property.nameId());\n        if (attr) {\n            var val = attr.value();\n        }\n        var np = this.property.valueDocProvider();\n        if (np) {\n            var ac = np(val);\n            if (ac == null) {\n                ac = \"\";\n            }\n            var lbl = UI.label(ac, UI.Icon.INFO, UI.TextClasses.SUBTLE);\n            if (!ac) {\n                lbl.setDisplay(false);\n            }\n            container.addChild(lbl);\n            field.getBinding().addListener(function (x) {\n                var newDoc = np(field.getBinding().get());\n                if (!newDoc) {\n                    newDoc = \"\";\n                }\n                lbl.setText(newDoc);\n                lbl.setDisplay(newDoc.length > 0);\n            });\n            lbl.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n        }\n        if (attr && attr.lowLevel().includePath()) {\n            container.addChild(UI.label(\"Included from \" + attr.lowLevel().includePath(), UI.Icon.INFO, UI.TextClasses.SUBTLE));\n        }\n        //container.addChild(this.descLabel)\n        container.addChild(this.errorLabel);\n        this.rendered = true;\n        return container;\n    };\n    PropertyEditorInfo.prototype.createField = function () {\n        return UI.texfField(this.needsSeparateLabel() ? \"\" : this.property.nameId(), \"\", function (x) { });\n    };\n    return PropertyEditorInfo;\n})(Item);\nvar SimpleMultiEditor = (function (_super) {\n    __extends(SimpleMultiEditor, _super);\n    function SimpleMultiEditor() {\n        _super.apply(this, arguments);\n    }\n    SimpleMultiEditor.prototype.fromEditorToModel = function () {\n        var field = this.fld;\n        var vl = field.getBinding().get();\n        if (vl == null) {\n            vl = \"\";\n        }\n        var attrs = this.node.attributes(this.property.nameId());\n        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n        if (av == vl) {\n            return;\n        }\n        var ww = vl.split(\",\");\n        var vl = ww.filter(function (x) { return x.trim().length > 0; }).map(function (x) { return x.trim(); });\n        if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n            return;\n        }\n        var attribute = this.node.attrOrCreate(this.property.nameId());\n        attribute.setValues(vl);\n        var root = this.root();\n        if (root) {\n            root.update(this);\n        }\n    };\n    SimpleMultiEditor.prototype.fromModelToEditor = function () {\n        var attrs = this.node.attributes(this.property.nameId());\n        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n        this.fld.getBinding().set(av);\n    };\n    return SimpleMultiEditor;\n})(PropertyEditorInfo);\nfunction escapeValue(v) {\n    if (v.length > 0) {\n        if (v.charAt(0) == \"'\") {\n            return '\"' + v + '\"';\n        }\n        if (v.charAt(0) == '\"') {\n            return '\"' + v + '\"';\n        }\n    }\n    if (v.indexOf(' ') != -1 || v.indexOf(',') != -1) {\n        if (v.indexOf('\"') == -1) {\n            return '\"' + v + '\"';\n        }\n        if (v.indexOf(\"'\") == -1) {\n            return \"'\" + v + \"'\";\n        }\n    }\n    return v;\n}\nvar CheckBoxField = (function (_super) {\n    __extends(CheckBoxField, _super);\n    function CheckBoxField() {\n        _super.apply(this, arguments);\n    }\n    CheckBoxField.prototype.createField = function () {\n        return new CheckBox2(this.property.nameId(), UI.Icon.NONE, function (x) { });\n    };\n    CheckBoxField.prototype.toUIValue = function (value) {\n        if (!value) {\n            return false;\n        }\n        if (value === true || value.trim() === 'true') {\n            return true;\n        }\n        return false;\n    };\n    CheckBoxField.prototype.toLocalValue = function (value) {\n        return value + \"\";\n    };\n    return CheckBoxField;\n})(PropertyEditorInfo);\nvar ActionsItem = (function (_super) {\n    __extends(ActionsItem, _super);\n    function ActionsItem(node) {\n        _super.call(this, \"Actions\", \"\");\n        this.node = node;\n    }\n    ActionsItem.prototype.render = function (r) {\n        return suggestions.generateSuggestionsPanel(this.node);\n    };\n    ActionsItem.prototype.dispose = function () {\n        this.node = null;\n    };\n    return ActionsItem;\n})(Item);\nvar ContextActionsItem = (function (_super) {\n    __extends(ContextActionsItem, _super);\n    function ContextActionsItem(node, name, actions) {\n        _super.call(this, name, \"\");\n        this.actions = actions;\n    }\n    ContextActionsItem.prototype.dispose = function () {\n    };\n    ContextActionsItem.prototype.render = function (r) {\n        var result = UI.hc();\n        result.addChild(UI.h3(this.title()));\n        this.actions.forEach(function (x) {\n            result.addChild(UI.button(x.name, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.CHECKLIST, function (a) { return x.onClick(); }).margin(3, 3, 3, 3));\n        });\n        return result;\n    };\n    return ContextActionsItem;\n})(Item);\nvar MarkdownFieldUI = (function (_super) {\n    __extends(MarkdownFieldUI, _super);\n    function MarkdownFieldUI(text, onchange) {\n        _super.call(this, text, onchange);\n        this.margin(0, 0, 6, 12);\n        this.setMini(false);\n        this.setStyle(\"min-height\", \"100px\");\n        //this.setStyle(\"max-height\",\"200px\");\n        this.setStyle(\"border\", \"solid\");\n        this.setStyle(\"border-width\", \"1px\");\n        this.setStyle(\"border-radius\", \"2px\");\n        this.setStyle(\"font-size\", \"1.15em\");\n        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n        this.setGrammar('source.gfm');\n    }\n    MarkdownFieldUI.prototype.setLabelWidth = function () {\n    };\n    MarkdownFieldUI.prototype.setLabelHeight = function () {\n    };\n    MarkdownFieldUI.prototype.setRequired = function (v) {\n    };\n    return MarkdownFieldUI;\n})(UI.AtomEditorElement);\nvar XMLField = (function (_super) {\n    __extends(XMLField, _super);\n    function XMLField(text, onchange) {\n        _super.call(this, text, onchange);\n        this.margin(0, 0, 6, 12);\n        this.setMini(false);\n        this.setStyle(\"min-height\", \"100px\");\n        //this.setStyle(\"max-height\",\"200px\");\n        this.setStyle(\"border\", \"solid\");\n        this.setStyle(\"border-width\", \"1px\");\n        this.setStyle(\"border-radius\", \"2px\");\n        this.setStyle(\"font-size\", \"1.15em\");\n        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n        this.setGrammar('text.xml');\n    }\n    XMLField.prototype.setLabelWidth = function () {\n    };\n    XMLField.prototype.setLabelHeight = function () {\n    };\n    XMLField.prototype.setRequired = function (v) {\n    };\n    return XMLField;\n})(UI.AtomEditorElement);\nvar JSONField = (function (_super) {\n    __extends(JSONField, _super);\n    function JSONField(text, onchange) {\n        _super.call(this, text, onchange);\n        this.margin(0, 0, 6, 12);\n        this.setMini(false);\n        this.setStyle(\"min-height\", \"100px\");\n        //this.setStyle(\"max-height\",\"200px\");\n        this.setStyle(\"border\", \"solid\");\n        this.setStyle(\"border-width\", \"1px\");\n        this.setStyle(\"border-radius\", \"2px\");\n        this.setStyle(\"font-size\", \"1.15em\");\n        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n        this.setGrammar('source.json');\n    }\n    JSONField.prototype.setLabelWidth = function () {\n    };\n    JSONField.prototype.setLabelHeight = function () {\n    };\n    JSONField.prototype.setRequired = function (v) {\n    };\n    return JSONField;\n})(UI.AtomEditorElement);\nvar MarkdownField = (function (_super) {\n    __extends(MarkdownField, _super);\n    function MarkdownField() {\n        _super.apply(this, arguments);\n    }\n    MarkdownField.prototype.createField = function () {\n        var editor = new MarkdownFieldUI(\"\", function (x) { });\n        return editor;\n    };\n    MarkdownField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    return MarkdownField;\n})(PropertyEditorInfo);\nvar ExampleField = (function (_super) {\n    __extends(ExampleField, _super);\n    function ExampleField(property, node, text, title) {\n        _super.call(this, property, node);\n        this.property = property;\n        this.node = node;\n        this.text = text;\n        this.setDescription(\"\");\n        if (title)\n            this.setTitle(title);\n    }\n    ExampleField.prototype.createField = function () {\n        var editor = new JSONField(this.text, function (x) { });\n        return editor;\n    };\n    ExampleField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    ExampleField.prototype.fromModelToEditor = function () {\n    };\n    ExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n    };\n    return ExampleField;\n})(PropertyEditorInfo);\nvar XMLExampleField = (function (_super) {\n    __extends(XMLExampleField, _super);\n    function XMLExampleField(property, node, text, title) {\n        _super.call(this, property, node);\n        this.property = property;\n        this.node = node;\n        this.text = text;\n        this.setDescription(\"\");\n        if (title)\n            this.setTitle(title);\n    }\n    XMLExampleField.prototype.createField = function () {\n        var editor = new XMLField(this.text, function (x) { });\n        return editor;\n    };\n    XMLExampleField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    XMLExampleField.prototype.fromModelToEditor = function () {\n    };\n    XMLExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n    };\n    return XMLExampleField;\n})(PropertyEditorInfo);\nvar XMLSchemaField = (function (_super) {\n    __extends(XMLSchemaField, _super);\n    function XMLSchemaField() {\n        _super.apply(this, arguments);\n    }\n    XMLSchemaField.prototype.createField = function () {\n        var editor = new XMLField(\"\", function (x) { });\n        return editor;\n    };\n    XMLSchemaField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    return XMLSchemaField;\n})(PropertyEditorInfo);\nvar JSONSchemaField = (function (_super) {\n    __extends(JSONSchemaField, _super);\n    function JSONSchemaField() {\n        _super.apply(this, arguments);\n    }\n    JSONSchemaField.prototype.createField = function () {\n        var editor = new JSONField(\"\", function (x) { });\n        return editor;\n    };\n    JSONSchemaField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    return JSONSchemaField;\n})(PropertyEditorInfo);\nvar SelectBox = (function (_super) {\n    __extends(SelectBox, _super);\n    function SelectBox() {\n        _super.apply(this, arguments);\n    }\n    SelectBox.prototype.createField = function () {\n        var options = valueOptions(this.property, this.node);\n        var a = this.node.attr(this.property.nameId());\n        if (a) {\n            if (!_.find(options, function (x) { return x == a.value(); })) {\n                options.push(a.value());\n            }\n        }\n        if (!this.property.isRequired() && !this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n            options = [\"\"].concat(options);\n        }\n        var select = new UI.SelectField(this.property.nameId(), function (x) { }, \"\", UI.Icon.NONE, options);\n        select.getActualField().setOptions(options);\n        // select.clearUI();\n        return select;\n    };\n    return SelectBox;\n})(PropertyEditorInfo);\nvar TypeSelectBox = (function (_super) {\n    __extends(TypeSelectBox, _super);\n    function TypeSelectBox() {\n        _super.apply(this, arguments);\n    }\n    TypeSelectBox.prototype.fromEditorToModel = function (newValue, oldValue) {\n        //current implementation only allows changing the facets of certain types for safety\n        //TODO change this to arbitrary facets (remove type filtering)\n        var _this = this;\n        var oldNames = [];\n        var savedAttrs = [];\n        if (newValue && oldValue) {\n            try {\n                this.node.definition().allSuperTypes().forEach(function (superType) {\n                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n                        _this.addTypeFacets(superType, oldNames);\n                    }\n                });\n                savedAttrs = [].concat(this.node.attrs());\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n        _super.prototype.fromEditorToModel.call(this);\n        if (newValue && oldValue) {\n            try {\n                //collecting facets allowed to remove\n                var currentUniverse = this.node.definition().universe();\n                var names = [];\n                this.node.definition().allSuperTypes().forEach(function (superType) {\n                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n                        _this.addTypeFacets(superType, names);\n                    }\n                });\n                if (oldNames.length > 0 && names.length > 0) {\n                    savedAttrs.forEach(function (attribute) {\n                        if (_.find(oldNames, function (facetName) { return facetName == attribute.name(); })\n                            && !_.find(names, function (facetName) { return facetName == attribute.name(); })) {\n                            _this.node.remove(attribute);\n                        }\n                    });\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n    TypeSelectBox.prototype.isAllowedTypeToReplaceFacets = function (currentTypeDef) {\n        return currentTypeDef.key() == universe.Universe10.StringTypeDeclaration ||\n            currentTypeDef.key() == universe.Universe10.BooleanTypeDeclaration ||\n            currentTypeDef.key() == universe.Universe10.NumberTypeDeclaration ||\n            currentTypeDef.key() == universe.Universe10.IntegerTypeDeclaration;\n    };\n    TypeSelectBox.prototype.addTypeFacets = function (currentTypeDef, names) {\n        currentTypeDef.properties().map(function (property) { return property.nameId(); }).forEach(function (name) { return names.push(name); });\n    };\n    return TypeSelectBox;\n})(SelectBox);\nvar TreeField = (function (_super) {\n    __extends(TreeField, _super);\n    function TreeField(input, caption) {\n        _super.call(this);\n        this.input = input;\n        var rend = {\n            render: function (n) {\n                var key = n.key();\n                var value = n.value();\n                if (typeof value === 'number' || typeof value === 'boolean') {\n                    value = \"\" + value;\n                }\n                if (typeof value != 'string') {\n                    value = \"\";\n                }\n                if (value.length > 30) {\n                    value = value.substring(0, 20) + \"...\";\n                }\n                if (!key) {\n                    if (value) {\n                        key = value;\n                        value = \"\";\n                    }\n                    else {\n                        key = \"-\";\n                        value = \"\";\n                    }\n                }\n                var res = UI.label(key, UI.Icon.CIRCUIT_BOARD, UI.TextClasses.HIGHLIGHT);\n                value = UI.label(value ? (\":\" + value) : \"\", UI.Icon.NONE, UI.TextClasses.SUCCESS);\n                var result = UI.hc(res, value);\n                return result;\n            }\n        };\n        var getChildren = function (x) {\n            return x.children();\n        };\n        var viewer = UI.treeViewer(getChildren, rend, function (x) { return x.key(); });\n        var inputV = {\n            children: function () {\n                return [input];\n            }\n        };\n        viewer.setInput(inputV);\n        this.addChild(UI.label(caption));\n        this.addChild(viewer);\n    }\n    TreeField.prototype.setLabelWidth = function () {\n    };\n    TreeField.prototype.setLabelHeight = function () {\n    };\n    TreeField.prototype.setRequired = function (v) {\n    };\n    return TreeField;\n})(UI.Panel);\nvar StructuredField = (function (_super) {\n    __extends(StructuredField, _super);\n    function StructuredField(pr, node, stvalue) {\n        _super.call(this, pr, node);\n        this.stvalue = stvalue;\n    }\n    StructuredField.prototype.createField = function () {\n        var tm = new TreeField(this.stvalue.lowLevel(), this.title() + \":\");\n        return tm;\n    };\n    return StructuredField;\n})(PropertyEditorInfo);\nvar LowLevelTreeField = (function (_super) {\n    __extends(LowLevelTreeField, _super);\n    function LowLevelTreeField(pr, node, lowLevel, title) {\n        _super.call(this, pr, node);\n        this.lowLevel = lowLevel;\n        if (title)\n            this.setTitle(title);\n    }\n    LowLevelTreeField.prototype.createField = function () {\n        var tm = new TreeField(this.lowLevel, this.title() + \":\");\n        return tm;\n    };\n    return LowLevelTreeField;\n})(PropertyEditorInfo);\nfunction category(p, node) {\n    if (p.getAdapter(def.RAMLPropertyService).isKey() || p.isRequired()) {\n        return null;\n    }\n    if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n        if (universehelpers.isDocumentationProperty(p) ||\n            universehelpers.isUsageProperty(p) ||\n            universehelpers.isDescriptionProperty(p) ||\n            universehelpers.isDisplayNameProperty(p) ||\n            universehelpers.isTitleProperty(p)) {\n            return \"Documentation\";\n        }\n        if (universehelpers.isAnnotationsProperty(p) ||\n            universehelpers.isIsProperty(p) ||\n            universehelpers.isSecuredByProperty(p) ||\n            (universehelpers.isTypeProperty(p) && !p.getAdapter(def.RAMLPropertyService).isTypeExpr())) {\n            return \"References\";\n        }\n        if (universehelpers.isProtocolsProperty(p)) {\n            return \"General\";\n        }\n    }\n    if (universehelpers.isTypeProperty(p)) {\n        if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n            return null;\n        }\n    }\n    if (node.property()) {\n        if (p.domain() && p.domain() != node.property().range()) {\n            return \"Facets\";\n        }\n    }\n    return \"General\";\n}\nvar valueOptions = function (x, node) {\n    var vls = search.enumValues(x, node);\n    if (universehelpers.isNameProperty(x)) {\n        if (node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n            if (node.property() && universehelpers.isBodyProperty(node.property())) {\n                if (!(node.property() instanceof def.UserDefinedProp)) {\n                    if (node.parent() &&\n                        universehelpers.isMethodType(node.parent().definition())) {\n                        return [\"application/json\", \"application/xml\", \"multipart/form-data\", \"application/x-www-form-urlencoded\"];\n                    }\n                    return [\"application/json\", \"application/xml\"];\n                }\n            }\n        }\n    }\n    if ((!vls) || vls.length == 0) {\n        var sug = x.suggester();\n        if (sug) {\n            vls = sug(node);\n        }\n        if ((!vls) || vls.length == 0) {\n            vls = x.getOftenKeys();\n        }\n    }\n    return _.unique(vls);\n};\nfunction addExampleControl(property, node, exampleElement, example, container) {\n    if (example.isYAML()) {\n        container.addItemToCategory(category(property, node), new LowLevelTreeField(property, node, exampleElement.lowLevel(), example.name()));\n    }\n    else if (example.isJSONString()) {\n        container.addItemToCategory(category(property, node), new ExampleField(property, node, example.asString(), example.name()));\n    }\n    else if (example.isXMLString()) {\n        container.addItemToCategory(category(property, node), new XMLExampleField(property, node, example.asString(), example.name()));\n    }\n}\nfunction buildItem(node, dialog) {\n    rp.utils.updateType(node);\n    var props = node.propertiesAllowedToUse();\n    var result = new TopLevelNode(node);\n    if (node.property() && node.property().description()) {\n        result.setDescription(node.property().description());\n    }\n    var isFragment = false;\n    if (node.definition() && !node.parent()) {\n        var fragmentName = rp.utils.getFragmentDefenitionName(node);\n        var superTypes = node.definition().allSuperTypes();\n        superTypes.push(node.definition());\n        superTypes.forEach(function (superType) {\n            if (superType.nameId && superType.nameId() === fragmentName) {\n                isFragment = true;\n            }\n        });\n    }\n    props = props.filter(function (x) {\n        if (isFragment && universehelpers.isNameProperty(x)) {\n            return false;\n        }\n        if ((universehelpers.isNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n            return false;\n        }\n        if ((universehelpers.isDisplayNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n            return false;\n        }\n        return true;\n    });\n    props = props.sort(function (x, y) {\n        if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n            return -1;\n        }\n        if (y.getAdapter(def.RAMLPropertyService).isKey()) {\n            return 1;\n        }\n        if (x.nameId() < y.nameId()) {\n            return -1;\n        }\n        return 1;\n    });\n    props.forEach(function (x) {\n        if (x.isValueProperty()) {\n            //\n            if (universehelpers.isAnnotationsProperty(x)) {\n                //we ban annotations from appearing as we can not provide the editing\n                //with this mechanism\n                return;\n            }\n            if (universehelpers.isBooleanTypeType(x.range())) {\n                return;\n            }\n            if (universehelpers.isMarkdownStringType(x.range())) {\n                return;\n            }\n            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/json\"){\n            //     result.addItemToCategory(category(x,node), new ExampleField(x, node));\n            //     return;\n            // }\n            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/xml\"){\n            //     result.addItemToCategory(category(x,node), new XMLExampleField(x, node));\n            //     return;\n            // }\n            var nm = node.attr(x.nameId());\n            if (nm && typeof nm.value() === \"object\") {\n                result.addItemToCategory(category(x, node), new StructuredField(x, node, nm.value()));\n                return;\n            }\n            if (x.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n                var vl = inheritedContent(node);\n                if (vl) {\n                    if (vl.trim().charAt(0) == '{') {\n                        result.addItemToCategory(category(x, node), new JSONSchemaField(x, node));\n                        return;\n                    }\n                    if (vl.trim().charAt(0) == '<') {\n                        result.addItemToCategory(category(x, node), new XMLSchemaField(x, node));\n                        return;\n                    }\n                }\n            }\n            if (universehelpers.isSchemaProperty(x)\n                && x.domain() && x.domain().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n                return;\n            }\n            var vls = valueOptions(x, node);\n            if (vls && vls.length > 0 && ((x.domain() && x.domain().getAdapter(def.RAMLService).isUserDefined()))) {\n                if (universehelpers.isTypeProperty(x) &&\n                    node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n                    result.addItemToCategory(category(x, node), new TypeSelectBox(x, node));\n                }\n                else {\n                    result.addItemToCategory(category(x, node), new SelectBox(x, node));\n                }\n            }\n            else {\n                if (x.isMultiValue()) {\n                    result.addItemToCategory(category(x, node), new SimpleMultiEditor(x, node));\n                }\n                else {\n                    result.addItemToCategory(category(x, node), new PropertyEditorInfo(x, node));\n                }\n            }\n        }\n    });\n    props.forEach(function (x) {\n        if (x.isValueProperty()) {\n            if (universehelpers.isBooleanTypeType(x.range())) {\n                result.addItemToCategory(category(x, node), new CheckBoxField(x, node));\n            }\n        }\n    });\n    props.forEach(function (x) {\n        if (x.isValueProperty()) {\n            if (universehelpers.isMarkdownStringType(x.range())) {\n                result.addItemToCategory(category(x, node), new MarkdownField(x, node));\n            }\n        }\n    });\n    if (universehelpers.isTypeDeclarationSibling(node.definition())) {\n        props.forEach(function (x) {\n            if (universehelpers.isExampleProperty(x)) {\n                var exampleElement = node.element(universe.Universe10.TypeDeclaration.properties.example.name);\n                if (exampleElement) {\n                    var examples = node.localType().examples();\n                    if (examples && examples.length == 1) {\n                        var example = examples[0];\n                        addExampleControl(x, node, exampleElement, example, result);\n                    }\n                }\n            }\n            else if (universehelpers.isExamplesProperty(x)) {\n                var exampleElements = node.elementsOfKind(universe.Universe10.TypeDeclaration.properties.examples.name);\n                if (exampleElements && exampleElements.length > 0) {\n                    var examples = node.localType().examples();\n                    exampleElements.forEach(function (exampleElement) {\n                        var exampleElementName = exampleElement.attrValue(universe.Universe10.ExampleSpec.properties.name.name);\n                        if (exampleElementName) {\n                            var example = _.find(examples, function (currentExample) { return currentExample.name() == exampleElementName; });\n                            if (example) {\n                                addExampleControl(x, node, exampleElement, example, result);\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n    if (!dialog) {\n        result.addItemToCategory(\"Palette\", new ActionsItem(node));\n        var visibleActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n        var cats = _.groupBy(visibleActions, function (x) { return x.category.join(\"/\"); });\n        for (var cat in cats) {\n            result.addItemToCategory(\"Palette\", new ContextActionsItem(node, cat, cats[cat]));\n        }\n    }\n    if (node.definition().getAdapter(def.RAMLService).isUserDefined() || node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n        result.addItemToCategory(\"Type\", new TypeDisplayItem(node));\n    }\n    return result;\n}\nexports.buildItem = buildItem;\nfunction inheritedContent(node) {\n    var type = (node.associatedType && node.associatedType()) || (node.localType && node.localType());\n    while (type) {\n        if (type.superTypes().length > 1) {\n            return '';\n        }\n        if (type.isExternal()) {\n            return type.schemaString;\n        }\n        type = type.superTypes()[0];\n    }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/details2.js\n ** module id = 61\n ** module chunks = 0\n **/","var KeyValuePair = (function () {\n    function KeyValuePair() {\n    }\n    return KeyValuePair;\n})();\nexports.KeyValuePair = KeyValuePair;\nvar Map = (function () {\n    function Map(ms) {\n        var _this = this;\n        if (ms === void 0) { ms = []; }\n        this.mappings = [];\n        ms.forEach(function (m) { return _this.mappings.push(m); });\n    }\n    Map.prototype.volume = function () { return this.mappings.length; };\n    Map.prototype.pairs = function () { return [].concat(this.mappings); };\n    Map.prototype.set = function (key, value) {\n        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n        if (pairs.length == 0)\n            this.mappings.push({ key: key, value: value });\n        else\n            pairs[0].value = value;\n    };\n    Map.prototype.get = function (key) {\n        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n        return (pairs.length == 0) ? null : pairs[0].value;\n    };\n    Map.prototype.map = function (callbackfn) {\n        return this.mappings.map(function (x) { return x.value; }).map(callbackfn);\n    };\n    Map.prototype.forEach = function (callbackfn) {\n        this.mappings.map(function (x) { return x.value; }).forEach(callbackfn);\n    };\n    Map.prototype.filter = function (callbackfn) {\n        return this.mappings.map(function (x) { return x.value; }).filter(callbackfn);\n    };\n    return Map;\n})();\nexports.Map = Map;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/pair.js\n ** module id = 62\n ** module chunks = 0\n **/","module.exports = require(\"mime\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mime\"\n ** module id = 63\n ** module chunks = 0\n **/","/// <reference path=\"../typings/main.d.ts\" />\nvar invariant = require('invariant');\nvar exists = function (v) { return (v != null); };\nvar globalEmptyOpt;\nvar Opt = (function () {\n    function Opt(_value) {\n        var _this = this;\n        this._value = _value;\n        this._isDefined = false;\n        this._isEmpty = true;\n        this._arr = undefined;\n        this.getOrThrow = function () {\n            invariant(_this._isDefined, 'Opt is empty. Use `Opt#getOrElse` or check `Opt#isDefined`.');\n            return _this._value;\n        };\n        this.value = function () { return _this._value; };\n        this.isDefined = function () { return _this._isDefined; };\n        this.isEmpty = function () { return _this._isEmpty; };\n        this.toArray = function () { return _this._arr || (_this._arr = _this._isDefined ? [_this._value] : []); };\n        this.getOrElse = function (v) { return _this._isDefined ? _this._value : v; };\n        this.getOrElseF = function (v) { return _this._isDefined ? _this._value : v(); };\n        this.map = function (f) { return _this._isEmpty ? Opt.empty() : new Opt(f(_this._value)); };\n        this.flatMap = function (f) { return _this.map(f).getOrElse(Opt.empty()); };\n        this.equals = function (other) {\n            invariant(other instanceof Opt, 'Expected other to be an `Opt`, but got `%s`', typeof other);\n            return (_this._isDefined === other.isDefined()) && (_this._value === other.value());\n        };\n        if (exists(this._value)) {\n            this._isDefined = true;\n            this._isEmpty = false;\n        }\n    }\n    Opt.prototype.forEach = function (fn) {\n        if (this.isDefined()) {\n            fn(this._value);\n        }\n    };\n    /**\n     * You can always create an empty option by hand just by calling new Opt<T>()\n     * but calling this method will return a global instance instead of allocating a new one each time\n     */\n    Opt.empty = function () { return (globalEmptyOpt || (globalEmptyOpt = new Opt())); };\n    return Opt;\n})();\nmodule.exports = Opt;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Opt.js\n ** module id = 64\n ** module chunks = 0\n **/","module.exports = require(\"marked\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"marked\"\n ** module id = 65\n ** module chunks = 0\n **/","module.exports = require(\"classnames\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"classnames\"\n ** module id = 66\n ** module chunks = 0\n **/","module.exports = require(\"react-pure-render/component\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react-pure-render/component\"\n ** module id = 67\n ** module chunks = 0\n **/","module.exports = require(\"pretty-data\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"pretty-data\"\n ** module id = 68\n ** module chunks = 0\n **/","module.exports = require(\"invariant\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"invariant\"\n ** module id = 69\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar UI = require(\"atom-ui-lib\");\nvar hl = require(\"raml-1-parser\");\nvar universes = hl.universes;\nvar stubs = hl.stubs;\nvar _ = require(\"underscore\");\nvar ds = hl.ds;\nvar editorTools = require(\"./editor-tools\");\nvar Inserter = (function () {\n    function Inserter(value, property, node) {\n        this.value = value;\n        this.property = property;\n        this.node = node;\n    }\n    Inserter.prototype.insert = function () {\n        var rn = this.property.range();\n        var key = this.value;\n        if (this.property.nameId() == universes.Universe10.Method.properties.body.name) {\n            key = \"application/json\";\n        }\n        if (this.property.nameId() == universes.Universe10.MethodBase.properties.responses.name) {\n            key = \"200\";\n        }\n        //TODO we need to take care of keys globally, including collections\n        //if (this.property.nameId() == universes.Universe10.TypeDeclaration.properties.xml.name\n        //    && this.node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name)) {\n        //    key = universes.Universe10.XMLSerializationHints.properties.name.name;\n        //}\n        var newNode = stubs.createStubNode(rn, this.property, key);\n        editorTools.aquireManager()._cleanOutline = true;\n        //this is a hack TODO FIX ME we should remove it after we will fix partial reconcile on outline\n        this.node.add(newNode);\n        editorTools.aquireManager().patchCurrentNode(this.node);\n    };\n    return Inserter;\n})();\nfunction generateSuggestionsPanel(node) {\n    var cm = node.definition().allProperties();\n    var result = UI.vc();\n    var hc = UI.hc();\n    result.addChild(UI.h3(\"Insertions and Delete: \"));\n    result.addChild(hc);\n    cm.forEach(function (x) {\n        if (x.isValueProperty()) {\n            return;\n        }\n        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n            return;\n        }\n        if (_.find(node.lowLevel().children(), function (y) { return y.key() == x.nameId(); })) {\n            return;\n        }\n        if (node.lowLevel().includesContents()) {\n            return;\n        }\n        var inserter = new Inserter(\"\", x, node);\n        hc.addChild(UI.button(x.nameId(), UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.INFO, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n    });\n    cm.forEach(function (x) {\n        if (x.isValueProperty()) {\n            return;\n        }\n        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n            var enums = x.enumOptions();\n            if (enums) {\n                enums.forEach(function (y) {\n                    if (_.find(node.lowLevel().children(), function (z) { return z.key() == y; })) {\n                        return;\n                    }\n                    if (node.lowLevel().includesContents()) {\n                        return;\n                    }\n                    var inserter = new Inserter(y, x, node);\n                    hc.addChild(UI.button(y, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.WARNING, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n                });\n            }\n            return;\n        }\n    });\n    hc.addChild(UI.button(\"Delete\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.ERROR, UI.Icon.NONE, function (x) {\n        if (node.parent()) {\n            node.parent().remove(node);\n        }\n        else {\n            node.lowLevel().unit().updateContent('');\n            editorTools.aquireManager().updateText();\n            editorTools.aquireManager().updateDetails();\n        }\n    }).margin(3, 3, 3, 3));\n    return result;\n}\nexports.generateSuggestionsPanel = generateSuggestionsPanel;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/suggestions-panel.js\n ** module id = 70\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar _ = require(\"underscore\");\nvar UI = require(\"atom-ui-lib\");\nvar hl = require(\"raml-1-parser\");\nvar def = hl.ds;\nfunction findBuiltInValueType(type) {\n    if (type.isValueType() && type.isBuiltIn())\n        return type;\n    var superTypes = type.allSuperTypes();\n    if (superTypes == null || superTypes.length == 0)\n        return null;\n    return _.find(superTypes, function (superType) { return (superType.isValueType() && superType.isBuiltIn()); });\n}\nfunction getValueTypeDisplayName(type) {\n    var builtinValueType = findBuiltInValueType(type);\n    if (!builtinValueType)\n        type.nameId() ? type.nameId() : \"\";\n    if (builtinValueType.nameId() == \"StringType\") {\n        return \"string\";\n    }\n    else if (builtinValueType.nameId() == \"AnyType\") {\n        return \"any\";\n    }\n    else if (builtinValueType.nameId() == \"NumberType\") {\n        return \"number\";\n    }\n    else if (builtinValueType.nameId() == \"IntegerType\") {\n        return \"integer\";\n    }\n    else if (builtinValueType.nameId() == \"NullType\") {\n        return \"null\";\n    }\n    else if (builtinValueType.nameId() == \"TimeOnlyType\") {\n        return \"time-only\";\n    }\n    else if (builtinValueType.nameId() == \"DateOnlyType\") {\n        return \"date-only\";\n    }\n    else if (builtinValueType.nameId() == \"DateTimeOnlyType\") {\n        return \"datetime-only\";\n    }\n    else if (builtinValueType.nameId() == \"DateTimeType\") {\n        return \"datetime\";\n    }\n    else if (builtinValueType.nameId() == \"FileType\") {\n        return \"file\";\n    }\n    else if (builtinValueType.nameId() == \"BooleanType\") {\n        return \"boolean\";\n    }\n    else if (builtinValueType.nameId() == \"AnnotationTarget\") {\n        return \"annotation target\";\n    }\n    return builtinValueType.nameId() ? builtinValueType.nameId() : \"\";\n}\nfunction getTypeDisplayName(type) {\n    if (type == null)\n        return \"\";\n    if (type.isValueType()) {\n        return getValueTypeDisplayName(type);\n    }\n    else if (type.hasArrayInHierarchy()) {\n        var componentType = type.arrayInHierarchy().componentType();\n        if (componentType && componentType.nameId()) {\n            return getTypeDisplayName(componentType) + \"[]\";\n        }\n        else {\n            return \"array\";\n        }\n    }\n    else if (type.hasUnionInHierarchy()) {\n        var asUnion = type.unionInHierarchy();\n        return getTypeDisplayName(asUnion.leftType()) +\n            \" | \" + getTypeDisplayName(asUnion.rightType());\n    }\n    return type.nameId() ? type.nameId() : \"\";\n}\nexports.getTypeDisplayName = getTypeDisplayName;\nvar renderType = function (definition) {\n    var result = UI.vc();\n    result.addChild(UI.label(\"definition:\" + getTypeDisplayName(definition)));\n    var elements = definition.properties();\n    var superTypes = definition.superTypes();\n    if (superTypes) {\n        result.addChild(UI.h3(\"Super types:\"));\n        definition.allSuperTypes().forEach(function (x) {\n            result.addChild(UI.hc(UI.label(getTypeDisplayName(x), UI.Icon.TAG)));\n        });\n    }\n    var rf = definition.getAdapter(def.RAMLService).getRepresentationOf();\n    if (rf) {\n        var facets = rf.getFixedFacets();\n        if (Object.keys(facets).length > 0) {\n            result.addChild(UI.h3(\"All facets\"));\n            Object.keys(facets).forEach(function (x) {\n                result.addChild(UI.label(x + \":\" + facets[x].value()));\n            });\n        }\n    }\n    if (elements && elements.length > 0) {\n        result.addChild(UI.h3(\"All properties\"));\n        elements.forEach(function (property) {\n            var propertyName = property.nameId();\n            if (!property.isRequired()) {\n                propertyName += \"?\";\n            }\n            result.addChild(UI.hc(UI.label(propertyName, UI.Icon.LINK), UI.label(\": \" + getTypeDisplayName(property.range()), UI.Icon.NONE, UI.TextClasses.WARNING)));\n        });\n    }\n    if (definition.hasArrayInHierarchy()) {\n        result.addChild(UI.h3(\"Component type:\"));\n        result.addChild(renderType(definition.arrayInHierarchy().componentType()));\n    }\n    if (definition.hasUnionInHierarchy()) {\n        result.addChild(UI.h3(\"Union type:\"));\n        result.addChild(UI.h3(\"Left:\"));\n        result.addChild(renderType(definition.unionInHierarchy().leftType()));\n        result.addChild(UI.h3(\"Right:\"));\n        result.addChild(renderType(definition.unionInHierarchy().rightType()));\n    }\n    return result;\n};\nfunction render(node) {\n    var wn = node.wrapperNode();\n    var definition = wn.highLevel().localType();\n    return renderType(definition);\n}\nexports.render = render;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/typeDisplay.js\n ** module id = 71\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\nvar hl = require(\"raml-1-parser\");\nvar ds = hl.ds;\nvar universe = ds.universesInfo;\nfunction getDefaultValue(node, property) {\n    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n        return node.name().indexOf(\"?\") !== node.name().length - 1;\n    }\n}\nexports.getDefaultValue = getDefaultValue;\nfunction hasDefault(property) {\n    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n        return true;\n    }\n    return false;\n}\nexports.hasDefault = hasDefault;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/default-values.js\n ** module id = 72\n ** module chunks = 0\n **/"],"sourceRoot":""}